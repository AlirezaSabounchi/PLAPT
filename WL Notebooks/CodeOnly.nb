(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   3722074,      66551]
NotebookOptionsPosition[   3706909,      66292]
NotebookOutlinePosition[   3707362,      66309]
CellTagsIndexPosition[   3707319,      66306]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Tokenization", "Section",
 CellChangeTimes->{{3.910053350416773*^9, 
  3.9100533534577365`*^9}},ExpressionUUID->"68e25561-a5a2-4659-8136-\
511b3a748ce9"],

Cell[CellGroupData[{

Cell["Protein Tokenizer", "Subsection",
 CellChangeTimes->{{3.909775573353794*^9, 
  3.90977557686125*^9}},ExpressionUUID->"d43907a6-0dc0-464f-b314-\
6200663cd25d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinTokenVocabulary", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<A\>\"", "\[Rule]", "6"}], ",", 
     RowBox[{"\"\<R\>\"", "\[Rule]", "13"}], ",", 
     RowBox[{"\"\<N\>\"", "\[Rule]", "17"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<D\>\"", "\[Rule]", "14"}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", "23"}], ",", 
     RowBox[{"\"\<Q\>\"", "\[Rule]", "18"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<E\>\"", "\[Rule]", "9"}], ",", 
     RowBox[{"\"\<G\>\"", "\[Rule]", "7"}], ",", 
     RowBox[{"\"\<H\>\"", "\[Rule]", "22"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<I\>\"", "\[Rule]", "11"}], ",", 
     RowBox[{"\"\<L\>\"", "\[Rule]", "5"}], ",", 
     RowBox[{"\"\<K\>\"", "\[Rule]", "12"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<M\>\"", "\[Rule]", "21"}], ",", 
     RowBox[{"\"\<F\>\"", "\[Rule]", "19"}], ",", 
     RowBox[{"\"\<P\>\"", "\[Rule]", "16"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", "10"}], ",", 
     RowBox[{"\"\<T\>\"", "\[Rule]", "15"}], ",", 
     RowBox[{"\"\<W\>\"", "\[Rule]", "24"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "20"}], ",", 
     RowBox[{"\"\<V\>\"", "\[Rule]", "8"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "all", " ", "the", " ", "unusual", " ", "amino", " ", "acids", " ", 
       "labeled", " ", "with", " ", "25"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<B\>\"", "\[Rule]", "25"}], ",", 
     RowBox[{"\"\<U\>\"", "\[Rule]", "25"}], ",", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "25"}], ",", 
     RowBox[{"\"\<O\>\"", "\[Rule]", "25"}], ",", 
     RowBox[{"\"\<J\>\"", "\[Rule]", "25"}]}], "\[RightAssociation]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.909087158635081*^9, 3.9090872310762997`*^9}, {
  3.90908732154321*^9, 3.909087348658099*^9}, {3.9090873937410536`*^9, 
  3.909087405304*^9}, {3.90908754759625*^9, 3.9090876474243937`*^9}, {
  3.909793408473879*^9, 3.9097934761744776`*^9}, {3.9097935085539646`*^9, 
  3.9097935447468204`*^9}, {3.909869330582043*^9, 3.9098693351793294`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9be8d075-5385-4a1e-9348-3607e9d0db4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}], "/.", 
  "proteinTokenVocabulary"}]], "Input",
 CellChangeTimes->{{3.9098747907773514`*^9, 3.9098748130979633`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"24112fc7-0864-46b1-a454-d8678a42708d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "25", ",", "23"}], "}"}]], "Output",
 CellChangeTimes->{{3.9098748066438074`*^9, 3.909874813328628*^9}, 
   3.9100463538696995`*^9, 3.910053149501687*^9, 3.9101125044145575`*^9, {
   3.910650280040251*^9, 3.910650293346154*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"56c3c205-ab01-48f0-93f5-490247ef9f14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProteinTokenizer", "[", "seq_String", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Characters", "/@", 
        RowBox[{"StringSplit", "[", "seq", "]"}]}], "]"}], "/.", 
      "proteinTokenVocabulary"}], ",", "3"}], "}"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.9090873523211536`*^9, 3.909087458092126*^9}, {
   3.909087529331235*^9, 3.909087531505121*^9}, {3.9090876650055666`*^9, 
   3.909087666416535*^9}, {3.9097754659686527`*^9, 3.9097754684054213`*^9}, {
   3.9097981345921392`*^9, 3.9097981362996387`*^9}, 3.9098693409060206`*^9, {
   3.909874844750742*^9, 3.909874848595996*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f4a59c8c-afcb-46d1-8ab8-69ee03d9e8f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProteinTokenizer", "[", 
   RowBox[{"seqBatch_List", ",", "length_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tokens", ",", "paddedTokens", ",", "truncatedTokens", ",", 
      "tokenTypeIDs", ",", "attentionMasks"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tokens", "=", 
      RowBox[{"ProteinTokenizer", "/@", "seqBatch"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"paddedTokens", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"PadRight", "[", 
         RowBox[{"#", ",", "length"}], "]"}], "&"}], "/@", "tokens"}]}], ";", 
     "\n", 
     RowBox[{"truncatedTokens", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ",", " ", "length"}], "]"}]}], 
         "]"}], "&"}], "/@", "paddedTokens"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tokenTypeIDs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", "length"}], "]"}], ",", 
        RowBox[{"Length", "[", "seqBatch", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"attentionMasks", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], "/@",
           "#"}], ")"}], "&"}], "/@", "truncatedTokens"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<input_ids\>\"", "->", "truncatedTokens"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<token_type_ids\>\"", "->", "tokenTypeIDs"}], ",", "\n", 
       RowBox[{"\"\<attention_mask\>\"", "->", "attentionMasks"}]}], 
      "|>"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.90977577141932*^9, 3.9097758084995084`*^9}, {
   3.9097758423556557`*^9, 3.909775848103461*^9}, {3.909792363576366*^9, 
   3.909792521338228*^9}, {3.9097925681937637`*^9, 3.909792614668375*^9}, {
   3.909792703799679*^9, 3.9097929324633827`*^9}, {3.909792985547177*^9, 
   3.909792987583172*^9}, {3.9097930259830413`*^9, 3.9097930303154616`*^9}, {
   3.9097931126537805`*^9, 3.909793199010943*^9}, {3.9097937249358644`*^9, 
   3.9097937251024313`*^9}, {3.909793755462264*^9, 3.9097937559669747`*^9}, 
   3.9097943168544188`*^9, {3.909794471181735*^9, 3.909794521092451*^9}, 
   3.909797269683032*^9, {3.9097976829788823`*^9, 3.9097976856642694`*^9}, {
   3.9097981065635347`*^9, 3.909798111499922*^9}, 3.909869343305534*^9, {
   3.909874827275199*^9, 3.9098748323786173`*^9}, {3.909878114546023*^9, 
   3.909878123525611*^9}, {3.90987897909943*^9, 3.909878992011409*^9}, 
   3.9098791125721703`*^9, 3.909879270609479*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"88534ecd-7d85-46bb-b240-95ffbc4542d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testProtein", "=", 
  TemplateBox[{"\"defensin, beta 4 precursor\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Protein\"", ",", "\"DEFB4\""}], "]"}], 
    "\"Entity[\\\"Protein\\\", \\\"DEFB4\\\"]\"", "\"protein\""},
   "Entity"]}]], "Input",
 CellChangeTimes->{{3.9098800278297777`*^9, 3.909880029686613*^9}, 
   3.9098802290282326`*^9, 3.9098803358092756`*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"01df53a0-b6b0-4be7-bd09-cc8d5fbe5761"],

Cell[BoxData[
 TemplateBox[{"\"defensin, beta 4 precursor\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"Protein\"", ",", "\"DEFB4\""}], "]"}], 
   "\"Entity[\\\"Protein\\\", \\\"DEFB4\\\"]\"", "\"protein\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.910046355009584*^9, 3.9100531573008432`*^9, 3.9101125045633774`*^9, {
   3.910650280992178*^9, 3.9106502934925947`*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"581b3dfd-9538-4479-91b2-d3cb67e52ed3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProteinData", "[", 
  RowBox[{"testProtein", ",", "\"\<MoleculePlot\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9098802893984385`*^9, 3.909880297254877*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"43301975-5cb0-4fe5-8b3a-fdac8f30d7ca"],

Cell[BoxData[
 Graphics3DBox[{{{{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1U1lMEwYAJTpE6DrG4hAzJALtWqAyau0ormOPNMbilJsNXcUUlBqCOEEC
pEAvWLLSa8UOxOFU6N0oIGUgYTqVw0VUmMVIgWVzIHggDGS2EBxf++NzH+/v
5V3JC846kXJ0nYeHB20V61exeSeOnYoQY6a/I7iGoUdPygI5+oYScZeDtr4r
EKGYycm9524Ceai/foClQqiflDNnEaPu4Hacn25CVXKD75HLKtS/2NEwFiKB
78zFf7JD9P/xWx4wTsXHleFBXrj/ZwkGJMtyfp6M1mKwx/ZdQL4QRHH/tHWH
ASfS+7LnLmlReKyfQSgqx8hI7iglyID05hs/ljq0SC1O9GdzK3Ch787GrhgD
osf57vxMLTJvhilT74vwcuzv7lGmEcG1NxPbqFq0TZe84hPFeNF+fbRxvxG5
vTSBzqYFhUjz4XtI4PlkbuGnMCO60pyCDLsWIZ5cJ9Uphtc7pOFZPyMKyAVJ
xXQthtcFPnzEkSL8dNwv3i4jbi9v+XpKp8FI9mQGGqU4czypgBtqQqch5e07
yxok5FGtF2tleO7DJra+MWJe5bWnbkWDvYTMMDZLhnL6dl6hw4j1E3ctbbUa
3GsKPT4glyGhRZi1xW5CR/u4d2yrEo9KvWc/mJTh+hHWrZg/TLBszj0jFaqQ
6BrvVsxWYkP3q+qAARNof3oREK/CbpJrV6yuEqe9Y8Jfnzdhl6RMuCRSgnvA
59ryRzJIWWp6g9yMCf3KoSukajzjO9j+VTJMTm3Se1rN8OHNP431U+BclPic
/ptKdLzfSbp0xQznX5SPz16oxhLFvk1Br0TaUUbL7hoz2iMZZl+7HG8Nljte
FklgeVhELsmy4GR0KU+sl2NCWc+SzUrQ6ujyTcmzgD0z/+yLVR2SOpCpuiXF
SuTSwIdqCw4cDN2bvpqHM/Rm0B0vxWKU/fG+KgtUjaarFVQ5tCG/FY2OlePX
xWbmxi+tUAi+rTmcpAAav5KWfCIC4WS3rna/FSL3Vp04QonPdRlMSqoY76l/
EM8KrYjKL3F3XlVgykzNbOWKMLhJs41fZcWnzsev636vRsAeqsC9WArz7ZQc
MssGLnlYOaRSo7evufD7NCGecg73tkXaEMSz97l2ahCYuIGXd60Mc/zYFuIh
G55H9CzQXGrk3y1PvM8XovkJPbkixwZXXdQ8IUiN//tfa/mulXOtXmvt8C9z
VfVj
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmIHY7ce39H6079ikXNG3OeOyxt0+Z0cq286E9tcRX
X3rkYLLzlr1f7KNzkrP22FtOXDCtOfwR1cRrOCc+DtC4af/7pYO03ac99oXT
pQpDmR9TTbzgt3f5v43X7Z9LJ0p3u+y1/zg/PvfIYuqJz1P+cIzZ+Zr9q92W
F62m7rVP+BR4mNfxCdXELSrMMt5tuWK/PnqHw8E3e+355LY9Wv2aeuJR21x6
Jq+8bO+oxZ127tZ++4WP7e9cq3xKNXHeurRgcaHL9nfepEYe4zpkv2G1yyen
v9QTN4/K3XSk7pL9ptTMYFfJI/YH9nVOFKp9RjVxWucvWrsfAJ/uG3U=
         "],
        VertexNormals->CompressedData["
1:eJytzFtI0wEUx/FpiTCIqGhKUZmiOZpFo5yK8ssQ1C4GMQrSFDNLM0mThNKh
0YNY2OVBE8w1obCVRFooXeQEbeofbSNn6dbULXWbu0jSDXVRgqfHXsIDv5fD
h+/Wk+eP5AeKRCLZ4lYsLjE74v5U/hD1CYoeu9aJvGslOcfnPlPfDcP2gDwf
Xd+3kPlBaSYRH3uwJ/YYWPJQLXn89cbuE2FW9QjFCV75zt4xtL7T1MbFTlOo
VnCqd/tInpXoTVjbQfqxFJ/yrRnswZ7Ygz3Ygz1pu1btGTzroLtfNpapJISi
KVt7a7WDot1hpsPlNjI/MF66vWECNZu07smOCbAHe2IP9mBP7Emc2pYm7PCQ
1Gqa/S1upwr/0+I5slHa1/L+7I/DJLFdXR/scqG3M6n0mcwG9mAP9mAP9sSe
5qOLDz5Se+mQvVaJLgNdrNOMpkpHqMMf31IZZKWfsd8yx29O4kJ/wLr9WybB
HuzBHuzBnthTeMKay48LPaRqPvU8Pc1C4sbv9eF+E7le/qhauPOJovSKiaOn
DcgQclYPWjxgD/ZgD/ZgT+ypKdBa8Evnpr1l8/ruRivJ/UUZwQeGqKHrxUhU
ywC9johB7pyRgpKd1T2RM2AP9mAP9mAP9pSXNbyrpMpLocesKS71MEnrvcXx
K99TRdK2SIfvFpVKKmdDLHa6kqt6WFDnBnuwB3uwB3uw/2e/kPvZ3K/7z35y
lEypEBto5p45+Mk5OzSbjboG3TSW6296kx7TGTIKXVNzVqXgpDah5pX9zDgt
1/8PQtNBjA==
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1k1tMkwcAhUtRoZgx0S0Oph3XEgcixTAzi/QEadRMYLY6UwUkVRFGERBx
DMqlpNQWaMEEtolA/x8jtD9lbnJx4iqiw02FRuxEWi7aBoEA03XLLGQM17c9
8biH8/Yl55IcP1EW/ySdRqOFOuXqlGhYUXD7aR4OqaRFkxlayJN3Dl+7oUG3
30Pb5Ktc7DoQZqwo1mKko3F64LUGO202dYsxF9Y+mmAmWos6WankT28CU18R
rLLuPCz+I6DHhP7Hlx8O/FDoWwC5dbjP5YGTTzYfkHQS6OhJqzwdlo9lx72A
iVEt1Hb3Gy8eEeCWTB4j2PnwKWt8lkpoYc385mqwg4DXJmK5IqAAzRntRRVq
LWYsaXtvWQi4Jl0eHOMXwzAQnGqQ6fCmcHf943IS/Vk31We+lsA/akm1rUkH
hpxmrteRWPT9QLUwLYG505Sal6nD2nkPhnmUxA5PtwHR5WKc5b2Jdj2og4st
7sG6H0iE02ajfYRSzAkXnwrWUOCM25RreklMrd+TxPOTgmOcO8WOpMBiZm/y
+YNEhDGHOqeS4q2pffHT7hR2OdZ+5+ffDMnNd6o+6ZfCkHP4FsOiA7+7eLPn
KxIPSQgjZTJMbPRk6pkU9onX0+0xJHoz+dsZFhlUXZEoPEghUG4SF2WQ0EWd
dJOfKkd+SGtAbDCF48JC7r1aEl3Zgq3XvMpxX1XikmfXQcHt+fVjMQnHqMz3
7nEFEjLifmHFUuhL0r08fYaAmZl+faRGAW76UP2LcxTOj/pfSG4mcP1K6KXY
GCWGZj+NiNhPwTW073ZgP4Enor2rtr2rhHV+4Fiut7PXt3uYkXUEWsYad8yU
VOIZ62LVwnMKZT1Bpit/a5BGHTkqTqnEX6XKRB69DV/e2RDVySHA6g2PW4qq
wlHaePjFCadvaeX7s4cInLDnbslPrAKvZT5lv4FCwiWP++7vEXCP2FjHeaKC
XkBvT5puQ8rZFlOWQoOgI7T4sUYVBOwGKZumR9A69Y+vVxH4/KfB8zkNalgG
PUKUs21Y0tjTn/sQiGuYND4yqbH99+zPuoba8HZtZtjuTg24m9ULJwKr4Vsd
tPzRSz0WvKIdhsEmJPK++H71b2r8LO597OHWDquho4GToAF5NXaufq4a8Yww
iciuR814gcOzUIM7d7d6F3nVoDWktlU9okcrezX/wmIT/u9/reS7Us6Veq20
w79vZwUE
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmID5rPKfroPtFe8cj3HazD9+3bxP/Wydc89KeWuIh
ly1fty++aM/3rvjTzeAH9pukz+yZbkw9ccbtqi1s7JfsZUw1ZOrOP7A3CLTR
Zn76gmriZaviLd4mX7K3yL6x54PTQ/sdkZ83LJ5NPXHN/c/TGPdfsj+48tM8
+S0P7RP+71y9JZh64kwS+86eVbxsn6kcHP5M75F91DXF62tYqSe+uOGRP1Pd
ZXvFnvVt1Qsf2cc0XJC8tec51cSvr4jcffzfZXvL/n+6Mxgf27et0v7e6U89
8fJHB88ytVyxD55bc9kj/LH9P4d7nWfvPKOaOK3zF63dDwB4qCp1
         "],
        VertexNormals->CompressedData["
1:eJyt0F1IEwAUBeCVGFqQaKWsH3JRzfmTgRaRzqMmFZllsiJ7SRMxjShDm6iU
lrGyFB8qNAOHCqYlWMkgdF03xDIn8yF1aTZ1s7kfm2HzYRUkeffYS3jhvBw+
zsMVXbiSlr1aIBCEL8VrKa6c4rYNBjO+I7357IfPkBxKir5eZaL64ERxfOQ0
GfMtW7tlNgj42BN7Yg/2YE8e73te/HSh34TK39Xva5RjcHhVNlWfnqFzBX29
GevMVN6YXFX/dhaWZ/uljdFviD2xJ/ZgD/bEHkUlxyXePhNIuaSdH9ANIqqv
sCNCYacA4a8wkctMAzPy2MRuC/xH3fdLb2mJPbEn9mAP9sQei1J3YJ6mhxKk
pWXmjCd0Js3nbq/KSQk75KbLcWOUNyKW54bNwR2SmhES1eDxYA/2YA/2xJ7q
HlwMylv680m/dtl6gYp+7o7o0kTaqEV5VPJCr6HOHJn/xg4nHmm92zfvuuHx
YA/2YA/2xB4P1a1Bdt0UaYXVjcLaTqrZ/i6rQW4jV/ZihCJ8mPJ14uBtljlc
FT12mg09Hg/2YA/2YE/sqanu9bGW+C9UJN1zLT25Fq5VodbMvQ4yZe9UWCRm
ilHH+MYGfMWatletwR9HwB7siT3Ygz2xp9uZ8T+eG41UoW3eN3pQSTVDoUfW
dtlpVD+fPjUwS98qBpVbeibQ73Pv5svccbAHe7DHwrKH352/npKW/T/32RN7
JP3n/vCJslOqwEl09Brs0wdG8EmvFjpkVqxU76biAoXVQHHlh0sKUx00Ob5p
SJ41tGL9H9ATNA4=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1Vmk41AsXR7YoySVCRUWWlHJLm/yQkDVb5I6EUG4blRZpQZbSYsZMs/xn
/jPEMMNMm7erJGuTbiWlGzVKi5C0qJjK7Z1v76c+vh/Oc57nPOc55/x+Z3mO
Zez24E1qKioqu5QyTimzSLcO48Yi+HRP3Fg9RQJ9G9UYauNZFGVz6wxzirBe
v9k71U+CFFPRdKfxTEjyth4wU6EjcSjAVLpOgocTwuTtAUy4lOifmb6CjvBr
jIXDlv/zvxGnIWuJoMOWHEz567IEI46yxdJIBmzkDmbSaXTcNO06VTsowcxt
MfbaHAZWExnhciYdM6wkZve/S6CRVNjOfcxA96zwcZ8f0nGkov7fv5sk6LL7
Jl9NZ0AU8WLlySt0/FMui2yxlULqUHdLfLgIO6LGJSVk0uG5/ku5ubcUaYOu
2bYXlDhLTWJ1VRnIu33eflqQFLm6xkaCgSJkFY8scVrMgJlZ9pOWBVLU+9Ej
rf4qAjG1/NHaGAZOyd7Wt4ZJEepScr/sNRVtw5mRH70ZCFqyO7psrxQGjqcr
DvZREeZ9nDIqZmBGivqrdelSdO/Pd432pSnxSbsimhiIVjvgdSBSCotcbkKu
Nw2C1nfx2qZMSNX77m30lGL53TMJO/SoyLb0zjFZysRcPcsQtUQp9LVC4q+9
L0TCVNdRm0QmYuymtL9OliLskXqX6i4qMhtedZh4M/HKQh7guUaKw4TH08uF
VJTakRxPZzaGchwqLmtLkZB1iNLQWojvjdU5YRlsTOMl5/+0ksKu4ZNLQ1kh
PlmFuk4pYCMiTuPSmIMUq0/L1WocqSBOuIRqrmbD1u/mg4v6UhwN3jKzJoSK
uhWWTwc+cvCfudtLxxIlyMwyMX1hTUXiSLduFYWAs/rfZrNpEvxZUx5LV+K6
HMawtQwmkJ1GC/evlID5I2OVq7LOiexOBaWXAw3Sucf6iATSlnff8yuoMJ01
+NV8hIDrVK1p1owqHJ/9dvSxFQ2x8x/0+u7nYl9Tq/3p81WIenRaTlPaz3oa
W6ZTuNCiLZos6KiC1sZkswY2DUFLHRf4dxG407dTbcnVKjhLmhdrcmjQeuj3
6bQfF8e/TItU/FUJesQevkVuEfblWoW0dHAx3mf7j4zmShx1o5of4BehYPbk
5LyLXNwxWcGt+liJ3HTD2hQdOsx2LNEJteMisHngm01vJTjUETeTj0UIb3v+
YbM6F20XLlQ09Ivx5hpfbf03Olb6qy1rzeMiYI7Tm0kDYsRNqhmm2DJgcDfB
6XEiF8fM/EpZZpVI5dvcjs9lwG6t50DaCwLaZbc3+yvtIwH6XTHKPapfdWBu
g7OS5/k/xlyniCHfmUcJo51FS3J/ll0NAS+ay/1aAzGmTp+qw2w9i9TXN1LE
XAJvg24q7H3FGAs1HHU3Y2Lb9WDTVeYEnrzNtq4KEKNemOX789VZLNv5/VZn
JgfU99EFwgIROCofLBNXsFCl6ZPTPJEAZWDDFNVTIgR63S4+GcXCiQmKfUWq
BCrjXPoXtIug6V441JvNgkma6Fp5Ggcvk1bEdLaJEPK9+s+6BBZslm88+iWZ
gy/5o+P1D4gwZWn1IEOHA0dKdq/DCAdzLaL6+w6K4Nj0gZbwiY2SuOKwkXcc
fO9RT61rFKE7a5aNezcbHLdDH6/HctDkJ6D23hChSdF3KPUrG+lDIbUnlxGY
Lzy982KPCEbz8F74mUBzyvrOn9VKLZcYZz4TId7jcSRxnkAJpVrVVEBgt+Jz
S6Clsi99HveXHyUQ1Sl5LbQi8Kyxw+LwLDEMH4gSvJoJNLB6zJtiuFhAt7dQ
eIgxbjGzLZbJg26Lb7z9fS4sXp3zOrFSjJyA10ys4kF784faezIubIUFuyoy
xfCqlQcw5/BQ53JsT1IEF8vW/+ZvnCdGY8mZ7KvpPCwdueF0uIWHhqzn8hF/
Me4VWMdd5ZCooRgwthmTIM0Hjvd7ijGnbezKha0k3M8ZzlBYk1A/ZLGhMl85
D4zRLNtUEj7Hmj2KXvNg/WbK+auFYmSHWc5fKCAx+ffhGq9DJHq1h/belovw
aMTgqU0YHxFpSbbfLpBoDyB9Rco+XnSuTnO25mO+jqu3YQeJb59ibjbqivFq
Zkm+y0o++lpudW7kk9CrrPr8UjmHWi9V3s/bykflaU5P1GMSCh/9YJNFIhjP
G17PfMcH1TzvkkyPj9/2Sc/VW4igopev49fMh8/TOzoFy/iI6if2//QSYbNb
yCTmIB9xQT3OFup8uNWMWYf/IcLhjdc29BoKcHHmj1AtGYnUHIO9cUEVmHSp
uIyTK8DVyda9736QqDQyt1I4VMAjvWf1lSQBNjmtq8iz4aOjzYDthwo4ORgn
eRECUFY5TC0eJsF2Hz9UHVuBn/GdMvtaASqnV911j1TyWqldv+9gOTbofZ2f
90WAtRdNpx/MITFdnXhXG1iOe3vXvG3oVMZPb3U4V07icJyDXbVfOQIXxb1k
Ghej/g2le8sBEiUTmGM795fjWaueTYxTMUirvsclITyseVn6940OIerfd/+u
NqMYj+p8p+2n8bBdNT4giScEMTg6c9dPAfYMWWfc4fEg1qClF2YIceRwcXS7
SzEQ2rh0NJqHnDePvg1cEuJcZt6OGEoxjCyuuF9uJGDtEUv6XRdi+6b3nT7N
AlxfxazZqCBQFl563iJfCPat/pT7Sh6Gey57T7pOIEAhN0pYL4RGmsy0VibA
mtqHbbG5yvv5mqleeFKIToO7RxZ9ECB7YIMsw5uD0Am5p9qeC6Hqr9m7TV+A
euNEVtVxDn7YeoS/EQtx70zSIsshPnbX9OcfWsTBYsXxpRsOCjHRP/nFE10B
lha8uBKo3O+TT9pSvM8L4ao9nmo7T4CBkmVJJxQsrLtSK036KITR2CrbuTp8
lM564oxINpLrhmbKaoXo7Xom2zuOj6E8fYamGhuHXNiak84I4fTnp3us2Xws
1N1xM1jAQvLiLTRJkxCxJ9c5BtjzEZuRr+eaz4J7tU/VcLQQYfLlTcVzSWQ5
Ti3d/ZUF64d5SwYWCzHHYFNXgDuJoxFzFs4nWAgvki/s1hNi7Nzy5S2JJGJK
z7JGHVlISSOEb5T+9jsNrMyCSXweCFTX2MXCuS0uvgWXyrCJFH8MbOFCNyFk
wZfnLLTvo6hMO1UGasPEH2dGudjT99uWT8dY0L1Q/zQ2vgxFdTYH/1jBw4at
+i5qpix0C/hzHuSVIZG4mWKqo7wbrZOD8mJYeJIw6GJkWYY/ygf+UfzLwSNP
o4P77rCgvWfCcMn3UuTf9n2xfAEBN1nH5T2pLLhV7bg30FaKE7KEOM3dBOz8
23OPabJgyAsyjfpaiuhSjcgmdwL/7//wV3l/VeevcP2Kh/8CoL4srg==
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNwwWXwQAAAGDdbTqnZphupsdMjOlmmLxz9f/f+d77QPpF0RwWi3V/572z
OQI+XyARc7hCAZcnEprMdptAKJWI+GKZWKKQS6RKhVSmUvLYfJFQJJPKxHKV
QqnVaAGjQSVXA2qNXgeodUad3mwy6kxWpQrQ6g0Ws8FotcgVGvXH5+vLbHHY
rSab02kDPTa7C7Q73C6L1ekAXT6v2+OHPKDX7/UFYB8UDDicHjfkDwX9XjgE
B8JIMBSNhGAkioTjsXAkEddoDfpINJlIJLOZQDASjsXTqXgik44isWQylsqm
0vlcOlPIF4qVcjaVK+byJbSYQytoqVatoNVGrd5qlsr1WrnSqOcL5VK11sTq
DbzVJ0cU1iTazVaHaOHdDo61u+RgPGoT/V6vTw0bVQzvdAdkt90bEB2y73JD
vkFvOKaPFyaTLRYm0+WCGs2m09lqOZ8s1qv1fjebr1eL5XazXO22o/F8Nh5O
5uvFZr/Z0ofj6XrZbw6nA82cT4fzdUhNJ2fmfrtcn4/t7kjv9qcjc3ncr+fb
8/vn9+8fMPBeKw==
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJy11uszlHEUB/DNKkIZNexYSoYG2bTdh+JsUbSbyjWXjSm5VWJQM+7FLFq3
Gky6GMaEGTWSJEYmpqkll7Vi7WJvdp/niVTYlYzQ/hE/L75vPm/O95xXx/pa
vG+kDolEStaGrE27boAz99wYxP9r8I3cjsFq1+MvUVkqQOWLVd8q6JIxKORP
FyQBBp25TDuGMTr3cmdfOZ0hghX7J+Y1yRhwPuQXNpQrkXm1ZuZp2w4x5CfV
JzDrMHC3w8ptbNF5I1vIZNSKoaKAemNZiIEPR9wmbJlC5sP9feGHPcZhxWHt
fY8hDrF+wXLqSXS+yuT95IrGIbWdwTdxxeFu4NLLuD4FMncT9Mu9UybAm692
SUvEgdu7J93HB50bvf2UV350EnA91lxlKQ6XNBlepTI5MrcuOuC2jE/C3of8
gJg3OMQMz+0evYPOc/JixvzqJXChxdmsVYDDQLQsyJGMzvUMt6TgIVJgkVeD
pL9xGFy7vJlBlyHzNs2+7jkDGQzWVHbc3kbAPVI3JzxMiszfrVnOzvfK4ITU
JiV7PwFfE6wH6lMlyHymp73E1E0O6R7k9gQWAVmYq4ZWN4nM69Sug9gLOZzJ
n/QsjiBAQuvM9B+ZQOZOFgufBcYKmGe32R9LIkD0S2q1lYrOoyzDLB4kKUCH
NTPHv08Apyymk3VrHJkv+KtpTTIF7GymLNY+0s51koZMvBYjc6doxvMajyl4
cOiZPK5ae7dXHZq/6yJk3tXUytNtnoJNNKp+YpN2LytOccQpdK6qNLCI3aUE
k5a0fMcuAsaHjqedzR1D5orG6ESrbCUMlKpLgvsJsM0pIjxlQmRO/0NhXl1Q
goPLkXWjPgJoXpJZZiA614+359FDVbAmMssU9hIwLWB6XReOIvNGygp7vlsF
3ynzpnU9BJi751SRgtF5Rqhl3s2DGHApH0dCeQSUnf9xcWloBJlv9H+40f3/
AxFpvGI=
         "],
        VertexNormals->CompressedData["
1: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
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
dt0cF5+cP8W+qRPC5JfY2W1S/bqe9lv90nt9Wq92NkIohE6oiShXqm+mfWGO
Q6QjL0PmdOAWIRy/U3g3WExhysu36+hjLlbaUVoGg3y86Pi7tGAbhREn9uz5
RQQkq2lVygcFEIxPqjbupYBrrs/WuBHQ32REt9EUIFTwoOqrVArPamLPvIoh
cMCFfHHwEh/XI8g9/dEUiL2iPD8TAiP+axfQnvDh4RQxaiokEW935PPrAB7a
9/4e/95ZgFUjYt3QqyRu2ATMeOTyEK7//dvpRQKoxB2dviG9MyfO3Rj/doIH
nrnghCnBx+4uo474OhLmF6qmbrfw4Pegb3fuOgF0Lz7+wf6uCEtfx+vpCLNA
y/jLY+qSAMk3F84xnovwy6oV3jt+z8KMnMu9PG8BNIRjvo3zIjykhe18vzkb
5jv9b2x9ycfl+Dska0AEx3/vL7jzOQtDb2+W+VsIENDgWdDzuhw7qq50a7Vk
Q1R6pfZOtQCPOjn7tOfL0Ta8Q9t6Khv0VevXBR4T4HDlyUp3fRHmx7Jl3/rw
UedrpbtwjI+P+bvmdRVEiLk10di4no//9//zJd8vcX6pri/14b8R17cx
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNw2ebgQAAAGArGSGRCKUhe8sWEhJJ2du5+e3+/7e793le6vVrvCwmk+n+
3/bfbLEDVpsDtFhBuxuCfYDd5QQdkNtmBhxOl9djB90ul9vnhZweOIRFcY8X
8Xt9AcQHBwMOwAn5kRCKBLBQIBjGgn40jIbwyNvr/QMLx6IRnIjjUZKIxhJk
LBJP0EyKY9h0ikywTJygKYrmkgTJ0LDHH2SpZDqfKZS5VC6bSudz6WQmH0Yj
sSSXzeTy5VImWywUitVKNlcqFku1aqlcr5ULlfpkqsyrtWajVm816xW+xTc6
7Uaz22m2et0W3+61O0J/Olsone5A6LX7w2F/JA2G0lgYjMVubzgYidNJXxBH
4ng2HUvyTBpN5EScYmfycnE4Xi/G5rCfKytVWWirxXKtLefqWl0Z+krbGNp6
u1mr+laezJe6sd9Vqg1+q++Ou/35tD9czpvt8XDcna6n8/12vjzul+vzcT3d
np9f3z9/DGRK5w==
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJy11ttL02EcBvCxzKUY1pppbFhTETWbGqymIl9xlMEo9ackuol5IktlhaLZ
ZkGmaCtx4qnQCzWXJzKRTaTEDuChw2yp2Jw6t7nNbW/OYR6Dyj/i9eK5+dw8
z+XDzBQSOWQSiZS7n0P7YRZxOy50rcKvidrw2Rgz/NgtNzhSVIDLq9Terx0U
C7Tf8zljOWuGE6oy6zoFn8+EPH51UmiBwGSpZyDVDOFNUldr/3dsLhqntI4O
7/d6xApbNCYIDop0uyHC52mbSOYgW2HqikDOlJkgTTtmWIzF59xBsi6ZsEKp
QNDknW8CdVQ8/a87Pn/wpK7tbosVNllbtXtsE9C3+OMDQ1PYfMRB1I0iKyDd
ff9rf4zg9Ynq1XcZn7PtRU2NkTZodknvGfxghPqZZzTFnBKbOzkf92VW2MBz
feHSjsQIjzoGzrPv4HO9ilTTOmKDNcG/6HW2Earpb0Ir3PB5YNDOrVMmG2TN
X4wgza2A/vS06JjiGzZvJJKyJ48iqAzlJ6yVrkC1VHMuLgOfuxakOqs5COjS
ZuoGbQUkXLEo5TA+l4/5kCkZCErDunuHFQZI2O3ykPR/xeY51IbO+qcIeAvT
a43xBii0F/CqCHwexcq/eX0IwUS6JY5AetATXquc7S/YfErykPViFoGvXDAy
Ua6HXu7VdHYrPs/ckDGG5xAkbTNlwXYdlGhqXroH4/OykL6lQTWC9g0bpyRb
BzzZ23eFHz9jc0Ze595PDQK/nbGAIOUyFB95n+oUj8+bq1mevxcRMPxJ3c8j
liGP1i3o0U5i8xZxA8WmRZDFEMu0GVrITSwLmy/G55W32xq2dQiinfk9ipgl
4AUkKqtc8PlB/5+D3v8fBrX/Zw==
         "],
        VertexNormals->CompressedData["
1:eJy1zP1TDAgcBvCUcYoTc87boLpsjRNXXjrl5bmrkJdTKXHymhZRZBpC46Wj
7pqKk3HXpO40SOYI573iiaOoRahW0etqte22S4McpTP6+g/cM/P88sxnHrvg
dXOU5mZmZqve1+J9p2UXh8xpSWCAfc+4LWH1vBLsED9oeBOt9Dtdz7Sb+Ouk
83bLPVNgJhEP8RAP8RDPj165wh0ZWQm0VGe+Sx1bzaZLpsnLxhnY3WFSxsQO
Exv8usdNztiB6RdTDV6b4iAe4iEe4iGe4nlp6M0ON89MPjxUHlf4TsXpLvk5
A+xNrDLXPdxUaKK7Vb8Cr+MXOdUuIv7+oNMQD/EQD/EQD/EM6FJ4PcP1H77x
086ITMjE0Jr+gxwOmKiwbbYtSGtmUnvY7dmN5Sz/uWvX9iZCPMRTPMRDPMTT
4+TTMfa7i/lob5tFYvxV+DcsTVY9M7Lp8o+/uF7V0e/md6czLtdT7xdb8ubg
RYiHeIqHeIiHeF5/GdkxfloGc4aWTTi78Ri37nIvdX5uYkTUUo/J1HL03MNJ
u8O1DBu/fs/bUdkQD/EQD/EQD/H0tyxRPK+tgXpW8srRAx8zqLtmbFrzU2rD
rXIXRGqYfjD/bkigjv1iuwVOvZgN8RQP8RAP8RBPf+No2+/tGrFxZujUok0a
Pt3ea0z6kbuMLTgaeyRfw9Ki1EoHWx199nhq9D8dg3iKh3iIh3iI54msY32P
DmjE1NUWfyR6PuG0r6OP79cUMMk7acgOiwYqKie2Vv2mZYVb94eGtpKPnuIh
HuIhHuKx3s7VxT5Xh8NmS3J7K+qYatnaOnJrCR0K3ibl6Wpocm9v+Eal5na3
NxsW9tJRPMVDPMRDPMTDxvVQzeLXOnjlZNba5dfyVvsWf8u0Eu6aMHqjc9h9
Kle05V9pS4PKyXqlOsNI8RQP8RAP8RQPl+DIXrHlGgzbd2pEgGMjjTYuKVER
xWyxexapL7vH4perguz9MtGjLal8wRkjxVM8xEM8xFM8gnLKYpTLihDoaWNl
42vifCtrBBTOw/idiphR7yrZSx3tvujLCyys+GuNrtpA9aUPnos7PeosP3iK
h3iIR1lin5B3iusM/fNukNJk5IqTITcUJbegzlk1dmVtNVdNKuxaOi+HJ6tf
ZT0p03N9p0dkp4c2+4OneIiHePQcfjnrqEUZsz0y+6yc3Uyr+2ec1qXcRrxH
vPLbA8UctjB8iveYG9y2z/3FjGIjxUM8xFM8xEM8fBKXnvjs7wr2a9m82WqP
gY7OqvOlAUVQppvM+4arYP7781ExXUv5hXV0gm9SM8VDPMRzQ6fn550e1p0e
ttkGt7unqhh3ONy36l89J9iv2Vvqcw2BA/Tzj8TUI6pqnbfiZSWv5DzwDA7S
UjzEQzzFUzzE4/War7LSNDWsfXXluOqsnj9sLRpoWHqUs72yH3uF6RH9NLbu
xKtqBnp1y43MLaB4iId4iKd4iMei56bWAqdKntqckB433sD0R4ed8izuUNk/
zPl8RyOiF1nlXHKs5qF7MxNXjKv86CEe4iGe4iGe3kOc1+4NfsDkwZqifSMN
TJ6SYtcnQM3WDXOCos20MCSdbZxTU0WveXUu51V1EA/xEA/xFA/xTF3EvPCJ
KnrNNdTMCNXR/Vy3zRE29Zwy1zzoRr4BofWD04/3qOC4PQ3PRkTcgniIh3iI
p3iI56FzG80Gpt2h5blZ9/1fP6HP2oYlKc1aFpQ7+VZ0GJE50NtjXVAek4t3
udSuVn30EA/xEE/xEI/FPvvPbDEr4anPol7EhNQztPxaS29TIxdkjG27V27E
em1FnrLlNFUb3owKjS6heIiHeIineIj/3/+3LFd00Zftw+QRji5ujk2wXnDh
wO3wen6qPdTk+6C68QJPqKPGdfRrgnFbusOM6Z9u/w8Su0Cx
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1kltIUwEAhk2dtI2WWBlqSNkQSV3JcF3E+UuyWl5qJprbU2ZY6hK0y5Rk
gqZlm0rHbS287JwzdwZjp4mUpZi4fKgwBJdYqQ0qJbWXAofY1HzraY89fG8/
/Bf+QyVV+VeDg4KCDm4Tso0rgx6dFhHwtm2VKcrsKI5WG3wDFkwFd6fGLD+C
s+akpeCoHX53xPyE2QJNSj3ZcYXArbiXB85G2tFb8UJIay0ovNGYmG0nwKRr
v2fl/dOr+PpP2a0ElC21xw1zDPakjl8bJ0msSSmv/xwBTvNY7FAvAxMrop90
kJhZ1guqhgm0kTmqCj0DD0cs9VwncWpQs/PVOoFvVOhN2TsG53VvQjbqSCjd
4T/ZNAM+GGIahksZaD3ixfl2CkljU12VXAMmOBnDa3EMjC5lcdoDCvE6Wb5C
aUB5spgnj2KgVluG+BcoFOibSEJnQPXI7km+ikFhR+0ZtpDCAqvjH7abwEkW
P01YtmGqblMzeYJG+ujagP2yCR/3ZXI3nTZwpeE7BMk0SNd+Z2OnCem7hBl+
hw0NseRE9AoFucURuvnZhHJh5EL8DxvkqvasOR8FdkO9KMoxY0bYn+Dd6sPF
sdgGWQ2N/kR+yn3PY9xemm5yr/fB2yP9PZJHgz1SQfmizZgWu9qPhdoQJWnV
VEfQcPjfF3UTZkiqHopzuTboL5WH/ZHQCJvLvte1aMRdbb7MyrNi8Ll7QfKa
Ape3NLmqNiIm6w7VwrHidOfXIraHQhhXnln6zIi6NoVzVWBFfaLoS0kJhZBZ
h48nMmH2bZIiYq8Vv3IFlSvNFP73fwL5BsoZsFeAHf4CLatrIA==
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {3, 4, 8, 7}, {2, 3, 7, 6}, {25, 26, 
            27, 28}, {5, 6, 10, 9}, {7, 8, 12, 11}, {4, 1, 5, 8}, {9, 10, 14, 
            13}, {6, 7, 11, 10}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 
            13, 16}, {16, 13, 17, 20}, {15, 16, 20, 19}, {14, 15, 19, 18}, {8,
             5, 9, 12}, {17, 18, 22, 21}, {13, 14, 18, 17}, {18, 19, 23, 
            22}, {19, 20, 24, 23}, {20, 17, 21, 24}, {29, 30, 31, 32}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGBQAGJmINZqCZjqJ/rGvvfC8hCV5kv26TK+Sr+Lj9hTS1xa
UuDTyd+v7UWjnq5O+3LBvnf63eV1Lw5TTdwuMvSi/IPX9vc9oqbadpyznz73
9CS3QOqJ36xYx+R97LV93p93134knLbv0eZ/IHzkENXEr+ye9vr7mtf2F9/3
fu30PGF/cHqo9TJL6olbe3+0WTbhtb2jw7/brVeO2NuIs7remneQauK0Tj+0
dj8Ac9eL5g==
         "],
        VertexNormals->CompressedData["
1:eJy1zNsrgwEYBvDPoVCKRrlwaB9baKRMXDi8baXGhQtNbkipXTgOJQpLkhxy
gRGNNhHiajlEyrs2iyJbKCQ7On3Mt4kLFxQXr/+Ap56bp18PW6suVwUzDCP8
achPU63rzYtOO7Iaf7eG50CQKu8Y3nNBmi/rRtDM4/bepObj+AwZCnkgj+SR
PJCHX5+QUKgwttmQyRuTxVRwIHOHvlrv3VCdrrI/JPmwqCD8Ki7/Gj3HPZ0R
a0dAHsgjeSQP5IE8dpwfGpN1FqysKZ01iB5h5LT7IbfxFoSGEhPzeYsGnSOg
f3XjRCzTKsp0AXkgj+SRPJAH8ii+7xvhEncglpVq5XdecGjfj5ZvHuHt8qDT
VufFr6iGMvWsB8Mu0rumK91AHskjeSQP5IE8jre8DEh6bTA6EwisxC/hILdb
K/nkYUHNKjZ2eRwyN02Fz5mxRSnQp9SfAHkkD+SRPJAH8v/+3zj85LJu70Pk
lqqi/dKJmlV7SVDxM/zVrnQVWYybJuSzq1jpvB/6c6IzxAfrf7Z/A7tZlnA=

         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
6w==
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwB0QMu/CFib1JiAgAAAPAAAAAEAAAAAQIIBw0OFBMDBAoJBQYMCwIDCQgG
AQcMBwgODQgJDw4KCxEQBAULCgsMEhEJChAPDAcNEh0eJCMODxUUEBEXFhES
GBcWFx0cEg0TGBUWHBsXGB4dOzxCQRscIiEZGiAfDxAWFRgTGR4cHSMiGhsh
IBQVGxoeGR8kMjM5OCwtMzIiIykoJB8lKiEiKCclJiwrJictLCcoLi0pKjAv
IyQqKSolKzAoKS8uKywyMR8gJiUgIScmLzA2NS4vNTQxMjg3MzQ6OTArMTY0
NTs6NTY8OzYxNzw4OT8+LS40Mzk6QD83OD49OjtBQBMUGhk8Nz1CPj9FREBB
R0ZCPUNIQUJIR0pLUVA/QEZFQ0RKSURFS0pIQ0lOS0xSUUlKUE9FRkxLRkdN
TEdITk1MTVNSVlddXFNUWllPUFZVUVJYV05JT1RSU1lYVE9VWj0+RENVVlxb
TU5UU1dYXl1YWV9eWVpgX1pVW2BbXGJhXF1jYmlqcG9fYGZlYWJoZ15fZWRi
Y2loY2RqaWRla2pmYWdsYFthZmdobm1lZmxraGlvbl1eZGNqa3FwbGdtcmts
cnFtbnRzbm91dG9wdnVwcXd2eHN5fnFyeHdzdHp5dXZ8e3Jtc3h2d318dHV7
end4fn1QUVdWeXqAf8nK0M99foSDf4CGhX55f4SHiI6NfH2DgoCBh4aBgoiH
hYaMi5eYnp2Gh42MgoOJiIOEiomEf4WKiImPjpOUmpmMjZOSjo+VlI2OlJOJ
ipCPi4ySkY+QlpWQi5GWlJWbmoqFi5CVlpybkZKYl5KTmZiWkZecmJmfnrSv
tbqlpqyrm5yioZ2epKOam6Ggnp+lpJ+gpqWgoaemop2jqJyXnaKjpKqpoaKo
p6Slq6qZmqCfpqetrKijqa6nqK6tqaqwr6qrsbCrrLKxrK2zsrW2vLutrrSz
r7C2tbGyuLeuqa+0srO5uLCxt7aztLq5enuBgLa3vby3uL69ubrAv7u8wsG6
tbvAw8TKybi5v768vcPCvb7Ew8HCyMfExcvKwsPJyL6/xcS/wMbFwLvBxsXG
zMvP0NbVzMfN0sjJz87Ky9HQx8jOzcvM0tHNztTTe3yCgc7P1dTGwcfM0NHX
1tHS2NfSzdPY09Ta2dTV29rV1tzb4uPp6NjT2d7a2+Hg19je3dvc4uHc3ePi
3d7k49/g5uXZ2uDf4OHn5t7Z3+Th4ujn1tfd3OPk6unl5uzr5+ju7enq8O/o
6e/u5N/l6ubn7ezq5evw8Ovx9uvs8vHt7vTz7O3z8u/w9vXu7/X0W/jRzA==

             "]], 
            Polygon3DBox[{{247, 248, 249, 250, 251, 252}, {253, 254, 255, 256,
              257, 258}}]}]}, {}},
        VertexColors->CompressedData["
1:eJzN2Pkz3HccBvC1GUKnaUvFVrRoHKtaTKzGEfomcYyZOKKOBJE06dJNqaNp
kG4UCRKNbogjpWINNV3WsYkQipSKa7M+ny/BrhDXBhtRQRJaxzb/xSc/PTOv
H5+fnnk+PhXtx6bTaDS6Co2243Wq+uryO5MG4FixItdNtxNiQmNKtS7MAimn
tdy1GXEagBars2neKvfhvDFHGH6HnG8wj/YqNinQ79j+IUhxH9KefdXYvEjO
g26EHUpvoECQPD0tl3fBlnhdJDafI+b16uzWvTEU2ECXT9xkN5yr4gnHIsi5
1GEjkGNJAb0k08Ff3ANlbtk1U3xyvhGZ/bz2GQa87W2yv6EXqImculkZOd8T
75/vLMRw6WJsFve3PvDYbg6VaM4Tc7sUhiP1LQZb9dyXHaliaP1wRr3ek5zf
5bl0L5hg0Gp6dzSL+wD4foLyoHRy7vxdKZ2xE8P8LouUT0sk8PySI2O9mpwn
xSqQRIkgq+0t6UpnP4xSvINB3eScq3atMGoZASt63rL5KYJO/ZmohklyHmci
9pBNIRiOPa6alYthaMT39Oeb5JzjqvbSdQCBltB9tYVFwey1tqP1DAUxz7Sv
C/u3A8GPrcbVqpgCpqHh0i1rci60DO6pvo1A3k+P8I4cAE5tSprIi5xrGZ4M
4fyOQG8lZ5/O9gBM9h76YyKcnMdrhv9jXIDAb7fR5jhvEALlquJdyeR8+Crt
a2EGgrhCC40Vi4fw4sx0Y0gRObdRL5KxEhBcN7DTUXvwEHKW28oFDeR8+Kfs
hA4OgtSGF6xfTwwBe8fmR0xMzhPXMhhHQhDEeomOfLY6BHa77QvKFeTc3W0x
zswLwS9/njogvTgMjlscUSn9KTHXvu7Xr/wCQeUn2iaXtEcAnhSKb+qRc7Nj
moyaKATuThVGNhUjwDJNNFXXIedP3g44X8xHoOzfz9C3lULj2RvxrHfIuf2G
zN8YI+Dy2CUBbVL43pW3KFcj51cVYVZVr3fRmk8uM8tNBlba6afzlQpijh08
UYEuhhglm2kglcE9QUZf5Ro5l9Fm1IJZGBQ1tkzRmVHwgSv77i2R8xMltYKy
wxjsJF/uzPtvFPgMfeH6HDmfdeIeXmRjyFyInkvIfATLS7dMrSfJeWOiojL1
AoZiO/PQyvfGINHToGtZSs4v3wnU+CAPQ12aHD/KHwOVsp/ZIoqcOzjrWQtr
MPzV7tIaYTYOxzvorwZ7yflC30Swcw8GvHVTsNo0Ds1Tiemv2sn53IorGE5i
KP+m0Fzi8hi8UnsOlDSTc/meSiPaOoaEwbyqit7HMLWXsexxm5xXBCjPndSl
YCgZNAJ9J2DYT0tSzyfnxhZpSe0eFKBIpUHR3xPQlHHl8vtccv6m/eFvWj//
AznJkw4=
         "],
        VertexNormals->CompressedData["
1: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
         "]]}, {}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
Y/wPfvYvvox1xXD5nXILeR6SezpPC+fGoZcXgYX5ve0T3XwU9V+xOjF2OK8E
y+Zdl0aeIzOyuQycq9WuA6MyaN9r7yJ/Ee92K4YAXylymHO7rIgf/W9UHVk/
D+dtlK1jpQ3WSUaQ90gTxuP2gbxou5SE6vZbw8lYJ85uT7SYOJeEWu+vd8X8
lg7bNS/oxr3gwJ4bi+/y/CPEM8snt7c8RR/11CG9M6HKFDxcSmQ+Rg6+IFW5
Grk1SsSsTkb7z6etxDz4cY/fNtz9C3+XqOe4FKL/hMy8xe0CWJ8S/H3rUfet
tNh5SpsC+/QDqzdiXvLrvlQdRW6/rZq+ZW+gYJ3Y9nZtjNPIx3nVLnyXYMmA
0HesqyPPAsrjkNuML4fLBHVFQz6dZzivpMv7a7Ix79XfQz+IoJ+BP5EVg2h/
LKboiybqKnYfh+7iPNk1vdydhv7N51npbsG63WtrfjQN8yvgEF6+G+NxlBcM
P4/5Wpa2PdET33Ww5rOGCc6l0FyZwsuY3+iFv033IwdPjzeLJnD/ynKJNWkh
nyq+VK9rqJu1FA5LoX6cL7VKFDlMh3ccLUU/0cuNtnEhBxnDusyrqCeJ7wqT
Qv78K27VuqB/9zL9rQeQT5eliMQc1Osjj2Uv1aFgzZb3x/rwdzs1DOe/RW6c
sG986zB+0rgtqwu59fvnEWtQp2wXrMnHvB8v3QQHcE667W5Xm4+6++c3PcbI
QeNJxagS8swcfCRGos6TLUzcQfvFz1cXdKK9EFd1XQ5yqHYKnhRH//bd6Xqp
yMHd1kB5DOM5pBkXPwfjsdoTs7MM68Rj50qT1fjeeEMR9UHsu6bIeO1KjH+z
yq2Cl6gn7JpesR3f9ZV7LXOWT7fSsdWfUP9YoeH6UoMC3embH48iB+IOoeKJ
+kaBscwAtPectJd/hroMLfakNXI7uj0VxtG/aGd1Jh/6DwhV2NqAuq5u3nAm
xjM+1+5tLOrzGDF2eqgHpi2RoHQp4PPbHHoJuV0O4RXsxPjt36sph+G7ItnS
5Zsx/rx9c7c3o34hJetKCeomTzNXUagf75jvtgr9SDmwAvajfoPn5PGLqP/K
z2Znor4uq4y4jf5dSn4YDKF/U1uNbnOMv2vFrR3JGA9Q3A6/MJ7MtU3Db1Gn
KDPVK1hXqpv/FE4hBzEHFzmdHgJq9susqcF+LOJVDpzlM+3g+tYE9at3WY/P
oP59NG9RC3JQ7XHs/YV+Jmay+utRT+C8yJtGneLPvxSK+vBt2n0a+u/+7Tac
gn4+J2+4RqKf6yPv1bUwzuqikg2z/tX/tl2d1cVq1LRn9fDoWsNZXePItrhZ
/dMBlw2z+pnrXDCrc4ep/qfftwvXm9W3VJwymdU3N7n+58doctN/9vrQ85/9
+8DzCbN63K/l//n3ueZoNKsr28rTZ3WrqbL/4tH/flx/Vh8ajE6c1Rul9yvP
6lfWBuvM6oMhcxizOtcJG8VZPYp/vdasviJM4z99fbqiwqzOGSzQmNWfrxBI
mtXzJjz+s68Odtac1fVPtv/3u95jl/7znyXSv35W//////m////nX9z+xflf
eflXHv+V93/Vyb/q6l91+K+6/Ved/6sv/tVH/wNingJV
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2utLk2EcxvFlrlLTcCkyzQ6Y5jIPg1pmtl/NckmQ2rQtZFIrpVK2SOyc
5bR0QlRzhWYpdticxjIrslpHCqWDWtRz1yoYdT+mRbWCDrSVPVD3/oa9uF9d
8Hl7vf1O0+hWFPnxeLyGUTzeaG57ZV3Tsw4ysK38xgBjwRCzTj00M5IF6v9c
0+p85+L84qbwy7I2DOZ2j/aYkDpxz0hIR8MhBlwlpSdsnMd/afoWQN3rSddL
xEOHGVividy434ohucLhNxxBnXj93FhpjYmBVdlbRks6MMxvUEZbwqkTV89q
UN5rZCBNlCQ5YsOgeJi7IiaUOvGv4RV1i04z4Hl1oklxCYN+dqY9ahx14tHD
Wa55VxjQL95dPHAHg9M/+dD475j6fx/qxY7zgww4O/XPQ5wYuv0Lt+I+6sT1
bT82xIUisGvzE9VuDKlCiTmvnTpxSchLy3POY6STHvdzXpBSG3fNSp142VV+
vlWAwPI595zIg6FqTdzncOpeF6vT92nDEEwtfrrwFuctg4UXr1uoEz970sr+
jEAgULxY+/E3BoerXxp8hjrx1sRqc/AUBD9mvbXKeSxk87sUZ1uoEzdkzIuf
m4jgpvP7HI8/C+lJW3a/N1EnPmTKuyVMQuCO6q6Q81m4v0mwWkrd6/JBncrD
eapye4+Rc9UFm8xYT50432CuvZ2CoOuRWyUaw0J56ruxaUbqxCv6Jg4vm43g
1FXerpVjWTgvUxkNB6kTL1v1ybp6PoIaU+CdzgAWZijTLPF11Ik/aQ+QZaQj
uNv/INDD+aVGxrDLQJ242DPdEbsAwaigAwp5IAsZrzaXDtRSJ/6xuSDwgxTB
jsoJ7GvONWs6xNtqqBNfj3s3lssQlGrDxgWNZ+F4ySR7TzV14j1zsJ8qA4HV
+ixnJecJtu7mKOpej6sZOZa2GAGLjza2cn7FlVepq6JO/I1I8mBkCYLCAmFC
ajALqPxAZoSeOvFFO3PXvslE0HTUUVbFeVG3SFRSSZ1488NS9105AvS4yd7H
+bdf94Ju7qVO/E90bb1lKYKwYDU/MoSF6gWaTwLqXlfrTiXUZSHIWTp5eRHn
gr1/Bor3UCfua72Nr7mv/eVr/hdPjO6y
          "],
         VertexNormals->CompressedData["
1:eJzt2fdf1XUbx3HcRpmZkQNFBAcErm4npgc3bhEVV4YTF6g4UFPUuN2WIwk0
BUFAUAQXojKOJoq4cpUrKFxs0AS3cPs475c/1N9w/3Qej/Pj83Fd7+u6Pt/G
E2YNnVzRzMwsqIKZWaV3v/XrZA5ucveBMXnsTN/9/U4bhnqfs3JMzzZOa9cp
fkDkA2PdxEeedn3SDV88uWUxYWe2cZz/sjVR07OME6t5pwze9bvBoV96cv+R
OcatRx4seVB211C6Mujpfwx5hoK1FsEPA28aE4Jnd/GqnW8YH+5o1fTVWUPJ
dL9eDjX/MvTvPfFVVkmuYVN46ByfBhsNSTY9hs+Pv2co+7AoZ/PjXMPow7uj
ytbvMtoXjHVOfvf/ptMXxuwIyzP4DbJMSkvab6z0p/uZGbuzDN//MmCMy8xC
Q2y7EXWP5x8ynn9hZkg9esvw3clhMQ6rHxomHZxrWzRhqWHfkXHmJ2KyjeZF
vX/bbptp/GNW9YjOoccNTo3S7n/2UYFx+Zkrblte3DduHbN+97iLRkOrJqkR
M+JyjDFW8pnjKh/nqfJZ0lU+udvlMylfPkEb5NO/3MvkM7eXfObFyMcXn18C
5LMoRD5p0fL5cpp8XJ3l0+G1fMq+kE95RfnsPCKfXS/k454on/ho+dzIk88l
o3yuDpePe+UKJp+1+OTFzjP57MLn9hP5vJoqn0FW8rE7Lx+fwfKJtpZPma18
3IbIJ3yifJ51l4/7FvmY58hncoB8Lr6Sz3+c5XM1WD6T18gnO0g+JWHy8YqU
T8hE+TTvLp9l+Myxk8+2skKTz5ko+Zwuk49NgnyKU+Rj/kQ+dvh85S6fYdXk
U/WUfJYuWmDyaYbPCeqnET721E/Di/LxHSAf20bySWgknxfD5GPvKZ+xXeQz
JVw+SdTPx1vks4n6WdxNPkdD5fP9avl03CafzZHymbFbPpe/ls+2vvKZmiof
Gyv5PKmk+vl5m3ymPZfP8hPysVssnxkF8pl6Uj7nv5JPdEX5tPhFPq/r+Jp8
Pj8sn2bZ8jk2XT52jeXz7Jx8QvCJbSyfqg3ls3iofCKmycevs3xidsknuFA+
n22UTwI+W3rIp+Me+aT8Vz6tQuRjiY9DlHzsxsmnpYt8Sq7Kp561fAIry6fZ
z/JZ8Uw+JcflM2OZfNoWyiee+hlikE9WFfmswCfLTT7ph+QzMlc+UZ7y2WEt
n0x8pvaUTyE+BxrI57Ph8vkVn3b4xIbK5yI+G/G5WyYfL3xmhcvnb/LHeqd8
OkbIx3ePfBK+kU+3PvKpFyefKY3lY4NPRKR86lE/Bfg8Wi2fNvjsw8exu3xy
8dmIz4xR8knCZ06efGZQP33w+R2fj1zk8xc+Y6ifHDf5uOBzHx8/6qcvPlab
5HMHn+r4tMYnF5+t+KzEpwH10wSfr/F5cFA+XfApp7+6kD8u+FSkv0pXyac2
Psfwse8hnyh8ZuNzzlw+t/HZQf3ETpOPPz6X8VmMz0N8fsInAJ+6+PyFTzw+
ffD5BJ+D+FjiUxUfl1Xysdzxz/oZTv0cw8cNn3uJ8umHT0Pq59Vu+dji44BP
7f/K5w75k4HPG2f51MSnNj5RdvJpSf58Tf34kc9u+NRJl8/T3vI5hM9YfNL/
VT/n8elEfw3F5xH9dQCfTvhcxOc89TPhX/3lgE8yPpb41Dwin234FFA/Femv
yfhU/1f9fED9nMFnEv3lg09ffBLbyecN9WOLz7f01xh8nlA/3aifdHzaNJeP
D/mc6CGfzJ7yGcH+c+uhfG4EymfCa/m4dpVPs23yWbtWPj9sl0/XPfI5tV8+
iWPkk8b88nYMM/ncasj8qiKfgxvkE1sinxtJ8jFOkU/VXPm4npLPypbyqVCu
/bB+inw2+Mw3+dw4Kp8/nsnnUnf5rGgon7gr8jnZTj6PLOXzCftP1Dj5JLH/
JDPfJ0XJx4b5fpP+2sH8cu8un2jm+zH66w39lYTPE/ZD5zH/nO8pe1Q/TZnv
Hvg0jJXPqFL5LEqWz5LZ8inLls8CfOI6yyf+rXw82H88amj/uUl/5RbL59R4
+RSyHx66LB+3XvL5sqF8mteTT+Zo+eyYKZ8q7eXz9z75RHJfjFovnzYVdV/s
ZX/eFC2fWf7ycQqTz2Tm+3j2w2vsP170V+a38mlJf62mv95wXzyiv6bQXzs2
ymcm+RNEf7kPkU8Q/dXjjHymZaq/eh4gn+/Lx3u9fMLZfwaflc+SsfLxt5XP
RPJnKP01gvzZ95V8qpLPoQXy+XSzfGZRP+2pn8vUTxX2w0U/y2cF+TNur3xe
sP9k4bOurvrLj/1nNPnst1I+eew/b5nvtRbIpwP5E4PPgq7ysagqn3jqZ3S8
fJZTPwfInzRv+TQlf8aSPye5Lyxt5HMHn9/Zf05yf20in+3D5DOPfP7hB/l8
XEH1s5t8rkE+B+LT7Sf53AiXTwH5PMxDPv74tE1Q/VSnfmriE7pLPp2on8XU
z7Kl8vGmfuqyP1uwP9txfy3EJ+e8fI7hU6FAPteZX1ncF32ZXzv7yGcl+XwK
nwbUTxXq5yvqZ1GIfD7E5yDzKxWfKOonZrd8vsEnLlA+TtTPJPafYOZXV3z6
R8hnBj536S+3vfJZjE8bfHLWyecsPr9SP392k09v+msRPhGd5XMCH298EibL
5zI+Q/GpTf6sx+c+PuuY779TP92pn/mR8pmNz018bKrI5wz318FI+QzjvogM
lc/CKPlkxspn8yj5HMNngod80umvPyvIp2OyfOxeyWc6PvHe8gnGJ4D6CaZ+
rleQT5FRPhZ5ml/N4+UzrFA+NcjnMHwcuN8Le8gni/u9DT5OA+Rzhfqp6kT+
sP9kFclnKvNrCfXzPn9SuN9HkM9+cfKpGC2f7YnyWekun9Hv95/r8ulK/fzA
+8bk4/JxeimfxPf1g08TfObi48H+0477NJb9p3GK3jf2s/9UYH8uHyefa+TP
EfInsQvzi/xpxP01aKB8Dk2XzzLq5/7P8immfnKpn9dvlc/jyZ8G5HMpPvnR
8kklfzwPyCeG/urcSz71i5hfTeSzkv56xn36lv7afkw+Pbm/viyWjzX9Feci
H4fq8klMlU+3jzTf05lfgx7Jp/UU+cxlfi1Pk88O9uc3+PxkKR9/d/lE4vOG
+jlMPhf8635/zv58Ep9c+qst+/Ny9ufG+JwNlU+NCfIJwmfLIPmk2MrHHJ+6
7M87eR8Lx2c0890Cn8H4XOwjn7G8/4SSPxufyyfw8D/351Yz5TOc+jmPz1xX
+azFZyr1YzZCPhXxWYXPXvrLk/5qh08B9fMQn7Pkc1vyeQjvY093yyc/Qj5v
x8vnGe+rdTbK5wr91Zf5dZ/7NIv57kV/XV4jHy/66xP6q1Yv+eRUko8n74ch
7ZXPh3gfa0o+1/GSTxr5Y0V/hQ6Uz0h8vsfHg/meR/5k47OV/ccWn/7r5NPF
TPmT1Vs+zw/JJ32ZfAbukY8H+2EM+89i9sPXvP+4HJCPWSP59GJ/jl0nn2D2
5zDqZ52vfAzUT3qKfPzZD2d/IB8f7gvHNOXPau6LEPprK/nsRX8tTJXPPeqn
Q1P52FvLZ2lf+Yzm/TCG9+dagfJZzH2RSv3U5/5q1lM+p/bLpwSf+Bj5PGJ+
OcTIx4L51aOffIKstR+24P66R3+dCpfPPPLnU3zSg+VzEx9z+msA78+VyZ9q
yfIJXyGfqwnyeZ0vn6Fu8mlDf51gf/6+vXwesz9HNZaPsbd8HKfIJ437qz0+
zuzPVXhfPY3PJObXGt4Pncln7wj5tOb+cud99fRY+axifi3nfbUS/WXAp2ea
fDqQPwX016AI+fjly6cO3y9WdZTP3Ve6v/LwqZ6r/npK/USXyGf+CPlc5T71
5/6q7SCfTO4vJ+Z7K/afWfSXNf1VSn9doL/O0l83uS9C6K+asfKp8J18uuyW
Tzf2w1T6awzzK5D8yfSUzyi+7yzCp16CfEqpn4D395e/fJzIn0bcp+H4zOF+
H0L+eE6Tz1nyZwv3aZ+J8innPt1yQT6t2Q+P8z7vyPwyHymft+RzAfO9G/th
JvUz8v37Dz4Tyed9IfLZQ/2Y7ZfPJPrr6BH5tKK/gsifTsvls5H8uYnPr3t4
f8bnMfdXCvuPO/fXQPqrOu8bIfTXknT5JLRdaPKZGSOfWjny6eAjn0v0lxn7
4W/kTzL74aX68tk5QT5p+HThvnDi+8UJfOr9yPvPS/l8QX+9CpDPPd5/TvG+
kUM+1zskn1zeN+bhk9VFPufw2Y7P9Xj5nMMnifwZHCSfe0XyGZQkH2f2w2IL
+by9JJ+tq+QzJEo+u+7Kp3iFfPJt5XOQ+VUyQT7zuS/WM79cme+Z9JcnPqXs
h7bsP+bkj0WJfOzI56zt8qmGzy+8j/niM4v98BL5k837z8RZ8jlJPg9lfi0M
lc8i5tfX9Jcr+8+39NcQ5pdvP/mUfSifDWepH2/1V4M4fP6QzzXqJwOfbHwi
+b6TiM9Evp9Wpr8cub9KmF9G7tOoPPm4Uj/fvpBPR+rnYIR8itl/LmyRz0C+
DzpvkE9NT/kUkT+l53eZfJ6Qz1fxGRsinwu8H76kfmqxP4dSPyvpr1GD8eE+
zUuUz+Xn8kk9Jp+X5M9wf/l4kz/x7Ic/jpPPCPaf2uSzwyj59KB+XjvLpxr5
s4Dvp7fI50X4uLjI58lJ3ueXyieD+zSc7++HfpLP4JnUTw/5bKil+mnYTD6X
ub+a58jnKPPrXrx8Ll2Qz+2/5XMWnzM95dMPHxt8zIvUX/OPy2fzY/k4zJOP
Hz4P2X/+GCqf23x/38f7YZ5BPqu95NO5m3wc9srnRTb3F+9ja0rlk0s+90iX
z4Wp8mn+VD4P9ssnh/dn/yHyWUP+ZNTW/rOV/DlM/szhPg17//2L7++P2X+q
8P09mP05mfexjdzvj5PIn/66LzLYf+J4fy505b5gvtdn/3FpIZ8wfG6xH9Zy
lo8T+2FcC/mcjOf7zgv5VL4mn8PX5NPUivu0+L7Jxz6A71+tPzf5eBnls9Ci
hcnngL18fFzlYzU43OTz+lP5dKR+6m+Szw3u9yLen09Vl88b3p9T8dnE968w
M/kkZcin9Kb6q/J2+XQ4Ip/M+fKJbSmfeZe4v8ifj61437CXT1f2w6Bv5BNQ
Vz5JKeSz+W2Tz8ty+dQ4LJ/gyvIptpGP/2n5BA6Tz4E0+dTZIp8dn8in8Uj5
OK6LNPks/kA+nc14n4+Rz7I38lnC94uXwfVNPhnUz4xU+fS25P3wifafKRWH
m3xy7ywx+QQslM+5b+TTf618LHrJZ+Rv8tnnLh+fOvKxrhNQElHtgcH3+suM
8jsZhtGOe2LSy+///3/+vxId9uzd/8ZbFv3z3/1v9PPaFfHuf8P//9f//wNe
5QsM
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
/eUfg9qRYQ==
         "], {
          {EdgeForm[None], 
           GraphicsGroup3DBox[{
             Polygon3DBox[{{1, 2, 8, 7}, {2, 3, 9, 8}, {7, 8, 14, 13}, {3, 4, 
              10, 9}, {6, 1, 7, 12}, {8, 9, 15, 14}, {14, 15, 21, 20}, {12, 7,
               13, 18}, {10, 11, 17, 16}, {5, 6, 12, 11}, {9, 10, 16, 15}, {
              13, 14, 20, 19}, {11, 12, 18, 17}, {4, 5, 11, 10}, {15, 16, 22, 
              21}, {17, 18, 24, 23}, {18, 13, 19, 24}, {22, 23, 29, 28}, {23, 
              24, 30, 29}, {21, 22, 28, 27}, {19, 20, 26, 25}, {30, 25, 31, 
              36}, {24, 19, 25, 30}, {28, 29, 35, 34}, {26, 27, 33, 32}, {16, 
              17, 23, 22}, {25, 26, 32, 31}, {29, 30, 36, 35}, {27, 28, 34, 
              33}, {20, 21, 27, 26}, {31, 32, 38, 37}, {51, 52, 58, 57}, {45, 
              46, 52, 51}, {34, 35, 41, 40}, {35, 36, 42, 41}, {36, 31, 37, 
              42}, {37, 38, 44, 43}, {46, 47, 53, 52}, {38, 39, 45, 44}, {40, 
              41, 47, 46}, {42, 37, 43, 48}, {39, 40, 46, 45}, {43, 44, 50, 
              49}, {41, 42, 48, 47}, {44, 45, 51, 50}, {32, 33, 39, 38}, {47, 
              48, 54, 53}, {48, 43, 49, 54}, {54, 49, 55, 60}, {50, 51, 57, 
              56}, {52, 53, 59, 58}, {49, 50, 56, 55}, {53, 54, 60, 59}, {55, 
              56, 62, 61}, {58, 59, 65, 64}, {33, 34, 40, 39}, {60, 55, 61, 
              66}, {59, 60, 66, 65}, {56, 57, 63, 62}, {57, 58, 64, 63}}], 
             Polygon3DBox[{{67, 68, 69, 70, 71, 72}, {73, 74, 75, 76, 77, 
              78}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGDwA2JmINbnnneLqeWKfQTHodse4Y/tA6VO152988x+oMTf
H/cvLl98xX6BsiBPS/Zj+3tBK/ZsOzhw4utaGHneHLpi/9wuwWZ//WP7nO7W
X/OXDZx47JWXr+XZr9oXJ2Y8n7P6sb0Rt8/Vx9kDJ35Uue3QOber9vZ1S9Im
XXls/0lzgjSP6cCJ7+KXOWvbetXexPqi2a4/j+2f8uicdP//dMDE7180a/t+
4qq92pP0QE+NJ/at/y5f/XJk4MR3T2Y10+G4Zh/WbuTwIeCJvXz/T9+2voET
P6UdOWW1zzX7FrH0yn81T+xT9bRVO4MHTtzY6nPEr9xr9tyzji3KmvTEnunK
dc5bZgMnPsejV9az/5r9JFm1M9eWP7GfX9nyTktq4MQHW30x2MIHAOhksfI=

          "],
         VertexNormals->CompressedData["
1:eJzF1NtL03EYx/EtpQNCJYEadlEQBiV5kRVF9YXE5jqsw8aaCmusElMjK0iI
MKLDiKxF0aaUEUi6ZeGFsdJF35ugLBhRXgW70M15UVLQLMxTsud99fsHvPjd
PBcfXt/P82xrvGeOnFxgMplsc1/W3Peop/nGi8Cotrblxf2PX6nI9KqOj/Uj
et2WqbPl5pQOhQdW7AynVFfl1qUFl9/pzyOWg/GCQTU4XvGmpHNYrc/SRd8n
R9VtyVFmydEfJEftkBzlkxwdqcrkqKDk6Ow/mRydKzn6HJ4AniE8uXiieJJ4
NJ4YnlI8x/HU4PmNZzWedjyTeLbhSUiOVngq8YTwzOApMnjqXOKpx3MCTyse
G547eHJmxFOG5y4ev7xL/UyK5z6eFjx1eGrx/MCzD08HnuhR8XjwHMYTwtOI
x4UnRT9WPAE8b+Vdqox+buK5hseDpxvPXzzsXdOzWsa+XHge4mk07KsZTxoP
PasePHb62Y3HZ/BU42nCM4VnLR5y1F48x/AE8ZzHw7uUDQ/vUrvw8LvQi+nH
jseJh551FR47nmk8G/BE8LRwPz48TXiu4jmFZw+eMTyleF7jicneFXeobQaP
HY8Fz0K5Q70ZTxjPezwOPBfx3MLjxNOJx8w9l+DpxeOgn014qvE8w1OLZ6xV
PL/opxhPN56V7KsQzyU8ATxePBV4xulnP54gnut4GvBwh/q04Z6H8Uzg8eJ5
gqfGKZ4DeHLwJPC48RTi+Ydno+F+tnPPFjxteC7gKcfzCU8++/LjuYfH6hBP
O55oWjzLs8VzCE8DniXsy4TnC54reIb4/3Hj6cMTy3uQfrooqdxfJ+Kz3+Lq
ZXHX84HZxLzNzfmZue6XufbIXM3X/D+uJhIf
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2ttL02EcBvCZGR6iRC3NXLYMzLKMqCbq/HpKZxMFo4Vus3mYh7JEy1Mp
oSkeK3EuzdIZeUq3yiwq0CzbxCxRZ0JoZEX5e82zqFQU9UK8+xu8eK8e+Nw+
8Fw9nKikUNkaFotVZcBiGeLkxSbd37EFwYs2VGstY6DvTMaLnHdDQP2/1xqE
BKmwOzvkta7EMDB/3mLcjLre19Tsmzxki6Cqwv7pCHarLNUfxTB14prhmR2B
WxGkpAuH5NilxZ/cWnTUiQu8E68nsRHs5GkMzbGvNPIf6wapEw+zS8ju4CAo
6lXGG0czwPlk0+LQT534eV2UQLgbQei48MBPKQOZoc/kWi114mpPIVPkjuDb
eq12VMyAI/dXrMkT6sQ7+evmR6QIPMU2xdPH8G4/ykzbXEmd+Nl7Iby7lxEE
fm8YUAgYcH7ILvDOpE78mpEmxT0PwbSlsD8Fu79azddkUCfeJnZt7sd+lbfu
TQh2aTPPNIC63pdNOZaL+Qh0ZbE9JtjLayVXgtKpE8+KW0RuhQjCuY6d2UcZ
+FFcIz+RSp14yXZFxdtSBKfymltkgQxootl1Z5KpE28qH52aUyAo2daafyiA
Ackm9rMbCdSJ904Gc3KvI9jLF122wJ5urr5gR13vU16vhFaVCAaSzXLm/Bko
M+N5KOOpE98/1/rStQqBpfZ01l3s3QaSrvo46sQfC7Irc6oR3DztfI6N3Wn2
lva+jDpxzdrtvpZKBKqnaqnREQaWe+x02kjqxCdEFRkN2IO/SCK++DGwsVsl
51PXu3G78T1uHYJ5sw3iLuy7Oj2Ov5FSJy6IXLAR30Zw8OTZE5nYRe3i94Mn
qRMf7uyerb+DoMPIJXjGl4GXylsfxyTUiS9ZcXdy6xFEuIwL+rCPVTvXRVDX
u3Via9hr7Kywa4FN2JcUHZGfxdSJh9tWaGYaEPip5vwisTuWfvg6IaJO/GKy
8a9LjQgmRpQ+nti9CxIbE6jrvaY3y8WiCUHh3xCvrdhFub/jpsOpE39uvxBT
j32PE8vzhw8DqdmlTknU9f45TVZ9uBnB29AH7iPYr2TYTS2EUSe+2v42q81X
W1+rzf8BD947fQ==
          "],
         VertexNormals->CompressedData["
1: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
RiEqnDv6//v/3v8HbVbdTw==
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
D/9v/xd/0vmn7/oThz9x+xPnP93L/wCpRGL/
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNwwNuBAAAALAbz7Zt27Zt2zbHh29Nyu4sM51nAADw+P/6/+kZBHx5hYCR
KAL++QUMen8Cwl7foJC3dxgUCELA4QgcFgrDoMEQFBICRaNAYCQCBoRjmCwB
H4HE4xhkJg+Lo5DRGBIRA8eSCEQ6DYenUlBoIoFIYtDpDB6XSuOwyRQWk0Jl
s0hYMoNG53LwBBqVxRYKDGqjjcuTiIUihZzDFYsEQrmMx+RL+AKZVCRWKhRK
vU7Cl6rEEpVSKtOo5QqdVibXatgckVCpMujVGpNRp7daNFqzSauzmI0mh11v
sFlVUrXBZHY6HE6/z2a0eyxWt8tq87jNFpfT7vB5na6A3+UOBtyeUNDri4R9
/mjEH4hFA8F4LBhKxJOpQj6VLhYi0XQqGsukQ95wIp7IZRPhZC4cSSVj8Wwm
nSkVa/VuJ5urlHPJfCVfqFULxXqtWGrUm61BP5Mtlyr5aqta67RL5Waj3uh1
G81+r1xpNT12b6hVbQ863fGo159OVuvjodubjIejxbw/mE0H7eFsNF4uFsv9
bjacbybT9Wo626zHk9Vyvthtl6vDfr05Hdud0XC7u5x3++tlf7hdD8f77Xh6
3Dfz7em0PT8u16/P2/3n+3r7/ro/fn/Ol8+Px/nj9w9KGoUX
              "]], 
             Polygon3DBox[{{133, 134, 135, 136, 137, 138}, {139, 140, 141, 
              142, 143, 144}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzN191LU3EcBvBt9oIVeSHRpmJs6pAyasFSi/ZFKkJwsEq6mNRkZgTOLV9W
lO6iFg1thZlu0VLXND06m9lsTZqIlHZhNfeSHl8mJJ3zm4tEi5yZWee/+Hnx
3Hwun6vn4Ss1Z4o5LBarjkkME7/RW18iouCg+kmw4D2Cr5K2nOhYEHC5SVJk
LT9LQVOA3BwdQdC18JFX1oHPCxaXn1/XUrAte1dmPeOa5uhSRIfPiw480J5/
TEFZxPw9lfFfM6pWWobPS9T7juUMUkBaEtpeDyO4kTiXP5eCz+XrnEPOLxT0
2myPTjOeX2p2T/4OYPPc+1PCtE001HbuvfftHYL9g3lJPi8+N5EGQSSNBgcn
5ZaB8WqppcHSjs/nBOLknlM0+AoSr6Uw/mF6fsclHT6/shoOyFQ0LLDkS663
CGZW9BdeyvB5bGZcMllHQ5XaLd3C+NVPCoExFZ+Psn3SF14asjT1catOBOYa
zrhrwY/N51scoYElGmYvihx+O4If7srcuz58Hisxlo7GI9DLx/LsrQikYdqj
6MPnZPNl9hExgoby0FqnBYGYrSj0mPF5178TjcQ5BM9qI93EQwS8hIkYXhU+
F6bzf05oEbyaPs4VGRGUEAalshCf22R/ZVsbEQxnNOn7byMYOJw1ZD+Jz2dF
40LShSCpgui2ViOYNNVk96Xjc258zxpBIqjod342VDI7ZHmq17Mdn4dahvzU
CoI/Pdw3XhWCOzvXj+5Z9GHzpxlBQsALg75dZ91djIAr5I/cDOLzjfYvNlo/
/wErNkdi
          "],
         VertexNormals->CompressedData["
1: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
C0k9FO8g016seda2ymiTCP4r/v9C1lKK
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJztnPlbjd8X90tFc6mkESFKpcmQKYukiCbNSTRIooE0iCRp0EDnPoekM5A6
9zkNIkmDSKWUlKSBRtFAklRE6Vl9n58/z1/w/MJ1rWtf++z92mu913s5ScXN
z9pzHg8PzyD+wYd/pxpsSik3IcBBJuaI2xQJdp8DvN8+ZoDhznZJdUUqaCkP
PghYQEKjWfeZolt0uG1FPFeqpcJr5SGFU45sMO1N6Ul7nQa3775pL1GlgaKO
mADfEjb4qkebnY5Ng6/5NddCF9Fgp8U8y4WebBh3NL4o1JEGu2eOat+nU6HI
oWqQokgCa0tV99QDOqydSV8X1kUABBfVsSQ5kNtSy81+y4ArP/lKpUUIOO7r
cDZ5HhfW+bswXowyYfWnPcLLDlKg9qS9VHIeFw59e3PzxyEWrE4W+RnBQ4Hz
zvpqPMNcMNvj7DE/kgWdF2W2VkhSwG6rYeePu1wQvB+2Z4sDCyINgujxsRTo
0gvb5T/CAY+I4HXR7Uwg1kiWiZgSwEOLGi77TcK7LWYOeiUMMNnr9pGtQIVz
T5pGHyGfFTPdqWuYdDAsXGnxs4YKzdH8+Yec2CD3Ln7f26Y0ePdL12TzShos
MF5UrbaUDUL8M3rfEtKgdknQ7QUyNAiaTSgeQz65nz/w6fekQe523TMP0qig
SbOorUQ+Vgces20e0SFn6oHbOuSzK5r2t1+CA7wuX1/8eMeAqfbDhinIp9rF
5NcIDxfyb9lFTf1gwryTjDf7XCjgT1203iSXC91HbL3VXFngo5ncLjCPAtta
+FXOD3HBq1YpSBH5BAnsv2AgRYHXiola+Xe4QHXMSQxBPsSn5KzEOAosjq5V
7h3mwGXj8OCG90zYYbkj0Bb5JHb+dVZEPv9adaySnzBgfrTxrlXI557qRulp
5LN8fPjlrTt0uGopeeJlNRXKCm9qmzmz4Zp4/HOh1jQoCx/e9Xg5DVpVbpw0
X8YG85URK72S08D1yfmdNCkaJAUnCzUfZYNUYfi1g5+QW4GtWf4tKly+eeDa
JPLJyisMvVdEh151JZVvnQRouXyV0EI+POpy3za0MUB5fLGVkigBIovyHPbN
cqBD9GCg5k98X/X96qGHKPA3cv/WmSwubJzq2uaKfDz++lte4aNAn5zlv6l+
Ljj4fkrQQT4Vpd3WOdIU0KywdQtkcWFy5eeWAuTjULlg79UrFFh/m/hg9ZUD
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
U3Tlcbzvd51D8qkYv7ldXsIX4/xnOFfacb1W8sbcXRgnzvR0u+E+xcu5MR64
/8DDmQXeuL/yi+aeJPzc1geBNoztJNxZ5OQRg/F3PhLDRzGvbnJPy7Dn8t8l
+NEEntPHouCRPJ6/7NdOowm872bhqYEEjBuvSnYIxvikHUQ/xrjubRlxb4xX
pY8UH8W4m1DlCl7cp/j6bAWB8YHmq1bDuH+r//PMEowr9c/c4MXPbfA1GZr7
d9SlLUGLHs2dZ62XEg3ji1+KdlniOV26gm1zkJvowJ7aVXivi5+PSs/9/3SD
ZHKVK+ab8OaalKtzOiMeHwBzv/dAL6vvFsal07NP5d+c+70KWhJWGKdeWL37
AMav5JSXxmJc4HBCSB3Gl8qpV6Tg/mqHKgYVMB5rlLNOHz83Sl698RWe03M7
rfoVxhUmVhjMxbVs9F7NxYsctlfNxZ2e826Zi5dHO7yci2/US66Yi6uLRm6d
i4sautbMxYXE/z2fi+96v+1/8XvGcf9b7+iY87/1EadMNs/FLZ5H/2//VkX/
/7v/adWNc/FDN6787zycxPr/naemPFd/Ll5w8GLzXNw2cEXtXDx2vFFnLq6y
xrn1f/ukvqmbixdxLbXn4i2nbNrm4gJPPV7NxRkd1P/F9X3W/G99wemC/613
2xWvOxcnRjT/t//G+2Mv5+L///dv/L9//8Z/cfsvzv/1Lv/1jv/17v+VJ/+V
V/+Vh/+Vt/+V5/9VF/9VR/8HRXcgZQ==
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmndc1fUaxz3H3FvcGm4R98AE994LB6Li3qg5URyEe4W4JReiouKehIpb
yW1UZhmlmWlpVpblyMz7fF6/93ld/vjc8/R8n+fzeX9/h3Oge2/pQWO7vu/O
kCHDBfuPd+zVZdI/5zblos5oykMvmym7qZCpYAZnJ5MpnykvdWZTfnqqs5i8
6GVkJy+eWfGUVwFms1J78aqz0qZS1MouQy8nzGItwqs4i5mKmnIwo7PCZCq7
hKk4tTjfpZcPTm962fEoTK6HSSwlmfWi9iY7D97F2NFuWZjLwVXeVCMdc1HO
SuJdxVQZD3n5mCpQi7MivRJw+tIryk4FMrzxlFclZr2pfXnVWV3Te7AWgcXD
rNfqpmrU5WCvzntQhrOqZCq7lqkmtThr0/OB049eKTyqcmcPk1jqMOtLrZ2e
pmDTENNg2LXnzx2qwlLPFEAtzvr06uDdzNSUe5SHtQGv4mxkakgtzsb0qrPT
AE8/POXVhFk/6sb0ldXJ1JFscTan7w9nS1OLdAzKbkNGA+rW9MXRztSWZ9HL
NJRn0oRMZXUgyx/v5uyKqz0ejdnpQK8KzzCAvWbsdeYOgaaupn6mvnC3oheI
T0eYgmEWe3dTN+qGsHfnVRxBph54tWa2K0wd8OrJbHvqINh0ty4wtoApMF1P
ryGmPtSBsIdwp86c9SZT2f25Yzc4B9DzMPeg1xGP3tw5CDb9bA5iLoh6IDOa
HcZ7dsB00HTSdMK00rTKFGfaBJc4R5iG4yPvsab3uYc4Q00jqcU5il5/OEfT
C2FnJJ4D8ZTXGGZ70B9NT2fTTFOplT2d3lDuMsE0nlqcE+kNYUZn48hUdphp
ErU4J9MLhXMKvcF4jCN3NGziCmd2NPUUskfgPZEd7c6AOcL0gWmxaRFcE+hF
4DOGu87FQ14zTZHU4pxFLwzO2fQmsBOJ5xQ85TWH2SnUs3nV2TLTUljHw+Jh
1utC0wLqCNgX8h5M52w+mcr+kDtGwhlFbyacS+hNxUO789IxiSWa2dnUS2Cd
yuwyXrW7wrScWiwr6S2EdXUG5+d6Ab1VzESTtd60jllxr2FnMdwx9JaSu4Gd
KLjWmj5iNoo6hrNovNemY16ORwyz8aatMItLn71YGJS7xbQZ7tXUcZzFsKsZ
fbb1mdXP4TByVuC1kSxxbCNzLWzb6a3jXjvorYczgd4GPDfSi4V1t2kXHto7
lMH5XomDda9pD7U499HbAvt+epvY2YNnPJ7yOsBsPPV+OGLJ3km2OA/DkMCM
zo5wlkB9mL52PzYlUis3iZ5+D+n3tn4vtORMbEeZ2Qv3cdMxzvZSH4VRrPpu
TWZ2P/VxvPU7tjUZB+E+lcH5Tj4M6xnTaeqdsJ7BR96XTBdhFtd50zlqcVyg
dxS2FHqJ7Gj2LEzJeH3C7HHqFF519oXpc2pl36R3Cs6rpivU4rxG7yQzOrtM
prJvmK5Ti/NTeufhTKV3Ao/L5HqYxPIZsynUqWQnknONHe1+CfMt01em+6Yf
4LpK7xY+8r5j+g6Ps7B+zas4vzHdphZnGr2r7HyNZyqe8vqW2VTqNF519sj0
M6xXYPEw6/We6XvqW7Df4z24ydldMpX9I3f0MN+mdxvOh6YH3PULdu+kYxLL
T8ymUT+EVXOPYb7D7i/07sLyhN49WH8z/crZPeon+CrrL9MzZsX9Ozv34X5K
72dy/2bnAVx/mv5Id8cH7Dwk4xkzj+B8jsdTZrX7L8zieml6AYNyX5v+gfs3
6lecPWVXM9ntXw5zmAqbCrmcrF/wek6OOP4zvaEW21t6z7iX/iXzLbU4XS6n
9zc+bpfTewHrO1ZndDke2hODWF7BmtnqTC6nFmcWl9N7DXtWl9N7yb00K883
cMkrm8uZ/QN27Tznbsp2wyzOnDwHF/3cplzcwUWdkzPt5mEmI7l56WXjHnqW
BTkTWz5mMsPtZcrPWWZqzWTlDvIpwGxWau0MMg02jTW9D7O4ivAetjS1MnU1
BcItzmKmovhkg60UzOIqYSpOLY536eWDzZtebnaK4+mFp7xKMutF7c2rzqqY
KlMruzS9wrCXM5WlFmd5eoWY0VkZMpXtY6pALc6K9ErA6UuvIB5lyPQwiaUS
s97UvmQXw7s8O9qtZqpqqm6qYWpgqg9XOXrV8ZF3XdN7eMirlqkmtThr0/OB
049eOXZq4umLp7zqMOtL7cerzpqZmsJaFhYPs17rmQKoq8Nej/egNHP+ZCq7
IXesCWcjerXgbEyvMh7+3NnDJJYmzPpRN4ZVc81hrstuC3r+sATQqwdra5fz
cx1AT3VLfJXV0dSBWXG3YacB3G3pNSW3EzuN4GpvasdsI+q2nDXBuz274uyM
R1tmg0w9YA6ArQsMyu1u6gZ3a+qunLVlVzP6LOszq5/DImS1wKszWeLoSWZ7
2ILpdeBeveh1hLM3vU749KHXBVZ9V4Tgob0hLud7pius/U39qMU5gF532AfS
C2RHs31h7InXIGaDqAfC0oXsPmSLcygMvekPNw3jrDf1UM60O4KZEBj60tPf
qvobVX/n6e+6vrCFmkZyB3GPNo3irD91KIxi1XftGGYHUmvnCb9jX/F7bTDc
41zOd3Rnt93PFGLq43YYxTXJNJF7DKeegK+yppmmMtsX1km8imuyKYwZzc43
zYNbXOGmKcyOop7M2Rj2wskS53R8ptCfa5oDk9giTR+YxtNTHcGu7joDj4lw
zmTHwxxGbxweEexMJlNZs5mbTD3LtNS0zLTBtB62qdxVjNHM6GwdvmJbbFpE
RgT1QnLm4rmUWXF+yE4knFH0puOh3QUwzSZ3CbNh9KN4htOZnU+WWJeTuYRd
sa7FV2yrTavYW0i9kl35rMBjEZxr2FkMZwy9+XisZCcKNuV+xGwUdQxM8t3I
M17OXiy9/aYDphOmZLj1rHeYtpMj1jjTJnZXUsdyx3XMbmNW3JvZWU9uAp5r
4Npq2sLsGurNnIk9npkNcO7EYytnB2CPhWW3aRezsdQ7YZDvXtMeZuOod3Om
7H3MbCFjP7147riNTC/7jBcwlTKVdDusS5iJZ07P4pDpILXufZjeLnKTTB/D
uIs6kYxt7J5gVqxH2dkD5zF6CXho9wjM+3kvjzO7j/oYvuI4ZToJl/bOmE4z
p92Lpk84k/dZZhJhPUdvBwxH8NJnR59BffaiyTqM9ynuIO4LpvN4JVGfg/E4
2SnMHqPWjp59QVNp3oNkntMlmE+Sc8V0mVxxXzNdxVdzX5g+5w7KvWG6Ti2W
T+mdJzeV3hl2ruOZgqe8PmM2hTqVV53dMX1Hrey79C7Desv0JbU4v6J3iTtp
7iaZyr5t+ppanN/QuwFnGr2LeNwk18Mklm+ZTaVOI/sa3l+xo93vYb5n+sH0
m+lXmG/Ru4ePvB+ZfsZDXj+a7lOL8wG923A+pHeLnft4puEpr5+YTaN+yKvO
/jI9g/UyXB5mvT4x/UL9JaxPeA/ucvaYTGX/zh3vw/mU3o9w/kHvOzwec2cP
k1j+ZPYhtXb0s3ma53wFdu39zR0ew/LC9BzGezzrl5w9oX6Br7Lemv5jTtz/
mF5Ri/s1vf+YzWGfnexu5w7iemP6l9mn1K85+5O9N2SJU//D+Fvm1M9m/5zV
7TCJ7R2rM7qdO6in2u12dnVXl9vxeAnzK3ZewZnZ6kxuZ1Ye2tXOazKVlcXt
zKqnWjtvYNXdssGonJxu586PeMbP03HIO7cpF3fIxndMAe4grrymPO7/M2ai
l4nc/KZ8eGVkNjeMWfHyYjYLdX6egYvsnGSLvRAMOegXMRXmLAd1Ic60W5SZ
XOQWo6fvRn3n6ztE3wO5YSvOjOcOYi/BWV7q4jB68bvOm7n81O+6nb+F9Xe6
/ubT334F4SrDd3QhWMvSKwJXeVM5zopQl8VXWZVNlZgVZwV2isHlQ68Ss3VN
78GdD7aKzJag9qHvzZ4vWfo9UgWfiszozA8msdUwVecOZamrsat7VsWjHJw1
2SkPZy16pfGoxo4PmcqqzawPtXaamOqYmpo6wFWJu6rfmBmdtcdXbPVN9cio
Rh1Aji+7TZgVZwN2asDZkF4VPLTrD1NtchsxW4u6Ic+wCrN1yRFrM+7QiF2x
tsNXbK1MLdkLoG7Brnya41EPztbs1IezDb26eLRgpyGZymrLbEPqNtzFj2fR
GEbldDJ1NA0wDTSNMY3GV2yBbuff+5rTU92ZHN2tpymIWXF2ZacVnN3otee9
C2anDWw9TN2ZbUPdjbN2ePdgtymswcx0h7s/9xCX/t20NwzK7WfqC3cgdQhn
3djtx731f5CaZppKTie8epHVg2c0gFpsg+g14xl1Zi+Iew5mJhhPeQ2BUxwj
TMPJ6UM9DM9BMI1hVuwj2ekLdyi9Xnhodyj3GsB7OYrZ/tShsAXD4mHU61gy
R7EbbpqCr9gmmiaQMYx6PLvyGofHcDgnsTMCzjB6Q2Aeyk4omcqazGwodRgs
Y3hvwmFUznTes3Wm9aYdpu2mOaa5pmWmpTCK9QNTBJlD6c8gN5ydOcyKO5Kd
cLLnMTMJrlmmmcxOoo7kTOyzmZkG6wLTfObUX2KKMq3lDmLfBtN4WBeyO4N6
ASzT8JrHnDgXmxbhrexoMiLJVNaHzEZSa0e/2/Tf4Uzgd9xknskcfOaSs5xn
Oo/sFfQWwLbKtJKzBdQrYIjmjmuZjYB1FWdLeQ/XwSS2GNMa5hZTr4ZpDjvR
MIljo2kDc9rdatpi+ohcPdt4mMS2yRTL7grqjfguw2s9s+KMYycGz3gyVpOp
rM3MLqIfx12i2InBU94Jbudn9qhpr+mY2/n/aMbDetB0ACax7TLtZHcjdQIM
8czuZ1acu9mRl362DuEZB5tY9zAbR72bvu6yD67tcB7GYy9nx2FOgCXRdITZ
BOrDMMg3yfQxs7uoEznbw3NIot5MzlGydK9kMvXZ12dYn4npMKj/iSkF9q3s
7OO56N4nTSe4g7hOm07BKY6zpjOcHaE+jbeyL5KRCPs5dpLxvcRMEtx6L88z
m0R9Dq4D7CTDJY4rpsvMaTfV9Cnsh5g5CZPYrpmu0j9NfQXfk3hdYlac19m5
wDNLIeMcmcq6wew5au3oZ1efYX2G9DP8PwrlSSo=
              "]], 
             Polygon3DBox[{{721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 
              731, 732}, {733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 
              743, 744}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt3Os3lWkYBnA5bEJyFglF2DmNGMmhW1G7kEGThqUTG6mE2pUJY0pESOxJ
ChFapFEpS8o5UTrh3S+NWoWmA+03NsohNc2z1szjb/Dh+XJfa/2+Xl+uT/fi
gHDvIHExMbEBdCRQOkZmsxUdGFhakzKcnUCDuprio3n2LUD8P7fo3ajzwZ4B
9fTxS2XxNLAWOfW72RHHvnijhMo95KzAnf61R2kYN4iYSF5JHLtqTbX0BeTj
No+Vn8bR8Na0YN4DW+LYWex9Xw8j75dd0dYbS4PAukOfRXzGp7L0R7yQd7+6
GDcSTcM9BzE7lxXEsQsle96aIL9/Q95G4ggNlS4/eB6zIY795f5Tz6WQ30g8
zKhG0VDoviO48Ufi2Dv6nNt77Rgo9XtdaHiIBv7Pp2P+sSaO/a7HVPNt5Jnm
G31teTQc9W/MdCA+45W1V6v5yJPEq+e77qdhP1dUesSKOPZz2ZqFHOTcsrSY
sH00ePI8u8YtiWMP9BzmXVvJwLIvtj6VwTQo/qFoPmxOHPvm+uLQZOR6T4vk
W7k0iOc6uZgRn3GOqd+2QOSyhQrNzwJoGC6K8NtjRhy7qUwLRwO5cMMbi+lt
NLTf7Eh8b0Ic+3jDea04Wwb+PJc+d80WGtIEp3t7jYljT7ZY1+ixggHrle9q
2zk0yKsoZXQsIY49Om+60hi57jyvA/1rafiitbpEgfiMh8lVXBZHPr+/hj3m
TMPgksg698XEsXu/X8ivsmFAlJSRpe5Ew4PlnYMPdIlj184fCdJBXvWXQ8RW
WxqSvTPWNGkTx35NIU9uyJoB2yi+vtCYBlam0qcKdeLYuz6O+aQtZ2DVLaeT
LFkaxJSUt/BliWNXGI5cwEVe6ytRPiRNw1OP0kVNc4lj54iGe+yQ239tae+W
oiE3ddWbIRni2G+PCv0HLNEuWu2mVjKHBhuZPZGu0sSx5078HeCMfOmjzQWc
KQHs+d6cMkeSOPbAOfS+KQsGlHt3VyUNCKDn48HG8G/3iP/vItXKxCAzBvpY
Z17L3hdAxcMetruIOHZ5B16VozEDST6DdvOPCyDo+MWvkt3EsRtLFFtpIF9f
HtGndUwAra45FU5dxLG7PBRcFxkxICM5mWD4uwCMlM4Ex9DEscf+YnWlCHla
BavTMUYAwrykjjGKOPZh3mj+XOQ58gYhe3kCOHgrvPh1O3HsneURyV1LGSi9
u43fxhVA/AdH98Y24tizdMP8w/QZqDenhfFrBXDB83lOdB1x7HoSweJ5OgxM
shpyJ1loF2mr2I8WE8eusrMui4fcuvTzfqGkAJ6c3G5tQHzGpRpUTdyRh2ww
3fBKXAB1k1fMfIqIYx880rxpehEDnSnnPjf/Q0E+7aJ35yJx7DdG9S75Ii9T
5Hmkj1PATT0kdewCcewur19w1LUZCNBiixm+o2BkuqddKZs49pAmr7R0TQbu
m/EDN7VQwHpRwLVMIY79iFuDRSjyeIVTz1yaKfDXqX4fepI49u1qvW4c5EOH
F6y3aqJgE3e05HoycezsyzrHJZA/djVjK9ZRsFYUbLwqiTj2+o68T9ELGEgQ
+QjbKikwlPFk+yYQxz6gm9u1V4OBcfuycMdiCgZWLDFJjyOO/clgzYgr8uBL
1n0mhRT0x/oLu34jjv3mzRfz2Mi7FBo8tQoo6GnOuqJNfMZjOQvXvVVn4Fq/
wHIih4K2n+RMy2KIY1cOP1+1FfmuE9/GrvMpKAv5ZNryK3HsE7Z3KHvkz0Qn
uPkZFBSVm3+UIz7jL8WfD2ki5/gpd6WlU5AztqvcO4o49pIsTaNuNQYMzYyq
dqdQkBb30qzvEHHsqTtWOlciP5NVYeibTEFii8aQIfEZj1zmuz0T+ffv9mc5
JyiIlfO+GnaQOPYtn6KiI5CHh7ZK2yRQcNArdV8ljzh2h/rssx7IeyjPKIN4
CvaebTWfPkAc+2z7dzHbfLb1Ndv8X24DAZM=
          "],
         VertexNormals->CompressedData["
1:eJwUl3c01f8fxxWJKFJJaVERlS8qCvUqKipEMkpKRkaJjJLszLRkK4Ws7E3E
y7w213XtPRrc+7m3kkSl3+f3z73nvM89n3vu476fS8zM/oLlcg4Oji/kCyf5
7pnxK+LULIEnRXRv5q7tQaNUmuTo6Xy8WSLyLvkGgcE1VcaraH3oPaV3T2I8
H9l6bvzh4gz0OmL7XOTnGIr+pOxvD9fHEsv/iIAzFKhOG690OMpAolgzLyp7
FNQ4hYqf6LJg+uy9E6HLokH8yKXaH7Z0IPo2Z94nzy8KlcpJLDXA+EPuMxFR
VND/ZLY3fZ6Asde7hS9WtIH4e7m/mlQqiJTua+y5SUCL0WX3bQZUOPHxK1Nc
ogtKvM6Ja+5nQMLB00e0C6hwr3Um0uLaMFCta7cYVtaj0IpFAb6QMAwYW/Pj
ViAbAqx3Ci+dZiH/Aa6c/aU0XNMbJ/KushpihC72ammy0KRGo27SjY46K769
uqaVgFynV3KGkXyOrT/9lEugBw+s011VdDkfa1dmb/tH8mmxzd5t39GHfKMa
1hvn8tGg+8DPQzsZKPr7Iq6bG8PsKs+mfK/LOO2y51iRKgVMYtPk9h5j4PBx
KaUzWaPA6y+f/0OHBbqnl537NBAFPSZrnmffpkPEaqVISZJP9/vfWk9/NUC1
ZbTQ95dUSKY/Grcg+UTEe9FSS9qgTqFL5wOdCtXcwSqBJJ9KscZTJ/WocMGG
b5WbdBfE0a2P1u9jgJcoo9c3lwqvZfsPscyGoWZGY4STUo9zEwMNK1+E4S//
nu0bST5y3HY2xeosdPXPlCsuomH9COXijaJqaHe1F0gn+fwX+S9S2ZWOzTG+
ASznBNzcH3Vp/w8C66Nn49J5e3BN481vt3zz8aU4Z2ieFYF75ObcFZr7UPfu
C7cVWwtQyuZ8zP1dDLy2pnED7+wYpvCO3NbfZ4Yb2+vVVh+iwCfNBY14YOBF
9epf6emjwIo9RK8+zwLNFQJrXJ9EQXXperFdd+mw5+7rOF+SW0CGW/plogFc
2GqzWUlUcBu7G9D/k4AocYuT5zLbIMt097m4YSq8lA28+tmWgHNev6lPtKiw
5Qr3fekDXTDXsKu4eC8DvtzIkp1JpwLvl1YhTtthaHm6pGPWXY8vjxGL/96E
oeJZ7UnbADYYvuWblDjDwgMb0yTqc2nIeLlHZSCxGnS+GnCZabFw8Vbf6mlH
Ot6N9VTdXZeAdYyF7Q0kH9Z5yRhNrh6UNG83O5qej0m9zwLMrQlc5rGxcqGu
DzXEDBX4TxXg1eeDULGbgZnVn1/9+TqGhvL8K/6JWiGTcMm5IkmB13lMxoYT
DHQ99dhsVdooHFkfE/1EmwXnmqy0+iEKEnQFBuI86LC5sPzOEMnNUfNkwvaJ
Bjgz8jX5dhYVjG/HcGmRfHaeV1v7Ob4NnvVU7nr4iQpX02gGp0k+TuEzfl3q
VDi/6VroqHIXFGaE/k6RZoC0yIUZrWQq7B2d9xS9Mwwx167pN0/VY6iUk8Fc
Vhj+ra/FCn82lBvtuRN1loWbXFedoGbQ0OaCk8aJ59WQCxlum7RZuOLWivsv
7OjIrcwt+HRdIkZv1rloOkegTo2y18xSN3rvtzSSoOWjU7fH3/U2BBqEyHwp
xT6Udv4XsdeuABNkT37hkGQgpb1Fj8Uaw9FTuwV61tzCd4WJfm83UWDu2tbN
j1UZeLgm0dkqeRSSsmOWDLVYYMNdsGPV90hwfVJRIupPh3t96msPkXxq/x09
ONzTAMf57CUPFlNB2eHlZZwjwED0jdKDiDY4U3x3wI5NhZ0t+3cl2RBQ5XnZ
bIMqFRJtOs7HnOyCFRIcqyOlGPA+cDV39hsqPN+26p6i6zD4MtumlX/UI0Xn
eMbn8jCsYF4vFCD5mJr/XstD6kiE0uzVm0JDVZlF15ce1cD/3M+BSvLxYk70
KlrT8bqLwsc95on4TPDDj18kn/Dqx+f9Frpxy/fVrZKL+bilcW62nuTTlXNx
0amsDw0yPoaZRxRgdc/s85N7GJg1FnJkhDmGi6N4xM7XAe15yyjjfBQYvbi7
a/lJBo6v3bqvJnEUjj1yXiGmyQJ7x/Q3q5IiIejHUHHcYzrsEFlwe0zeq+tX
dSzDWhqAKzPEeamS1A1rd6AsyceD8ad65aM2uKomZmPyiwrlYsb1HCSfsYW1
tnoqVFh2dU2eoVYXSB2unn64hwEXrDf4r4qlwvod+fMGXsMgUvGOv4STgvyK
a5p7msLwkZ1elakfG2welNe6kjrq8BgbH0igYe729W1fbKvhwcLCZMB5Fkr4
tUv1m9Hxo51g6Vx+IqY9u/rv+U8C03fe4938oxvFTWJLTogX4JNr263v2hIY
Ipo8K11E+o+/kXRhRQG+ouodDpJiYIwtaLXOjKFSaBUf9z9H3G6w//7GpXpY
d/K1sNspBq41EgrYHD8KEhJWmV/OsmBP/+aJAf1IeKYjRd8ZTofsVv+sCfJe
RehZKahWNYC73tpHbQ1U4OaeCIr/QQDx38e0x55tsHbX8zbdZZ1QZ7L1yBVr
An6d6n/1RIEK+wKoeZsNumCnhkSogyQDzjbFW5uHU+FN3qu/9wOG4fCo9gfl
dRSsCfR6WNMbhiKlNRO5D9ngRY/zm/6/jl6o3Rh4RcMLXqInpYyqQfGZWJeK
DgvZxRK375rQ8buop+eP5W/xgZ2h4555AinTRpkZrG58p9Kx3vlsAcbpiBlJ
3CRw/qdy13BOH6bej9Hb+qkAQ7e3DrVIM3Ar/n1S+mUMv/CV2B/ycEFlS8c3
J7/WA7wUm/p2moHmRtFeDnGjsPZOzvfsMyxYb/Pln9vKSGi6cIU/+yUd3FyT
UhVJPhd9HN9NFzbAitoGiwQyx6VYrlcFSD5ROlNfeZ3aQOhvKNe5VZ0Qa6Do
WWxFwO40t9+1sqQOUxq0J652gYKwz/IrEgwQvvklr/QpFTx+OPvHPxmGb/Mb
5pvEKShfKpqW/jEM4W//Zg6ST8nGnguXSQ5ZHky+niga9nrcHr5yqhr+GQqq
fCfPhw6dSxIwoqOUlo7Mbr23uBBafw5JPgMmoYpHpruxOsV8uNKxAK9dEKvp
JvnsdVeIfpzehyOXh3jfrCnEtAe17gL7GPjf6pHFxE9juDp8veHvP/ew33b5
UZuJemg5pKFsq8HArvS6DXWxo/DifUivkwYLrCpWrmWURsBhLpkrKm/poErh
sw4hdSfjYVEV/K4BTqg5L3PrJ/NnNozbY5aAN/3BL72s2sCT8X3VmXWdYMV7
K0yA5BPGrA74KU2FQZm3ftlWXaBcvPPo6d0MMNGSMFsVTIXQiqmQ5vBhOP/s
Yvl1eQrqxujxPJsNwwd7a620fdnAvBG5r0WXhWsP0TvbXtDwuqh99EP5arA+
P7AllTyP+vSqJekCHWmmRysC377F1n+UYP1fBL4f806vmezGJO7lfOIvCzBl
98kkv1skn9b8E4rJfTgQrqF+RLEQ7+m/Edbbz0C6yfyLkKkxPHb6Q76hpxs+
+3lZ359eD8rx6aKTZxjIn5lxakP0KFytUbqsqM4CuWV++/faRsCw3sWq9nQ6
fA91JIbPseD4gwMe4q8bQFip/4rhBBV4Hg55TX8noJRhnU4Yt0Hcevfhc1s6
gS/D857VDZJPqjvs3k0FuXcCOl4OXbDtvenx/3YxQHEhws3oIRU0B8NW/3o5
DA62V1ZyqlLwiJmHs/2ycLSbT2186cOGJjMBQRU9FpZs+lFc/YSGWXW+znHb
q6Hu1gsn4wsspH7wmDykRcfVvpM7tvx4i0Ufwp4KLhCom5k3+3moGzM8TBj1
bQVYFC0VcdWOwGlVZYGA132IuTay4raF2P7kTelnGQb+s+ZxZIyPoatb8MKb
RA/kNi8t2lxbDx7rvHeWn2PgoucN3pLwUVhWeCju3SkWSK/8XXVrZQQshmYH
aRbSIfSpAnCSfJJd8h92P2uABAFjlhNBhYAwecP/SD5H9L/+tNVqA+Xjupej
JDvh6n/BT8MsCfgZO+bev5UK2ZGerJAHXfBD/FsKVZwBTz/Pnz7oToUbvA9a
fiYNw3OTuI2v9CnYODCVVSMUjhevnNha7s0G8Rsyt3j1SR9232N5K5CGq6Lg
55eVJB+9Pwf+zy2Td5ZicZqOXSz2D4lLSdixLvHf1UUCy1+sTfekduPaspjj
plKFyHx0nufjbQL/bLrma/WiDxdvR1geoRRipKiIT5UcA48Hll6SGh5Dv7ir
sp/SfLCfyyYr5m09WDZ5BwqcZ+BHnsWTr56OgmSnTXSvKgskVy6fab0YDmpn
Qyku9XQ41aFk6Uz6kmIj3J9zaQDRF0e+PCJ92OC/U2qDXwlg5rjulDrQBi2+
W1ZxqnSCcM4JgbUWBPDUvK5LFqTCoS+bPf2fdcGrw5PKF3cwQL10qFLDngqW
BnnZh4uGof3e8csC9ykYETQWMi4XjrO/D5SJe7GBN3QuTcOIhQou2tI/HtAw
4YaN77LhKhiVvTvZfpGF4s9CPvMr0TFoOvbad4Fk5HMQzvn+m8DRDnero9Xd
uDrJk7s9phDd76tEVTgQCH4LOj4P+/Cnm9PL44pF+H74y60jhxgos8NCQ7t3
DB0dzIb3SfijTMtcO9O9Hrp5vjjs1GPgw9/80iKBo/BYYvfCFWCBs/ONQ6H3
w6ArnkPEd4AOK/z/CvqTuvOzM+GRNWiAuwqWP2U2d8Iqp9hfB9gEBD2J9ZwR
agPfFdNja/Q74ePG1rVyZgQ03f970Z6DClOHzydzpXXBbxlrGbWtDIhtoK64
dY0K6j7mkxJNwxApVV0ZlkRB+wyqT4NhOBosC/oo5cGG7d9H2MeusFD2/UTR
gB0NOw9NnT2fVgUrL0hpFRuwMEaxTmZcmo76nWkHL35Nxoxld8q//iEwgP/x
U7eSbhz/L+5tynghDnMqlX2+QyCvyBX1X/f7cKn0heUDryLkD/RWv63IwClu
h8UnXWNILPf32389EDet0eA6ZFEPXw9IKlXoM/Dn5hhOdd9RWE3XVhc7yoKh
M4W894kXACwj2dnPdFh794n8qdMsIDa9TBk70QD9Ygk+DKlO8Hm8Y704i4CM
Mz8XNZdaIWH5jsTVlp2gkMAn+tuUgI4HxtE7mR2QGaUv9q6kC+68lINzov/3
n09uGvpUKB6LHxrtHgbjnIE88yoK+vZ78rfbh+Oe6ttKHx+wgXv0dXbtVRZe
KXZtolvQkH8xqPRVAMknwLxn2pCFnW93yuwTo+Oawa+SH7xSsHzZXtXkvwRG
TrbW3M3txl9K0RxHNxShYvim7+WOBCqkfKVudepD2urPKkYFRThZckhn+REG
prSM6g9Sx5DjjD738d9BuDxb45/LhXp42nwgMNaQ7IdcT3dQPUehNUfpkb8y
C3iig4PGgl5AgvabFTHf6NCYcJcwIX3phpDqq7MHGuBcn2yzwqFOoHFdbjEm
CCjIOPLck90KFKLPJMihE0Rd3nGIknxa7wZwHB/uAF1Nj56Jmi445dOmP7aJ
ARmUwQQObSpM6M+84xgdhsdZb9ON6RSck/ebYXmHY8XDk5K/3dhwfKaLM9SU
haE7BlyMrtJQQSjQ0up2FZz2KKutI3WXpXpJX34zHfc9V5ss/pSCvWoatZ+X
CBR9J+Rc+7YbL1+r/PjIsQjnVLr7FJ0J/PtBZbzwRh++OXIra/faYrQ8TW3r
V2agsJdLy3zLGKb/CnwvOh6CBrH0aBP5etgq5Xn512UG7s7aFhHkOgpLD3cr
xR5mwS27H3QWLRT4PoxO8nJ2A3m9oVSNBRdKWJc+izTABYtRi4QzneCU4V7y
jUFAo5hbfiG9FdSTFt5q+HfCxulmS9+rBNjs+zBxvqYDdD43CO/v7YK8mzEZ
WhsZsDD6dHv3cSrs/6Jk4cUeho1Jju73f1HQSeLokcw34Ri45m2Z7n02PNTY
9bPDnIU3CrknYi7QUNBceDFKtQq2b3lYpHmZhXf/2AqGrqZj46//bv6NT8VG
+/8oZstYqPqmb4fwo2489TApvV2mGPlLzy5I3COw8GTZ+ldafbjzkcPhm+3F
+Op142gQuT/bNx3hX1szhv3pjlKXhp+jTC7T6NW3OvDq8qyuuM7AAfu7U+03
RyGXfUssU57ML+X3j7vMnwOv2rN+OYlueLzGTNzoOAtWZh1OSZykwHTBdbdG
R9J/Vi5L4J0mQCnFwfL161bwDjbl2ZJD9kPDKZGjxgQIvX4VxgzpgPStPyoF
OeggJk//sE6IAXVJnnHHJagQZ/jqd6ngCFgMtby6dKIBU09+iqkeCkfHro7D
bBc2tMTorjpvS/7eL4vQr0TDrVP/OOToCJkXwuv1TFi4xmLHBZ4fXeiwInqW
KfIO71KeHpbnYqGRbOI62s1u7Euw8lzPX4J5vym2Xm4Etm9Um+aU7cPNjlIS
45klmNOivVGM7H96x4NKTYrH8M7pYO1l2uE4z3+08l5yHbiIK0Wm25D5Jqti
UnWF7M9yfHcT95J8xtr0W62fwKOB77udz3cDz7LZgjMqLCi/vU90MYkC7nJv
Gja87YTQR5MjgR8JMElQzV282gruX8eUD4x1wptqm3FtQwKmX1xdyzrXARdv
P+nik6WD3v2VjaN8DGjoyAtZ4qaCX66VYbbiCLTdssjljWrAnzP5Hvo7I9Aj
VvHepztsWDltyj9wh4XZHnIzvdtomCnc5DrEiTD2811GA6m7Sza7mezuLnT2
4hafpKVj8tYNgwkrWNi9P/gfzbgbDzazCqu8S1DqxE0/RXcCX72cVbu6g7w/
9vesZMRLUbAuvTSU7Dd/LtYq7s0dwwTh+cnEbZFYZN/Fo+NRB4zNq6rpdgyM
X7rOW3dxFLrXGC7/KMkCuH8ndjohBNpOuQjKWHbDTgmhc1uUWBCmVXOT8ZAC
7Z0xrf4fyB6ov8Y5aZIAyce/XCyPtoLooofz6sVOePfkaa28Psmn8Ttjj3QH
qJvx7Dt/hg7lOltHwngY0Jv0O5yT6ICzqk9OyGiOgOFhyVPKdQ2YmBk/z1SP
wFB90fdoz4bq965/mlxY2Fg85McrSEM3+o640YhKeFnRN/vEjIWRsWKbeChd
WHXw1O7F8gyMemsWpc5N3rc6Uz/3i93ovEHS6VBxCXrfuuGzRPLp31DpJbup
D2cN8xaYhqW4wd9gSVyLgfdKXuReyBrDbgMaV8RsJOptTM9l2NZBcGKO/Ad7
BjrkPxDapDsKsWvLIvZJsKDbRVfDq/MRqNkMdO2w74Y1zNyUzUdY0LJd4US9
MwVWDbGM9jaS+srYlVk3QYBwzCXVZTKtkPYrKWhyBQ28hi/tOHKRAO07lMHs
zR0w2v2QOnqRDhK7XEsEVjKgqk2i+jPp23zCgr+e6Y/AsSvd59l9DTh/Su7M
A6MIXPvt+6qa22woC5r1jLjHwo2StGPHeGloVZPxycG8Eqr8Ppkak77EuqCg
9qGyC83ql2U1SWSi/cXpudsrWcjk7oKD6t248uWk7YhwKXpobhc28yRQovm8
rRx/HyoeOfdO9H0pql7TXTtH9j8vt3/F0mljuBBzh6hwjsYlz+8D6WfqwDJg
bO8+JwbevX7vl+PZURBWW+2yeicL4tKTI94ZBcPI42xFUZ9uaKJf33dKkQXC
R00Vr12iQJ1r4X3F4U7YHv+f8b5xAhr09PSkhVrhCpefhrooDbh09h9zvEDA
bd0Up9yldthzDMLqbeignXTB5TwXA1L7D2pEkL7tZF8U7ntjBEIOrl19bakB
0zeKpYnfjcAYhueWuVtsiK08kUZ1I324JlTr259OvJv+9ZcsTyWouHV7Nluw
0Fxw3ZnAvC60V3NW+/45E88e663M42VhV8+toCv7unH/R8vH1P5SzNGaSNzm
Q2BNOPcLxrde5NhzwGmLx3vk2AjRUWS/GeIQ/a8sbgwviflI/fJ4ibUp5QJx
3HWwvrjxzgY3BuYfdl2/oDIKdoKufCVbWLBGe7dcvWkALD9gFnchuRtAa+6Q
3wEWaPYl2G4Up8BHZ/U/cStp8IZ98MGnYQKMQyXnf/e3QJDOJPfV0zQQeT4t
06FNQJ4nX5Y8pR3uS2g+GQoj/cfLqfT90gzEtGbruJK+fU5R/UJ80AiorOsp
GTvTiOLOqURPbgQ+HvlUfdaGDQPFY0qnfVioHmf+U2iqE9t88nTZ5ytAviNu
Ks6KheucZ1N6IrvQJfF2fbRdNh71a3nNtYaFAu/vf3w2R8frxe9z9twow5Ju
w9u2AQT2VEydOP6hFxWyPme+4StHgw2ur7tMGcj3ar2bftAYOvjOFHP0xONC
2u9eI89acFb7l8MfxMC1zR6NZ8RGwbLKoihNgAXnmGtGHY28YX3Iv60UVjdk
13j7ppG+fVxj/HhcXj1gR9+B1yY0cO5iz3D2EuCY8pk3waoFQr04imviaJBk
F6Qgr07uVnbhVkW9dji0V8FafpoOt86wnh6enQG/w3uszUU7wNVQaE9p2wiY
StCvWE82or3W+QyPnZFo9qOAnX+dDdH+Up57n7LwqpX3erW8Tjzycm+YRV85
1M8ZmgrbsXBrpb70ZdMuLLpQFiRUm4sXLUq0nwmxUN/ieRe9iI6fv01ZXZX9
gFyOpbs2Pib3V9nbgAaPXrxdeEXoWt8HfBIvxnYg/TerwXzHBfsx5Lfo8Phk
k4RK0oHpmWM1cMc7+rZgNAO5eqSVWzlGYThTbeA0BwuojM8mNHQEO66YCSu1
HlDtoG6XE2dBmWCX1fX/6qGTvXIdVtEgJTO2Nr2dgCtqn7/snGyG5BcfkjyW
dwFFTP0W9zECmpfJ/Vxqa4PSSoFA33PdkDVcJZH+cQY0P5gFZcWQ3D4sFsht
HYUc9f3VGyOacMe69PJziZG46lXNaKYRG/wGrx/KfMXCoqyX4TvudqL//sOh
Y7vK4OAzx8hZRxa+mZ5yX9rRhe2D5m8dn+Tjq7U7RR+tZ6HLN/V7PlF07Fm3
x9WMtwIzf4ZIvHpKkP47vYXHtBd9zF3ZsfkVuLw3Jfk06S93Ro4vmJiPYZNb
yiGNLSl4R2zDz98RNXD9U5l67BsGHpAcVFD4NgI3jTa2TPwi4J8STwGPljWc
2J+3/NrNHti7sVYidCsLfmRSst+SvWl3vl7HCzYNZvcPJoY2E+CiYh6nmdQM
OyuufhOS74KtjtnWIUfI/a5/hNX+tA0Mowt+se53g0+9UoDE6AzclXXvU7jS
Dm18my0zVUehPWrb+vPTTVhVKnS8YTASXb+9NTt/kQ36PQE087csPBr9Gucv
deKWL3zfBA3eQ/v2NJOnZK4tfDHc0b+8CysmXLre3ijAyl5J1w0bWMi2yxHo
fUrHJ0r3pNTVK7CiOmPl+WcEanRWXwo07EWXV5P/+r5WoLLdURemMwNt4h2/
fLtG9uewtz7Ho1OwsOz6pwLvGjDyWzNfmcDAI6l+jyqZIxCk+nNl3U8CZt3v
ThcEW0DiZ3fF6rs94LQp6Lwy6UtivFNHVo7Vwad9g9LTf2iwtjBe2qyJ9JmB
r6uvvWiGTwSXbjx0wfDig5PHD5PPcTI62+jeBt0vP4lIBnYDhcKvrDE8A4t7
aQK5Z9vh/QN5EUOtUTDlMW3WXdaMXyK0KzIYkfhAT1NijR4bzkw/6juTzMKC
NUpmM7qdWPXSrfTf5vcg9/ugnvpdFnZkhjUoL9LQ2ujOvZikAsy5Lh3DJ8zC
HgFOa0kvOjbQi3hkSirwRMyyksfPCXwgOWgkrkHyaVtYbXa9EtO8B/Qn7pF8
nATOVl4aw6Jft4vvu6biPP3ob+XLNSBx18kgLpmBq1ZHfHk7NQJj46pyjO8E
HF7N51DgagwfzZ26dUN64JTUqH/rJhZMaN+Mkqmqg5BdpRnLNnTBHIdv6uEG
Arbrz1d9v9MMVsvu7d1i1AXzC/5/pg4RcDIo773MlTYQ8151mudNN+xWW2U+
1U/6z7hP7z/pdrh8Eo/Hmo5C4e58l/J9zXix+M6n+ZVRmB7lbkTRYYPBpwMu
BWksFB1tZuirdaKR54PZ7bmlsOnKur5nZO6Pq6tT3s7QsHw2iJK4vhCzC/f/
ndrIQpm0Yx+crtGRkaeZ1h5diVtWf+38+YLA5v9yc5ZL9WKgld9WzZOIpuft
Oxs8GHgwfmWsjNYYuvoa9DJV3uG22LDf+fw1EFrCTZhnkffHY95Ljj4CBd+C
k0XJPeVDUR/970rzsX0scaPSwh5ICw4/TFvPAg2unqLvXnUQm9th4n+qC3qW
NiY31RCQGSy3Jli2GbSE/ausgrug96l8ipAcAecf86y03dwGJ030hzZ1dMPI
8Wd2y7tmYGv8BunNjDZwTjm44nLgKKQmy7Sc9mvGMMtTcgYQhe1b6MZimmxI
qFHv8c5hoa+9ruPA7k78Ix/GqdtXAmtO06QFyNw/SF/8tb2FhpHPFvyjfhbi
tgaGt4YoC8uhZrhsGx0d5/P038pVoc+al/t9owg8aLR93a3pHrzsYHuwOKgK
Pb0c99wNZmCEiX/bzQNjKLZ6XxKlOxPDooym1e2rYb9t04uNFQysSZcVuJA/
AvIqCnu4BgnotBItkOm4iQfMhAte8PRC0b8fKdarWLCw6YWQ4d9aeDboYtWR
2gVn47Z63H9PgCrf7P57GU2gN3LpwmmiCzwcEz/+kSBAZavc5fjwVtDcHlRz
R7YH1ncWhdPrZsDHnXnkhE0b8LqGfijpHgWOj/PKCgot+Efc7WBRWhS2mrFu
e6uyYcT6wX8cFaQ/u8yPRE1TcVjASdN1RzEYhScvr/Uke6OMxrqmRzSU6Xhy
cL66GBsJm8mCHSzcQ2lYyxXdhffXNnv/t6oGT03TBw3eEPhs3/2ZYYse7JpL
n9lkUYPr97mfV4tnYONZRmrU4ig6hn2YMN6Zj59Dnv1nv7cKPIvc9qwdZmDw
6X90V9sR4Jws6WKWEmA6ZVo+etIfO3p7PY4W9oIqe0993iwBJ269+dTAroEz
gjb6e+/QgUdQMvZfEgHHlQ8uexzdCIn15QYj7+kgZ9RA/ytIQGoj599j3i1A
MXH6nTvfQ+7hT4vNKTNQuKdaJ9KkFZSmePh7lcZgMFJyx5HkVpTPWr/8lFk0
7vtPN6R3Pxu+FkeKOPSyUIgywO6/SUXT+ykXfj/Lh6DLQomjASzU8TBvGOEi
d71jdzfbpQxL/RMytXexkPO8ISHym4abBxX1V0jVIe9/gUE1yQQ+Hb12cWdz
N6reyl3QD6hDhQ1xVRqlDAzK/B434TaKaxOcapRvF2Od427p63YVsDNw1F5q
GRMt/LcPF60fgc/pq37LPieAJdSsxu59gR8WNxysvNcHG+bTeTzJntMeXG+6
7X01HN22m6PGoBuSq55u1wshILjt2vRR4wZQKfvmvettN+zKecCTM8eE3tWG
aUonmmHJoTMtfqAXjkTZPpjynYENXtv/3JFqAWu/SwlREWPQGK04a6TZjr/q
NQP/ro3BE35fj2esZ8M5p+QI21kW/j7Z7iOe34G7wxuKeEczoWVtXWHwExbq
9VHMmdadGLHXy0S3tBI3vj64sETySePJ39lSRDaURU1QFq5H54akvLxUAius
fVRy/cndoUY/uNGlHiv4q8L4ahjop313aPrEKHprhTNVdErRvsBijZfkB2DS
1kZUCDIxVqaFuZI1DNYb2jjGPQi4eKNF0OVWJCqr05ZCWvugJOSZkiuZ4zbM
OcPNctWg6CFX4lTWDRHvUndZeJH6yo88sIdKARfdilcOPD3gfCfr2LppJjh+
y5C1KGoCzPmbLHy0D3a8OfsRHWfgpJzivozEZnApCxXr/zAGdI7+cx9WdOA3
31tyWedj8JRLQYgMLxuWRTa105dY2KdFkTog24Eb7whZvT/6DrYnTEs8ecbC
dKG47jW7yF6trqWccrYKFYPTdPl3s7BlTUqLWibJx0dm/r1CPera6n+aIfms
k064d8q9Gztyfx1pi6jHskbvVZdqGXjjZ44vv9Io8ssc3Gj5ohT/sSIlOX6X
Ay0pyHtYiIk/L/i/Sf8yDGbyb7ddekDAzdPczX3TkTiddUB4R18f/PdKLDi1
kYC7Tdpd97dVw7OjbmOCjd2gphF/8z3JM//tqPLmCgq8yHFpPyXcA12mkZa6
n5mgmDV/SSWxCdpqLp4LPNsHjnp1H/0cZkDJvx+OPG8GxcezlgdqxsDIx/+N
6PYO7D4lrlJpEIN35TYlRq5kA1fPYrgxBxvL0r4c1drWgbwztRYclWlQsN6u
vZHk8yTM51Xk5k6cqC7TM7hZhY0Tse1bST78Iu9DeF/S0PP3Xw2rO/WolFWa
dy6NQAWb2OXHbnbjSc1rP0eo9WhTWpyXVc9A1eaqTx17R9G0+Y0ug/c9jjis
upWdXg4HewPO5QszUSPZctu3kWE4u840tPYuAcqFx/bJt0Zh4/KAM5xEHwwS
e0yN6wnoflol3/OnCpL5dBrjx7qBZ3NTfp4bAfKPbOtyYimQ9lePrvRfD5wO
+XN4xxQTjrnVqbz1aoL3JulHKGZ9MCznHOd2awZSRDVWMG43gzUx7TbQMgYH
xJa1EpodeE32zE+GWQy+rKyNzOdiQ+0L7/0bOdkYfv2bKOtvO1482hoo3ZsK
3GxX6v7nLJRwEM25x9uJeeW0b1dTqrA9k3u/JMknqsbKXNOVhvT7BqUOn+ux
fbFk+dz/+bx4NjGp0Y1O6tSQQnUKHuOTcNFoZmDVK08Wj8AoqtBoVrGL7/Hn
vG/iQd5yaI6fnb2+jYmenlXnlVuG4TKef+RuR8CutYYP1MJikJPHRfyHcD+Y
hGv6JVcScKzhuZvE+yoIqNl5Ym4tyeFS7Qp/Z3J/Mb9cuqlPAbkrUvcvX+8B
SqjUpYRhJlgcypdfptQEQUH3g13C+sAzS8hBy4Lsh9PPuhl7m0FiRJlxeHQM
clb8XSP2rgN1gnSN5O7H4OIOWQ1SVzCiFjrkycPGNKduuZcf2nHLG4HpFdwp
MORyt3mE5LOyJT7y2ycqyhMhanu2VqNdY5A1lfSf9Slb4nPlSD7QuU2+h4IP
DzbfnHxH4MenSc6cnN143Kz4o+jhBuScmwk43sXAF5IRxAn6CPZ5/e1xnihH
l6gt0Ry17yFZLDSybz8TRSL/8FUlDgNvxh9fz8sEhJ06oZ8kHYdbq0JqXG/2
Q/rVVueaXALopzsc9slWweVSYQUbF7I3Um7fKrIiYJWDruvepnrwZfe7WFN6
gHbwvbEslQmnbXc2cmU1Quc6Ge0Xc32Qr1pp8lxvBn4fM/tjk9QEKw1E4g5w
j8MdD3e+YTkqzqt96l56FYOla6zbKr6z4O2T7zf417HRqzb9QqJiO/Iuj9Ng
6idCHTXrQn8oC78ty35eH0/F3aXzrs9W12AWj1+AhTjp56W+r5fedCLXZ0NT
rspGDF7F5yWcTuAp33nuGEc65ii6JDjtbMLa7AbFHVMM/BDbq1d1aQSbRzgV
41oQDfjV/1lKl0Ad92MBUS0mBtyxDbHWGgaJ104c1fIEbAhrllQ+loiSx8Rd
e4QH4OLBwwrCYQRIMf6WrJethKKjfJsAeuH8LpbNAU0CRBY9tvGm18FO74in
3mFkH+AM5blfwAT5rk4Di8cNcPLlSZWAD/1gf/Z6S7DsDDxczxcS8awRdmk1
fVqhPw6nNB5MFnylYqpW2B33yhi0Md40JdbPgoF1cHmZJBv/C7ZgmO9qw/m6
Zd5anhFwNzC2VfgFC6vdF9YuCFBxn9Wuy5oLtVj7NFS+dgsLU3jnfHXmqfhY
03NuaKYZL8c/kvIg/Tl3Sq54VUsXDuvOb/a82IIeKuoJ7B8MvCJ+aJ6veRjP
3JW5LrqrBg09v7/7JVcIDYKrDQ84MHFD8vbKhc9DYFatW1zHScBDd+O/4zYp
aL8LxAv7BuBYfI7rCnsCzLLhkG12OWSNfg8e2tkHxvlHM59KE7Ckr56ZZ1oL
vg1/vrc/6AM75wrhsOdMqBh9c0nrBAXWmy3Jv40bgJMun05sWzkD3WNRBh0X
GqA+sMR2LGscuJUPGL9r6US1LWN/w4tjcFg91UK1jAXaNDXF1cpsDE2ReNQ3
1YLrZyi6q9c5QM70we13SH+u+CGQWk5tR19Dd9rVvRS8Q/+NFzax0C8i9ltc
JhXvqni/ah1pwS1+K2nmZP/5uUuzpMS7C69IGXYYnG3FIjTNuPubgSMq3rmV
wcMY/zfMqmlHLa6WMRAomsqHUAOWtKUX2X9GbTYLlA1BO920P5XFhKufH6cX
qaShgtFS+d99gxDoIRfjeZUAy3f7HKrDy0A65oLplcA+8F17olFIlAC7Ftvl
PztqYGXDi/6ZsT44vzAVHOHNhKq1Dcdbcuqh8mu+b9C/AVi8uK/S+8c0VOWc
uDzaQIGnf2slrOjjsGbf83ZiLw11l50QzI+PweTfqz/uz2SB64SI3CdVNu51
UyqZN2jB1/HXVvwKsMONxvyrzpL9p/aMe6SWSjt+K06KHhZrwC23aidRhNzv
/hzbIYGKvTMyOs2cragp77xrBcmHU2nDA0uXLvRLXecbb9+K1dXlRdZ/GNj5
eCBt2msYY49YPZZXr8W/k45LZvn5cE2+YiHXh4nZawOkOQqG4OUVga92DCYU
P7V0NH+Yhj4BxeHvjwxC8WetoVljApoDTH4J2JaBbIl3nWVkH4gV7DqSK0IA
h0SBC2dZDRxmfn8t/7UPTPiOL233JDl3t24vj6mHhZCGexfWDEL4XsfYtG/T
wBG+R6UrnwLh91wdFAfGQXff6nJfJRoOF/sLP3gZg4d0RvasSGcBdvCcXXWS
jYcnNtEvnGhB9iWOSGEXJzz5dZz65TELGW8flBbubscrD+tWnlRvwG8JzIUs
cp/imgDfgsdUfFDfdir4dCseXhnjrptEYNa6MzfZpl0YPZbuNJ3fik86J8o3
LDHQbb353Lbbw+h3gt/1yeNa7HHyE0k0zIcznIxNdH8m9l9iChxKGYIuhXdC
UR+ZsH5mxmxs+TtMa/URy9IZhHc7IsHQkICr9hRjrq1lQDOKbfPO6wP/aQGW
8XoC+r8cDr7xogbO2+vuruTrhyYLm4F395mQ8NJx6Mudejia5222uGcQtmXs
zvNlToMhL99c32MKaIfyfcudGgdV6SsJXRdp+Fpp0/zB0Bh8m6O8UjSFBaX9
jhWCp9mYRPv1WW5zC/Ib8DaGsh/g1P45VVmSTzmnxvDonzacfTBdX/OoAUVS
TeYtNpC7/myQsq45Fd81Ob2Na21F1dIzhyiJBL7Wr5ouUOzCG4fETwortaFK
RbWdPrkfDmVfpcicHUbzeB3bNSJ16Dby659bQh4oDZ9q2/qUiYbhZd81Hg/B
REqlTHM/Ez6fyrhPXZ6OHhEROjmeg9AY3vt4UYuA5F89pQd834Pxos/Jgc99
gGZ3qc/4CPgVqmnZoFoDYRFy5xdU+8FuaMHwpQMT2qeXJ4yI1UPwrvWCtlcH
od3S9LLoxDSImEelPzlOAadr370yF8ahyIPtXhxMw36PpdsnyXzXvrdcYu9r
Fhi+lwzhOMvG0a/ZItotzTh5acZK2zsAD+849z3mEQtvdDe8j09vw/TReGlz
oUZ07BbcrizIwgxV6Xhz0rd5OR3K+AfbkN9Q/fEWcp9+nb04v2yKhvrCWxwa
z7bjd40gB6uVTPx0/Y/8BMcw6giETcrIk3074Z5zuXwuXCmWf13xmonfW18r
bDAcgu3/wabCaia8O9pmZ86difbs18TGwUHISXXIzlcigPdmsEf1mVL47HFb
ba1+P3DS1cqtF5jwMKNvy1JCNdzS/WX3M68ffGZsBn+YMKF2XOL+Ue86qH+6
2wibBoG5wmp8pHUauMt1hFNS6uFtWQVfzc4JEPY0Ybv+oOGmouLya8oxGKUq
cmDoCQsO3KGIWumyMeJQofGyvc1oVqF6wWYqDBMVdbZ2k/t0v2HYLI2zDflU
N41s2dWEq4y3uVvxstBJtvXdNpMOlMcQrjjBDjxyLXULZyyBF9f8eKj/kPye
v5f1lnw78GBEQWrIaiZuP6T4LD9jCNnBcU823aVgK4/hu5gtWRAXGBUak8fE
zpL3q1tEhmC3E39hQjLZe19VLRe/mI2/75rXXzk5BJlSxudndxKglbKuwnKy
GFourDB82tkPppmSbexJJnDc+y17e7oK9sllUV1lB+BP+QL8UGfC9gM3RPIp
tfB6PfPYCvI5q2/yK2wrnAZFncr7sj/rYPlCylKs3gTIrMsY32jfhdmETZz3
VDQe6LrCTnZjwYLy3sB5IzYWTfNX4p0m3M2TtmDSHYemPYJu4T4sVHtUc/iG
Wivekho/nG3SjK8+ZDtOrWBhkNjri/eWd6Co/772xPgOlLZ7Eq8dRaDdl2vP
eQ1omLHiD1N8FRUjO6hiouT+vJHuaxzxcAgpkqZpcqsbMPHZML9uRAY8H7DY
olvGJPvR49unfg/CH7mZDotoUl/HLoydvJGDX4V8G8RdyFzrH8rdvomAjZZn
v91VKYYmqmaBGt8AXOK3ccwn9RhksSXxRlgVPLZibdx2cwCOhA08e3CUCfc2
Pbx10KEWTJi3hLLch+AVJ0/VnTRSXwsvArmS6qDYhD+qwmYCFKLGck+ldeEB
35FEzaJobJY7aP/wDgse3V29TPIKG4Oyzh6d3NyESRO0G3uPJuA6SkRtsycL
BQ+eqdabbsHDY81n0tjNqH22l83kYqFFV46z6Uw7wj0qD5XSgQv87K9PIgms
l15PXzpDQ24V1w6LrVQU2sDTVkXysd5x8sGU6xD6cL++ff5QA5YZv1Ed358B
MxVXLd98YOJ+wiLfdHYQ3Gw0VEfCmWA+VHxjJDsHH9zjaePxHYIgo8VBJWFy
Zx2OaT8sWAwXjpY7BW4eAMbQJZW5HibICvqsj3avAnXJPdcT3AbAoX3buhwl
Juy9499MbhBwkbDOSQsZgtc7lg/pJ0/Dwe0dS8ee1sGTrWFiUfYTkJP92ehm
SReKOwtt9kmNxlNDt46us2fB5cvRYj9JPscrXEQpnE1YYpdQIzaYgPQ3r7dx
kXw+f9s2a97ZgiqtVTEmwi2opiJav4uThXc69u0cqWzHvkr6f90rqGjeKPRh
TwTZn9dMxx89SEOqorXnjuNUJLOMMbGWidXsgdInlkOopbFVqMSjAd3NjVxu
O6VDZ8RON0oVE5eJLzNd93EQ2NNdzzyeMmFj1tb6cZFcFH5yOvBUDPm7jNqn
fgsS0He9Vd+2qggCErlP8ygMwFHuoMC/nUzICeTNdNSrAs6T3wrDIwegNSJW
7dUhJqDu7gvT/9WCgqpPRQqZj6Ky+SLFb6aBHqBjtHijDmT2yy3f4TYB0oMJ
epW0LgzscZ1JfBKNKpQiqTRbFoR7HJq9fpWNJm38QssGGpGr8dzKS78SkT6y
hhbmzsJjqW+F96S04CZtl2uyV1pQdVBb9uY/AsM3nDbQtGrHO9fOORNnqXjv
5t71Ci8I3H7ZJsKeh4ZNTz6I9/lTcawmzHjleiaG751R8Ts2hDRRLs2jAo34
MeQDd8TfNKiTl5UWbmKi4yNq8tbGQShT3eMV58OENANmitSrXHwngE0dDUNg
ty2ffombgI+GFI7/dhRB9PLjnGJ2A5BdaPt+uoEJRccbvnRwVMGocwv7RfsA
iFT2NentZYKc+gLRPVQDFYIX3YqHhiCSwnY2Dp+GCr5SXkmROqD9N+V76NkE
cErU7HvFS8f+VBKIfjTShZKliq6zQILBWi98nY0Ko70B/f6N6CcV9oNHIRk7
FzieBN9n4csPb+p2nm9Bml7bimtfWnCrS2dNxyKBaZUzX3042pGZtnu64CUV
a+Yc8eFTAtetkbb8Q+9E3Nk8e7mXzDeeqqfawkys3cm33l9wCB1vmRq8fd+I
gTbHxxU0UiFXM31NDY2JAgEHzw8lD8K+IssgO0cm9K4I+hF5KA99n+3/uWFp
CDi7Igo/kDnlMOXYkG5RCDt69bVuZA0A4f6x+ls5EyxXyymLHUfwjC6vnxQY
hDPXX/CKbWdCUg1/duiDGhgpmm6rFh2G/qRzuT8DpqFmt2HXTHkt2IV3x9Wn
TsDHyfTJkTN0VFt+HfYLRmOYylzTRkMWOChtGPxrzsbnXSnPF8QbUb7qm8r9
nlT8Kptm8N6FhfXu1tkc0824f894p87jVty1YUOPxi8C43W/p5s1t+HuB0/1
NlKoWEg7YnLvMYG2pi394+87UeREzwnx5Z1YMrZ012ojqa8IiYXDvwbRY954
t+y6Jqw3OcjINkuBV6l++dReJvbV1K8qDBsErZ6fcTdsyd7y5fpZoYA8fHky
BHw2D0PqpLjUqlkmMIaDrsktL4Qtk60NAh0DYM3muhJRROaU/XeJBwOVsPrY
+2ub5AeB4ZXFlSrChNXvWI6uGjVwsuNAZZ3KMLkr2OYTXtOgLu1c6h5SCy1+
om5vCifA4m9NWeJNOnamd1ifmo5C7ue6h110WWBSu5VqZclGPf3hwWFWA56J
eX5J+vA7PHEsRuOVEwutzmxpOVLQjOpjXW2mE63YMJeiJTpPYOZOu5epeW1o
8SzogV0/FQ3ya+p9Qggsfbv3pmdWJz7q77qesqETj73YOzxO8tHguq2wiRjE
I1FW0+tVmnCI2J2/czEZdDRCb20bYKLqCdrjayGDEHFh6VDZDSa8/EnI1KXn
ofPO5fJOksMQIX74wzybCduuiV491V0A5b48SZYjA/DXbPnG9Hzy87lnT23O
rITrUa2iOScGYX685FH2BiaUPJNdt0euBmz++Mi2nxuG86rxnMnu07DXbvOY
pUstXPXaaHK/bAKifjye4HlAx8KhEa/cniicOr1raVSbBZPfn7py32Bj2K4v
Yry9DZjglqBc2/8O94zbDLx2ZOHxV67DKbHN+J/B34fJvG0YPjdh++0HgSIW
BjL//NrwJit117k/VAwMYNE+BBPoeZ1HdltUJ+65VHiz93AnhlQJWRaJMHEo
XJC22DeIMfJlxaP+Tfhjbcd+PJoMd5cvKp8cYeKqJ2UeGu6DcFXvtMcGUyb8
Slf3nGbmke2Kwlt3bBgU1YIzb8ww4V9oa9EJvwKo4+q1XbE4AN5WfbeuZTFB
875st6NRJUQ2pMxXm5A5yHwboCnIhMmHjIrNK2vg6c6D/pM3hoGjSVSo6e40
dNY+f/1cqxYERVpVltdPQN2v1dHtkXRk6iRsEi+MwgB6jrj8WRboLr1Q2GzF
Rq290q6LGQ146WLwpQd/0/GUhLdViwMLH4v7tJy+3YyM11+L7+q0YVC46/SR
7wR+mFiaPabdhvv+Wi59l+jE+Bz46h1I+s+9GvGsB53IIXhp6KN5J8aOGHOn
bWLi8WTrXrWqQeyuqRNUHmvC/4YcD8obJsHbvTcOXJxk4rh93ukim0G4VOWv
wzBkQnCL9Gfa0XxsTHgpdsJ4GPK3UawekT3QLeRdorBYAVRdETVsEB2E/waG
5vpSmCAxKz/H/b0CuGu43QS9B+Hzi3S1dF6yN6o7zcd1VcObNV/Yi4HDsLte
+2WE/TTYmaXv7thSC/+miotHOydg+ujeOWopHeeVM197BkUhhYeXaneSBT+4
12tfsmaj39jZaKl7Dahgp5w3ZpaJ/b87dnncZiGtLS90VLEZBx/HLWxLbcPL
8RIvnL8SuPVl5RatvW1Y5lmrv121E7Ovnbu5KoBAC91c0T22ncjKfsXW8+rE
LUK/NY5sZqILW1vmbu4gipwHZs+mZky8eWxKr+4tsEq0RR5/YuKm1i3N7eT/
LpCY5Jx/gfSfI0dvG9/JR30xpvV1u2GoqF2ps2uUCTzFTucnx/NhbqfIE1W5
QZAQXGPwLpH07fKTiRW5FdB+UGTnx4hBmAsrv26zggnKRg5crfnVsHzrygme
uGHISKU8XLSdBvnLx5Uq/tZAtvP2w2sGJmBwp6KcVzsdJ7dwGHTfjMK/Hc0q
5cdZUM6ftHazDRvTXAgNe/0GzBkXGhw4nYVaoZefLN5ioRTtc7zEhmaUiu+d
1h9pw/vPjsjtZRN4oPOAnapQG9brc/8L1e/E9ArDBwt+BLaoaVrHmHTi/rKV
jLkXnWgYbNX2iuRTfdtuZlvyIIbeO9G2Sa0ZFUy+JWgbv4WH+56v6//CRBpt
7aUT+oOg9r1Me1abCdY6xFWlyHzs33tZwNBtGJ7tMub7PcgEKR7J6pTCfOC2
Gs17fXwQOD20vqe8YUL9og0s862AX/seq/qQOVjVoztyeTkTVtTX39Z6WQ0j
t9O8hTOH4Z7t7SeZVtPQiw1p3p9r4EqZqvLn0QlolNrsyDlCxy+J3GkfDKLw
yZNNiuuOsUBW5CHXG5KPwL/208ePNmB7d9xP+Zks5NBIaxm7yULv3sbIk3+a
sMji4JfBFe0YD9OKsQSB/os9GyR/tGLSdHAO81Ynvtl/80LmQ/LcM6PVS7sT
rxvzvw1O78RKceKagCgTLRzVHFyjBvFt1/DvTOdmFOg6cVt+OBHOT0/df8lg
4oR739z3s4Og9EU81+EsExJ4/Ie8avIxOL9wy1TwMOzX3Gy+t4/0maJT/jqe
+WDsI+q+Wo+8P7HSYyteMcH/Xojq0JkKeC+/haZSOgiHBhfvZywxoPuD/Nw6
r2owXeeRKlE5DEF4aF+++TRkNJkotLTWgJlssiDj0wTcFqx4kfqVji+/2/5m
q0Sh6x8h81Elcr+3HhY5YsvG+2E6AdI7GlBXeMXkw+xs7KQl9wfZsrB9nfCe
yyNNuOJzQ77eoXZc8e3GOXUmgYISU0e5BltxYfyd8w3vTqyyercY6ksgB69H
z+SJTjz9y1n8QGUnuq973GxL8gkL3hcm8HgQTyVK/eF93Yya99ezeJwTYXvB
v87PBBMlt75aq6c6COpT++9nnGbCkEX7X5vP+VioKOXXHzkMAkrazxbp5J46
v+j4VycfpiSVZm3MBmF7uzj1N7nXZvg1aleIVsDINPVEf8MgZKo5Z0T8ZkDx
2SqxIKtqcHw0PH2gbZj0tcCeq6bTMLBdbr1fcQ1U5n3fWMucgE+lSz0HObox
dW76Bo9kFHpvSFohd5jsz4zqmUKSz/RevoXRlQ2YNHWT0+RCDv57lX7J0oaF
1/e7ypjWN2G+SEnkzJV2nHp+cPogg0CGW8LdEUorvnv4irn0rBMFnb4yMn0I
NN+iIdqoSPp1d/Xct7ZO3Ka6+0weySe3Tnz1F99BfPPyTvB+bEa/nBSNge2J
UO7e7V3JZmLWmvE6S+VB0H++WihZjQnRlM37fnEVoHm75v7DCcOge2yXjS2N
CYKPYvJy9+WD+/Ho5UW3B+FmoFPyo0gmVI2J1vvMfYBv1KqHhvRB0N4YrCy6
wIAfy66tzLxYDU7KKcbQPwxxjeMtBSbT8K1dFTOTasA+48Gc/bcJkHzR7v6O
vxurUplKshuiUPjSpg+8Ciz4kvJ6+YabbIyb8Wi1/EHBPWVOvendORjxfMeA
qzULZYKLxI3zmjDa7b3CG/d2PHbdJHf7DIHJNcu/5Oa3ot3nZZyxbzqRKNMQ
qvcmsElaTyxtfyd+v73iUcFwJw4tHrGeI/lMH/y2WHZ/EGM9TUT/t6gHp/Z/
zX1zYcHphfbL/xmJTP34Zn9i5uItRSa37a3NWM/PcXhj//OZTFWX0ub9dkL3
eKevvmtfyuzx6/p5YPtw3qOQGI5N9pkb5ZsYqm/bBzMYaYkD+7Nz124V/np+
j/357mDzaw9u28tdmDx93rfX9vfN2NtPOx6077+qyOH99K59xanP0uzRL+23
Xnp04+KkQ/aVXJWrZL49sv95++xfBcmr+yeyTZ4syjx9/820qz0PjN/ZNwt1
5xUBw8diWf72Rw+O7XepNGefpLNhf+j0+6Wd6e/2c2TVxPjNPbn/yaSnLyLn
nNu/ok+OZ8rLt/uvKok+nL7izP5Pa9tYMpYDy2OpPQoBwPCZ+qf06TQNYL1u
dPnilKcX9x/uSJwgJvNmv/PRtINKpbf3z9YNj/j04dT+X/+u/6tbuNC+a9oS
m4ZPb/Y/mLM59bvBbfvDHK7cEvbA8md5VnOI4eb9lnYM0cc23LUvjBX91nsO
WA5naskafNto/2+Voqpa4237c5uL59yZ9Ma+zXNrsM7ePfZ7VfSLRJ/ftj/2
6Hd9/NfX9kGajdxRFgftUzkXrA94fdf+vnydyYbIl/bZWfMzH3cesu863HCn
6Mcj+0xlsS2x8lf375SR/fjt57T9Z74pOp02emd/uU5CfgEwfKwv3dsod/3Y
/hqpM/2lvhv2X0pdt1UAGD4LhCOPuE4+uZ9li2G+xZpz+7N39bzdGpdmfyrH
e4OH+YP9F44wv7GZ9tp+VBwi3pyaJnowLm1/fvmGNUBxe3MHyXdA8f2j4hBx
AGrDUgw=
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw9WSggAAAEDz7MRubAXE7m5MRLETWzH//+HcmQWpF0GxGAwG/cv5ZbL4
PBZbwGdzhAIOVyTk/olFEqkK+GPyxEKRQi4SKxV8gUwq5kmUUplaZTCCNrXG
ZJQrtBqFUqdVSgAdoDLoBUK5TCbXqDVas0mrs5h1gN6iN9isKrXRwONLJUaT
HTRbnA6L3uq02twuG+hxg3avx+tDAz5/EHVaXX6XG4bcHgT2eAOI3eHzxkOJ
rN8FBUPhZAJGImEkEI0E0FgUDcZjJrPDDsHhUDiSSkai6VQ0lknH4tlMEArF
HU6/L5HM5+bkYpvLVyvpTKmYyZZLA2I6ySZy5XyhVq1UW1ihWK+Vys1GOVdp
FkuNOjGcTau1dqve6HaaFayHtfB+qz3A2x1iUKt32p3ukMAHk3Gj2ev2sP6o
j4/Jbm80TKYK+eFoPhv1yfl0tlmT4+ViPFktt4vdaTbfbhZLardc7anV+rBf
b46HyXS92mxPxx11OZ8vzwe1v15OuzO9P9yuqXSxcL29X/T58b1cX8/b/fO+
09/P4Xi/HU/0/R/lmWMh
              "]], 
             Polygon3DBox[{{115, 116, 117, 118, 119, 120}, {121, 122, 123, 
              124, 125, 126}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGCoA2JmIP6lfGvq94dv7J+X+nZvc7pnz3Sv4VAH50n7gRJ/
p1QkMufRG/ufnR82rXxx1/6gbNZth+cnBkz8sSLXZIfHb+xF5k2+Nafvrn1z
bPCXH0cGTrzafY7Dmbtv7Pnlsp6+23XHnk9fSi+3eODEdWbZ/PQ688b+MGPy
l/rrt+0Fu/TOGUsNnLjMpATPbYff2C/z4utkzrhtX3G6XbX83fEBE+fpapmp
uPuNfcPknbLtP27Z3+F5WLPr0MCJ/xdU33Vp4xv7s2eF10+vv2Xf6KZ/xWPy
wIl/mXnyVvOKN/byHHkOK9hu2Ws01GpfTx448ZP9rxiuzH9jb85j/vzU1Jv2
TbeP804wHzjxua3c6irT39h7CTD0vVW5aX/TTOiDB/fAiZdxr5bd1fvG/hpr
heHcVTfsS7oCL/ncPjZg4v4TvUQCWt7Yx/1+f8XH4IY9770JWwJWD5y4oZXh
y8uFb+wrp9iaKTlct+dcu7ZdwnfgxC/vEzk5NQFYjxzMOCSdcM0+df+hAtOv
RwdMXEOwtdMm/I39HQ/d1qXPrtpfd3B62nd04MTrkr96PvZ9Yz/vwkd3/dyr
9m6HDka+mDpw4hwbN+z66fLGfp/UHPWUn1fsZeoExKszBk580r9sbQGbN/aX
UtzYZ7ZesX9nGX+F13rgxAdbe3WwhQ8Ag4n5Zg==
          "],
         VertexNormals->CompressedData["
1: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
Xd2SarD4F0Dnz7GDcXz8r/r/AyMidto=
          "]]}, {}}}, 
     {EdgeForm[None], Specularity[
       GrayLevel[1], 100]}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1U21Q03UAHmyRBAoGjYElYhcvDUGIGdMRDwgoYYiCyIuegNAogm28pSfE
DkUgIf5jozPBvfwRCbjGMJTQLn5TSE4xDhJQQK3NTiRdMBF3F3nxqW987MPz
7bnn7e7xyBDtzbJmMBi+y2AuI7BmzSpBmRqj4bGszO8LkHxrsemiuRrS68Of
SaDG1d5ng7ZuhUC34K2gY9UYT/zoKBWmxpxOd17omg+vxvKzF5jVqFpX45wq
VYOx1c6gvyD5j5/vYu7LuKLEOp5vKhvZWA3XV1tMFIz9G2/7+SuR4jjxdp5T
Nkp+fJ/z9zSFKMc9h9KgxLVnmhGfnVkYsM2x6hdTGMvYEKMYUuIE58Wq0cIs
JNbumsstpzA9I42LkqhAn2nb1K7bh0Zv75ffpMugK3x3toilQnJ7BLdjfRwG
Z7b8GiuWgRX+pUi5uKxTzh6+WLAb1+88nuk2Uth86bexvMMqnAqYe3w3Zh/O
cKacGGMUmv3uyUO61DhdVVFgmbeE6r9TVH3bTsFnrTZp4JQahQed5VcOCwh7
yeFhno5Cz6TPzefH1Pgzsqjf3pVPJE9HrPleFAIsSTZ5GjViycH9fKET3lQl
tuZ7UKDDTG2hPRqsDzFNL9rGk9otkxFbeRQyy/TRk19pcMff5OURlUJut/xy
ojeEQrgsaNC1RoMm5lRHoTaFvHK8L9g9vQ7S+HTvsm4NDI5TaR/mx5Pic+M/
bIirg2DinYDQWhrSOavQbTsyiUtRj4tNA4UbjnbbbiTSYG8suRzMERJ2c/OT
56cpiLOmPR4KaXgahWvMddlkjD+easOhYOC+cElW0qC6ntYv/JRFxu1mT7Kd
KTxR1DPNj2i4cwW7Kg+JyIhB8qBpQAbePzFpe1tpBD/YfFN8VExOCjkqbrsM
njtyfHOu0rDvsGqwDEnI2uLW1YYoGe7d7xp+jdmMzN9NohimhByYZ8TGZ8gQ
uFBRef5nGqZHH0ddyy0m20W5riV1ciz+YV9eVEWjbV4fOKQtJr2dlWK/WDlm
1WFNueeWe/EiecbtR0ifmt94d6kenp2XNUoDjVTu7M5J6yMkOs09wusDOYz7
tW6XBDQSWhbkfx0oJV1OPT573BvQGs17o+KlBg6du6WWs6XEK2FEyryvQCPr
U/9SNxol5tFyh/fKyKbI4x3aGgUmXjcGaZNo6Gc+/9rG/AXpYX2SsHRLgf/7
Xyv5rpRzpV4r7fAvHQjyGg==
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmIHa6IauoI3fH/tKpj5Pmeu+xP8gmv7pl30N7aonL
TDO4orL4ln1pX0fN53l77PkyjvP/SHhENfGGg3uOW3PctHeoyHzi/XOPfd66
7f2igo+pJv4sPmZTb8d1+0uCKvOW++6177b1DmrfSj3xmnzD8DSBa/aLmjp2
RC/Ya399XrLX/rAnVBOf9abeJrbiiv1MSfNAoV977c2eHo5dyPqUauJhnBs0
vfsv2y/8v+pSiPcB+09rl8ovmUA98dw7qfmsXy7Z90amH7ApO2TP9PuCf6T4
M6qJ1z8584E59pJ91tZy36cTj9hH/l71JmoW9cRpnb9o7X4ADecblQ==
         "],
        VertexNormals->CompressedData["
1:eJy10ttLkwEYBvAxZStLTTTURcmkiyA1g5UijCcdLM1BppQsFSyaYV6YLE9d
hNhRL2xYRMTUyCITlSIj12xvGAWxCOnoPIzN7fucUknWwii1wff2H9gLz83D
j+fqVR+tLjTJZTJZSihhoRjnBofCh31o1+t2ZFd4EJNa/ji4xYca+U3nE7Of
OpXFnkZrADI+9sSe2BN7sKd/XhtTNFk74EN0h1zVZXKj9EJfQLbVD9Nsy4Ef
abNkOdtdsO7dOOx5OfmLvybBntgTe2IP9sSe/Jcca353+XBqoeynrsWNsDPb
tXdD+yURz+uTj7mp1WE8ON80Tsn71YYKVwDsiT2xJ/ZgD/aUkNGrsq/3YubW
4eaGaC+UlZfP31AKsO2d251uc1JCdfNblV6glQJDW79HRLzkKSB5Ukie2IM9
2FND3G1dWccErBvuZ3VafNiJ5UZFloAT73cNXY8fo6jv6c/qT3upKiHlm2ph
BhbJ04DkSSV5Yg/2YE8Od9JgSeATHrZ3b0qdF3A14nVicMUHq7Ege60oUkZS
2/HILie9CEb21+UIYE/siT2xB3uwp81XlofLw8egEYtjg3cEyAcWpl16P/aZ
C/HU+IV6X2lHmqJeYkntvta69BHJkqc0yZNC8sQe7Ik9Hcq8uPhH/IB5m9kZ
+2YaYoS6b1vdDKqO7OkJuj7TaL7hQZFmAjml/d7oc4NgT+yJPbEHe2L/3/ct
LuXGk5VTlPioTZTVjNEIjFp7T+iPV6nX3ct11H4dxURebuyUUoRBk9kbZxVo
tfq/9YUmDg==
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1k31Q03Ucxxe72zHAMjZucNICIp4UkvGgBsaHE8UeiPJAYO5iW2O71c7J
UMBtEjgeFGH77ff7tQcLIYO1imY6JNZJfEGaJycMQpFHO9ESprVOwkAt2l/9
x5/98frndZ+79/vzufuEC+X7SnwoFMoWL1Qv3KjsesvnBHSYbheNyIToo+jE
++wgM1AxXZd/EwHfHgmzCQ+/h2rs8gJxtwnaTcc6+qYJkDqlshKxAGkybJe/
KTDBk4SUCu5DAlIj0+Q+ZtF/845h4rPku3qwBbdXxF36AF1RMvf+KjJB8sDS
K1/36SHdMJm/MC5BxUXbZFMUE8xIDqm3sHB41RkXYR+VomzpfnV/hxH4ZRt/
v5iGQ+feR7uWe2ToXGNS4QjdBG8yGVXXkjCo+jDM4vfjYSSzJuSmOYwgmhsr
d/h6/TN27iCvDMleXAkMzDdC5tabV2ZVGMhmlkY/uV6GFsY0sS2+RoiRBLs8
Fq/fLQidTz+CFrjflzhlRmAmju8Tvq6D/h2B1sIOJeqmJGk9pQZ4erMw2+XW
Ai/rrR2CqUoUlDIy1JRggLbWc3b/ZR1kttW8kxZTiR5utN64GGoA3lOy2BWL
geXj7D7On0cRMRtgDuYbIPLtS8+/X4PBu4L4eGuIGo2lul5elJAw8Nd8xfks
DGwHq+pVu5SoV0nrXUwhQUQ2CELtGGx7Q97ozziKNswYo0aEJDjd/CfDHgym
09mJ2xeVKNzI1w2TJByQGpy3ruphp/S8mck/hgYbWMdb9+NAxBYOBLTo4aCf
u/SqVYXureXcb6HjkC88raExcNhkm/CLblai6R8aHzPicHjh7GTDZAYO7oAz
HEWWGn23J08fVOH19FPdTWU40C5wDVVr1ejOI1rq0DIGOwVF18w8HF47sEk+
KKhGKz2ZzK+OY/CcMGKqfx6HM/l8/9O+1Ug/oMgpr8fAQ8+73LWKg7izlZNn
qUZqyna5YRWDZk6xqW4ah65bh+7mbq5DpQ/K//jyHx0oMq9HrYziEH5HNKtw
1aJI1i+qiSUtnIqP79lcREDYnLjdrKlFnq1txYrHWrCwe2IdQgLsk4rO8p9r
EZsa4j7rg0Fy9FDFnjYCxGu9Qc/mnkSLUh4997YWQlIzaA4DAePUCxsSl06g
T8khUjXRDJwIk/EBm4Sf/rbfKPjiBJLY6ipZc82Qw3iJrowhoWS1by6ZehJ1
aVi/ue9p4f/+r/Vy1+u53l7r3eFfJnsCtw==
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmIN6re3RPT9dFeztG243nTB7Yv+u4MT/I/aU9tcT5
9qVVzntx0V4wXf3tlpUP7Jl2nfnB9vcF1cQtQlSvzfS7ZC+ZvDmlQOOh/bUP
RrXVa6gnHtu+Vvry2kv2E2cxPj4676F9otqKHLdE6omfOH/UUI/7sr1AY4zK
SaFH9r9ifNm7xaknziv3+3lRwWX7w38jFi6c8Mg+ZGbK2f7jz6kmXrHaW+vI
k8v2Fb66n+58eGQfHssi9DGVeuInbFat1i+8Yj+V56avrvdj++LaCRuZ3z6j
mnixYGj2/p9X7K8tfxDLtPixvci+XV8yyqknTuv8RWv3AwBp6yJJ
         "],
        VertexNormals->CompressedData["
1:eJy1zNtL0wEcBfC1ci5UhlBRKopZGZQh3cRIv/IzBYnyFlSmIgu7ECHdMJw0
piahD0mmNTNtOSJwBUlRvezkspzNmmvpTEk357LNbZbbQ4FUPnz7D+zAeTl8
OPHyioJysUgk2rrY5YsN/Gxo7dJYcLQ/tSrxdx867VHnGnP9ZNUlNF4ttaNp
3mWTKWdJxGFP7Ik92BN7/PMrXt7KzssdwtPbEsOREQNUJ9rzqcVPGyZCBcOo
E/ni3uIOmZuKHP40h+8B2BN7Yg/2xB7sybYw+fqCzIbg6g8RkXutuKG4Upkp
eCmYlhNWlufGxs0Z347vdNJpwbLl4mE92BN7Yg/2xB7sKSZc0yNUjkPXEaWP
qHZDc/Lmk+6scdpxxqwv/+JF2wHr9rh7I1Rccen5/WdmsCf2xB7siT3YU7v6
7lnDRzPG3itqJAt+lF4PSqwJbdT8OGB/UTaLflX4tta6dxS77JhUXjIB9sSe
2IM9sQd7Gg8kF9pP2RByPjnb6PFi3cHOLKFmkIxTOnVcuAf7/qjdgzNGSokf
1RprHWBP7Ik92BN7sCdX9/63MpMDXwMDK0teObF+ty5jwewgqXTeJE1wI8Yv
VDd9f0MqbbppbagT7Ik9sQd7Yg/21DNSsashcxo51xxTVcNj+NWlHEi3TNPn
GOHHqoIZ1B/aozEotVTfV9syP+kCe2JP7MGe2IP9f/9fk6QpuhzmgSI6vveO
eBImc2HqXN0nLNW+KVKVkvhoCHOx0T5fiI/kzfKuh0nDtFT7X4QgNks=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNwwWXwQAAAGDdbTqnZphupsdMjOlmmLxz9f/f+d77QPpF0RwWi3V/572z
OQI+XyARc7hCAZcnEprMdptAKJWI+GKZWKKQS6RKhVSmUvLYfJFQJJPKxHKV
QqnVaAGjQSVXA2qNXgeodUad3mwy6kxWpQrQ6g0Ws8FotcgVGvXH5+vLbHHY
rSab02kDPTa7C7Q73C6L1ekAXT6v2+OHPKDX7/UFYB8UDDicHjfkDwX9XjgE
B8JIMBSNhGAkioTjsXAkEddoDfpINJlIJLOZQDASjsXTqXgik44isWQylsqm
0vlcOlPIF4qVcjaVK+byJbSYQytoqVatoNVGrd5qlsr1WrnSqOcL5VK11sTq
DbzVJ0cU1iTazVaHaOHdDo61u+RgPGoT/V6vTw0bVQzvdAdkt90bEB2y73JD
vkFvOKaPFyaTLRYm0+WCGs2m09lqOZ8s1qv1fjebr1eL5XazXO22o/F8Nh5O
5uvFZr/Z0ofj6XrZbw6nA82cT4fzdUhNJ2fmfrtcn4/t7kjv9qcjc3ncr+fb
8/vn9+8fMPBeKw==
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJy11vs303Ecx/GxQuIUcaaNlNg5LiecOi7n0FtGuZxWkcPWFHXoIJcOih06
LpHhhw7ZqTPOIcpZiagfnOY45TK2nXJcarMxu9j3I6dmddapmE7+iI8fnr88
fnr9+Dp2vTApy5pEIpXsRN7pUyZt5sYvORzar1FVnjNAxyS1SG3RAy6vYwd5
i5oVEFP0fp+43AA15DmHdR4+rxcUsj8GLYLJ/5E57rUBCqeCmQmO+JzplEIn
SRehOa+dGqg3gP0af+LbYx0254w5dAVnKKFD6tbr6kpA8XRom5yOz9+KjBYP
sgp8qxpMIYkEGE5U21NearH5Q+uuuNBOFXRrvaCBS0AE2jjfEYbPrY7eJ49n
L4Gq3/OURkBA01+PzugxDTbn33KTDPguQ7vxT0X7CAH15qWag0x87hnAldas
LMNya36Tj4qAn5KmoCvjK9jcr/VySV+PGt5NRtlHWwiwiqeZExVqfJ5vYY1w
VoCSPsD0pyHYHvrnrrIsY3O6yO8Z304D29mbRFk4gmQj+abIB5+Xtbbe5uZq
oGq7e4PFRjA/JY5PiljC5m2sH6W2sxqQTD+v3ZOLIJJ+4XDRAxU278nPuPQi
SgtkyjwtnYug4GzF1+8TSmzOie9ri+7XAmmWGpjTiOAAV3Fmcy8+F0htqWUu
OsiVUXMyniCI8/M0rSYvYnNxqjItuVYHjAaLWCBE0Es70jTaosDmpY0jctm6
Dnh1/MSxYQSdPNuKO2o5NneWuDqts/UQGetsDpAgGA0Tsjxo+HxhZliLZHrI
ssncvCdDQJFthZ2u+4LN+64mXLMLWYW5fl1LjBRBlmN1yggZn/9W+gvdhKvg
TR8e3JhGwA5ldSXd/YzNnx4f36h3MUBqYUb+4BSClMGlvHDzAjYfYhi9FisN
UMCzySkXI2hOY8S+Kcbn2ZyLH9xNBnCMP0nQJxGot14lM9bmsflu/8Pd3v8f
qgGOwg==
         "],
        VertexNormals->CompressedData["
1:eJyt02tQ1XUaB3DEC7tqChUhtasi1gIxBGhKa+OXJMUbgohyFZWDKShYxGVT
dDRA1HVT8dqamovITTQhAQH7AooItMoCKnc4h3OCc7gpWUrZtMz8n173pt/M
8+aZz3xnnt8zj1XINu+NxkZGRtEjNXqkVGvH+tkU30VN6vTe8zeqaZJyy3vy
mgEkNI2eGT9Kx5jw9RX91j00kiee4iGe4iEev/nNU3anuxyogtr+1ZMzxlTy
2smQX3+oG8CH307LDu/QcGaN5c6d9XpqMzYsLbQ/Q3/Fs17xKFA8xUM8xCNq
p6dT+rJ7mH9gaMrEzCoueWftqrLAAdzsdNq4dKiFaT97hN2+3McjoeFOlTl5
FE/xEE/xEA/xOHbknkPOLh2qDmrKI6Jq6bJv4wvqed8hssHcJftcDb/OMQ20
1gywMdzP7PXn5RRP8RBP8RAP8dixb7FOZTaINy329vg7XmdV6f2VO36swZly
5717Np7g36a+dsDLZYDFN9OWrzS6T/EUD/EUD/EQjwsf/ztx681BJOxc7VwT
mIfVKZrDzSsKuUCddNfxv8ewzy4rf+8vvQzOXdNc/0s7xVM8xUM8xUM84r/3
yj41ow+VJfVu86vqcDHmA9XA6Ea6BOF2cfIa+Ftabp7xnp6f2NXh54tdFE/x
FA/xFA/xUOXn7dF765A9uKt49bJOeE/u9fsxQs2Cr3x/agsooElmsq3VFh2v
OOUP+5zqpniKp3jkKx7jFA/xaFgeG7tkfwcy+wqaduu0CM7Ye1a1ScOEZcEf
Ha/+H8sWLnFtXdDJqa6hbzeYG/hQ8cxWPNcqHp8qHqWKh3ic+NwmOqi2EW/9
88WE5RXdSPb3emlUnJqx8VHqxJc7GRM0br2mrYG11u6zss7pKZ7iKR7iIR7i
cS0y2Tvg7Tr4TnjVwcvfgM/M9Yff39pB42ePiyKtuzjF4Y0HsYX3uDP0pb9c
UPVQPMVTPEYpHq8oHvGKR2vq5un/6M/DNYusju3P+xA38PT8a+nNdMlyPen0
rGVkDrWn74QH9E7pXPTFCQPFUzzFQzzEQzxSjG/d+CisgumO5X/altuHYuuB
jqi5zTS/7G62aUEir1icsRv/VTPj5kb5+pr3UzzEUzzEQzzEI+fwfN+kK9X8
IHvF19F/74M6a/dfU01a6Kru8lkV3Ygzfq6mtjcaGN+dlF14tZfiIZ7iIZ7i
IR5u6ty7gXmfsuLJwlzPkbuuuqcp2fVNLVNy41/PnaND2IlFa81W3eFSjV4b
aN9N8RBP8RBP8RCPoW2XErLKqhHT4V9y0GgQR/xT6uaYlCHmp8f1U2t7MaGk
a9LnNqTdbLcEj5x2iqd4iucWxdNB8fBQPC6se7gm2u4+EgaGXvH60ICsjGlj
vR3b4MzuPxuG+rA9dPsPD3vKGKha3/esvIniKZ7iKZ7iIR7btJ7Gc//TjoFb
oftrZmhh5aOaaXuqC2PGpI5KWtSDjEepnxWOvYSjT9qTT9/WUjzFUzzFUzzF
I3pzYejTkX/u7+l1PRDfikfhHfV+bl3Ij3Bd5eHRjHarg49T7Nrw5L2JQzbv
6yme4ime4ime4uGef3eHqcoAE5vFTSHv1mOxo2v9vkvtsAsqzay9XYq08sf7
+6d142ms9fTCAh2XKZ7jFc93FM8ZiudlxbNP8Sg+pDs3a88gGloXX7XsKsev
nbmWk+cUwtNvguXwmOuMyPMc1TatH2YXTM8G3GqieIqneIqHeIqHkfXV4WaP
flzwneU+GzeQ+HFsq9/FRrYb8vVYV06HlrCiL84PYkW5e9zK0xkUT/EUD/EQ
zxDFI2RpwFPnN3rgS9XR5N4CHP929n6LO1o2B6y4XmogXZG60LR0EN/EhBwt
37SB4ime4iEe4ike7+7KO15ROrLPs18Wh7bt56lz/ets7fWcfNHZNrPyIUuG
bUcfeaEPbsOn084eqqd4iod4iId4igciMxIDejvxrNGpxzXgJofbEq0tigx8
lBlwKMRDy5KicB/7LA3S/zXrkNW8Ts5TPL9XPJ4rHuIhnuIR+mDHhkDzFuSk
Fem6tHX8ZL7x2EVhvaw+dg0mBi1D3yze4FyhxikPo3GN0Z3cqnjmKh6xiscd
xSNE8fxS8YiQ/AzJj/udfPEUj7jfyR+f7mNyWvMdXozcEqnRd/GO16Qz7sEN
/KP6pWdzJx1+WcvK1cFlE9U9fMsQlGS2L+0P6/8fpRnPXw==
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
+9r+0fnNqfD//n++1/d7c37P1/dy+C9HRtXt
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNw2ebgQAAAGArGSGRCKUhe8sWEhJJ2du5+e3+/7e793le6vVrvCwmk+n+
3/bfbLEDVpsDtFhBuxuCfYDd5QQdkNtmBhxOl9djB90ul9vnhZweOIRFcY8X
8Xt9AcQHBwMOwAn5kRCKBLBQIBjGgn40jIbwyNvr/QMLx6IRnIjjUZKIxhJk
LBJP0EyKY9h0ikywTJygKYrmkgTJ0LDHH2SpZDqfKZS5VC6bSudz6WQmH0Yj
sSSXzeTy5VImWywUitVKNlcqFku1aqlcr5ULlfpkqsyrtWajVm816xW+xTc6
7Uaz22m2et0W3+61O0J/Olsone5A6LX7w2F/JA2G0lgYjMVubzgYidNJXxBH
4ng2HUvyTBpN5EScYmfycnE4Xi/G5rCfKytVWWirxXKtLefqWl0Z+krbGNp6
u1mr+laezJe6sd9Vqg1+q++Ou/35tD9czpvt8XDcna6n8/12vjzul+vzcT3d
np9f3z9/DGRK5w==
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJy11t1L02EcBXCbpLlZgaWTBWXojFyiJTqZyTedrtiF0nBKLVaokzE2X9C0
Fxe6IDVfwEyXrMJC04vacIm5BoqouJnOYelsrrE5N9t+jxIGJhna/ojHi3Pz
uTpwbs7ZwjKeiBQQECD2J9Af1qaYsiX1gqq6eEN3Yh3IuV006aAZcDm1lsVr
HvGCIJCrkds8EGoJ3U+txecMZq+8juyDEm83+WWPB55fGOK1ZOLzBTeVE1zg
g2/7dVlasQcuFYlPakPxOajKJo6+9QE371e286IHKjrCm2Y189h8TX6bXv7b
BxTSjEOy7YaGXf10Rjo+p+XdiCkGAhIdrJto1A1z9NpVwYIJmzcWEMFD7QS8
oUbIDAo3nCZerSiE+LytlSo8MkVAWDiImmPckNYtiFX/m8PmjARPXNAmAZ3n
UZ9kcg1qrrO2ovvw+V3SRMp9GgJTY+tm/C2/R3amMzn4/Gm+jLHDRlAScijH
/tcFOqOI2b0xi83vlPTR30kRyI/xxu6pXCCpUD/QdeHztX5CaHyB4JpQmfon
yQX2c5XpNan4PEmyX7czjqB6Xm0o/LoKSsMH9WPHF2xuu5JfL1hCsL7FTbHn
rILqp05CVOHzbIbzff0ygsSQBTNnxAnxD/nlbBI+f3LcOKmwIihtZ1YuMpzQ
q9c38JUz2JxbOZitsSFwtpkyFB0OKI/jDQii8bnbvK0dtvt332NH8g87IOrq
R+upT0ZsHqi+3OR1IJifWkxuWbJD7LOsCHMGPl8JiogKcyGomqEWkQd+QApF
Ruk3GbC5PfL7mMuCwPJoWccotcHn4QRrLh+fp+ks4z16BPQznOTdPSuMetNe
Z05NY/OD/j8H3f8/TA37Bw==
         "],
        VertexNormals->CompressedData["
1:eJy11PtXDgYYB/BX7qEMJxqSWyp3STHtK5qJ45ZFxaahMx2X5LKJOLlkLolc
khhvQpO8WGUt5buiVItSSJfJ21u91VvvazaXdLDOevgL7Dnn+8tzPuf72/P0
X+Ln5mOkUCiWN6d1cw7qTBt/dTyKXu0XRvzcJpLK1XN8IpoMQIDnSqvcGm4d
rMooGF9JhYx4iod4iod4vPfZ0V1TuupD6JF5dFNn61P43qG/SVRzv5Xtiu2n
jHS8sN8iNdFazevRKeY7EvwgHuIpnuIhHuIZMvn5H0au8dwXa629lpKDvXcP
qTbbGfDMef2Cl1/qOTBgS5Ll1ftccqD69ObgDx7iKZ7iIR7i4ZHkl78nNInd
eufFH+9SjvDVh46U5OkwuizkmM8dA48WuJ0p3pzE8MmfplwviKN4iKd4iod4
iId7kgmPmF+j89sLWwq6VsN7sUNqlJEWoQ6ephuLDMx+XXymQhnB2A2bdq2/
lETxEE/xFA/xEA/f6q8n7r5/g+evsEQzqRbJtkMWn/lCg/Mdo+Y9NDWwwfZw
bOOkXM5tVaOp8PrgIZ7iKR7iIZ5tFIVR1rezePv57IiDL2sxw2lQVI9zalj4
THt7RVXBnfRbnxqk5rubZpM722kgHuIpnuIhHuK5zOm2/5hhpOKEes9hxzo4
p6lGhdersaXHtMAZptHMCHvX87RtBd1rHujaz62DeIineIqHeIjn7i03Z0YX
Z8PbZm9hRe86NN3brxwxX40D6QnWZoazUGnzJg6qVfPslUO/ewbW4YcWz1kt
nuYF/3mKp3iI5zarra3XTNIivaiBLlZqXJ7e85uQHaUonetqmZSfzHqPdnes
26k53PjVaidNHcRTPMVTPMRDPP8Z6++nC9bDPquhQ+KTW5habjHRMCAfHRbo
1y2ySafHyLKsoVfLWeN69ObuVTqIp3iKp3iIh3gG1L52v9/TALtXbRZMyElF
ZqSLYtn8HKx06lNTknCZSst+5n3Lqzmqu5fn0+nVEE/xFE/xEA/xfBTsNcbO
UY8uT/ua7xuQjqp9U0q+eleAAXaDRyb2iEPxhpNjxp7T85LZsZsTzQognuIp
nuIpHuJp43Q8Th+gx+ydeblFMenYVXTwk5yB96A83q9xnG8mArpkvFnhbeCq
TMdhQ3OuvfcUT/EUT/EQj1YqR98wGwN8e3zXrXRbLppelG9Mdolh7YTDcWvD
c9BxY5NJryA9hwyPfl04JJfiKZ7iIZ7iIR5mfy/M9x5dh4X2/j6N8YXgWiOv
5cblHBOvTOs+KAdzHddeVnyup5MqMHKHez7FUzzFQzzFQzwOnZ2a6WH1BOc+
u/MqxPchBi2tr3Bsvnu3vRcfVT3MwNK+uYu2v2zgav/ZqeN/KmRoi6eyxdOm
xWN2i6d3i0dQi8fpNS9Ouh68SJeAvLKYG8XNf/fAOAUa6JZ0VxkauQ53XDzj
DdMaaKcZOattbjHFQzzFQzzFQzxUc2qv3g1QMzagV9WLjD9hb2X6i/GMak6r
m1rpkH2P7JQdbDavnib1qg5ZFUUUD/EUD/EQD/GwNLZs9WphJV2CtYF+9Y+R
33uzxWBoGPtjQbrz3lJOsXlw/Nt7OpZNSG5nZ5lH8RBP8RAP8RAPvVfaI/PC
B7QPeR4UsuAhblQ16V31OvLx4peVPk9o2xDzm7OFjm+ynoU1pqVRPMRTPMRD
PMSjrWJo61KTcxjYtmxe8fkr8Jo/MzhBa+CRtQ7aTvs0THAYWe7lWMsRZfu7
Jp+Mp3iKp3iIh3iIR5+2QzeeDE7EBOPCTnFVEVCa7DoR9sTAQPsSTQdDFRue
XXDhMC3d/grr7useT/EUT/EQD/EQ/7/3Z9zyNzV2qETg9bBTKVk1TKxShUdn
K/mx9qEx6TntBmsRuDsyPahLNYtHxxrXRJ/Hx9r/CzX9N2o=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAWJmIP6/Z+oiT7EJDiKKIXuF0vIOlC22d128vdVB+tg/
6V/MExx+C+5mDGUoPPC190GrcXibQ6Cj5uumogkOU7OmuR3KLDhQUtF47PC3
NgdTiwOFl1omOLhf4nJ/a5ELV9+eslPl2pIeB6X/KsKzTBMPTGk/nSLa2Ong
Fbzd+1Ntj8P+MlarSxapB2oettTzf+x08BSyTdPt7XFgu7dfiKs2+UCOzErp
U1+6HNqU7e0Ft/Q4XDqz7/riz3EHWg69Z7jQ0uVwSjvHh+N1i8Oz6aWzKvrz
DhhI7E49wN7s0CuVVaxypMXhEPvqhAjPwgMSRSUNu8qbHXpuvu+Nv9zikGrN
4VuSXXCAY+0MmdLqFoeTrz6mOf9qcdD9r1+84XLOAYXg+4zV3C0OtA4fXPbi
cicuf+EKBwC++uRF
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {13, 14, 15, 16}, {4, 1, 
            5, 8}, {5, 6, 10, 9}, {6, 7, 11, 10}, {3, 4, 8, 7}, {8, 5, 9, 
            12}, {7, 8, 12, 11}, {17, 18, 19, 20}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGAQAWJmIPYun69RfvW1vQ6r3DIl67P2H5dOc2UWP2xPLXHF
dyXmR7e8tu/cunppjO1J++2Ht5/wTjlENfGzhYx1VRNf24dWLVbOf3fEvl4o
tSZp8UGqidM6fGjtfgDBX+DX
         "],
        VertexNormals->CompressedData["
1:eJxTTMoPSmViYGAQAWJmINaTUmj80XR3v79o05rpt2/YL1y8KntH+8v96rop
MXVzn+yPUc993FH5Yj8DFEDV20PV74eqt1eCqLdPgKi3h6nvX33+2UKPdfaf
r0YlpYVdt394Obapc8/b/afXSM6ZGnhw//3Y6+vast/u32ant//14uv7oer3
Q9Xvh6q3h6q3h6q3h6q3x2X+caj5D6HmbyDT/NTdETsOtD3ef1bT/Etl0QP7
pfILxD97PaaauPv3opmGy97bJ/6L//f48aH9k1a4a7guK6GaOAA7Ggq7
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwB0QMu/CFib1JiAgAAAPAAAAAEAAAAAQIIBw0OFBMDBAoJBQYMCwIDCQgG
AQcMBwgODQgJDw4KCxEQBAULCgsMEhEJChAPDAcNEh0eJCMODxUUEBEXFhES
GBcWFx0cEg0TGBUWHBsXGB4dOzxCQRscIiEZGiAfDxAWFRgTGR4cHSMiGhsh
IBQVGxoeGR8kMjM5OCwtMzIiIykoJB8lKiEiKCclJiwrJictLCcoLi0pKjAv
IyQqKSolKzAoKS8uKywyMR8gJiUgIScmLzA2NS4vNTQxMjg3MzQ6OTArMTY0
NTs6NTY8OzYxNzw4OT8+LS40Mzk6QD83OD49OjtBQBMUGhk8Nz1CPj9FREBB
R0ZCPUNIQUJIR0pLUVA/QEZFQ0RKSURFS0pIQ0lOS0xSUUlKUE9FRkxLRkdN
TEdITk1MTVNSVlddXFNUWllPUFZVUVJYV05JT1RSU1lYVE9VWj0+RENVVlxb
TU5UU1dYXl1YWV9eWVpgX1pVW2BbXGJhXF1jYmlqcG9fYGZlYWJoZ15fZWRi
Y2loY2RqaWRla2pmYWdsYFthZmdobm1lZmxraGlvbl1eZGNqa3FwbGdtcmts
cnFtbnRzbm91dG9wdnVwcXd2eHN5fnFyeHdzdHp5dXZ8e3Jtc3h2d318dHV7
end4fn1QUVdWeXqAf8nK0M99foSDf4CGhX55f4SHiI6NfH2DgoCBh4aBgoiH
hYaMi5eYnp2Gh42MgoOJiIOEiomEf4WKiImPjpOUmpmMjZOSjo+VlI2OlJOJ
ipCPi4ySkY+QlpWQi5GWlJWbmoqFi5CVlpybkZKYl5KTmZiWkZecmJmfnrSv
tbqlpqyrm5yioZ2epKOam6Ggnp+lpJ+gpqWgoaemop2jqJyXnaKjpKqpoaKo
p6Slq6qZmqCfpqetrKijqa6nqK6tqaqwr6qrsbCrrLKxrK2zsrW2vLutrrSz
r7C2tbGyuLeuqa+0srO5uLCxt7aztLq5enuBgLa3vby3uL69ubrAv7u8wsG6
tbvAw8TKybi5v768vcPCvb7Ew8HCyMfExcvKwsPJyL6/xcS/wMbFwLvBxsXG
zMvP0NbVzMfN0sjJz87Ky9HQx8jOzcvM0tHNztTTe3yCgc7P1dTGwcfM0NHX
1tHS2NfSzdPY09Ta2dTV29rV1tzb4uPp6NjT2d7a2+Hg19je3dvc4uHc3ePi
3d7k49/g5uXZ2uDf4OHn5t7Z3+Th4ujn1tfd3OPk6unl5uzr5+ju7enq8O/o
6e/u5N/l6ubn7ezq5evw8Ovx9uvs8vHt7vTz7O3z8u/w9vXu7/X0W/jRzA==

             "]], 
            Polygon3DBox[{{247, 248, 249, 250, 251, 252}, {253, 254, 255, 256,
              257, 258}}]}]}, {}},
        VertexColors->CompressedData["
1:eJzN2P8/1HcAB3BcHqipXJnloaLHRELbQ/my0euidlrSEle+3DJDnV1ZefhW
w5Dydb4sKXZKySPbsD18m1l1Xb7kS/f53HHuOE4ews6mJV/uMYz5L9799Ho8
nj++fnj98LIIifQJ09HS0tLR1tJirCZyGCoGV4oHFiV5Y/ktWAjSLAUUj4OU
TwXmqGNMpZiw2XWtOakVzlzHdJNecl5iYzKnlkuwc29jQv65NsRwozf1Gk4Q
83/zbN48zZXAvdx84GxkO45TZiNfeZHzUxq3fwRsCYI2ZzqyLjyD7YGWakYW
Oc9sPDiONRLsymsL1g7pwL6k24LoVnLeHHtkaERIY34dI0vk0wm3h5eyJ1bI
ed1it3lfIg17PWF95/4ueFS+XnJw+ZOYVyV5h3a60gjXSXghtemGZ2H4uW8v
kvN3Ymb6IgxoSPbbO69jPYfr0T3Twvvk/IoJPZimTWNRf3l9bYoYIVN1OaVP
yHmO73TKsVkK5bG916U1FG6nbDW9oyTnzEvuXt+PUbCK8jOMP09DaXK1omyO
nGtXOR8skVFAfVH7PSMJ/EWHC2kjNTGfHrZ3vddKgaPpTxbXSSDnG15ZsSPn
4dXviubqKdh35EWt+Epxmf+h6sfD5Hzwm2W2ZwUFvRJ22AdzUmzj+zlzwsj5
S7vErAdFFLY/TrYXZPZAHhyUYplEzqdU/4n1Myg4jTZrDMx7ke/3ZffsTXIe
LNhxwC6ewibm0d+MRL3IPt0aN11HznsD2bXHeRSmWKq4LaEypPOsLF/R5Fy5
xBhNDaCgL3qzkbsoQ/FZ/pP1f5HzEYGQ2XCEwvseepV3Cvrw85lfuXt0J4k5
Hdhk3ciicN0zQfjJTjkcOAuKaTNybnX6EE/2NYW26Elduxo5kgvd9bONyXmI
RvBs7X0KD8s/5zd4KNDB5H2cZkjOS3PnrVj9FOp6pFIoFDDKyz2fqEvOrfbZ
Fi2uofHckvdIEdKPrmmmhfaympgn7uCantxK42XsSuWFqX6knbjRkzpPzj0D
Zm0fOdEQdf3QUJU6AJcZTUbYK3LOLMiCpQ+N0u0fPVVvUeLvAn8We5ycW3sL
mjbyaVzOep0eXqUEMm9qvFXkHGtrHJbSaARpKrxHWYMoSJZXc/rIee6ZQ8nW
pat+NelWZOcgTnKjxibE5Hy4RSn2bVh141MvF08Mwcxlg1l8Ozm/y1f8lE3T
MK9w+my3eghKnwwO7zE5D90sS2+ZXN0BR5M/AhJVKOYz8v0byXkwl+PixpCg
Y/K9qlsGw+iMGPi0p4acC8O/W4jbLUHtNnnZsYRhNKX8viGigJzLbsTKdAIl
+MJNdDFmZhgWXtVBKj45V7cF/5KdKYFedV+ZeO8LZBjfrfRhk/O37Q9/2/r5
H8twfGQ=
         "],
        VertexNormals->CompressedData["
1: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
4uMyBrwtUl55aU0hHNRM6Rw+z/q/7f8HMa4LKw==
         "]]}, {}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
JcUqQkOcJsO6qhfZXRRQYgoxnjiXb3Q+jC+i2aRvf/5DX08KUr//+Woax0D3
gqZD4ThfJJ6a+xQKUXB138TuziwGLOeow3QhNunlOxP8dSgOugfHdRXZONe0
X90Q0mSTS7ZqL+UUKKj6c3BPbwQDz17W7lHOZBN6tXRrQRoFPv6vb+TYM+Ah
eTOjQIwmHbIOpGM2C9JWB9TsVmNgmiDbXAz55N/xmxRMxn3gscXDhYIMlE+c
P101SpM57SamcS9ZsDjd5FgjcjjRZaaYsziLBNxc6P9ikAWWV72lA0dx742N
qpMcp4m4s1q3xx3cS0sahqxFGTgWaJJE5dOkqnSgPcGNBT7687zMVzJQuMTp
zi4JmvRoagvkvKBg9U7KOwjn8pjmIcHBHDZZlin1wN2DAp72k3Z3kY+Nsc/J
LSvY5HyseUoP8imXqDooms2Ao2u7apAom2zK9nfN+B0Hcd/Sefcin4tXuel9
uH+Wjbp8FEA+9vyqyumRDLjee/ogPotNZpXnDnUfpmBYf9GlZgfMEyKi372Q
JpGLrnULCbLgmPn1YUsNBjSLl19ax6XJ2BG7g1YsFihbr09goc+fvRt8YOsw
TYSkT+UGdLBgfJVmJYUcpseNaJxZlEVKlt3gCfnCgpiFEQFSE1wQ/CT1sWaE
JjXHfe0u17Dg1NAtl8J5DBzeHyt16ghNWpTfKkY4saDsfvThST0G5l3yml0q
SZOnKnoenKfoD1e71rNwLhslm2au4bKJ4+n8e47uFOyv3HLdkmKg1uvvfTWc
v2uVzct1Z1NQUueXthH5bD8ZIdYlhtxkdc20h+NgSe/S1ovIx2ONg3ujPu7n
R5MHvslT8GvWsw9aB3BPqPyu9CaXTVhSItJqKRRINdLHTJ0ZWKtUmRSI56kX
pFQP4FxoctkcKLScgaTG/ekn8mhyfaNSyKMwFrw3WzPigu9e5jQidfYHTWZd
iDKzbmBBdYFI+7e/XCD1202eLMgi03tmKJa+YEFP+zGxYF70ySpXZZ5fNOE3
7tL1rGDBrKLKZUbiDLhE8a0dQv4Cy2+3uG9igUKffVeAEdbJ67Cji6RpUr3U
bE7RI+TglidSOjWXjS4d+VDEJqQrv369GwXuIWVJDiwGmArt2W/N2CQwcv3Q
A+RzWPJp+W3kE7Pmbu8lGTYJXXNj7v6ROHDu/m+3CY08bVsmD69hk7D+j3xX
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
4cjzvnxyTDfeK1gb+HtRL62X/9GMulhKpnE/6r2e4j3bUP99OmnuXNR3TFdR
34h56r2NAp5j/qrjWkoh+F5DO5b6vUP9yebPF+rxPEO/jkltx3MO6nRdSMZz
Wjed2FuBdTX+edlef/QNXc0m7QV4356UqIcK2I+9djprpPC+b2MHk9xRT+ST
nMxG31ixSTCqHvlkS315aIe68OM1UjIY/37nCTcK49cW27z4jflXPFqSU4r5
Ffz/rl+K/NcJ5uYwGC9pUjc26UOTlAUDob4Y33zgEz2lP/ljx8eD5zed9jt6
Sm8fPJ05pQuHFAtO6QMzfeOn9LKOiIwpva19SGhKf6b0MGFKt/xc+j/9xL3q
/8UXDt2hpvRcF1n2lH7ON+p/+R8pyRyc0lf+Ppw1pW/49P1/5/k4cCp4Si9P
MMyd0tMUvH5M6VrTju2e0k8Jh3GmdPsLYl+n9NiJ5T5TeqfqSe6UnrX51pcp
Pe9V8/YpXVvi4P/0G1v/9k3pj4Q7faf0j2V/8qb06hsG/8tf+Cp835T+////
5//9/z//4vYvzv96l3+947/e/V918q+6+lcd/qtu/1Xn/+qLf/XR/wEZbqXb

         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2v9PzHEcB/CPyHctJWJEl9IX39MpX3qpdifmazd1OSTWRMt32uLqnHJL
KvM140pR8zU137IUtYtp0nx9pa+me8uOlFwbdXXeG+/7G/rh/dNre/z6/OX5
3F7OW3aFRFkJgpA5QBAG0usZv7t4gh1C5amsld09elC6OASqr+uB+z8Pfz1E
1kXdKUr3I9CkB23wdnHDNe7MNe7ZbTX2CHHzDRmp1MtiSz3F3C2u/1AtSnZA
8GzweTOxVw/mh1H2hnzuzLXeXmntjggZrtWh0KeHIyse6Nde5c7cto1E6iYj
hBf3RCQJBJIPhGmcs7kz74pQjNg5A6GtUb7XxppA+vMLL5+e4c68XCLdVB6M
MNbD/rzIhkBWjFOYOZE788mhMe+FJASHkvzG184EAm56pfaFcGfetEoyQ1aC
0DE8ca73PAL3cr77/HHnzlyqPrNr4WOEa62jN6qoHzObq4K5W/z2/ZYil1KE
zbqrmmrq8o32mzOncWd+eKJabCxDqFFWNWzzIWByXHB8vht35uMNZXC2AqGg
w0FzSUxAelLTdMCFO/N1yb4h+AIh5sOtems/Apgg0nRO4s78RYlXnKIWgeTU
JdUuJtCrkNd+s+POfE57/KOgjwjahNg7rv4Eah7FxC7kbvELoqoerzqEdQqh
bi/1nHGJVqmjuTOPTolWmeoRdGPcZo0CApK3edM9bbkzHxSWl6JtRsjV7PkY
sIRAxvJfquhR3Jn7dzpdav6CEBE7dObNQAIiv3QPMoQ783zXnU3PWxHGLb8o
/03deC6nbB53i9uEl04p/Ep7o9vMo5IgAs+M92RJg7kzb3yiyFMZEPw/yWqb
qe8orFe6WHNnHp+WWeD8A2GSLFs9RkJ3/TSPN5FW3Jl/ftraMawd4d2subcj
qR9LXrStaAB35suMYu9O6idGVmIBdXnLapPA3eKOivcPK34i9FQapi+T0l2f
ddDtsrmF+39XpU/tvtGJcDdXGXaO+itTSkl7H3fmpHzfotO/EHYk2qpbqOeu
164B7hZf2VWRcMiIINpw5dbspQT2FxeS9F7uzO+725Vv7UKo8xWjkrp0rC6+
ycSdeX/7t+lv3t/y6m/+Fz2Dx10=
          "],
         VertexNormals->CompressedData["
1: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
DOarJj5TuZ+34/Oc/Ji7yqc9+elHP1ttkc/8kDfzY8/7PZn8lNM/KXyfv0A/
b2K+llbJJ5z5Wo3POu5nD+brffrZ8aF8kp/I51fuQ3vun3gn+Wynfz7kfRrK
fN1if52IkY83+6st/eN5SD798HmP+RrzQD4DeV8s5H1aNJJ+5n2aECCfqafl
M28f+eF96vSK7z+p8llEfmauk09P7p+T9POWX+VziftnL/vLdbl8othfS/Hx
K5FPK3w+w2cc82XJ7zut6B/LDvLxID+hzNfgCPm4kZ+my+VTe498atM/V8hP
LP1Th/wY6OdP+D5vRn42kp+jx+XTjfwk4tO2UD4lKW/ur1pTuQ+Zr7H47M2T
z0T21wZ8egXJ5wg+Ea9/v3gsH/8K+bSPls9wT/l4NpdP/5/l86yLfILK5POK
93vOAfn0eP1+X8H7axv3M+93Rye+z2fIJ++CfH6nf3yYr5fb5NOL7xvPVson
hu8bHfCJYH+VpMmnmvwU8vvFCHxi8VkdIp+75Cea+QrcJJ8GzNdi+iegXD4z
uH8sj8nHyP6a1l0+Tenn2m/184+vf7/gPhzM+2Ia+8ub/ikfL5+D3eVzMks+
H/N9w7ODfJb1kc9H+DRmv+9aKJ+Z7PcB+Cy9Kx8jPr/g04jvhz/ic5R+/uc2
+YyknyPxmeEhnyH4TMHn5yr5+PL+OvSNfLaPkE8bF/lUMV8z/iGfGU/xoX9C
+f2rF/1Tl/dF7Wj59OH35Xj6x+2ufJ4wXx06yieX74dBgdyH6+RTWimfkgPy
caefKwrkE0w/b2W+VnvLZw7vi7nk553h8hnKfJ3j/RUbIJ+5vL+sa8tn6xP5
HCqSz3vH5ZM+Uj6D+sjnFPvLgfmqVy6flfy+HM37/RDz9Yx+7rVLPj3p53jy
E3lJPr7kx6+TfKomyMdvq3wOc/84DG9g8tkZ+ubvy6cvyecZ/VNCfvaPlU8Q
+XFif03oI59eufIpzeT39xXyGVciH3tz+TyvEWjyufxIPuVR8rk2ST5LGspn
B/srz1k+n5by/xP6y2dXsHxia8nHnH4+Sf9Mpp8/p38WnZdPAf2zH5+r9E8I
Pnv85WNnrvwkHJSP3X75NHfUfXgjUT5ruQ/bLZXPde7DrtbyCf8zzeSTnycf
j+vyaXT+Ven/fNbjY8X356Ba8snl/f71Bf7/hrN86vjK54M4+eytLZ9syyKT
zwp8Mn/g+2pN+cxlvubckM8OfML5Pr+7RD6RfJ//0FY+51vI59wu+byaI5+U
MZYmH+94+Vgels9OB/n09pdPWL58mrSVj0N7+TRpLZ8m5qkmn8QC+XxC/9hP
lM9L5mva6/fpI83XxUr5VLxjbvJ51Ug+y+t6mXwcw/l9MP1Hk4+vvXxesr92
P5WP76tRJp+TX8inlvXfTT427C//DvKZXb+nyafyd/mcfZffv55+afKxDZVP
oad81oySjzFRPsvj5DPRV/N1erh8mufK52+rDCafrl3kE7rI/Wa+2z1D9YHA
ihYf3zWmrc+pWtckz/j/v+vv3xo6XPnr78aWZ0LK/vq74fvDFTXWN8kz/P/v
+vt/ATu+rjs=
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJzN1es/1IkXB3DGJS8U20iplG6zLb/QhZJqT8mm1MRsoRAjZqkm6xVCurjM
/TszXzvznZmikuSXH7Elqd34HUvJlEubsdgX65Yty5Zqt0Zh5x/wfB+cJ+fB
+3XO5zw4S6LiWTE0IyMjpqFMDNWijZ3T7qgEjaUlk/5aiMW5svWOdTLQuyzm
uqYooP9S7GDnaQIj/GcW8paSIGMfGh/zUkDsbFqnXkggWT/kuqRPDnqP393C
ryigaGzT+q/NRej/nmG286MUWtrcO0x3KCEsvCefSOGh56cL7w6mEuB9eWzX
Vp4SdC+3lx7j8jC6uXmmbzcBfcf3Ju+KVAKHr10WzhZhGe3DfYazDKxazZoL
flDA9/O/+GHZKwLrJrKa7ErlcNnMN5STrgBP2U9lPuMEUi4Bt5395GDV1UQ+
HVBAInfC+uJJEQYcIsWsKCn0pcz1ShUpwbnzUnL7Sx56HzZNi+6VwB6fjpLK
BiVcjTHLvNPDwziPDQrmdgLezvb8paZACetoEn3RzyKsiGNvc8+RgmPiiOvc
CQWcUb2UcyOl+Ch6lLWILodbxS73u2oUYGqZlS09KsUL393zWlcuA8czt8d8
GUrY9rK6f+iFCPc/0NuENRr8hZPnRx8r4cO+iN1OoXwELXeKu0MCEb/XWDtb
UpDQ9yDYKICPx/OuzAspkUCdJkuhW0OBuCH7/M5HYtTtfl4h8CVgVO/1xyqp
EtpCB9xsg2Q4vCOhPqlBChluqSljTCUcbElf7s6W4f2kzSWSw1IYNaGVhd0x
3L2sKlPUI8aT109nVJw2+AX+QaZhFDDnHxj5KUCAUTfGvn3wUQRuXOtGuEBB
Q9H/3xf4CpA8u0JcHiGGX/4aHoi4R8HXqekO125I8ACDyu+0kYBx8BXvu3QK
Ls38tfyotxyPL1lysyGHAIrofXRKp4TlGYmFkq/kCHtH1d2rCDBmx00ObaKA
HVlOe14nwY8Zq46b+Rn8qVtFsn4K5j4JOLbIU4hD/Cvhcx8KwUd7wuGxkwrI
kKqTk85CtDugSzZ2FsHE3xuorzarYO/MXN05GYFpRn6lW3pF8HnIq5FLagqa
Wj9VLptFovzjs/v/iZLAj1LXtKgDFJDind9X0Elkf5F/ddukGD6PqipvQgrC
3zXVYCGBC8N6U4/MM/hGxiFJHBXQI+NXjtuLcAZ7X1y6SgBxj2u1NwtVQIzo
1nZZidBjrTCTMy6AFo8ZW0OfqMA8fg3/aKYUK1+VLHqhEoJeVa2pYKjgeobf
LAchidrh9W7t88QgffJpxckXFBz1piyKpSTmzTO1H7ktAn0+L7R/rwrsgmLi
SzRSDPbfPkJvMfhftpiI/1KBtta8c9BSjNsC7v66Yg8fvC3J5Idr1eDD5A7W
T4nw26Uj72xu8mHI/9W5gUA1uFU32NtwZBio87YmDgvA9sa1Du9SFVSvVLQP
60nktDYsTHsuhGv9gzFTXBWc6/+tNW2KxA2TChMyQwi2VdzcIzoVbC4cn2Km
y/Cte1tnVa7B31/lM/uUGt7a5MUJ/xRjj4dfY6MDD1hOKXeY99RwLI+WFDsg
RmuL9P6K0zwovhz84/l+NXzWqcutDZOjeWt6ZKI9H54ZzaK/2aSGMs/5DtuT
cnDBY4uEKI0AvvHck185qYKE1xx6W1oOjn5oC05ZJ4Bnlu06J44aFqMFz/iE
HK+7zHHNZxr84sVnHllpQOfyvz83Ppegwl3keOtJFsxJ7H1tuksDzLu24/O7
JFhLq/bMc8+GhObA396v1EDlid1rqtrkWM/6zC49kQe5bhbrA7LUYJS9f3DL
zRzs3HNx+ZG/+eAWs6Oe7quGus0FPc13crDkVJzVue/4kOvVqj9TaugfPLvg
/bAcOWXFff8tNfgdDgUMlgZSHzrx3MMJDKxwfHrPOQu6C7rsDpMaeMMSkLYs
As/yAoevyrJg44S/SVC8BlwF7OggBokZumsNWT9nQ/QhWmhZoxpYT8lyr9Ec
VLWu7kjYxwe9YuuLBIka7CXdxY1vcjB2cqJG8JoH0bFax+43arg9Ph6SvJrE
Zau3UOWW2bBxht3DbI0GnNjqBQwdgbM8b2XXCjOh6Gnbhtp2DahHJxjmWgI3
WQxdLBnJhH/bv5huzun2mi6HaXObJufp7vIPcYysfw==
         "], {
          {EdgeForm[None], 
           GraphicsGroup3DBox[{
             Polygon3DBox[{{1, 2, 8, 7}, {2, 3, 9, 8}, {7, 8, 14, 13}, {3, 4, 
              10, 9}, {6, 1, 7, 12}, {8, 9, 15, 14}, {14, 15, 21, 20}, {12, 7,
               13, 18}, {10, 11, 17, 16}, {5, 6, 12, 11}, {9, 10, 16, 15}, {
              13, 14, 20, 19}, {11, 12, 18, 17}, {4, 5, 11, 10}, {15, 16, 22, 
              21}, {17, 18, 24, 23}, {18, 13, 19, 24}, {22, 23, 29, 28}, {23, 
              24, 30, 29}, {21, 22, 28, 27}, {19, 20, 26, 25}, {30, 25, 31, 
              36}, {24, 19, 25, 30}, {28, 29, 35, 34}, {26, 27, 33, 32}, {16, 
              17, 23, 22}, {25, 26, 32, 31}, {29, 30, 36, 35}, {27, 28, 34, 
              33}, {20, 21, 27, 26}, {31, 32, 38, 37}, {51, 52, 58, 57}, {45, 
              46, 52, 51}, {34, 35, 41, 40}, {35, 36, 42, 41}, {36, 31, 37, 
              42}, {37, 38, 44, 43}, {46, 47, 53, 52}, {38, 39, 45, 44}, {40, 
              41, 47, 46}, {42, 37, 43, 48}, {39, 40, 46, 45}, {43, 44, 50, 
              49}, {41, 42, 48, 47}, {44, 45, 51, 50}, {32, 33, 39, 38}, {47, 
              48, 54, 53}, {48, 43, 49, 54}, {54, 49, 55, 60}, {50, 51, 57, 
              56}, {52, 53, 59, 58}, {49, 50, 56, 55}, {53, 54, 60, 59}, {55, 
              56, 62, 61}, {58, 59, 65, 64}, {33, 34, 40, 39}, {60, 55, 61, 
              66}, {59, 60, 66, 65}, {56, 57, 63, 62}, {57, 58, 64, 63}}], 
             Polygon3DBox[{{67, 68, 69, 70, 71, 72}, {73, 74, 75, 76, 77, 
              78}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGDwA2JmIP7T3lyx/+cV+xCm6DSmxY/tC7YlvMwof2Y/UOK3
/C8n/pW8ar/xSYXg/u2P7U3unjyxJHrgxHeIK3tbW1215zs+bU/1mcf2P5iN
VzywHzjxf0x2q5Qbrtqvkq1XLfr52L7zwZLZa5gHTtxgIYtw1sGr9r/bXx7P
VX5i77h51ePS008HTPxGveDGDMZr9gIGT6ZN83liL7J+bmnklIET59w18/Zl
t2v27FndFTaVT+w/WRrYTIwYOHG15Wf557Zfs9+8fcvk54ue2H/bFRZ+TGHg
xM+9r7lw6ew1e6fpXQf5LzyxZz4ts9z/yZMBE/+1JP3At/fX7IXqelhZnz2x
145+/v3FsYETV40K2iAldN3+cUqf56/fT+yDX2/0aFo5cOKDrb4YbOEDAMnG
3uw=
          "],
         VertexNormals->CompressedData["
1:eJzF1M9LVGEUxvHJwVVthFpUkBg1lA4lgiiJHbShKUIloxYFVtosQqEICoQI
+nFH2zT+A1kRBSXJhJqjpqdRM2lGa3KUQkJy1C5S0CJiKJDE99vCC61d3M1Z
PHzec5/3zam9UB3IcLlclcufe/kby73V8XvOlmP7s0O98eeye+rXw9Y/KYms
f2KfaZuUq5kH3KnFWfW+DZYlG75KMjPmP7S0oE/nSg5++TGvS5bYd5L9Omly
1G1ydLvJ0UaTo+dMjlSZHO01ORI1OfItuJIjMTzVePLwPMJz0+EhR1/hyWoy
nvd4juPx4HmApxaPH08fniE8FXje4DmCJx9PM54beArwdOIZxnMeTxyPhScX
zyCei3gK8XTgieG5i2ccjwfPLjzX8FzBI3gSeNrxnDI5OoGnEU8Onk48DXj2
4Yng4VzShucjngw82/CEHf3JxzOOJ4znNJ5pPOlS49mM5wWeGjw+PKN4evC8
ND2UKTwb8GTjGcBzFk85nkE8iue7tbo/dunq/kTx1OMpxjPg6PM69pPEswcP
90Ka8FTiqcETx9ONpwXPKB4f/4seajueAJ4yPMN4+vG8Yz/0UAJ4vHha8Fh4
9uJRPOxZT9JneqiFjj7fd3h8/7lfXvbzAU85nh14HuO5jcfj+F8RPAV4PuHh
XuhWPD146hz7ieLh3ZA0+0ng2Yhnp8NzGU8Rnm48r/HM0GfOpXWO9zCBpwpP
BZ4RPPRQsvAMOfpTjOcZnut48vCE8Cz+ew+bjSeKZwRPEZ7PeOihHMbDOyYJ
PH48XZdOTC8cnRW7NfRzS8mM9gVTaWvTvK7VPGzm6r63MpcuM5e1mv8FIBdX
TA==
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
S9pGgoIevmtP3Yj9qnTtm7HnGFe5x2Kug/u06oD1vxT8vUVyjJYMjD8Vc/uR
nEBB7xSffD2Fz7MZWuwbXOY5TruAhnnYF7qzaRDfvzDFUv0V12V19M/rXhUU
dNTQeGkY85OzMI84MN45syNF5SEFTYqLmLVHYz3E/HJ1xTxfTU+Z7cF1/7q6
Kfce/q5HQTKfJDF+7WK/VOkYBXFekt9qh/nstYpefwjjaw1ORHkMUtBAQ6Wi
FT4fqFqTtaxzqw+5fd7Y/6PD7fz+nMD1ivS607W6EBL0O4R9H1CQ5qPQR134
PW8bpduXcRWO69d8MI6C8m4v45Ez7x4u4y4j2xyW8VU8AXXLuHZXd8cynr/q
tdIyHv50Y80ybsFX/7/ztXEJhsv4yRr9hmWc5cbw/WVca8zizDIe9rwbLePH
Wtf97z2KsbG/lnEdYZnuZdwl1uL2Mn6iOdd/+Z0tx1a8XsaR8fmmZdxuUKx1
GQ/tUxhexpcOlzYu44K3jows45x8iaPL+JR02//O/9Zt71rGv8o5DC7jaqlZ
/7s/7N1C0jLOxdvdt4z///+v/r//v/pfvP0Xz/9Vl/+q43/V/b908l+6+i8d
/pdu/0vn/9UX/9VH/wdC/NhP
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
rj3/DsMNKuc=
              "]], 
             Polygon3DBox[{{457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 
              467, 468}, {469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 
              479, 480}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2t9Pk2ccBfDWAnNTNxw1pYDjBQSl0kLQkpUo31opPzZiKJpAFJaWigHp
KlDHkJEOVuacEdDJnEHHWgKY4bKwYisEpcUfqBsiNCywOU2dm+/7pMhEEzUy
x55ke/o3cPFcneRze65OcqKK9+WVLOHxeF4+jyfAGWF+e887v3LQYjV+NZXC
wmDP053LEyeA+n8+cn/cNIXd0Lx2woF9f0HUZ8dl1IlXZpc17L7NQVad97VW
7LKgnL4w6n4fEbadNv/GAa8gz5yL3aazLYuXUidecXbeY7/LQcUbKSU35Cwc
Cs25oF5PnfjV6SEIv8+BxvwyeXAjCzsO2lZ/vJY6ceMGtXjGx0FI4ZGx9mQW
ZnU53rlI6sSHOc1o00sOToh6AvfIWGDEHSVTwdSJ33UZDl2PQdC/StyRFsuC
LsE3L3o0Tv1/X/gmXpO/BoFZ6ayMwB63oe67r/+iTpypfyB+gF1dvn3LizUs
+BQrimKo+12n1J4VxCHwuJu8DuzVmYlDslnqxP9wbx9LW4fAV74kUor9cLGp
Xj1DnbhvOFXoSEDw1iXfqfAYFuwn5wNMHHXif19earXJETQah758zrDAD1z+
+piXOnHx9c7ztZkIcq/pP7dH4N1xJ4FpnKBOvMz2c2twFoKk2MAzzdj5IHUL
qPu9vzaoqht7sKX7yl7sOqtUaxmnTrxAWprgyUZwKw0tRGOP1susn9yiTvzE
F+tt8TkItjmN1cfDWejkEpmGm9SJryyyH57ORfBu1wH9/jAWvn2SzJhvUCf+
ymNXUcpOBJmWls0poSz0vapgaoapE8//6VHqKPa4e0m73sQeUq5wP3NTJ97d
GRVavAtBEHhqZkUsmEYV2g+p+z0j3+JpKkRw9YXwXDf2jS2p1moXdeKNFzIy
/3wPQXpVm0SE3SncxHxwkTrxhYM3k1r1CFS6LtHzVSwMRgJTNUCd+DbtPysk
uxFEuTLkk9gjGsA910+deLsi0efCzl/N5fVir/sdtJXU/b5p5miXrwTB8LSk
uRR7WpfSWnGeOvFazY6wraUIlLm9Ab8IWXBLVMw+B3XiP0o+fTaNPfJ7TbQD
O3NE5Z49R524OMA5aSxDsLDsCRzD3vBQpTVS9/uAU9TSthfB0DX5R9nYt/Ru
tb7fR5340qNZhqRyBO2xUydjsXesTFc+tFMnnl92IHsEu9lS4+RjF5jSvQbq
fj+j6okrNCAouieevBPCgn4yvX7mB+rEn4bfFjzGvhkG5wawX5GrGQN1vy+2
v+hi88XW12LzfwHz/r3v
          "],
         VertexNormals->CompressedData["
1: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
kolzOLd1/k/L/U78//P/O/8flrocZA==
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw9WSggAAAEDz7MRubAXE7m5MRLETWzH//+HcmQWpF0GxGAwG/cv5ZbL4
PBZbwGdzhAIOVyTk/olFEqkK+GPyxEKRQi4SKxV8gUwq5kmUUplaZTCCNrXG
ZJQrtBqFUqdVSgAdoDLoBUK5TCbXqDVas0mrs5h1gN6iN9isKrXRwONLJUaT
HTRbnA6L3uq02twuG+hxg3avx+tDAz5/EHVaXX6XG4bcHgT2eAOI3eHzxkOJ
rN8FBUPhZAJGImEkEI0E0FgUDcZjJrPDDsHhUDiSSkai6VQ0lknH4tlMEArF
HU6/L5HM5+bkYpvLVyvpTKmYyZZLA2I6ySZy5XyhVq1UW1ihWK+Vys1GOVdp
FkuNOjGcTau1dqve6HaaFayHtfB+qz3A2x1iUKt32p3ukMAHk3Gj2ev2sP6o
j4/Jbm80TKYK+eFoPhv1yfl0tlmT4+ViPFktt4vdaTbfbhZLardc7anV+rBf
b46HyXS92mxPxx11OZ8vzwe1v15OuzO9P9yuqXSxcL29X/T58b1cX8/b/fO+
09/P4Xi/HU/0/R/lmWMh
              "]], 
             Polygon3DBox[{{115, 116, 117, 118, 119, 120}, {121, 122, 123, 
              124, 125, 126}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGCoA2JmIP6R53dW5sNT+3sH+Z+pHX1uf62X29X5xWX7gRKf
nD1/4V+hZ/YcdxUm7T/y3D7Twyxm896BE9fP+FB6z/SZveEPQ7sIoPhPpsRi
5ckDJ27svzt0XfQz+yu7XCxfHH5uv/yPK+f/lAEUN2szrWt8Zl9eG25SARSP
+KY1/5bZwImHcOwxEF/8zD5EWO3a8n3P7WM13994JTJw4iWzqxZ2HX5mP+NX
5opH257b1586O0fu56UBE494uV0m+vEze9Wj++pd1j+3ny3i8+Pu3YETtzL/
Ol2b+bn9pn7h8GXLn9vviDsVPPfQwIm/aTivZejx3P5CH3Oh/PTn9jns21Nr
2wdO/Ivyt77ZHc/tjzI1P9nU/tz+8gKuif4BAyf+tKSmP+vcc/t9DzwO/y57
br/Vz0+8WWTgxGOtGZZ+Fnph79FqsGZS2nP7Pr+LZ87evDhg4i7eGTNeGb2w
/yGY4/s67rn9FTc3k5x9AyeuGX2h+2HQC/uV85a/cw5/bi9tv3s21+KBE2dz
yjjbVfrCPjqhzfW733P7eY4rNkS2Dpz4Iw0GfpMZL+z5lFLnrHJ7bq/oMvXo
ivSBEz86ydLcfucL+57snVIH7Z7b1+brTI7yHjjxFX+K4r1uvbDn3so787rZ
c/sbsw4n8OgPnPhga68OtvABANuWEUU=
          "],
         VertexNormals->CompressedData["
1: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
mI9GN87np3nVwXHCI6zV6wv+V/7/ATwjfP8=
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2ttL02Ecx/Hp1IyojA5qtcplo9IplQke8GuuHE3DDiNWTLSBoVZq1Bap
TQ1FbEoZtSZpTlGy8JAXRVm6rIZ0eH6/XwftYDpLF80fJSmpmWUPxLO/wYvn
6gOv28/t20+TuTfFVSAQmFwEAiHe4eI3BdoJHmRzK7I6bnEQOKG3vOYeA/X/
fihxkFViX8mZyizNHCh8XD39qDv93eZRUQj270bTzYeNHBwOK9qdwVInbu1b
2DY6zkO1v2noUQMHNTmGT54MdeI1W+JGM7G7R19RdZk5WC4wCaOeUyeusnVq
0n/y0KW7HM1d4MBzbqu8wUqduDW0RZY0xkPcULnX5ywO7MsH2dw26sTN9hL3
nSM87LOcu+W+iYPqKPnAujrqxAOWLCg++oWHqFykFO1ioTS32HH7BHXiCvNH
taSfh7siNqFEwYBwjbwxJ5Y68Uh2mVmI/Zu28E5cLAOqbY5n7TuoE5f+3T04
0MfDfCZMtCCGgRsag2NmO3XiXmpr2lXs8fq64YthDMTXs5JCGXXi3d7NOi/s
L/pPF1WuZ6B8o6qmNJo68eTzeRemenkYrva/3+LBgN/WNGNVOHXiOr34CfOe
Bw9xtqTnEYJIhSHfEkSdeGqTek4jdkl2cJmpA0HZEWm1C3WnH/hoVJRgj301
NHawDYGtlG2XSakTjwif91KGvehsQqetFUEBu/h3VwB14i7jY3133/HgO+iv
dpgRPFNWarn11ImXHrNO1L7lQVzHlk/rEexPakr/JKZO/EzlTHg+9pjpwsmO
bAQN+Qkla6k7PfN5mD4Ru0YZnlSgQ/Cr5sf1FD/qxPdsaHbzwV7rVh/okYGg
cmir3bGaOnFvu3FRWQ8PoSnZXQsTEdjTOpJGV1In7rnkpTId+/724KBXKgSh
hmR9CHWnT8XMM8mxa5faL11SIihudK3SraBOvM+ct8oVu8WaoPGNRxA4Evth
ypc6cYa9d8jWzYNN5P60V47gjJdjMpK60y1/x+oeYJ/RtgVfkyFgNhm883yo
E2+VBn2twL6KyTQmA4I1+6Shnd7UideqUwNOYY+SrPsjjkBw/CSrFFJ3+mzr
bWabz7a/Zpv/AxOPmyk=
          "],
         VertexNormals->CompressedData["
1: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
J8zx//P/zf8HqHy1SQ==
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw9WSggAAAEDz7MRubAXE7m5MRLETWzH//+HcmQWpF0GxGAwG/cv5ZbL4
PBZbwGdzhAIOVyTk/olFEqkK+GPyxEKRQi4SKxV8gUwq5kmUUplaZTCCNrXG
ZJQrtBqFUqdVSgAdoDLoBUK5TCbXqDVas0mrs5h1gN6iN9isKrXRwONLJUaT
HTRbnA6L3uq02twuG+hxg3avx+tDAz5/EHVaXX6XG4bcHgT2eAOI3eHzxkOJ
rN8FBUPhZAJGImEkEI0E0FgUDcZjJrPDDsHhUDiSSkai6VQ0lknH4tlMEArF
HU6/L5HM5+bkYpvLVyvpTKmYyZZLA2I6ySZy5XyhVq1UW1ihWK+Vys1GOVdp
FkuNOjGcTau1dqve6HaaFayHtfB+qz3A2x1iUKt32p3ukMAHk3Gj2ev2sP6o
j4/Jbm80TKYK+eFoPhv1yfl0tlmT4+ViPFktt4vdaTbfbhZLardc7anV+rBf
b46HyXS92mxPxx11OZ8vzwe1v15OuzO9P9yuqXSxcL29X/T58b1cX8/b/fO+
09/P4Xi/HU/0/R/lmWMh
              "]], 
             Polygon3DBox[{{115, 116, 117, 118, 119, 120}, {121, 122, 123, 
              124, 125, 126}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGCoA2JmIFaNOLlvwe439o1CE3l//7tlzy68os/p6HH7gRJ/
NP3eu8Ob3tjXR7n2XO2+Zb86odpVbMbAic+//lnu+co39u2LfnJtkLhlH7LO
78/LrIETfzf93YX1097Ye+cl8bHJ37TfW7n623eOgROv2RnfuK/ljb3Hx/au
56Y37K26Pvc2rz02YOIad/h91Ivf2AutbVgXHXjdvrY5K/1W8MCJr7SfkCGU
8MZ+1pLKGwWR1+zvrZl+dvqnowMmzrWI+5tW+Bv7f9VXNA8+vWov+UTZ3/To
wIlnsbQ3O/u9sU8K1q8WLLpqHyK94cKl6QMnbtb+ynKuyxv7NR5d/pu+XLFf
kDV9xuK0gRNn5PL78M3qjf0H26fKweVX7F/trEsoMR048Wjei5trDd/Yzzuv
6WP757L9zNrak1qsAye+RSCknEXjjb1TYl6JeuNlexfHGqOHV44MmPg6FyEr
Pfk39i1+gpHhfJftK5d/yLy2fODErfe2Tbwh9sa+9PCalQazL9n/FHi+I6Vm
4MR3H3py/jzfG/vdN/JNl8lesg87eFWtKmDgxG1OOPEdZ3tj/+et0UHpBRft
NxQemdKvMnDirhOueMj9f20/I0BTNVfjon3w0+x1G38dHjBxv4i05tLvr+21
Nst37ttwwf5ThPCJyxcGTnywtVcHW/gAAOMrDYU=
          "],
         VertexNormals->CompressedData["
1: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
          "]]}, {}}}, 
     {EdgeForm[None], Specularity[
       GrayLevel[1], 100]}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1k1lM0wccx5kOFeQoY9JiVrGAyHAEOpmoC/itlgGyyTicHELKJTqwjEVB
kbsHra1j+G9LV3vQlq4VKhVhYBhyKMPpWDxSAQHjIEsYC6ySkgXXB8fbnnjc
w/flk2++vyP50nJLkgs2ODk5fbCmjWuaecpR2r4kcPzEcs43iQaEV1jpvp1c
mMk3BhNOE6hwlNO3eRjw+0hXZOEnXFzdOmh5sUDAuPlRfyvZALknEfXDNAd3
R6XiukUC9XlxS9T0//wBodQj8bukuF3NTEvkt4J9+2JKo7cYWuvMJl+yFMeN
5duzMlvRawv42RQhgoVSvCldLwW/Lm+0cY3vi6PPf0ESgV5qPizslGIhLfzt
+rWcJVLD11E2EY4tbIkMq5PAS0iZYLD10Df3pck6xOjyJJwnmyW4uHrF3+2C
HvlhR28GK0SwSsRi03YpnlDurezI1uMte6jvyR4RStgbBt5slOLM9c+up6bq
gUz18IOHYjSYoraGVRI4mxNQOJmrA2tprtF1y2X0R3R/Z2kjIDgQFFzC1cH+
NMgtlCaEYSzBkRUiQYpXbWxKoQ7RikxlPFOIr/Cs+IWDwP4DVfz+GB3au8k7
d++5jPGYkN4kEoHdPu5RljNa+N3t5fjP8jF+qTLyZRSBsZ8Cn8Q0aZHnOZ79
kQsf+byyN233CDTkdGGWpwXPozCjM22NJwbWUGUE5jqvmY9ma8EYjqtRhzfg
nRuvwjrUBOzL5b8Mn2tBj9I+TzRxQTtYcvr1fQLOAWwrU9YCd6pm5Nr3HNSe
VCY5H5KAnk9TFLW1oFb9mBUbzEXpI6pv3zYJ/PbuafpD0IL3d+ziHvLmIcP6
bp5kXgKaqbaZkqHB2WPusX77ubipujC74i9Fx5/T9YIqDdydRykFDA5YBhJ7
uEyKhAKW6sFzDezejiLSfQ5cZ8w21sdSDPg730rv0SAl67Di4R0upiIXTX0K
GW5VrapOPVfBK33yw53PePjHpZt5aUWGrnZb1dxvKkSHjEs8HFxISPKhffRm
vDK0L48kq1HalPyrmc3DuejHgWUTMtjKu73iE9RgDqUWDcTxQavpqch0k2Mq
qXrx8/NKGAePGIs9hGAkVfu8d0qO6ZrzY2OVSli/ZbhkRggwfSL36oRODkoF
HZa/lNi8eofx2ijAjzzF3z7xcpA/PcjaO6/EVNDQS9d6If7vfq03d70917tr
vT/8C5jw6aw=
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmIHa6IauoI3fH/tKpj5Pmeu+xP8gmv7pl30N7aonL
TDO4orL4ln1pX0fN53l77PkyjvP/SHhENfGGg3uOW3PctHeoyHzi/XOPfd66
7f2igo+pJv4sPmZTb8d1+0uCKvOW++6177b1DmrfSj3xmnzD8DSBa/aLmjp2
RC/Ya399XrLX/rAnVBOf9abeJrbiiv1MSfNAoV977c2eHo5dyPqUauJhnBs0
vfsv2y/8v+pSiPcB+09rl8ovmUA98dw7qfmsXy7Z90amH7ApO2TP9PuCf6T4
M6qJ1z8584E59pJ91tZy36cTj9hH/l71JmoW9cRpnb9o7X4ADecblQ==
         "],
        VertexNormals->CompressedData["
1:eJy1zN1LkwEYBfDXFY5mxnBhqCszCRnzKxZ4oz0alheVloIUsXJiEAZalBm4
YFKmzVQKUQmJUlGoC5sr+jA6aAaJfaxNV9t0+rp39arV6iLIssiLp//ADpyb
w4+TUFpZeEwhCELyclctN30s6UBkgYT0ROsroyTSXNhGS2aUSLsWc5eKkoJo
9wSqxhQyBA57Yg/2YE/s6Z/X1Y8er9FLMBZdqJk97KNnJZVnJ55IlPI8I+Hl
fRmxG/qtTzt98JfZ7Qe9U2BP7MEe7Ik9safBnvz4Pc0y7n0/GdfQN0K4+0Nn
9wUoPK9VuSZfREzdxYdOn5sG2mxpr4/IYE/swR7siT3Y0+hq9Zsr/gUo3zV7
w772Im5fpDmqcJqaGh3r03564NprGDSoJapOaR/bnhcEe2JP7MGe2IM9JSYY
1m4e+ITxTXfO1Ec44QgVnL49PkGP1rkeBzIn0ZNd22ncP0Nh2ssdiq6PYE/s
iT3YE3uwp9BNf621bw7fOn7pY5JFqHcPmyI8DkqdnMqwiO+xKLttoZghiu0d
Ft/qP4M9sSf2YE/swZ6U/fpus/wB55YyTTsqJHR1aI76op2kzW6y3toJqC3j
56tSnch9sTWrruIL2BN7Yg/2xJ7Y0/Uhh8urkaFqaWzPPhGAYJnVlZY5qGHL
75Hua8NU4jbHJ4eLELOiDbJtHuyJPbEHe7An9v/9/09rQFt8w0M5ClN18Kob
GafapHn1wortqktl5YdaJGx7UG5rDM7SpEaYUeVMY6X2v2R2J0M=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1k21Q0wUAxjfejG4qwbzQXqajZiDK6MKRg/ZwXpdz2DqMxVmK4ZBB1q6g
QGLXaLpBY7GNsY3tv/23/9DIsrxQg4QWOBEwIVccV1rkBAQhPQROmO7Ib33i
Yx9+35675+Xu2VAgzykMo9FoyQ8Jf4iuI2C77Lfix82H8v/c7kF9N+PTq7M2
tHV9oAvPsSKmlZvAk3gwLOGqDvbY0DD+fWlhhhU1RbEkm+kBa2r3kRmrDbLr
G6tTOq3YGth1tZf+n35+hM3RhiwYk/7MubtEoW5wY2TaDQKugRpBV4UFsitf
aL6K8SBv4eitES+BhtGYi/MyC8o78op2XKGwQDb2pqsITMyfOOn9x4I5sSKq
/icKyeW8G7rjBF5I6TnnEVlQppjXKCUUFlsj/qA/RmItI6hVXTLDRz8ur32H
AiOh5lTJuBO3KhRP6PrM2HH7ztJFHoUm3SvFcWonIgmh6KTQgoViQbyXTUH9
tM944pQTgtfO21JZZjx5+YFyxOPGNwOioCtEQhLwBpT+RvDZM8PZfjdcoNIV
rSRmV78/ylxqBFtmvtd82o2oLWPr4/kkrinKiAsiM8LjKBdP7Qaz4/MA/ygJ
TVaEa322CRmZ2+4VJrox8Pv9oHU1Ca3YxxVtMeGpqgM3m4rcSElYVZLzqxP5
uz5kZqtNWFUpa9+X50YEi7FtVObEm4Izqg3NJmzmC/qS1rnhGVrsTzrmhE30
m6y/1ghhZhqd5XQhk8vzyh0O0Nn7Lr2ca4S4Stx+0+9C12k3Y4/YAbWXKjae
NaKeLF8Q97jgmS7JujZFgDUZv+LxKSNq9++FxuACS0abm3nRAd2Rb6eClQYo
mJNhvTYScyral9MRDsRF7c3qTjKAqeesSR4kMWZ6K3aCILCUyBmqMxrAf7BS
veIsCemxj/nPg8DhlopPLgQMaFb+UuqpJlFqYvm3thCIjJeH8u7q8e4Pt6dz
+Q5IW9JTDNMEmsjoj16y66Etn+VrX3dgZnd06FElgTfCQkm+Rww4I2wZan7V
gfeG73zm4xA4X1nw3V/5BljqPGp5mgPXN7E6dzYQODjQGy7t12NtbHTls3Q7
WO2HN7VWEwjmHqgSlurBG1zZt2edHV9Ldy4mryHQ1iZJHfxbj7fd3QVlTDsS
J7ia8XN2PJPa0TbJM2D7aGec4L4NRMb+9kPPEfi//7Wc73I5l+u13A7/AmZb
91M=
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmIN6re3RPT9dFeztG243nTB7Yv+u4MT/I/aU9tcT5
9qVVzntx0V4wXf3tlpUP7Jl2nfnB9vcF1cQtQlSvzfS7ZC+ZvDmlQOOh/bUP
RrXVa6gnHtu+Vvry2kv2E2cxPj4676F9otqKHLdE6omfOH/UUI/7sr1AY4zK
SaFH9r9ifNm7xaknziv3+3lRwWX7w38jFi6c8Mg+ZGbK2f7jz6kmXrHaW+vI
k8v2Fb66n+58eGQfHssi9DGVeuInbFat1i+8Yj+V56avrvdj++LaCRuZ3z6j
mnixYGj2/p9X7K8tfxDLtPixvci+XV8yyqknTuv8RWv3AwBp6yJJ
         "],
        VertexNormals->CompressedData["
1:eJy1ze9PzAEcB/Bvah6oTTHuQZnOlkKdDctq2nvyI5PZRJaaZZFqbU6czGRu
U6yk8sAy+rFqTXEZEZfSu5/DdD9KtpO6rbrp6HKVMWOhB5/+g3y295P3Xnt/
1CnauNRFiqKEzsVzLre08f73fZ04UK6LUArtWF1gP9KgGkZYwFBpe9AIdyZq
Rm96TUCRE0/xFE/xEM95H5i9qeVXzzj63kcfihkeRkVKZuWq53bkXvWt9DOO
col/1mNj9Wfo16YVXd7SDvEUT/EUD/EUzyceHSWZVgeOVSVZ99W/g1/9dGpV
5CeMJFhe1Gx00K+1ELN7x6Hyudu8bXMfxFM8xVM8xFM8QwPicrbf6Ia1MNan
+nwPC66/fL0m0I0Kl/tbcNoYPU9M5TclOKFelnxNd8cE8RQP8RQP8RTPo7Ph
v3eU97NmxRWtbamdsWbtQIzhC5p9TlWVDY4yO3qdOfWVE8bjwRl/800QD/EQ
T/EQT/FcXPpo94+6XrbF56yfMn5gRGNed26GC9lTJm3uz3Hm4Hb/gwkHPBya
ybyTLRAP8RBP8RBP8Uy/NLMrfUMb9W/rvh483UHzmJf37AU37k1H14VkTXJP
QcWbYosN4UN/WDRjmPcQD/EUD/EUD406eSCosZXaieozrmdG6hLP2oZq3dDt
D9vae87N5aqm7z3OLngrDyPzaowUD/EQT/EQT/H/fd/8MWNQXWJjUkhZoCnM
wq6VlqinetfC9bVt9RH6TnQpUYeL5/6rSwwXrZ2tC9b/A62aNFU=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1Vmk81QkXZlLzQ6lQoSk0lkq2W7KVnlCWkZRlJGvXzd7ljqUJWVpIxd24
C9f9X14qS9ZISv8SSZSkqYSUIoyK0tRUvD693/r4fni+nd95nvOc8zvnaB6g
76X9JCUlFTyHeXOI984wIV+n4HZj7ZYgFRaGz+/VrA1kg+nK2zzfJQW2u7dv
8brCROiQjsrGCjaWLaJIP32WjOYGj6v8X1l4u+qrQvUXNqSWa0txo1KwU6f9
alEK63/xv9nL33rsmYjCJCvaiy0sbFGa+nB5igmpqhuCi2sTYCjudts8wISC
uN/QzJIFE9MCW/eseCwuP54uZ8NCsfMSz7IcFpLvjR86ej0Bx86+51+SsNBz
U+sXfWcWwib1Up9GxmAle9J8bBkbSfIRscK2LMjsW6mYbhWN+vKhKLVaFr7f
oPu80mVCN6DdkOIWjQg1sfYZaTY8iFunVfOZyPzSKz52MgYPZsom9lPZUA08
HZLqxcTaUpU9m4bD0Wd3t0LNk4PSJTYfzRlZeEi7UBPPC8W79l5d43dstJ9Q
idg6mgXuc4f+MHo43Mi31wsWcnDOYHhfYxQTo1oNR7SaDmH71ud2Z2I4WBEd
LzLfzETN9tcW/XZUEC6hXXHnuVjKDQk/UcKE/BRbqrDdH/bdFAt/cNEnbe5J
PGfC0mi6YeMDKsZ+z25jr+NiSP5RqK4tC0NJdh8jnA/C+q8O3xIWFyr585MW
LmZB40VE+/qw/dgQm+EmvS4HdwyYN20d2AjRW1r54pM7rugJ/Zw6s8Fmjtvu
TmeD0RkbTWvxhsoJgWMgLxs/v/dqKO5ig3sjxO7xLwHIuH9qm+qHbFhlzm7O
Y7Fh2+gwEvDQC9F1G14FFPBQsS81JeFfDm6nMX0verjj9n5KsLsXDyfWdTrd
cObCwDVlyEXfG2XH3mwrXcLDnT8VSptTuPCwWbX5p0f+2DfwsrHek4cPF5qf
H9Xn4jAzxs2l+AAOlXvx838XYHjtQvfzudkwmVE2lXnnh9zXHgSxQoC0scFo
uc/Z6OEYU3abUrFG3Xq1fRMfN9unOK1qOTAu+iVs1TAN08M7lu+c4UNTdnV0
YFM2To/L332ZGYy2+Q86qrKFyPlV75GaGw95IwN2dkwaXnse2iGEEIGc+Xqj
WTykRMa3youDwXWxTN35TIBed62R43k8REafdzgnCkPcd5Gsr5EQC4cdWHX+
PBQFyho0xIaiinFkY9EDIR42T9xpWitAeJ2k2eqPIHgY7XUpChNCq0nLKm2u
jmX+Vcr08lCMTP5n2kdeCOnaNDJusQDOCqpJo5URsN7U+cQnSojKBhenCg0B
Bi/NzhRtPYgEaiKnckYAS+XV19Q25sI+Zm//5GUq3oYpeZ8tFCDXn7p2dkyI
4EZRuumCIDg+Huw5u0MAaXpCfP24EFLfHEvGM0Lw5J7jwipCAMka0yUP5/Kw
DhZO+ET6YLQkfWmrkQDezmk1ca/yYL8eFQrFnlDv/fLS9BkfxeFU08+sPFSU
LMqUSPnCnR1SFUTn4/it/uWU6jwk/GF28DAtAOrUz8+nb/FhUSzNqZIR4faG
UOsOmg2CENbAURDg+tLXDQYm+VjAvnLNZNIIJjepSSfn+jht8OWI3BsRAsQv
Ju8xLPBV1jixzYmPmqbKo98o+YipSezj69hDP92s/lEeH4mSvGsayfnosmhZ
/3S3EzkVsyyt9I0AFQZfguUcxbBSkbVY0+lGuv/7qierSADGxi3tTrJiWEzn
XmLNdyeDFU0yPXYKsE3+THxHlBhtH8c0L5NO5PxMGhinBEhY4KCWUS2GUtxn
o7JZP5K23IgT4JCLAGFUeLsiAUuidN46xUBSbs+iv721cvEhRcVz9JsYll+r
+RlnA8lCOckQ64kQLZTtrufMCZzKOVZuGu9Pztxvzsj5LoT+mWKl77sIUL5f
aLGXpZKGbppKGaYi3JL069ZkE1jwMnAPlx5E1gf8q/FtuwhTw1olx1kE/C27
nce6gkjatnt3Hv8kAtGpvDKpi8AZjxXN+aFUst94upH2OQ+M9E5+eQ+BrNS+
wTGhDymTXe/Roy1Gn9N16WFZCRItOZ0b7h8gP/Yqq/X5iuGXPHj0oqIE3lXO
F7xHD5DBOv9osw3m/FJ846LuLoHzIVe+430f8vCg4EDGdD7qB1ofejhJUKvi
cdRl+DeSs29HZ5sNgRXtjI1DZhL8VkBQlJ7vJfV8uil34wlo1zflsB0liHao
9Dixag+5a+34gGokgVxPjT0vMiVYEBTTuolqT17S8v1zhRmBs2E9E8aJEtia
x/mJTWxwIOSbhmwygZrHLucOThJwW1phQ+vfjpmrw7V9LQRGMwfM1n8loOU4
Ln+11RE9ht07V5IEStOHDD6ZSqDMqNH9tNoJZn0j1XZHCMQ8cBdRDCTodqcN
0EwD8DL5tsLXWAIWL8+tu+8yx8OOUN8yN8+W5AfwrhGQjSHtrF0JMFJyK6fT
ApHMPz3Q00CgLrZUf+o4AZYth67uFQjdfX5lZn8QGBliL05KnfP/jY7U4Y5w
qE6oGnckEgh17HI+1ZEPDbsN8gL1cESvovlZz+k0Luo3q/8nH6qxA6brZ+lo
uH1yjd11Ao6OXNM7lmLcOh2eI+MRCV+e5ceuBALH3p3clbtEDOmnfkty/CMh
FzXvgp2uBIWF/TdZhiKETVTHtRTT0aOqeCplvwRqzous1qSLoLfXWrt6KgqU
8y/2/0yV4Bp9QiGtTIS42rY/XycxEDzbHd8558vOlmucT66iubun5Hj8SCR6
3xcRLoMSDNyt23a5MRdFYDBPPaJj9GpeK0+5AFdidIgRpTzI5OmUPVvEANo1
ZdvWFCC/t2Tr7Lq5/SAtbZArYsB4Zv1Q8lsJbhpZ9t9/kIvpv9+lpJlHQvtO
3YBPdAHex4eHXlghxFcFPSmmKx2bsstlis4XoEO7r/0JXQjDefNeDXRE4XQB
xe5RXQEqM/yD358Qoji4n5bvzUDCX5aamakF6Bl8//MNfSH+3//Pj3h/pPNH
df3Ih/8Cql+cWQ==
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNw2ebgQAAAGArGSGRCKUhe8sWEhJJ2du5+e3+/7e793le6vVrvCwmk+n+
3/bfbLEDVpsDtFhBuxuCfYDd5QQdkNtmBhxOl9djB90ul9vnhZweOIRFcY8X
8Xt9AcQHBwMOwAn5kRCKBLBQIBjGgn40jIbwyNvr/QMLx6IRnIjjUZKIxhJk
LBJP0EyKY9h0ikywTJygKYrmkgTJ0LDHH2SpZDqfKZS5VC6bSudz6WQmH0Yj
sSSXzeTy5VImWywUitVKNlcqFku1aqlcr5ULlfpkqsyrtWajVm816xW+xTc6
7Uaz22m2et0W3+61O0J/Olsone5A6LX7w2F/JA2G0lgYjMVubzgYidNJXxBH
4ng2HUvyTBpN5EScYmfycnE4Xi/G5rCfKytVWWirxXKtLefqWl0Z+krbGNp6
u1mr+laezJe6sd9Vqg1+q++Ou/35tD9czpvt8XDcna6n8/12vjzul+vzcT3d
np9f3z9/DGRK5w==
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJy11v8v1HEcB3CuTm2WdhsXJs0PmazuWqfLYr2S604WOVnS7BgSxZ1YjZUc
YikuuRwtZ/nSoVxNJbelhrkutbXjcsedz925L5+3TetEiR/O8ke8/fD85fHT
c8+fniFZouTLFA8Pj7zNbNuM31CS6++HWago9/pz1+wEbWOwXtZlA1zezTUJ
d6YYQZIVzPemkSDsSYzzPYzPa6PNDc41I0SVsBSTPBIkA4Z845t5bJ50K4Z2
SGaCPaaCpzOlJAiK7xc8OYHPj/4O9aGenQMGoouzWkgoC2yrY01ZsfkGW/mS
SyPgXFTf9moVCYSS0y1Px+cXh9P4ggkCjt8+Iys0kNCr9IkYJSzYvJnW02Jp
NAODOqX5tUZCuH40ELnM2PxAZazwY4oFKJyBel0AgngVvyzbC5+H+VcrVFQr
PBO1C6oiETSo/SSPDhLYXGmIyNXkWYFrL9Fq0hBc6dvRnnFyDpt/uhZgzdFa
YbWIM/gzHwF7xpT54J4Jm3NST023sefhpmIk3lGKIPdd9ffreiM2n2jqZNc8
nwedr/txSB0CoXiiNsIPnyvQyKDnLhtIhh6+jmtFII8JqXBmzmLzynp6B6Pc
BvultjuDvQgUy/SxYvkMNl9MdwsTF23gWn91dVqFYDgmYaWJMGDzfm7nJUqy
HfybJ0MtGgTrNc05HeH4nGS6id3jdhAwmcdk3xCk8t7LtRI9NqeJxhxVTAdk
iMcdqV8RFAbsbRvwxuenuUfUS10OeCF1/dv4giByNixBXj6NzXk34leB7oRW
li65f3M3ykpY9L7lH9jcc67urV3shAtqcW7RZwSOIDXDLcLnhXm80aAlJ0iz
WWSoGoFmQXU+dkGHzbf6/2x1//8teCBm
         "],
        VertexNormals->CompressedData["
1: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
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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

        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {3, 4, 8, 7}, {2, 3, 7, 6}, {4, 1, 5, 
            8}, {6, 7, 11, 10}, {5, 6, 10, 9}, {7, 8, 12, 11}, {9, 10, 14, 
            13}, {16, 13, 17, 20}, {12, 9, 13, 16}, {13, 14, 18, 17}, {14, 15,
             19, 18}, {15, 16, 20, 19}, {10, 11, 15, 14}, {8, 5, 9, 12}, {73, 
            74, 75, 76}, {17, 18, 22, 21}, {19, 20, 24, 23}, {20, 17, 21, 
            24}, {21, 22, 26, 25}, {22, 23, 27, 26}, {23, 24, 28, 27}, {24, 
            21, 25, 28}, {25, 26, 30, 29}, {11, 12, 16, 15}, {27, 28, 32, 
            31}, {28, 25, 29, 32}, {29, 30, 34, 33}, {30, 31, 35, 34}, {31, 
            32, 36, 35}, {32, 29, 33, 36}, {33, 34, 38, 37}, {18, 19, 23, 
            22}, {34, 35, 39, 38}, {35, 36, 40, 39}, {36, 33, 37, 40}, {39, 
            40, 44, 43}, {40, 37, 41, 44}, {41, 42, 46, 45}, {42, 43, 47, 
            46}, {51, 52, 56, 55}, {38, 39, 43, 42}, {52, 49, 53, 56}, {43, 
            44, 48, 47}, {45, 46, 50, 49}, {47, 48, 52, 51}, {46, 47, 51, 
            50}, {48, 45, 49, 52}, {50, 51, 55, 54}, {49, 50, 54, 53}, {44, 
            41, 45, 48}, {26, 27, 31, 30}, {53, 54, 58, 57}, {64, 61, 65, 
            68}, {56, 53, 57, 60}, {57, 58, 62, 61}, {58, 59, 63, 62}, {59, 
            60, 64, 63}, {61, 62, 66, 65}, {55, 56, 60, 59}, {54, 55, 59, 
            58}, {60, 57, 61, 64}, {37, 38, 42, 41}, {65, 66, 70, 69}, {66, 
            67, 71, 70}, {67, 68, 72, 71}, {68, 65, 69, 72}, {63, 64, 68, 
            67}, {62, 63, 67, 66}, {77, 78, 79, 80}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGAIAGJmIJ67+HvaG79X9mG3q+zn5T2z57ybbJAmdMGeWuIu
Gnqei2a/stdY1co/yeyZ/bqUazOv7jhPNfEJ89oYzrx7Zb8kyeb3uZ9P7W9q
XP9/0pl64vYdzY+KbF7bLyn9u1Xo4FN7HYFPHA3XzlFNPJ1/yaXJHa/tHwiF
RBZ3PrWXPST5OCqbeuKOAaEJHAdf218RCtj9RvepvWtl5mcLVuqJl172q/v4
6rX9offvVZecfmIvm+xptmP1WaqJb1vH/iBG4o39q0YpQcXEJ/ZXbMu0d3pR
T9wveoLJF5c39mb9Us79Px7bV22x+1X3+gzVxB+JFgb35L2xn1MlOp9l+mP7
GTJeZqsnUU+8WUNw27LZb+ytpWdX2+s+tp9Sukgl0oh64gqenI8PHn1j/3Wm
dFPjqUf2nAdsG3JvnKaauP3WnecSrr2xL7m6anWW7yN77228nReKqSf+eJEX
1+Qbb+w//XzK1rb5oX11UjjT0n+nqCZ+IXDxsvm33tg/fXJx3lvlh/YGfq5L
AiZST9xnfab/jTtv7FdkRC5363hgn/ehzOGcFPXE1WX1J7Hdf2O/bE7Wsg/3
7tvf+dm4oGzZSaqJu3k6LNF4+Ma+t3FrAsOWe/YBehkxK02oJ07r+ovW7gcA
OqnS9A==
         "],
        VertexNormals->CompressedData["
1:eJy1zPlT1AUYBnCOmsZFVEoUZhyLVAS0Fa9JVHhENNHkCBSHmkpJTFGhjDgC
dUINPAhLx4vFNAyGUURRsrTmUVBKQHY5VwVCFmG5vrsicUSWMcPrf2DPzPPL
M595nMKigsKtLCwsAodqPVSHpXMbfir4nYucTEd+0Jdi4+p1AcYMEz5Mi8JL
ZiPHq6uyznu20EIiHuIpnuIhHs/8si9r07ONxRwReyhY7VaChdt+fqW11ASH
X9q9intbOD0/a+FXi410Vc0sR2Q6xEM8xVM8xEM8F6hmxE/cFY/wDfNVbTkF
iLScfTraYMZo/5VeqZlN3N7c1T3lWAdfeLMqOLUnH+IpnuIpHuIhnvamkIDQ
SgNs1rwbbpVZTMPjge7bi9px5bMEXXP6XQ6sLEpau1VhROnxnVaayxBP8RBP
8RAP8Zzvqo6fnd2FE7qW4DF+1fRtS5ww4WkVrkY2zitcU0vNTHXu1m6FGsec
t2LqciCe4iGe4iEe4hkyumX9t3YK9id9pJ8yVc+/YR6trilBVmxe6+VP77P8
0A3t8oBO7jX0Jc5aXQ3xFA/xFA/xEM8GP7/YHUcV7Jv8W2jemQpeCrTsfb1U
h7GB126NX6JnhdqsWmyo4/SrzWHxoR0QT/EQT/EQD/Hs+9Gno+aMghHqkowt
yyt4zEUdpAz9tzsFrCvz0XFp04jygaYLqJxm+cXxByaIp3iIZ8+wR+CwZ8Ww
Z+iRebpbk9pRpLFP2O9mYEXHDZvm7VrcDz7/eQp0fDjoUd424SK+q+iOyB76
F0/xEE/tsMe9YU/xfLWjzRIudQivs7dNMnVx49knRiU/B74REbO6PO8y0jn8
8mHP6xzv+XWLRYgC8RQP8RQP8RDPU0ZHw7j+i/BoW+a856iZWx7ecty/opDa
lS/n5ofVM3lavcv2tTe5yjnbK8qjC+IpHuIhHuIhnqZJaREztL9ylOO+cdZ+
Zs5/0ue926aYrmUuOtU3N5kwdlRdeHIR7/ies143xwzxEA/xEA/xEM9PNhTs
zOwvYde2k6HRfSY+3uR91r3qBlvvVQcPbq5ChnvjkvSTt7nqn5RHyVoF4iEe
4iGe4iGe1/6Mm2udUck8jfcbO9JMXOHc45Gbm8t6raf/mZgWVJ/rPRByWMvK
xEI7q7BWiId4iId4iod41iw4EWIsqKb/a039Dg8Unn60eOSuC0VosO1/+4rK
hIJTDzZ/PFjJMn/XFIfIYoiHeIineIqHeIZl4WDc0zI2uP1ll/qiwtiRmw9u
ulaL3SmnNGMSOlGQfP37RR21TFrS5LMzWv/MQzzEUzzFQzws2wfe6VGT+i0x
sD7QSbc7DsZ/TzbCxdcq/9KmdryXdihu8p67fKrPW6C4/0HxEA/xFE/xEP+/
/8dN9DJmBj2EStWc7N7aSnOnjY+iqXxue32jbfZ622aqpvrMnhNVQ5el7/fn
fWDk89r/AynpBeU=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAWJmIH4xd6tOe1m7A0fDffE1Dxc6SGh4hyiEz3XYoS95
5ktnmwNv+9pX/58vdFjSdXLHzMVzHcQmVXSvudLm0Hfa2a19/UIHg7fussIf
5jq4MYi+sTvY7tB5pLTYeCVCPdu1WP1jcV0Oq7oTJTtvLXJwuvOUX79vvoOS
1flz58M6Ha6J2RZbHVrkEDP556G8+vkOeh+MdJU2dTqc+iS1raJhkcMkG56A
wBnzHYR6DvZK7OpymJduH3N8xiKHitYfcwSXz3fwFdUtaZvY5LA8cQnjonkL
HV7/nrj+bvVCh8zKecITOhsdLr+pjw5uW+hQcV26s7ZkoUOpPlPRoyeNDsdP
xM6b6LLQQVhn6fl3DQsdIk9PuHTjTZPDbNsmlwcxCx3aAqS/+XUsdKB1+OCy
F5c7cfkLVzgAAFCw7IU=
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {13, 14, 15, 16}, {4, 1, 
            5, 8}, {5, 6, 10, 9}, {6, 7, 11, 10}, {3, 4, 8, 7}, {8, 5, 9, 
            12}, {7, 8, 12, 11}, {17, 18, 19, 20}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGAQAWJmIPYun69RfvW1vQ6r3DIl67P2H5dOc2UWP2xPLXHF
dyXmR7e8tu/cunppjO1J++2Ht5/wTjlENfGzhYx1VRNf24dWLVbOf3fEvl4o
tSZp8UGqidM6fGjtfgDBX+DX
         "],
        VertexNormals->CompressedData["
1:eJxTTMoPSmViYGAQAWJmIBa6pVXQ9fSmfWjUZcMT3A/sBTZV/z9c8WK/6FLL
Q6bPX+zPvnFdsELiiT0DFEDV74eq3w9Vbw9Vbw9Vvx+m/l78vsaY+bftf7ec
8uS+9MbeaEeQgMfHlfuXVkbYWOS82S+v5/5Fov2W/Q52T40/sSf3Q9Xvh6rf
D1VvD1VvD1W/H6rentbmV7glnUrcc8++6zHr42Tux/a8+YwiGfOeUE1884cz
bj0aR+zDN6p4tG89sH9ji/Ta40Hv91NLHABW++6/
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwB0QMu/CFib1JiAgAAAPAAAAAEAAAAAQIIBw0OFBMDBAoJBQYMCwIDCQgG
AQcMBwgODQgJDw4KCxEQBAULCgsMEhEJChAPDAcNEh0eJCMODxUUEBEXFhES
GBcWFx0cEg0TGBUWHBsXGB4dOzxCQRscIiEZGiAfDxAWFRgTGR4cHSMiGhsh
IBQVGxoeGR8kMjM5OCwtMzIiIykoJB8lKiEiKCclJiwrJictLCcoLi0pKjAv
IyQqKSolKzAoKS8uKywyMR8gJiUgIScmLzA2NS4vNTQxMjg3MzQ6OTArMTY0
NTs6NTY8OzYxNzw4OT8+LS40Mzk6QD83OD49OjtBQBMUGhk8Nz1CPj9FREBB
R0ZCPUNIQUJIR0pLUVA/QEZFQ0RKSURFS0pIQ0lOS0xSUUlKUE9FRkxLRkdN
TEdITk1MTVNSVlddXFNUWllPUFZVUVJYV05JT1RSU1lYVE9VWj0+RENVVlxb
TU5UU1dYXl1YWV9eWVpgX1pVW2BbXGJhXF1jYmlqcG9fYGZlYWJoZ15fZWRi
Y2loY2RqaWRla2pmYWdsYFthZmdobm1lZmxraGlvbl1eZGNqa3FwbGdtcmts
cnFtbnRzbm91dG9wdnVwcXd2eHN5fnFyeHdzdHp5dXZ8e3Jtc3h2d318dHV7
end4fn1QUVdWeXqAf8nK0M99foSDf4CGhX55f4SHiI6NfH2DgoCBh4aBgoiH
hYaMi5eYnp2Gh42MgoOJiIOEiomEf4WKiImPjpOUmpmMjZOSjo+VlI2OlJOJ
ipCPi4ySkY+QlpWQi5GWlJWbmoqFi5CVlpybkZKYl5KTmZiWkZecmJmfnrSv
tbqlpqyrm5yioZ2epKOam6Ggnp+lpJ+gpqWgoaemop2jqJyXnaKjpKqpoaKo
p6Slq6qZmqCfpqetrKijqa6nqK6tqaqwr6qrsbCrrLKxrK2zsrW2vLutrrSz
r7C2tbGyuLeuqa+0srO5uLCxt7aztLq5enuBgLa3vby3uL69ubrAv7u8wsG6
tbvAw8TKybi5v768vcPCvb7Ew8HCyMfExcvKwsPJyL6/xcS/wMbFwLvBxsXG
zMvP0NbVzMfN0sjJz87Ky9HQx8jOzcvM0tHNztTTe3yCgc7P1dTGwcfM0NHX
1tHS2NfSzdPY09Ta2dTV29rV1tzb4uPp6NjT2d7a2+Hg19je3dvc4uHc3ePi
3d7k49/g5uXZ2uDf4OHn5t7Z3+Th4ujn1tfd3OPk6unl5uzr5+ju7enq8O/o
6e/u5N/l6ubn7ezq5evw8Ovx9uvs8vHt7vTz7O3z8u/w9vXu7/X0W/jRzA==

             "]], 
            Polygon3DBox[{{247, 248, 249, 250, 251, 252}, {253, 254, 255, 256,
              257, 258}}]}]}, {}},
        VertexColors->CompressedData["
1:eJzN2P8/1HcAB3BcHqipXJnloaLHRELbQ/my0euidlrSEle+3DJDnV1ZefhW
w5Dydb4sKXZKySPbsD18m1l1Xb7kS/f53HHuOE4ews6mJV/uMYz5L9799Ho8
nj++fnj98LIIifQJ09HS0tLR1tJirCZyGCoGV4oHFiV5Y/ktWAjSLAUUj4OU
TwXmqGNMpZiw2XWtOakVzlzHdJNecl5iYzKnlkuwc29jQv65NsRwozf1Gk4Q
83/zbN48zZXAvdx84GxkO45TZiNfeZHzUxq3fwRsCYI2ZzqyLjyD7YGWakYW
Oc9sPDiONRLsymsL1g7pwL6k24LoVnLeHHtkaERIY34dI0vk0wm3h5eyJ1bI
ed1it3lfIg17PWF95/4ueFS+XnJw+ZOYVyV5h3a60gjXSXghtemGZ2H4uW8v
kvN3Ymb6IgxoSPbbO69jPYfr0T3Twvvk/IoJPZimTWNRf3l9bYoYIVN1OaVP
yHmO73TKsVkK5bG916U1FG6nbDW9oyTnzEvuXt+PUbCK8jOMP09DaXK1omyO
nGtXOR8skVFAfVH7PSMJ/EWHC2kjNTGfHrZ3vddKgaPpTxbXSSDnG15ZsSPn
4dXviubqKdh35EWt+Epxmf+h6sfD5Hzwm2W2ZwUFvRJ22AdzUmzj+zlzwsj5
S7vErAdFFLY/TrYXZPZAHhyUYplEzqdU/4n1Myg4jTZrDMx7ke/3ZffsTXIe
LNhxwC6ewibm0d+MRL3IPt0aN11HznsD2bXHeRSmWKq4LaEypPOsLF/R5Fy5
xBhNDaCgL3qzkbsoQ/FZ/pP1f5HzEYGQ2XCEwvseepV3Cvrw85lfuXt0J4k5
Hdhk3ciicN0zQfjJTjkcOAuKaTNybnX6EE/2NYW26Elduxo5kgvd9bONyXmI
RvBs7X0KD8s/5zd4KNDB5H2cZkjOS3PnrVj9FOp6pFIoFDDKyz2fqEvOrfbZ
Fi2uofHckvdIEdKPrmmmhfaympgn7uCantxK42XsSuWFqX6knbjRkzpPzj0D
Zm0fOdEQdf3QUJU6AJcZTUbYK3LOLMiCpQ+N0u0fPVVvUeLvAn8We5ycW3sL
mjbyaVzOep0eXqUEMm9qvFXkHGtrHJbSaARpKrxHWYMoSJZXc/rIee6ZQ8nW
pat+NelWZOcgTnKjxibE5Hy4RSn2bVh141MvF08Mwcxlg1l8Ozm/y1f8lE3T
MK9w+my3eghKnwwO7zE5D90sS2+ZXN0BR5M/AhJVKOYz8v0byXkwl+PixpCg
Y/K9qlsGw+iMGPi0p4acC8O/W4jbLUHtNnnZsYRhNKX8viGigJzLbsTKdAIl
+MJNdDFmZhgWXtVBKj45V7cF/5KdKYFedV+ZeO8LZBjfrfRhk/O37Q9/2/r5
H8twfGQ=
         "],
        VertexNormals->CompressedData["
1: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
         "]]}, {}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
Z4V7+O+Ly7j3YX6Ys2zYDMbPPPz9Rhj5mK/zKxbdQkKs0ZqS5ahDy2BpsRO4
F90s2PVeSwF9g/xnt+DzbKfSwlfiey24pF2/AOtPSzYtdURu/Mt8/YrxXFJ3
MhMVxEhwr07ol8P6H109MRGNvjrcE7RZEN/jly4qixHYp1+uHarkx3dx7PvS
XTyYny/2N3IVxgd3vO7QOoP1L5s9G4rfX9Rn6MyHumW/OXpX+gQBIRKuW+fl
SbDa+SbzI3KwyvffHXAE90mRtuZo9AG6Zszes6gTfcFr5p24N3LIzocJol8V
8+1dXYTnTaFltbEhhy1jigMKeN6EPXmDVgUUeIWVcJ87hD42PNy5CfO9y3oC
yzHuPaA5buKC9/709pVy/L7Er4Sr9airdpo8RcN64gOX+J9cgzrUinvIgb97
X0P7VuUpAnr/8bDVYv2OTdnziai3ZSGMVQ+xH9sNyrWu4LtyazKfTA76obTY
okeiZwnY9dbi1HLk8EZf8kU+8qyct2CG+BEw6Ma2PQrzi5yOXHHB+OTHuzJX
8b2z+Gzq52v4/eJgM7Zu5LAj6jaxBPeQ0nKW/y6sp+zlhsJAvC/HFsr7BfI5
sSXp+2fUlYiWgOcXrJ8jTme6Fc/rO/zp/vINJOzyyTXuxPP+/NFo64v7JJft
/qArqiRcfnr5RtN91PniYBov+rxj47X78phfdetgizjmi62R+TXsTIDOIy4u
3vX4votzO5mJnOfuGXCl4lzbkfhv0VVZnCNRvlZC+LvL1s9Uep3Efr/iUdiN
9Z/OPhzxAnVbKPay4gmey0jjT9dK3OssBL6mqWD9Ko/Kzuegb9iq29xagvuw
380TZb0Y14tzdxrGfuHW91fhxHzuA6t/5GC8oPjGcXbcVy00XI0r8ftlT0p6
buC9yDHDTCZc8V15b/xuGNbjMf9ulhd/V1CiiSntRMB4VtS/Pajzmb6JFzZY
v6fSbHIznjeLd/LNEuQm5n+ieAI5jEctf/0J98nUFZeXCeJ5Jwe+JOtjvOeB
w690BwK+/wuOEMN8V83NzoEY94qXH7mAfK7xXjrmgN8vqrvsF4bctFfMnC7E
vmsYXh3bLE2CnJmnkjzGg/YbdkoiN7bAqcPDWP/ReTm9+QV9DiZb1+L9Zri6
ecbi3Nm/uNPsPtZpQv3dtt2dAJPaiHZOjI+E1r9fjJz7DJavO4z53EeERekL
c6rsR9APzKeVKWQdx3katOXQ7ff4/eQwlVEPjK9q/yzUjzonB4LeVWI9s/du
hKbj775NSi70Rz6HbDKWZiC3h2xDrrV4rm9zBmpN6EsPTqj/4US9tU5rHRTC
OI/5gOlBjPMuEWbFYnwjod/w6B4F5660HtmGOrTyiTDjxfinvdKqXRjvUn7Y
r4x8+lN3PcnH70fSBh7Y4Xcm8/K7X+LvHvDwWMy2moR7p1W0N2P+8dyUDwvx
2bP35uex/qr8ezsX4rd+HP+2EB8t/TezEC+0jtJdiP/IMBhaiG8PeTe1EG8v
GNm9EP+lU/ZlIT53tf9/+V2Bkf+Lv5zIe78QT7MJ/t/3PyefgIU4ZWz6aiF+
TFP1f/VMlSnpLMTlTI41LsQfKH1bvhD/HJSttRD/uCS5ZiFePZQqtBCf6Gjd
thBPsy6rXogHKpSLLMQ7z57YuhBnlRvULcRLOR/8L7/1ftv/4o84zJsX4mL7
pfgX4lXkiMZC/P///8//+/9//ovbf3H+r3v5r3v8r3v/L538l67+S4f/pdv/
0vl/9cV/9dH/AShGIIc=
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2vlTzHEYB/CNmWawJSlGaVTIJCNHrhwPicwmltbaxjViZ3KVYxzLTKZa
HTKqLZXaru2Q6N5SsUboQKuU7PeTI2o+Rdk2KsbtM8Onv6EfPj89M69fn2ee
ed4zj51vwFbpKB6Pl2jE440mNcX0KneT4+Bs/T2pUSyG6FT7XFdhJzD/51rp
vBNhiIOWpC5jAfGiB6eUcZuZU/9xp87Et42DOUf4uQriTe8fR/dtYk5dfOiL
2+RXHLRPkPRMj8NgvvCETOXFnLpZvXd+UDsH7jsM/uuvYIireyAY68mcenCQ
abC4iwPTPpszkQkYrvbv16N1zKn7DYY48QY5UE08d9FSiSHD7doC2XLm1Be1
+Qd6j0fwZPeiQsdsDMVdTppbDsypK3pihxQCBI/664e4Cgwih2Wfyr91MP/v
WzuPeOEgBNmrMwSuTzDUTv2eXNzInHrVJE2UNhjBLhuXk2HEE8+azDdiPuy2
An5zWQgCi++1ac+JH+Zsa4VPmVM3FOWJQy8gkJd+HPRvwGAW59FvaGBO/XJg
955ZEQj2OSxNy9RikIy74j73MXPq9VP2Hj8QjcCW3zjAb8LQ+81Zn/eQOfUV
QlGCPhVBku6nsv05mSuddFVWJXPqWSGZqDUNwRZ1VN2cVgwdLrKWgQrm1Pm3
PlvfTUcwJsb+s4y4WnHJby3zYX9pE5N+WYVAJtjgYfGC7KVNpYqOcubUT/dq
rzvnINiuif20QYdBVcPrtlUzp14S6nHnWD65izJnry9BGFzUyVEpBcypW1XF
//YpQNBwXnP0D3Fj88IZ+nzm1IP1eLVbIbkbdwqTN7Zh4ALuV65gPuxCkbzG
vBjBgOWp/i7igU4fOl/eYE69z676aakaQXN4dZL1K5LrVYuXWl1nTl28zWyC
sgxBhFRU40c8kSfQHshlTl0TvsdbXo5gjVu3oYz4wd27fCuvMaceafilE1Ug
KPrBXyd8TXKHlfySJIc59QF7L6uVlQj8uLSAFOLvTifY5WYzp+4jVu6cWYVg
WtmCpB7i6ta88q9ZzKlXR/SmmtxGoIupebjkDYbQhXc9PZgPu6PG9d0Q8Sh/
iUFOXBLz7G18JnPqI+3fZqT5SOvXSPO/caACYw==
          "],
         VertexNormals->CompressedData["
1:eJztl/k71G/Y/kkq0WLfQihSSoWEdKVFCyXaLElJIUqELC0oJJEWu+xRWsiW
LF12sm8xss0w856FSXzInu98j+f5M56f5jhex/zwvs/7uq/zPOVtnE2vLePi
4orm5uLi4fy+W7hWle06BNWBxE2l6AjYwUv+eFORhWE2Wy8U5w/BKhGHP5/L
olHv6yN7YoKJ4tTlBel7KKBNsnnilVSHur9+CIUeYuGdh+I8G9wbUcTErmE2
j41bMo12CQh2oMln3fRcXgL/i9JzNjLoRqnPG5XHxajgvnrbdVsRAgcXXeJW
UH9ga8FgrJEeAROJ9yePexO4+fVa79eqVWh4dqhvXJOA2qkxq4vudBz9FxCZ
87Acu1O05/lNafCQmro9ooeFCTu4nt7dWo7U8kcOuoNkyLR+8VNwiY4JI8Oz
r4TLML3OzG2xjoohkodml1eTIO7Kq/s8a1JB+q+94m0fNt44nRFZdJYCWVft
rrTuegvLzZfzbh9goeq6dLtAtyGYry6+F9wWAanXTNTFFFgo9e0RK/brEOgG
Kio3BEXjb8/QFbHjTI5u/534spejT4GCsmxsHW5u4G2MOMhCmWV37WScG3H8
Q74Rg6PPFI/ZjXzhDrRhh/Z/WEHguR4p1q9j3ai27ZSFoigVUvwud2aLEjiz
anHyFusHum415g/RJaD3Vk11sg+B7AkF583qVbjpm67JHg0CiuTWnkrzoOPs
GT0BjcByvDLbHXryNA3KvJ4tv/WLhTHVjaInd5ajpeOyXY/6ybBvc0xF9yId
48WTbycIlqGLzhF133oq7g8gneuoIwH3hnTqpEoqbGhdTA/3ZqOi3Oe+iPMU
0Gje3ZN/6i18SlR8ONzHwmXxjfMyXkNQtzgVcOhKJPx7yMf9TZaFopKfrxuW
DEGcmab/ydko1F0fEmv2m4kSCZdLm/QowP/dY3Hn0zqUl+APVjnAwiGv74IS
lxtxtxO3SglHn9ENPuGXpDrw2bOlTgk+AiW9XZT1jbtRo9ohIGE9FWKWEa//
SBC4RfdTrdfcD5T6uyVqkxYBCcfsVvx7QODl2T+qkYeq8LxiLXVAjYCoa1nV
JC86Sv/XyP8gshxZ1EfTvw1p4FhlfO4Z5xzDWSJBjP3lKDClf0ujhwwHLl7+
WTVHRwVe5vU8gTI8bWF781gzFcnUSSnLdhLsCD3w6o5rKiR12tCsPdkorv8w
XteSAkEJpo0iUW+Bx/KL5nvOXIbN+n1y8BsCu0cjNTuvRcEx3z6hJAkWCtav
1qmqGoKxndNcr6YjcTzwfJ8Lg4kaYbuoq49S4N13S4FLN+twf6wTVOmy0GO0
S5M43IjkOVMHR44+qp3jHteUOrBP49NGrzUEPqNXS7dadGO/nky/yyoq/EbB
2CZZDv+u+dZDvB4jr36s387RobCnJ2htAIEjdrm7ja5UYZuPkxzPFgLO77to
kPyQjqEn8/b+zi3H6O1TrisO06Ara73GJTILLT5aLpw0L8fdDQ8iHNrIUFy8
0KUxRceli+N2dTxl+LaDWS3zk4o7RO2+RAyTIDZtljtqKhU+5xAz19zYaEte
VEq+SoH/roZv/iuZDknUa0dbOljYkNjM2vByCOLTla+Hu8SAU6CP6xEBFrr1
pve0/xyCne0Wk/fHXuPCjzGTe31MNA67X/XenAJDUnKeCup16BIXpkLazfm/
5vN7I2sakdUi9rMql42VJ9z1Ivd3YGizdsZBMQJNvF27hVy7seZ5+uj49DCk
LM85E7GVwOsX4vf3mNSj2rClkZgcATWpZ6h6LwgMfRYUqfymCldrlj2XlyDg
3/LubRBCxzc7zobpjZUjjU95kV+DBmkj/qkrGSzMOqfE7x1WjvNhvNJZ5WQI
F7DLmGHScSOu32Q0jFghVHqLPETFC7fIv0+v6IF8z4owg39p4C91wMfEiY0a
mVTbYDcK0BJOePyTz4CljJK9/9WyMPGT+o0/uUOwPZfn29H4N/D12JtXI/9/
D7tUJ1+ZGYLa3CkLZmM4XnMuuTJWycTtD95qej6kQJzS3oNnSmrxhbHp8N2N
LJwyq7wS+aYBG+LIwldz2GhXmnL+gXMHvnhuZjKtTOBkblifcnI3eoQv8zDr
GgYvylWa2UECt69ytNCpq8f9bDoT/tEgxkDLpOM9gTYp256+FqvGA9mMmwXT
nD38V6fzQwodW18c5nlhV4F3zGpjXIRpsFUKhZynWej51ifYeK4cuRh90xnJ
ZDiYkFW/roOO/uE7N1tHIyrvD6qs/EfFKzZf9/Yb9cBcZqD8YckM6FAyTEu1
ZKNW+ZETjZEUuPK7pFBc9z0sTKXFR2exUE34bpzW7BAk6hvoG29IhUeVdhBT
ysRnp/I+7YJhsN+28U3WfV+0qk/W0w9n4pfibZonmigwa+A0bFhdg2PjuucD
Z5mYcthvs2luPab6Wq83zGLjf8qR9/d1dOCVu4ULPw0JTE/JTnfhJuGrnjuC
teHDENR5RyfOlcCwww0V24sbsJUpnDP9jQbWx4/xV/Zy5u1QvzX/+hrs/G+r
qX4eDfqfv/6yu52OBWsCKC2XKlFI0sL1fQsVRDXdbB+IjeCy2uMy+d0VWK5q
qmZuTQaD/YE8D1PpGBS0ffjWzHecGbadmNCi4VM+g+V7B3qgTE3cPsz9A3Sd
vyWhsJeNI8tDZPj6KRAi22T7X/gnUIo1mjG8x0Lfn+Lzts+HwTIx7b5g8kew
ctC/rnOIiRlF0fcGScOgKvKDLuQcAI922I84SzIxZvu+cPbdIZh4St0SHFeF
SU/kEzMTmLjs5vor71LqMC15dO+NDDaObZiU53nfiWdVjGyKowhUWTRO9G0j
4cYbpiznv0Pw+suDJf0eAreGWpxUamxChQqzdeLyNLiUN3aGz4COSkIPD93a
WYfJFXUiXDI02MHDkyGixUBW60vfQO9qDE+4OjutRQVrof/CHl4YwfhWYmhd
URUGO7jJv4weBPcLQWmXtOn4enD7FoF7pTgZ+MdjZx4NDad/Tn+Q6YUE33v3
7r/KgTKMOfWUOoq7Nh95kuw+BPXvhW3MXuVCW4/Iy90rWLidXlAc8JgKsVUJ
bgo2BVC5x/t5yDUGXi4zCFTtpEJEMiXU0u8t/LyMJk/1Gcjw0Hum8XoYjtdG
e/H2lGGH0XPDS1MM1HQtUlfgqsZliXFqhyPZWGS9b7c4dxdOWmczfdfSkeK2
FJy66RemXMwus/pNAeX5u3kmPnTk+bbtL09cK974dMbETZwKkx8zZ5hsOnpE
H5g9+7UBS7Z+tgzl5AHVj59PpfxkoNkm6RjDuTp07rFoSdo5DMO+nvS2ohHs
6S0z0STVYuXT7PT55H7ouVNX+8CPwE7RrV0xb4tw3Dg3oMWXwJJLAemVGv0g
dUxVgn+wCILHn6lcMhjF9joP9zLnYbDw5Q2Vzi2G5c3PpSXVmJivsemr9zka
nIz9kGUeUwp+8/dbmc/p6M6cmKzMpAG2UHMPLcsBXqHhBNJtOpq4KfqJP6OC
6dRlhR11RcjzVgSun2Rg0D615D0x5TilMirZ5cdGhTu6IVuVunHvsZVbNzvT
caU8LdjjaC+KkRUc/P+RoXV+aeQqFwPLfYtsb4i3Y07YyCVQGAay05B/7V0G
Wl4Wi+1vbMaWwVfXa+WHof2SyMy/80x0KT9Y4766EXmOK9Y26w2BTbBTQ/eq
UQz4rmlh8qIebUq5cux+9cLj2stNv7toeLzlqOrPhq8oP5VzjrabjluFvxqu
4h8ET2OBy9Tt5bB8/5NV7PQRHCzMalttQIU/SSvviPmUQ+npjpq0Swzsmlw4
+z2eBnblYTP8QmVQw6VRKK9PR1OSyKY1kzT4e/Xsr+mXeeAdJNb0VZHjBw2s
eKkhKpRIC+8XNCrE9zrhgpprGSi/367u1MUy3M14aFroxcZPrqG8bU+6cVOP
0cF/YXRsmndxZmf24p1YJ7LLezLccB2pfqLKeS+/YjNbYtvxyGrRXpv6IaB9
Uv/5+C0DtaPGJq8NtKA3SzD7OIcvyspU5PsxUT3xMd1Qqgn33N2j0EtQIEe1
W5EmP4pvXmjMBvg3oIPfv1Iu7V4IPWOsUxhDw3p5PV733ALUy7TLPcq5X2mH
yL+iWYPA90r72iH/CmC2SVAdb4xgyvjd69eeU8Eg8qz1k4oKGBWftnsgyMBr
VyLsHFNocHqsXV5TtQxKL/A9/KpDx7k9MbepszTI7Vhj21WbB+XvxiNvydDR
mSYrwc3kzHsyY+KRRCGmflhlz8vHwN+3dQ9FHCxD1UnVr4IcfaS7uW2DwrtR
a8nw2MMXdFSbK7jRldOL7y/Nt8enkOH32hcBPDsZKK1V/ubE23YkX1NwOlXJ
yalaHeNy7xkIZ3Vr9022YMO7Q1W6HD5w/oyfUAATgyN8r3PtbEI+y8z0nkEK
ePQWFfcojiKx032oMqIBPf2usfhUe2FaTL2v+TUNaX+vtUnFF+CQnmuRMqef
uG398fFQySCs5pth4JsKiAmb2eR6bQSjPdbxQwQVslxL3/X3VcA6BXFtDX7O
PfmZxqZ+pMHd6KsidpZlsOrjyzUyanT8F2xL2C8nYGlXX+Q+5Xw4+jHDbZ0Q
HSVeN6m4TFEhMqUwxrb4K/607x9K4vSc8aYzAmIiZVh+/1348F02UhYri20T
unFuUmbxXwQdL7ytFxQt78WS/obbxyLJEM3MDzi8h4GjP9gU1cJ2lJklVwQU
cHLq6jiZuCwGbmrwUGtc04rcle7PHnA482+SrEwIE83GZ3xkLzRh6V62iXoH
BWrsfyZYKo/ijLZZ3O3CBrTbV7iUJtILaWFGpX9CaJh18qNOmUsBri2NSx27
T8enV2K7VnQOwopXJyysWiog6fGznbcujqCwwSO5ukQq5EexDawFKmHCIkWq
g3Oui3+l50TKaZxe8WH19qIyEMkufv9FnI4x+hIFdyQJ0LzObh0m8kHriqiO
1DyB/Hm9By6v5eQy3UMH2UsFOO/79XfiKCdnCAsFlzoh/mf/0/yBOxulth0d
FyjqxuxTDeFTCZx5tORSjervRXmp1BK/+2TYdqw+suQgA/9dvHFg2UA7xqx1
k26OH4KnhieUg0oYuIUhX75PsxVXTQXk93E444PvhFIUE++L9FcFvG3Cku77
W8u/UcBUTijadMconpsTWBpdbMAqUZnMVNovWLfLP0vKm4aOMaykn9IFaB45
sPExZ6/+UgqdJHGTIXWfNJe0eiWIs22uqp4YQTmtzNL+PCocdMi0rXashCO1
v+ZIDDruIh0e+8ukwRXdDFT3Koc9l0n+3AwCQx6nr312iICbUtx8jx2+QlzH
nPnZRgLptRQn9wM0EM7U36zyOB9dP7qtK62mI99mt2CFP6WY1VR2IPw2G1f8
vUrmG+/GtCKpI6XZdNx8Xv7Le7E+LBR3vf7QkAxuMUd++1kykH+19QJTpQNd
drrI1dkPwRPh+B+7uxicfb3spOPjVjQMcv63yOGn3VeN8mVx8peKu9jkwWYU
E1UNPR5IgbKjeJ5/3yhOrP5Vej24EWlFxb51gb9Abk21P995GnbX9NrKOObj
ivO02uIcOrbEp/n/2EUGJ9eK3ZELlcCluOEObhrBbFuzjUKDnLxwrjFsnWoV
iB5WCuQtomPD8kPWWpz8ntVS/aLxTAWYJoVqpmYTGJ7xIU7tDgGtTRsXb2z6
BpLGmSGLEQTqrdCSu+FFA82gyCJacy4uc9+waBpNx76//K/GtUrwQTCJknGD
jWYPr2uqqZFQ3WNpT0YVHUXrY8puXehDr36x0vVCZJB8vSbAiONTZ6zKmox9
O3DSmfSsX3UIwiPetv6bYOAGvffRSQOt+GX23Cqd7UPAiqKI1f9gYmn39DvL
v82432uvxgpDCuRbyR0+YDiKdvWOf4y3NGEmXVyNJvkL0tXLpxxUadgn/p1b
MT4Px1X/TTf+4nxHAux0sieD9BeNNanDVdBU+LtqdIaFA1VqF8mcd4G/CzNE
VlXDTNpQdfQjOhZuu/P9yXYChgV8Czy/VYD1nGx/VCSBw4meB5WCCXC6KqUY
M/ENtpz/1XLjHoFCrqrCda9oQKbJfPRelouyBQ5dvf6cXiTY6+PmUIyOsrwn
2u3YmM6r0oaGJJzrum1U3kTHVGNxfQv3PlRZvuj46vcgvE8KEeB9zMDhtrSl
0+860KkeavrXD8EmvuxBVS4mzjyV2HVzVRsW6GRXHhccgtC/NuuXdzExQTN5
j9/xFqyfdCo5p0aBSybClzeZjqJqz+aqcZcmFK2jfN1E74G9lzV4xyVoGDn2
qXhSOw+/CabGn+fkqrPzo2oVfmTQe5ahaGxcDWKnqzK2UVkoZm6Cvzdxeoyj
LMX+VjX0vKl6MOtAxx3P1kipqBOQp+CbbtdZAfWx7lnvnxO4rlI3dCKMANZJ
rVg9FU6O0tmuEe9OYO2pbLmKWBqQVNSHVRtzUCRpKV6es/dkx4bXvNxdjHbm
lb2CHH02uZjL6Z0hIc/l2JDNrXR0/BbFhvt92Dun/eoqeRB8Gu87WgUxULbL
v3EopwOJs4xlLnxDoC1TtDWNh4mJ8unnvITbcI/hu1Iyh//kl/uk08NEwZlP
232sW/BoWL74P2UKuNOjrkycGUXrSy1V1wOasMBLQjS3h9Mfdhix64RpKBnS
7JUul4fnZkz0dSY4OSMhze3uEzIEbH/cNuhYDTqHtiwlDbDQMdivsHwrx6eY
+P1xcDUsmT+6oHyVjqcj+suO6REQHHa3fmZ5Jew9Gjgr/4hA943lPldiCNje
1VXQEFIEWt4U+ZMOnJ7ApZx+JoMGs9qjzrI3cvCr0/S+Slc6FvM0Gtm1FGHY
jI1K/jU2DuyefJl9mYTcG5vLbnfScfkH6UWPkD50YiT/a6gZhIfz2/2tQxn4
XO7tytHqDowvljm6eoEC5618q/v5mKj1UqLDWrkN0/q5bvtyOBEkGr80wEQx
/wd/BYNaMGBHfnSpFAV6W5M277gwipezinnuvGvCmvfsBdfyHgg1CA3zXk1D
1w6Vq3/HcvGMQe25lfN0/Bi9wjjsNRnYGf57biRWA6+RdlRUJwt1n0Qo6GnS
oFp8Yfx6UTVsObwzse08HbuOn0R/EwKm/1V33bheCUL51ev6OTpYJ2oX63zm
vLvciY5Ek2JgbEso9zxNYM0KMeJBGWd+thPafWlf8ELyj/FGKzqev1Zf+X5l
Ebq9q46YsGGjzu9rkl4+JCw4ofJtvo+OZh1Pqocz+rB14paW/atByI7uGz4X
w8D5aeEdK0c7sPlpyZwkhQIzc0URB8WY6Nbyx07buA0ltPb2xHF49YuBnd4s
Jt42dzay6GpB5hZaohQXBRp+mNlHWo0i5Y1JQ9LvJnyzqGZbEd4Dp52WbtdM
UzHrW2iG8fNctCNeb0wWYOBa36Lyuo9kqLQKbRlfUQO7M70Sj5WxMOjEotyu
EzQoPt6f47OhBhweKzJ+69HxxoZzs9wOBGz5Fd9hQuL43UdSg7QRgYSc0/Sd
GgIGucXnFveWgH897zttdQJ15VJaWvtpIOux2SW4NBtPdh/6vfoIHRmhklr9
G76hlBbflnRrNhqVS+eExZLQ+s+m3l8EHWm6Ts9n6/pwTOGnpfaFQTDSV8na
lsFAr+C6PFeJTsxqnjXxL6eA3Mni8qhNTFRrvtmVc78NS0Xu7FxfQYGhR9eO
lU5zerDm7Y03JFtRLs/k0QCZDOkXhxQnbEdx2F11g8+BZuwmRx0tu9ADW38t
722lUPFmXPOl2Q25qOKkdUlRnoE+iZvqV/8gw6Ci1z4J3xqoODbsfPgdCxX5
FUKf2dBgOPCbhtzzGjB4fPb4m410HGV8XzriTkB22dxxUZEqeFf3hnl9H8HR
c9kryQ4Ctn4stXHNKYEfn0au1SkSuHKG9nILmwaVTE/J9kPZKHT8ctgfLTp2
chtaiSUXYiCu/DtsxcaKoX3/lWWSsDrAf2l+hI4+67uvHfnVh7xD58xjtQYh
/Ua4p9Vnzn1mCI3nqHWi7c/jY8PZFODzL3jLr8pE1T+ytasi2/DdD7ezd79Q
YFPc+QPJ/5j4J31BKXlXKyZm+6XfbiWD1p60EbQfRXWh1wsXHJvRXOppWpN2
D2gk2Qzpd1FRXf6qhxk5B29L5gz2b2Ng2Vm+laRuMgzxrQ8pwhr4knhwd0gc
C1fkqVw64szpWb2yUkcaaiB26VKovCDHlz+zdX95E8CfaaB5Xq0KXkw+K9fS
JLBlUuzKLxIB16yC7HuYJVBQov3z6wYCrVbQBJQ4vUxmye3THoFs5HbfHD+2
i44s6g3nR/aF+NBxUkeMow+slDoknkPCtZ7UcOPfdJS3GJlTHOrDkfs8yjtU
BmH7js3ayV8YGGJq039MpxOfXbTYfeo9BSycMq7e5PRmrWbRSpnkNgzis6YM
c3iHsKh5OTcL6W7/tr7b14r66ls2jtdxfOirsqfnjVGMbA6063vQjPEyFrOb
VHsgKKfy8kIrFWd5T9/0rcrB8NwH5O+cPrPliO3uqAEyTOiIbq7pq4EX8+oC
BREs3Pi0bM86d07fHOKXzCVq4NfFQAGB1XRshATd4ccE3KfcPe95uQo2PG4+
pbuFwEXD+Sr1YQIM+ZxLy06WwpoD97Qn1hF4b6V1SwkXAfFvalzeGmdh9g/z
BkFlOka6R4ucXlaIr5xTXiVbsnHL/SrGQSShXMD8rXsc33jtEXfv5J8+fFnG
mtq6bhBGPnIV3v/KwMBIaRezk51o9unH3oQ4CvitPfDloSYTM5Pz1wjnt2Go
ndtXrXgKaAjOHrFaycI9Vs+fPD7dihmHL1k6FJPhoIirSejNUeTPjIhdltKM
a5M6WvyFe6Bjd4uLVy0VrafM0/he5uDet2S/QG0G2m+ZEEUWGRhlCm7bBGtB
MOzBOaUQFmoUr7ro9ZAG3OE+j5UkaoF/38kjeosEZvsa5Mm9IOBk48yjV/FV
0BVgufK4BIE7HXyD28cISGFljXPVlYK6d1XSQS4C01b3H9qwnoCv1ht1Y80/
460Tp13zJOn4/ORyH9bjr3jyVkJJpzkbHVZ/YJxqIeHoZj7x8Gk6Gu47MBHJ
3Y+aZ1LenB4bgFfMthWJ3xlozFA/kmzbiTeex98lPaXAK8E1FkP7mBg383LJ
vakN27YoqXiEUIDaKS2gtpaFsdZpQT/sW3HNOx+pn5lkkPohpHfcZRQ9z5nP
TzU2Y9LEQpr5FAkePdBb21pMxXvNKYvMMznoPxZpDocZyJc2FRUzS4bLN6uP
njKpBbmSMrbSAxaKe3x23v6MBu6QkJt2thYe2mXP+LEJVPbRlaNFE1D3pqGp
r6IKRojQPvG1BGYWsEK7pgm42vL3Ek30O8j2nP+s+5eGzT8WVIc5vSzvlS4m
lnzCX0KNd5Q473RF6WBih8ZXbKP/efPRjI1tj12z7vWQsEzJ70ztHB0HPtcJ
vxboR0Pd8QvLegeAHvKiULGSgT9viPG73OnEtOi/3pt9KXB07U27cH0mXn5z
Xnqurw1L8npfVHO4o/lCta8QC73b9/bpeLbiQrRIh34SGTrO3CGn3RnFluMq
kicYzcgXsnlJbogE0WFp/NZ5VDz34+O8lGoOpn0bzlxvyMADWx5ZrOGhQJ9w
sLSady1MbMnr63DnzI+wxgN4TYO6DNqgqk8tNMazT9wZ5ryjvV29LgkEtJxh
HDo4UAW7By7E1K0g8KGnmmz4IgEHn7AF3p78DqIyVLfVYzTUiZIpIG8kQHjl
67VKRp8wR3OUxs1PR625TUs35gvwkUTgFtIFNsoee9xTQibhV7/fK4QW6Rj0
3bPxpkg/Pne/+8mrcQC+s7kvXqxhYEqr6N6VDzpReeie3D1PCiT8inhEHGai
wHhKiiCjDXkZ7yplvChwgiu2+bUoC7u9HNcfedSKCVL7dLKiyaBul6Rp6j6K
1dnC+zrmm3FoTY2nVScJlKtsbfizqMgbwnrjvS4Hc8bdNcaMGXhS87RoKx8F
Em3zlrtFceYnx0aox5mFT48dN+Xh5N4mQzsHjKwFWm+l/b4+AiU3vfsu8ZaA
cxoktvJSFbCqZv8sLNJQN5Gnw2k5HZbFKG+LCf8O3S9IRTYEDSVO0R4dUiFg
pKf24GTVR/z80pIdx8M5/2SX76WCAjQKeFXQfZ6NIi6RZY5MEu46/V6ydYmO
EkJ7lrpl+rGLJdnAUzwAtkGPHLXqGbgQCN1FTzvxxA5BioEzZ/+w1Nqpxzj+
/kGCdXmqDbfOBO1jcfjWcN+yQ5IspPip+z4Ob8UR4LaPeE6Gd3er5kzvjmK3
26u7h4VbsFF9FflnJQlS6G1qae+oOHjzuenc6BesPvDTvOYcA5/eVxRjC1Lg
xdg0Kb6oFhze1lSl2bPw/dXImNEkGpg5eW/o/VoL6paFpaEdBMq5SMqnZBIg
WLnfL1KqGspDgl1TOe8ourxPRHE1HfZvztC6Xfcd9mb9FlEepGF2wMMp2ElA
dNEpRemzH7HASKDPkbPHFuhkk5x7BWjvm1fBxdHH46Pv1bQ/JLSPiXokvoyB
R3lmDmRt7se48LufXD8OwHjg4oBjEwPzGSLLTkd04tnQl/5RdhwfX68bsseI
iV61Kls8udrxFomius+eAlZ68sfObGDhkzCpzLC4Vnz53675hSBO/lFo1F/w
HMVlGQ8uNCm1oOqgdyV/AQn0G216DVOpeOK6s4JU6xe0YKvmp1owcHHyBXe2
BAVUXUUOjHfXwg/KUMEbGxb+aWeGfEqnwcgv0w8eHbXQHFexw6iRwP1H6kzW
ZRGw4l2qZ+jOajDwg8vf/3D0UZfUzFtLh6jrpmPKU9+Bu+5Em3kPDQMcBia6
NDl7O03jR+bsB9wURD7mNkNgukXqmNupAry3q07q7Dk26je9uGX/l4Tgf+Yo
k4eBs8kqmZPb+rFtrnygNmkA+GQdVs63MPD6GfHXtW84/n6TpuN8hQLbj2xc
33+KiVP/OtaZ8bXj/gcpv0RsKKBdU1NfJcvCi/oDqrZprehknyxL5/RMcuHU
PmNvjn/ZOU7c2tOCJbeFPbg+kODT6avRPIlUVDiq6kgv/IKvdK7mBl1i4A5q
iLWkLAWedGGI81gt6PQs+1ZjxcL2kpdWRz/QYPr30NsXzFq4Ve8r7V1D4FKE
wXufXAJubVxXG2RQDblx0hu7WDRc4/na77AwHah8xXS6PAL/xyengzs4/AG9
46YuATGZ7f9JJX5AYfP/FLz+I3CPcOYVhY0F6K9kXp1+lo1L7WThrQsktMrY
L1fEy8Ajaod9tXf3Y7oo7ZxUxADcic3nDW5nILtnTgDSO7FDhBA4YkmB6Lsl
F/1NmHhh/Jv4XqF2LPyy/vkIhy97uZJfU56FeX4aFO1PrWhdWezQ4kOGpKiJ
9ck+o2gXJ9u+3qAFt3x/mj2RSIJ1wtunvsVSkSVrdScp+QvuaRe+5GjDyROX
fJf8FTk5tPzNkf9W1IFTW+b4iBkLT4WH+JCzaDCWujCVtVQL3dEHC9PKCDSR
UrH5kk/AmP/xpwEm1RBf826OTKdhA9VK45koHRSKw98c34vwWfnMiqRWGl73
8lvau58APe58Sr3LBwyYGXec+0PgRgsD24lVBfjW/mGlMUcfI/2Gs6uXSJir
fUA1ZQUDd7UXxVhq9uPWa1WFB58PAK9qbHBLBwPTnuvEemd2ov7yIgs1MwqM
JAX5dZoy8fF8yr8MsXaMrZE51sXhC92qGU4KLCxbH5ye9qUV85fDbIUnGT6M
WQcevzeKOzc8SKKcbMEnw+NrHGNJ8Geb5cvX0VTcqN+7dTriC2aFhkpa2TLw
BTkjW0uJAjGbNuoWCNWBeunVM/fPszDl7VSKag4Neo2ffcHVdZA2/nWqsJTA
gEYqT5r0EA7Cs8DxxGE020WRuZpC+T/+v/wCYyU3h8O6y25POBwmQnJkORz+
j/8P/39CBA2N
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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

         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw9fWgQAAAGCbImRVlDSNomylRMpWqcxLL/C//93vO+ejvn/+NxaJRMLf
xG80lknH4kAmngABACwWEsksmIqmc2AWLiZTuWw2V4Ir1Ua9BJVRKF8p5wvV
SqFYqxZhpAaXUCQDFPLlSh3LpaFSOpOHqjW8gaBNAi1jTazeIusNqtXAaQon
GJps8VwTI9kW1eZ7nCBTdKfd6UoDhu11WZLrcbwo8O2+2O4M+jWEwLs9WaKZ
bodosowgjoaH7dGR5NlUFoaz4WgxH42VhbHe2QNpOhlPVGUyXarrzX43nWnL
+WKlK+raUJeb9UIxVkvN3OgrazsbzjVtrpsrw7bE/ni0MQ97U98eLPt8sneX
89Y6HXf76+V88W/Hk+fuD871dL55l2vg3/zX07s9H/3BZOx6j7sfvF+he/8E
4ed9dcLAObrhP3kPPbk=
              "]], 
             Polygon3DBox[{{91, 92, 93, 94, 95, 96}, {97, 98, 99, 100, 101, 
              102}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGBIA2JmINZRLKrc//OK/ZvyL2lMix/bx9pMfpFR/sx+oMS3
ammYX1G4aj9p4S011T2P7XlMlf4fCB04cXuTe19euF+1tzp94Jn71cf2u3Q3
ikqaDJz4jFOsdu5FV+3f3nB90f7hsf2M3HdFc/gHTvxjgm770jlX7Rc+O/Xy
OPcT+5K12hfkXz8dMHGf3gsTj7y+at+3NDhytd0T+xWX+1v+LBs4cV/xRZ5h
ltfsjUU+2PQXPLFf8JY5RT9l4MTf7wqTqO69Zv/J69Titcue2H+eeuXCDumB
E7eMi49nunPN3kJVuVz/5hP7g0/6zCVuPBkw8diMK/Jtltftzyh1SAhzPrW/
m79fcmL3wIkrvC8u37v4uv0Upi1msTpP7YXEjns9tho4caukmICLbDfsTY7/
1/DwfWrvNaVo5sL3jwdM3GhGwhWHohv2LZtO/vtZ8NT+oYfqGrZ5Aye+qMP2
YtnSG/bcH9s2/G18an/CXWGdQvnAifNXSp1bc+OG/SR9lyTGyU/tN7hJb7AK
GDjxwdbeGGzhAwCsWNgH
          "],
         VertexNormals->CompressedData["
1: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
OGshAdbw4c+BDDFcKw8e830ggv+K/x8zpj+T
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJztWvk3V9/7JTIPoVTIUBEyj2V8kKFBCakUkRIZK0KDhMi992WKSNzXJRqJ
BkOJSETJ1GCKNGgiSSOJz+P9e9+/4PuTtfZ61rnP2WfvfZ5jvRR2BjnunsXB
wZHJycHBhX/HbriG/RUjwXRroON5SwaMRRIO8/RQcPKQ8/2K6DjIuaPTe1+U
gdMBfsuGpChIHVr1TEsjBtTeLXj/o58N+4+s6xb1JWEWx63Zz34fh++iW971
P2WD+MbqfJnvBLSoPWpK0I+BWPcsn0lOBgweudza00vAhUPWRfuT4oA/OXRH
hyYDR+BdV5IiCXsM9ngUy5MgrUWYXNrDQN2VHOOyahLaggIkvhcnQWVz/Q0i
iwGfdZVJ7Ucp2HXMjNMsOgUsJf3PPr3NAGXa01eoyQK1UO6PQzKp4H68WXrg
LgPDPj7iTD4LGtz/xKVEpsBTVXclp4sMNI60/nWuYsG1oCOqRueSYMN4tObR
QwxER0C/2gEW6DZO/rKWIEH16n2eKAsGui/VLuLqpKDjTPM3r5Nx4Pw44lir
CAPp5TaZ7AUUgNnuSVHDGNjRy7ludR8b2KecXYP2kAB/Lpf3zYoGi0OZ08ZP
2KDi6Zs7PEaASWjrS0+zGJg1zFo/F/lRiHKJ2NBDQLaHNVssPQ7sZPI1qzUY
+GL+zlprKfZh0F79UYGE5sv9m3d4M9AbXb+t7g4J5C7OukeFSZBHqrwUPcOA
XCi8UjpMgaiHXp/osRSw8curMLrFwNwzOnKb1ViQdDxlWnlhKjyX7nS3qGaA
fLSoq5thQcqqY0Peh1Pgu/+8OY/OM3CqUIsj7BYLanJOzpdlkuCqybSGQgQD
9cOM7ukgFigY9C5InEvCXcXymK3AgG1uwg6OpxQ0ih+vE0mMg5scbsPdwgx4
u1276CxJQdan2roR8xh4P2+JZXYvG2ie4UOtu0lQcejmfycUDQMqYpcz29kg
9vicadVXArbMn3N6pW0MLMte9Hc5BwP9yYNdht0EmDPHtUuy4kDjUWDjJXUG
dM+GOrYvJiErKaxqyRISltm1Gs/bjX2WHpFuv03Ct+vt4ucuJYFOgMqTtAwG
zo87dxwJpyAlwC7hFe732+sQmilnINBBimOWCgse3jZ5t3teKvzsOro37w4D
fxJ2ms7NYYHOZgV5k/AUuNvuc8+ygAGNBvm8M6UsOKLYns+ZkwQVefN/3Q9j
oKcyWZnDnwVt+91MFs0n4X2RXJegGQMpZWfrJh+jv3YXr/I6EwcHOC7Ijwgy
ENLKd7lGjAKFfNC7sjEGRu/4v4EuNvBL5GSn7ET9u/5J+iEfDfMr+W86tLDB
4VGWi8cXAjzvuLx9vyUGBlSP+5ZOsqGu60S4QCcBm6PuGg4XxMF4bbxz1HIG
lMMl181DX9mfS8g+jT7rltZzj9rJAK9lwOGRMhLSSwzTHFD/9k2F8+g0Bpaq
cKSrHqBgaoWTY2xoCtj55dz3u8lA0qBf3tbFLLjQF7r0pXAq6A2vf+GFurJT
D/xApLPQNHYTg/tSwEHv1HHtPAaeycU0DBSh79KX5T44nQQPeJtfCYYyEBw1
NvZsFwu0F42JGcqQ8NK+5UvASgYql9JSf2spEDDJfsZbEgenkxb8luBjQOlX
ujHDR4GeXcs5udAYcFCt5DqBOtkf1Be4aDsJ8rmtqnNWR8PzydKCygds8BTc
M//qJwLCDENE4UgMOGs2Kvr9YMPSwnyb8g4CyH2POnbciQMD84xe1WUMXAw1
aMmXIqHsj+nHMFUSBh17xZzd0Ee02kOtYhL6XpxSvID9q4ul8F9NZODmI71L
LB8KXD+UXHngkwLZgs3Hposwl5w+h86Zx4K3xlo+rVMpsDWvRePtdQYiyr0e
H4tjQcVoX6jh7hSQSqgPFMpmoExSiT5Is2D7hV3KG4gkSPQUV8oIYkDHPk0y
wYUFlYHFuluVSFjDeHEqazHQddLRT+YyBV2D/IHmfXGwtUY3YRP6wqllB2fk
TxKWso6O/6yMAR7VRr7xOvRRiXCZ0wYSElWFOnXPRMOagkj7o7fZYC9RbOzz
ioAgVasX/fdiQMetYee9d2y41pNyQvMhAXccwo7pf4wD9XUjj0JlGTjwWzH0
tSgJDpeMxpX1SAh/4rntqyMDUv2uAk/ZJOjoDFRbHk0C3xspT+qiGWBn2ofs
d6IgxLrsjPUG9Iu7Z5dMLgOvyth3sycouPtzRPXCQAosUuAp60EfFThNrTzp
w4KWg04X29emgIr1zuUVSQxYUNKjNcdYsOHB/qJ1+5IgfVln8rldDBwLjOcQ
MWKBT/So8VYjEi6kcH8IWcRA7Pu73V2HKBC5fMVrr2E8PHxR07fzFRvkJX5v
Le/AfIjP8/VcHQtR91rOpF5kQ/WD/WJmBiRMFa39brAyBsyTJpdcZ7Mh45bV
RtdWAr5HXTDq2hALkxuLvRY3scGkJbgt5xYBN46l52RbxkPudfHgt0IMHErj
T+6dIGBR6ESfjS0JigqD17jR71HfKzdnHichzN68TH9NEuxZxb+8cS8Dbxtj
Om+pUPDTcOkWOZkUoDbOsteKZ8BmLr+8bgMF9/NbU/XyU0DNbyieIRkIWLxi
QFKdBasrc7+8WZACLfziPh8O4v0lLOj5xJIFHWGbjnCZJ8Fyjk6V9PUMELb7
c9M5WZDzWFB7iycJEl/Iml8jbDAPFIzzkqXA0eWk7t1P8WB/dv/Dwlw2yHif
6TFmkeDOnNDQ9zoB9eM9YkwwGw7XFGUs5SGhostLwiQ8Fo76/lL66cOGxNa+
tQ5FBHRt5H/R5HMC3lpEVd6h2HAjkq1PZRFwlNOv2vd7PHjOLmtw62DDx3SL
9Jfou2QtCeq4PwkXzYcSMiUYKP40UquDfPVeOJ0g9SYRyI+/uM2MGOgY8whw
7SLhw9V1to6lyeBw28rzPurtQOa6kn07KKhM7XvaopoCIdGlLmdcGPBIkJm0
rqBg+XNiNP56MlhI7hMqW4XzTI+ruMAjCkomb0wFdSfCcb3ncYMKDHDXVVwv
S6UgUU6s8fM1EiIdqJRuazbscvwYGeRBwnJNTttsvwQIDZgMmyfBhr1uYxML
OFEns1Kc19+Lh2VXuHX7x2hwTpG74H6RgE+Rj66PL4uHX9f5sp99puHEwrRm
nkACJOt5S37Xx0P5is5x59lsuH1oQfgNTwJ2aTsm/diXAElL/I7M0WXDu18x
CtfjCKg6NxVpeYuEbD9tuQd72aCj2Cu/8AkB8mkiHGnTLChYX7uCzGGDmlRH
fpAOCetrIsdeXUyCb3NuHb1XxQbLd/m/VUgStBcvXnNWIRmW8JfOfXQPc8Bd
68nxehIMpngzDAuSwCvmXdnaK2x4MXll2bN2vJ9SqsqNxllAZjrqJR9lQ8kx
iHxeSEJew13hiHESTr8S+Pr9HA3Tmd5f/lYR4Pa+gM8a/VF9Q6P4RwINxk8u
7FvOImBTcQ53xI8EMPm0efXBCBpaBjVjK3cQwBxQbwo+nwBTpuF7Xh+kYVPH
3089FgTEoAm2/kqAGmPNnk/RNGQbMvNIYwLmuj3ZdAL1sqVquZFLFg3vP6pN
HFlPAEdvp4zRX+Qn9pZ4fxkNZ01sxXNCCbC+/VUhcBkLQq6nO/e10bBjFk9y
0HkC7MfGFY04E+HnYf/b21/R0Pzl6NGXyOcsjb2elg6JoKe8Lnv0DQ3WXCWS
NThvyH0IoLciz/tV01U+dNIwlSM8LPqbANaq+0/Vl7Kg52Jm05EaGm4MRfHK
DhKgZXj2J3uCBBsqud42l4ZT04VzD1YS8MZ8de3cZwQMLCmNKomn4dLVrgFv
koDc1Qs/F08lgOShfQsOhNHAOS5wo9CdgKsnozvelCSAxbkFcR9DaKjmMsi2
Qn4+0/FjJzkIsOnl7ayNouEzqPEIIz82zyyF7boIeO5PJLRm4Hezly+5YU9A
w6swTscpEs6vr7IcvEGDX9KX2wYhBEh0Nxn0LWGBUHlm/JHHyP9A3Yh1Pp5X
67iA5QQLnnu8+HKrj4a/6SkyHO0E2CUnK4rYJcIVQ/1oqwEagPTW9R0hgP8Q
Odv3NwvOT1tr+z2lQWx9cBMb5/xiq7ZPl+RZIBlYF+lWhd8dCy4cx/vlVOrd
yoY/JLAKg8KzaBrqq3ft/FKB81uMvstbnHMz+dO1/E7QUPr6UPi5BALut/Rd
e8dLQPyxt/VBoTS079oswHbDdU7KV7hUJoB0pHjM6H4a6lgvQ4uAALUgDf0K
fgK8Rldez4ykoTdPRS7ZiIANK/4wAv0EDKdYltul0/DiwtmQT+uw7onHPd9p
EmwTpTYOl9DQacRPte8noPz1p2XrsH9j7R+Z0g9Rb5LfQhflEaCTYdm8+hsL
7CsLuOb30PAoTfKtQguu0zdd322eCLfuhNmcfkFDt19iuMQQAQ9/frUL/8qC
fWsc5o+gDmtdVrVqoa4uqCv2KS5iwfuLtuJmt2m4u7Ej4jn25y5V8UICz2tt
QfRh8zO4/uT3iMEbBEz2VEnGvCNgJeuS+gCee6DAwBJ5zAeRy5IdTlLIm6Vc
tc8+GuZOztGP34brbBWSMmlDfw25Sk0F0rDP06kg1hx1NbB8o6QMvsM6xmbb
HKJhi5L14zMrCdjZKr0j6SMBtmm8JUbJNIhHZp/avhZ9Gv+6J5OTgvJ6FcGJ
yzQ4bXS7LBCMfnnwglFZyIKmvllbt9bRUGK1n6Mth4DRXzGDWwZZsFeZ1djW
QYOAo8UXn0Zcxy4xJ1gzEbiPbfQ3fkZD0fBUpN9bAhxqA71Pv2GBXuatqG9N
NDQsE97sgnNadkfklkWSOO88z38+hboVaitNPoX69kqxiSucRYHh8lm8JxNp
GJc0LXp5iYDXX/2mq/9i7iqrFTWij2b9bo9cdowA0UbFQ2q4b1W3Ed2tvuij
xiuJuzdj3u48bj17IgEMtlu3zN9Dw5fzO/ksTAlQWH5/tA11JK5WrcNGPsMf
nVOvNCTg964JywwOEvzVh5QWxdHANNY/W2+Hutwcc+DHbAr4m3K557JpCJJR
HyL2EsD3y23itQALXB6FuT8ppcHbOHOhVToBvfL5x0Kb0BcZpZ2W92m4vLea
fzbmZ1yc3c1skUQQyHQ3jW2gIYLiTVbBub2pajZ/+wMWaDQOdk1W0jC6p2Fv
8QsCxmJaywT4WPC0oeJt5AUaGvfm35NuJoCK2fuyU5AC1Y5NNyUwb3kI83tC
pwl4vKT1uZYaCbv/nLBM2436F1N+E7iPAHW+tW2dJwnYo/6qVG8r8sM4jbpu
wHwL35+XgvlR3RnYbL2ZhjPB346MrSBgyf0/+kAQUBpxafE6D9yX85NsAz0C
LNKq5+RqkNA+wXPlBfK2N5vg87ckIPzPo8sXRSho2PuOZYm55/zVTPo+5r/B
tj03NoxQQFqUTddinkf6ukx4xhLQeXDo1sUUFiSIbqMUcF/ZPaqfQzG3w3ju
vx9pxvfW7sehcy6hjwRIj/47BLy6beQMyejTulQ5AYaG70pXIKuWgHufwiJe
DlEgZ6mfEYE6Ge3/9nQX+sjf2310Ic47n1LXHV64noYK7Uz2+iAC9OIs3k6f
JMFQIqF7oQUNy3iVdwy6oO/iLHoX4nukCiSVelbQsFX8l7c66iP4HEdlOubc
ZQsx/WRDGk7W+yw01Sbg9ndJOYFFJDyLbw1MM8UcWBanMU+DAO+vYwIMQUIo
X6LcmtXI52wfhUTU1QcL/vAJOQpkFO4KJSLPFdvLNGTRd/KLlWLnllLQykRf
Ze2iYXW8UlC8F95/CkqsCQWc+w788HzsT8P8I5v3mB8i4C33nqLI1fhu2D/h
OB/9/qFx8KYm5mfWDYfVAlivrWayUMKHhgzvRvZmioCRshC3kBv43r1y1Mdt
O+beyXeF/dEEGAoorTbFfvYc1DHyXYt5ziGv89mfgF9i7ULNiSQo3QlKbzej
wXVNlrHtJtSt8yVde3w/evEnv3xiQMNGlgSXNfqtcshCb/Y08vFSzCxNn4Yy
99eGzVoEeAh7/tDH94uKB5+LjzH6LtOJqlIn4Fn2ep0dySTUjK7bWmODuSF/
sfyTAQFDh9ObRRQo+LZkybJUZxrs5zOr+lcTsDzkE1/UNXz/9Q8+UvGkgfux
onEszlHZ2uKvp6RY8Cu5/vgy9LswUXggLgz1nRXxysaCBcxtqyV79tJwsaLP
bPoE6iTcVV4S67WN7AVPIc9Bkf6fhJE3+4/+b4aLKci6xMdnjL5w/jX/7gDm
SZ2JCctDHt9bT+Q+VdhhHnq85WKh34+qFctnppHA99LNMsGEhjC51ZsvOxHQ
UbIjLAp98XetGPFYjwadLP9+NzMCGu+1Z4bwo65+LVyRqYtzSEJm+nbkp/Hm
eJmnJglB1+00TFbSMHLWTWUP8jO78/cq2dMkcDhJxBqsomF381KWHfJzbVWw
0JLFFNxhEnVOb8T7wqvhDBtz6Zfz3/ChIgqodIeeejcaLuR72kSj7/La1i3m
msuCDOWc1OOYA8MqZndbcB4orO7hEF3Jgs4jaW/LvGlwNBLna0M9FDZff60g
wQLFe7tHxJFnLWX7kHrkLejyDefdhRSkKZzNXOBCw61fJ+a8PYL9PLLoPo/9
DIWFym2xouG6hoBP224CtpOrhLQYnJeFS/f9Rr8kdFptCHEgwOxUwb13gPq5
nXizRouG1trKTadM8P7NeqjoJEvCzzkFnIwmDU8+54od1yQgUJ17qsKCBE1Y
dfMN8llfLLK0Wm3m/2ZKGtm5JJRwSBcvNqfhm07lb159AvU7vWHtUgpiYgZk
adQzI1DCrWSDfoRJmXvnKQj+zDT/xf6bPA8uisZ7M3bFWW9BHhYIWjxI0Hen
ISZsStIL80FQ+yAXW5kF4Z9KTFx20HBs7YJtobhfZ9pk+crZLDCvFCPEXWlg
JVyxW4E6iXOR+rOpgILqCaOkJxtw/uSZPjBykAB2sVGizjIKeOd2jaZjnvSK
q9h6b0c9i7px7Cgnof+ulOFzDfR1kpDL/DUEKMvKHby+G9+PQxB8Xhnv8S3q
24Txvj4/5/J2UTsS3DL2/7m6jIa1f+Plu1EnD9/yXPL2JuFc8ZiSjhoNL2VX
aR1ejn4MC1qUUUECd8krvwnk7bBt5bt0HcxPE4HvWcoUcOUYuxchb6Vsl68W
OGdu6nt/PDCTArWvv+cHYF5FLDnwOhn1vKVFUUj6EwWD9R392bgvOVfHvqxd
BPT0ZilW87KgaGGuU5oDzs+lv+a3Im9lvGbd3h8xTzgVlMXW0XDtlDGfOs5X
9SHPdhlkUMDDqfPGDnUyz+/+RnE/nJ/bm7tstCiYU5tcKroE/Wu5jbsV/X4s
WKPp1iAJwZndb5JkaJDcnbozC+/rq6zrVTbFJETUZvIHL6Ahc5h7txnuy9CF
/0rsWRImF3CKPZpPg3SMnWmDKuZ8UeHLaqx347LSeCxFw5jXOVsdFQICnue+
SHhHQlTMTt6L8jT4dxbXjiCfRnNqZQy10e+rBqeakOdarcymMsztoeAdavcP
UxAekN22Gs+rQtjTb8iKgDtOvYaG1ykIWtV32VeHBoO4ER9bvE91ydg14/UU
DA+HnBNBv9/4cjn5Lt4vBnqv5t3FHCNn6cYJof5fiDjEOW0h4K/A8ILvhyjw
iZYo0lalYedZK6EM5P+hcbm8L/bz00TlsTv2afjI4PVxW5xX6gYGYodIeNC9
/7cN7muh1xZiDvqIb7Hp7Ag895OL66V9JWnwWBy6bi/eU467AyS+FZAQsuHm
/pZ5WN8574Iv8nOZWljwEesXhGgEMshnV9L90RFlzAE7+W+2wyTocj89s0gW
57dCq3M7kB8RsWCPNToUSA782fd4KQ2K55+pkphLDQk2jEY4BdZW120GsX8r
kZvRk6irNtVPh42uUBA7sWNJHfI2uT6jJg/n8Lj3twJqqijIfBzc7IZ+t8r6
ufsc7lejRvhF02UKvl/82UainmNf2crI4r2jxs2b6BdGQfeCjQUieC7F9xt9
izBPrNff2UZiP3VMyMuiRTT88OUWNLDGd2VV0dCGryTM5rrLO4V6uHZwzt94
fBeYub82v1JLwlG/fOWdc2moCuiMzMActpMZDvQsIeFpgFRruwTOafBsmwjy
MymR6zb3HgmVzc0XDyCfG9s73xYiP007b03OHiOh1f+30ilpzI2MptZ2zKXa
Wysz3HQpMPWqf9mmgH7Rnt3pgbkUs8aO90wIBX84DpdHYf9eS8ffiuBc0XhJ
4oZpPuZVZvppmeU0bFbX8ZpG/VcP8cfG4zygdlputBDxva56cSdxvwLfndOf
nkOeDQMkBVXwHdSk/ffjRgJMC0x+vj5AgXaGReYQ+iiFC8TrcZ77JTunqFWP
Avei0z/X4vkeTtkLefhdJfeUF4OTJERnvV7gj/v9FL+24RDqPDD6YLLoU5x7
LUf0nOfQEDXi/eAHzjN/9HU5zepJSPuy71CXKOrkr+ylbegj75bxS75YP6su
bY6UOA0OZk0lashPnaX+0HF8p/PENOtGIm8rNjNCtzGXBsskB2L0KSCuvinq
RN6ktTUl5uhiboSllwQEUOBdm0GWo84LjdazDFHPgU4lk1anKTiykApqxX1J
PtWh7qzCHGN/I+dh3jr786muRR1W3z902QXz8yCv+puP6RS8yxw8xb+YBpvY
trwTOF8tOPU1t92fgtddRcEFqBN3v3Gb3+ijq4JVDzevRP55DThOCtPQ0ya7
gUAeaj65rRSbS4G/wAlJOwF872RdmgxCHy2WzC/s/E2CgXaf8go+nA8HAiZr
cV83bzYwP0cwb/WOFA7y0hDnk/V+NvJAJJZUSYxjzoweq/Tmp4HNlzZsvIwA
ofU6VhG4/q7RVmVnIRp+NuirZiGfUZPPhluxn3lxhxUHkWdvBT/NSOQ/cJF+
pOQO1EOMmqginlfy5oHjmTiHC46NCDhgbuzc/nRSD339Xkwm2gZ1fsipWVI7
Fu/rrfoR8YjfTvhyehbOIfkRr8clsH5BjvZeHtR/7scfKc2IL77tEXLVHeer
nFeTC8RoWLPc2TkQ+a/5s/VWhBEFCbtTp54jDyPd1mdsUc8P79371buQgjfq
r8Wmcb/0gsrkUbyvv2m+yuLH95p3yGMFbR58x51WcfiNPrJZ3Ve8C3nIWfft
+4fZ+J41uVF1A3mI+NaqYob12600X6/EdYJvcsziQvyetReHoRQFK51m5zUh
b4tl5oXPQ34eRht2vsZ+Qrlcjn1A3sokv09ux1yqqWzJjNpGgbQxj38N8sbT
FTn7Jt4LGetLfjiiLzK/S21PxH1lus6xKcTzXaV/c+AX5rmnzI+TzxE3uBnX
NYq8iZG13rJYn6d46+wJ1L+eycq0XGP06QqNZEVcv37em94fqJPop0tlk/Be
FhjjZ581xnWOUpOKqAeNm/Z6PKhn4VyjovM4V6sJ9gmV4X7L9xSF7sdznNyg
HWWM77U9+7ZJqXKj72QavmsiP2Jveco6uHBOkOMzHebC9V8Vvt2JPNDus1g+
WM/vcIRPGNfx117v80gJ5y6rCze/4/r9QV1S5shbhOUzyVTU23rRwoof2E+B
UUvXEPKm1ecmbYq5tNbj8OVPmynoKTzauA15u6Ay1d2Gubf9WmznJvQF22b6
9nvcV0jIoKsEnq/touLcauRhOtMxU1EE76niqb0DyNvtvBsPlbH+757+Zm6s
H9vh9j4M34kXqkTOZeP6ynbRtztQJ4Prn6+4hvdCUU3expemFLQEPxmvm0WD
hMafHfHIQ66517TxcvR1giL3Uk4aNjzS1D+EPpLdL6DDXkTBMs2HQjIcqJ/R
bN1zuK+yP6mXri6g4Gx8bMvYdA6IfDVVrkcefksyRlVYv0Td1+UG1jeOxql6
IJ6j4MMdjOt/8G8XVsXvJjl/W52EfHoJtOyUNsP3qb8Yawx5JjVb7TmR/yBS
uLTaAX3hfDc6FXnekJoVLoK6GtviHb0NfRFwVepQFuo5NUD90CDq3LW1T2Cd
FwXjmzwq6hBP9qdO1GE+LLjZFmGK9ftKDmtxIf7c3ypGGXV44BJfCYHrFwZL
RFB47qL8nV7jyP+zCVKO05wCs3y3CXHs/9kf2bHVM/eI59wcHrz3t0eXcPZO
5cCQsJkYB/bJ/fzUdJsSBTW2H3jnIR6wd1NrP+7LredHhswSCnJCVRb+/JsD
BQlONuHIw2S9YNx7rPfZZHMsDuttPUfj1RD39Rpk1HF9pQK9BDby6RvY+lIU
16nrOaymgf0k3l348Qf2k/DR2WsQ+e888O2qsj3Oz68aXqkjnwc69Vdp4nml
TR9Y547nLiST1PsN8a+HZOMckDfjP2I3xdEvmiP2D8WR51vb5EXL8dyzRSfr
bbF+l4j2rmisnx8b83gW8qm5f/EVTlz/fLWlqy/q4cfB/FA5rH8+dfLdYqBA
y4Ljryfua/qnXJcw8lBp363bboA8vHXiTJ3MgS9HVSzisc96Lu2GWThP9jbJ
zhZB3EB8qFoa9/Uy2v8YoU7B4sfvdo//yYFzG2wqZnjoNiMfimG99nvjy1ux
XmPaYOWEIgGiQQcNhnD9dzYlPPPwu1dKTzalYP1UiOkXwH56DhvZjiP+pa28
+SGuv1Dpc27qagrWdL2zbEKep1df9dqIeSUanC7qieeu+U3a3B55rigdHryD
/f8Y3erS7Yj6/OLU74n42vCU4SvI5x89Y0FHrO9+NnWGE/GaRsavH/F6bgd2
OK6/9CBhaoPrW4lv6LX5b86XurDKAueBKNdZ1yZyoLmySvwJ9pN5Vef+WRMK
bD5e5VqNeHr5tfqZ8/U9vzNOD+8XqRGh2byI58Ys4nLFfa1iwjx+G1LwsGFb
6eQ4rv/yWeRr5OGMGpvPBOtlpD92qmF9ubeUeRPimV/O1l/E9R8Sb+IIxJMa
+nnn4TrSsaeuOGE/q3vEL04i/vN4OXENcTP7w4mT1hTY7as+vwv5V4+r6wzB
fgI2rW32wn2F+HsUnEdc4fbmLFU8x9RtBmPsNRTcPyX2owTxY+5s2TzETVtF
1mzH+v3msR1RiAt2urpXIm4mJM76guvfb01YsgRx3bDT6UGIe1vUenpb4n3U
ISjI8Rv5l67IO4P9m3jkrp/BOzk8+WfwbdRp9gz+9MwlmMF3KTryzeDqyYXZ
M3iwSKbxDH70ybL/cG6Be1kzuLxf43/14js//4fv8HX9D/9Q8/y/9W+9ChCY
wU/tTzk7g3O8nfqvn3trLYVmcNkWCXoGV62XDZ3BNy76LDyDH3bTz53BU0nJ
mBn8/u8/IjP4pa1y+TP4T0nlkzP4lTVKojN4x0v+8zO4ze1f0TO45B2P/+rD
ovb9h0fu+hgygweZDPz3Xaswo4IZ/P9///N///7nX7z9i+d/ncu/zvFf5/4v
nfxLV//S4b90+y+d/8sX//LR/wAFGaE9
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2vlTzGEcB/BduUKKJZYOuSqTnBudH1vZYtsmTUxNUqidwUzHpkONqKSY
Wh2DndnkNuNIpNpkqdyV8weJEHY9zfepSY4oCc+Meb5/Qz88P31mXr++f3jP
e+ZjtyUuOGaEQCDQCAUCE3Jbml9JPr/lYMHvjulOjQheKlvtuc3PgPl/H6tZ
9DH8HQdzamSVbxoQuD3fdLmUOe++MTnqh8Rt4svlBcSPuXcuD2LOe93fxZ0n
OzgQGdMyeuoRxFj0S3VRzKlfWJ6nCfnAwVDLVOOVWwi+XRdvzIlkTv1Amcvg
dSMHT7XyCokegblZRKFdBHPq/qqShn1dHCS561aDDoH/NUN/WChz6vfFCvmM
AQ7q09Sq4HIEtX97m5oDmVMXijuVaksMO5ZEhj8+imDnbKHewo059XsXe1sn
LsWQ7ukcWp2NwBIdU9TMZ05dmzJFkUX8tO37wSjiKdjDLIY57/E+K+/0EX8s
LD4+gfirnvZHIua8W7XvqXizDIPN/T60NQuB9qc4IGEec+o7x5nnXZBgaAi8
mTQ5E4Gt6ZG1TnOZU5+zbaGrzBXD6KiAkrgMBI5Oar9Tdsyp752/Xbt7FYbi
rO1PHHch8FJlSNVWzKlv+Fow6QvxG9FWqhepCI4nWws9mfPudOtqbrQUg0H2
ZGomcUG6vqFrJnPqbesHEuXeGCTjl0a0pSC4nf0L1jDn3TknL0Dsi6GtZKBr
fzLZZYeTvUbOYE79neHcUJUf6f2zeabGRATramPd06Yxp15V0Zzo4I9BlutW
foh4pd5s0IE57wfTezgt8bht3UHuxEWNl+peWjKnLhG5tGatwdC4MEhTrELQ
2oRdJcx5z/e+dzlIjiG6Zpq9NAFBeLtyZe8U5tS3TuTm3iWer2lq7o5HoO8Y
1V/GnHfX1xO0KwIwVKelx2qIWxvP6BTMeTcmhOTaKDCMgY7qz3EI3nd/dLko
Yk69zjN1qIj4IruiMC1x6ZfMH2HMeS80LU0cFYgh1MRnSEb8VN+smrHMeVe+
qOdSiWd++n7iaywCk1/1SbrJzKl7nDREdhM//+Ccbxnx6D+bJErmvA+3f5vh
5sMtr+Hm/wCjmFx9
          "],
         VertexNormals->CompressedData["
1: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
FPtO9WfPwcuNlcaew//P/2/+P6mJzos=
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw4c2KgAAAFDzKVJaor0XUaKd9tTeFKWB0KAdLe2lzO997jmXFM24oksL
Cwvzvyt/F5cAa0vLQMDyyjpwZXVjffUfaOPf4hpoDQDehMJ2UAAgBLy+Ad0C
rW3CwBAkgkJlsyBb28gtKGobuL4F2QDBoLBN+A4WRyEjt7GYbRQOi9rB43bg
u/hdNJGAxpCIcAR6F4HEoHF4KgW/S6ASiHQakcSgk8hMBpnCYmKwZNImGAGn
EmhsOoOzv8/hHzGYBxwm6/CAxeYesml7XM7BMX9v/4h3cHhyfCKQSbl7PAHv
SCTkH0vENPr+3vGJVHLIFZwIeEKZUHQqF4kVpxKpSimVqVUyoVwtP9VqThU6
rUKp14klSoVSZdCr5RqjSm00aLRmk1Fjsml1Z2a9wWoxGG1Wnd5ydsQXi0xm
h/3l9a3ldAX8FqvbZbV53DaT3WN3+LzBUPTa4fT7XO7zwPlFJOz2XJx7faGg
z38Z8geuLgPn4SuP3Xtx4Q1GQpex6ONt6vkqnIiHIzeJSPD65jp6dxuNJe9i
8fvk5VU8Fk883N9c3z4mbh4fbu/SqVQ6n7tLZtL3D0/Zh8fnp+R9NmM+czrS
mUI+ky0WCsXXl+xTqfj0XC49p3LlXL5aKZZqr/nCS7VUrtfqlUanUm02qi+t
5mut/XZmcTlr9U67nKvUG81et9nq91pvg367Mxp2Gt1RtzcZ9/rTSX/wPh0M
Z+9v7eFgOJrPxpPPj1F3PJ9Mvz6n799f8/HH72z++/M++/n+D/gZrB0=
              "]], 
             Polygon3DBox[{{151, 152, 153, 154, 155, 156}, {157, 158, 159, 
              160, 161, 162}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzN19tLk3EYB/A1j6Qm6rILp7DJQjTUVRrzwBNslOlI6yIzSXNbahq4jGlT
Cw9hZh6rKUVCGlYTpbVc4nEuHVpqbB42Cew0fX/v0NSpJQ3J3v/i58X35nP5
5XvxPCxR3vmrdBqN1kbFgco2c3yKub4E4pQDxGE9gjNehQI+OQO43HyUdbfI
lwDB9q8YzSgCUpAyeqMXn/fEFUXNxxDAUUw94lN+71a04Hk1Pud1uR+SZhIw
7xiWOj6CQGFLevY1GZ8/scyU0hoIKHHKX+VRLg9bmBVw8Llp2U2lfkcAo2dg
rqsPQc/3gL8qZ3zus8X/JjET0JntMshSI/jdeMXfn5zG5rVNUVNiOwGnGAkN
w0oExRbjZ/YnfO7M4/aL/BH81NaJ01sR0CP4pUGd+HzxAoufeA1BEud2Jrce
wRgrwx6Qi8//NEXaB2oQlLgZ1JpKBJz32Xq9EJ87mhPeBqsQdNjYu7w7CCrj
pQ3XQ/F5dYVoqN6EYDNNKXeVIfhQcRBVeeBzz3D5xNYOgpjJsC1TLoJ/A32x
7StGbG4sONv8kk1C1bE3lwwiBOVN9azUSXz+eDBQfDGOhNmnobqPKQicpBIn
r058Xhjh21aWS4JCcz8/7Ry1K8Qt3KjF56ldrj866khINiwGbsYhcEnfJWfy
8Hl3445sopuEiPybDtOAQFycQwQn4nOPgvX9K19I8GHQLapIBLrmOUtZKD6n
tXr7MdlW6B8ynWjnIJC5t9grbQZsLqWpXy9lWSHrcotkjUHdIbqREK0Gn5/W
07WSF1bY16scsy0TYD6ZGe/3AJ/X5LzaVg5b4XiscKPOREDQQ+/o8gJ8bvQU
hq8tUL3pVplHdATILUMh1gx8vtf+wb3Wz38W6OS+
          "],
         VertexNormals->CompressedData["
1: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
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJwU2Hdcje8fBvC2RIOGlNBQaMhoaV0kIpWZhlAoK9K3jJA653RWSaLSGZ3n
nNKQCC2yKzIjpUWhSGkgFUp+9+/18td5PXJ6P/f9+VwX/aAD63bKSElJfZOV
kiJ/pLSW+FQmmDAROc3sxpJbFL5+l42clcrH2+S7vzY8Z+P5IoGc+XcRVv71
vp9XJYCb4puDSz5woe/BLrj5NgOHr66uThEK8fy/2x+e1MXD55uem3NcBqZd
stiq0iGEX3dG25XgeDge351rKiPCpoMfTs9nCjFVbobuwSIOqs8E+MhOpZCx
Lax5llAAe/lu0e4FLJxxVy669oFC3kFzuYAQPiKu0/aKExgQeXztDrgghntw
c2mjDQ/jnfb9KDpCQ+SSSK20eRLoXeso7NmaDnotg2YaF4vmA3Mfb/CX4Eip
jE7E1HQM+Wcylg/EojNPLr11mgSOP7y61hxOh+1Sw5VxF+hwfNOi8Z0hxrDM
/YzN23i44LCh/AXxiWv2NJl2m8LrN2ya9Xk+MiaqTZjwlA3u/aJlfj9FYPWE
fkx9KEBK8K8vw2+5YJ169vL7+wzQooscrhOfhA0vpqXVxOPabv/TTzgZOLFG
c+KXdiEcq5WlPwfGY0pATbWTgggSh0f0ncTH/rPJJ7erHASmZlZH6VDo+rV0
wC5DgKF/0V8vzmdB8+LaGbs/UlBff1mNv5uP0XkV/P2JDNQbLjfyIT5bHR8X
LrbnQf5N8+3Y4zS8cVy8ZSLx2ZFP856+Ix0qX+S4HzmxuF/zY0zkJ8HuJn1W
l146AiKqLpwdjoXKG9uPO4nPst4DqvuOpWObd/59y1w67PpGTyjFifHX8qco
bTsPjerC7EmzmbBRln49RHym+rPCV/D4kA0qmPSgmo14m55/rGERDI6NfaI/
EoBFhWy40sjF/NJ5B+Z8ysDX7pSzL4lPv5rZ6h1P4rHmWela78QMOJyL5N8n
PlWxj7X0AuJhZbJhxzolEdxzjP3SiY9M1olM/csc8FWPHvqhS+Gc5ek+D5EA
G99sM+21ZMH+xKzqGe0UWl7n/mvcy8dc9pp7DkkMXNpvyV9HfGqvz08QOJH3
uzL1hFcMDU2XE9tjLSQYv4zX6rUrHY5Nr+J4ibFYlbUq/KuvBGW8m2+2GKQj
ZNei8g8jsWg4NLqrV1eCPNZ4bdbJdJguj7F4d5GON1EFRkbEZ9sYRa8N5mH4
yPItPOJztvVG+6W7FEboS37vyuCDVfHv34JKNo6NyHZ1/BXhStnbswGPBTB4
GjBR/yUXER8zpvN6MzCpQ/OLUoYQ+/AvXvpePKJ2T115IC0Dqg4D2yKIT0K+
j2Hi+nhsO6ugcmyyCAMCSYEUS4jlbyD9JoeDcfuPxH+cTsHxXkd8pFiAJ3YO
CRHzWDhxWv/1qQ4Kdwf9GBvC+FjcT+tuOcvAujDfpW7EZ8L9u11bXXnI6DRq
7WWR8zManxNqTn7fFGbKtbB0bAinb1E+H4v1Nzwn030kyHfMm7bSNB2Lxs19
FCNHwzajxnl/dSR49PZ3zS1WOo69XdJlW0iHotR2Ux/ic+JG6fcVoTy0p20/
UDqHCZXQ8f26FRTkY5sEF7P5cGzZHz2znI3wgsMr1slTUG67Faf6XAClSI3p
ane5oKnZrY0dy0BWrJ1JNPGZ8vNAwYr8eHgfOz8hJy8DI9aTaY0fhXiyfknr
McRjsYuJVa2BCOyFd7qfE5/o02e2rOJzkKm1UVRlRKGBe31zxQUBgjfe7k80
Y+GhaLh2XyeF5x0fDVcd5WPi5GvvZ/EZCNrKibImPg+Z/xZ/WseD85GJS6zT
aDjL2DHVzVQCiw5a+qHYdMz/XXh17GIs5tQscijeKEGDxUWnaY7piE5vi3mi
SYPN3tCcGVMlWLVgrN74fDqeBpyWGr1Jh+VQvkEF8RlpVtwxP4oH5q4V8vpm
TEQ3CF/JP6GQXNWlObuUj/+EQ31z89jY4OdzQ28yhWWHAvihdQJQ/qbFekIu
ksf5eIbMFGHJuMCGLSIhFvX92S5Li4fs4tjZFi8ysOqw5RDvgxBqNrceMXXi
8dlxve55FxFM8+tTgzhClJ57mxBE48C7WPZsmiUF2p75lr6XBQiZsXvugDEL
tcrpGda9FHYovz43L56PY9030JXHwCi3tWQ68bm+eatqN3m/q83iooaKaWB9
UHqsaCJB8VP/178k6ShLL36q9ioWnm5D/rPWSHDJP6Ho1rZ0vF3zM+SULQ0B
y08FhWlK8NSkU32wjJyrgdeSqy/p+DNv4bssphgRu+Kjxs7ycLY+/m448VEa
52zWQXxKvTdZ29zg4yr7dOW3bDYsJre7lqlTuDMpoManXoA9pqn97ee5+D43
fVW2kQicmKtboohPGDYEtR0n5ye13O1+bQa+PPpXHE58DjL/u/RMMx43pEs0
rq8Q4bpBlvAc8dn0xVxn1UkO+XnV/ZMXUJh4pcd/7xUBMuKX2y37v887/6Fv
xGcC36Fo7yk+YhqXLnqYz0BBbenbacRH/r217qqDPDy0chj/+gYNO7w8/8Ya
S2B38GP87Jx03JsZndpQH4urUx2jI7wkaJ5zbpHlTvJ585bV3Q40SHU4nx/R
kEC1pn+1yu10NB/Jat33mo6DN2oXPCA+pUtzEm3SeDBSUzpZRXw2lk149OAp
hWsaUdbLy8n5WRIkKs1io9o9ffJ6TXK/mie1u7wRoKx68bz8c1y8WDv/0afZ
IlwwLq1KIT4W2zp33jocD5Oh1V0bGjLg58rYuIr4bMjckao+KR5Kjw8kvnAX
QfWRCeMh8Ykaf+PSguMcOBmWJSQupLB7ZkDIiUIB/KsCPFJnkf0+b1Vifh8F
5kb/6zmnyf06J2+eVcCAnuDWUl3iY5pUoXAxgvhMNBcW3qbhn9PtgyOzJDjr
Mt3IJz8dayJjgkXNsajdd+V9hacErUZrz2XuTsfcBbLWbktoCJSdrsIiPnMy
C3aa3E+H/LPLM+a8oSO3UljdRnxqVh6hhfF4uOk7Mmm/ORNBT2tuxzynoLbe
rH77XT4OsEZ3uVFshB2wDOVoU9Ay/5I7tVGA5w1HHjgkcBEuVbo0eL4Iblbz
FjwjPoYRMrFHQ+NxXavq0gmy9y/K/Fnw+70QZ6/aR2eNi0dqma3cuA0iLKrl
98/hCmE9s/KTwiEONlc8YDGtKSRVXZwmvibASuVYjqMRCwz62pP63yh8SZBf
M+McH+faTi7YfpWByLZvNdrE5+O1lcd3H+PB6rRs0/4qGgpeVOn2G0lQeFFm
oOR6Otp+HNVZ0BGLhIo7wds9JPB8Z/ODE56OA8XQG7eKBv4PufIMdQkqlVOt
fB+n4/nysuKsFjq48VuKdVli7NJhKX6kePhWWHbhqQUTseXCon8vKTKHAljC
R3yENkzYcyiNnJ+YLNPfZL80NQfmVbQI8PdGjfe+Y1w8/u6xOnSpCE5+PSdt
KDKft6nPkvKNR8NXLK//kYHfjGtBG4mPbnJlee1PLm6YestE7xDB7Nsa+37i
UzapuKp8NweC53qsow4UTk1RH/1cIoB5oOTAeX0WDg5e2KM2QMFP1mRsopCP
K4u98nvLGJhjKRrQIj5SUoZvP7N5mOkTf2e4jgaVsmlHmwwk4MWcl/+vkpyH
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
ByCgNpc=
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 
              995, 996}, {997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 
              1006, 1007, 1008}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt3OtbzekeBvBOyKADUaRS0jQ6GCRT0rddlA7KIU01pUSmQqnZZU9H7FCt
VYlK9kQHjEiIRiN0GrF3rPV7HAYzZKnWitUvUpEmpXmua1/P+hu8+F7X/erz
9n5xv7uNw2LWhasoKSm9VVVSolHqPvBwT/wHHlwmHt1Zf5GA5YfUhgfkN0D/
v28K7uR8qc8mRdkN5wl46KmoG6Mr/MmifgMb6m8Ki842niOw1W7fmmgOnXlL
m2Zd/yAPJaZF0uYKAmVJgnZ1MTrzssWe/THUxzkd8b9dSmCWUpGq4x105v6S
prCo9zzcTihwIgcJqE+sdqtoQWfO1ZCL7tRLlhcE38shYDbf5uD7m+jMV2ZJ
PplTj1MrSLwvJODsWfvEGV3hi5eM/uflOx7mHsqveZhBIDX7RmRbMzpzDcE3
D7ZQz6w6bP7HbgIftFsFUxvRmbfYXnAJGeDBU5qn1bGTgGxWJ5dch87cYXJ9
niN1w8o8q85oAsoOW/Var6Izv9R+V2JAfTA2z0O6nYBRsDxUF13hpcLupGf9
PJweO5jeFUHgu5LevupadObJHfNqAqhP0T841B1K4OHckWkva9CZ99faqNhR
f9GeO71nI4G3K9KCbNAVHpntskaP+q8VuYteBxGYslXl1J7L6My//WZTz6M+
HiJtc7f3+hNwr1C3nX0JnfminGJTX+rc2pwXA2sINFtO9197AZ35mc2VcYup
l+vljL7zJvB8dVHp8fPozOfY1TVOpZ4oyZ416EVgJFpfzlehM9eQPg6695aH
+TuyfYdWEVhabZy4/xw68/SrXWcvUle1yY79y5XAhvsnmx9UojP/mPN+KJf6
o2FhzvAKArEDX04yRld43BY1txjql5uElR+dCeTpVK6PPovOXG43rcCb+v4M
4X9HnAhULbEuvnYGnXmopkmnFfUtPkLZqCOBu37VUnV0hT+Wfr1wCnWHGUKV
MQcC3btsrPwq0JmvroO0nl4eNNsERkrLCIw/Wht/4jQ685u53qI71HtOCByU
7QiY1dnXv/0Znfmy8GD9SuotUYIAlaUEXJ7eGO+IrvBL9tsjs6gXLRQkqC4h
EDLi5CM4hc78K62k2kjq8UNZh9UWE0gzuHnkyUl05qWyzHHu1Nc3ZF0ct5BA
iaPbi3noCg8czD08j7rngriHT60JFMD2OVtOoDPXmVBorEJ9VUnAULUlgRyn
vNDycnTmGebly6+94WF5mrnTRnMCyc5PXxiWoTOP3VYXb0X9S7jFXTEiEOga
0657HJ25RXKj6hfUTS9UDQgNCKx3yzf2O4bOvEt4K6/rNQ/GRgW6m/UJeK66
uim/GJ154Pn7VSXUZ4xtDtHUJWDvodqh9RM6c+e+bpk2deUG5d7vNQjoeR/p
mFiEznxUue+HNz08fLKWT3WcTEDb57rJqiPozGunflC+Q33wOLHV+YLAhDXt
YfsL0Zlb2KgaplN/m1qS2jiOwNBai06VAnTmOrv0/QZ5HmpSEmcvGubg0YaG
zo956MxlI563/uzmISKlLzD/MQf5wS+lrwXozEumrPOtpf5tcGO50wMOsjZO
nmeJrvAAQ/+Ow9TXLc/t7hFz8O+QheFRWejMxbDlkxd1h1HLxJW3OIjblCTr
ykBnfmVvsm2DnIdZKRFHB2s4WBuu2SXZh848Q73q5xOveHiSLHnsf4gD7R1L
X95LQ2duoaNxYHsXD47JIl+D1RwIkw/If/kBnfl33uHRntSv772qNs2dg5lJ
h5SU0RUuzLi+YT51l8xTNeorOTj94zFdrzh05q9HokxfyeiuFabovHPg4LeE
yys7dqIzvyC73bSZeuJFq4etlhyM7pSUaUSjM19cu2ckUMpDuTR7/b8mc7At
fGng9xHozO0D38e6d/Aw4uW97sEdMazyftmqF4zO3LP0WZDZcx5EBpxPpocY
JsxxO5fkis7cgZtRqkr9dXz6FU9XMfj/Q956YyU6c6tPazpftPEwRWxnoOEs
hjNhAvnYCnTmWkEtkT9R90o92X3ITgxepzizdBd05r/rnk/Qon73+Y/7is3F
kDffv0zohM48NDft4PBTHrpLTK9dGC8G4yWRhcfs0ZknpJrcFP/Bw3iTRLNH
zSJw8BDsbrBGZx5RFTThHHWzxAXZRfUiyN5mVaKMrvCAZ4UemdRd70sHAutE
IBFyN1ys0Jkvs590z4X6vr0+TZJqEezhpn28bYHOXHlwoO3XJzzM7DQNkpeK
oNW3OJ6YozMX7mj5UP6YB5OTXN5Iqgj8Qqqi2k3QmacUj9nvpu48kj5UnyiC
it0+mXPRFR5zxy41mHqYr33IngQR/FXWdzrcGJ352q/Oq+lRL1c7ZTk+WgTF
0iUyuRE6c11ZoXb2Ix5swxNvawaLQBZZH9I/G525us493yjqfjcWWN/3F4Gt
IDTVBl3hw86Tityox0+X5ef7iuDAOZVjCfrozNtK0wxVqDe0+ITN9BKBZa/r
n8Mz0ZmLuaubJL/zIDEY97+nbiJI0ZIPOaArvOHTwMnr1Mfi6xYcdxGBeKFA
N00PnXm1lfWro9QNxTGFoSCCOeutbJt00ZmXB0VY7KLuaDZv1GSZCGL/yfmq
oiv8c/vr/tz8c+vrc/O/AVhuDok=
          "],
         VertexNormals->CompressedData["
1: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
AaNcwuA=
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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

         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw4dWKQAAANDmQzaVmS1JRrL33iKUPStk7y0jI5qf/LrnXGqm6svs7ezs
bP8e/N3dAwL29kFAABAG3T84Ah3+g4APDsFHVNoFCwiCw47ASAQYgkJCAFAU
FHaMhsFPjuGI05N/uwAIAok5RaKwGBQUjT05JRKOTwj4U8wZEYvGkTBY0hkO
TyGDjhBwPIFKoVBZ5+hjPI54RqedkRh0Eo7MIFPOmQQijWq2uJw0OvuCQWZe
Ms+vOJdMjuCcxb26YPN5rAseVyRWKjhXwmsuT3TD44tFfIFELOBcS66FMqnw
Ri5jXwr4NyKFXCxRKTVas0kq06hlcq1GrtBpFUq9Tqky6FVStYHOuGRLrqUq
rc5i1umtFr3BZjWojTajyWE3mZ0OtcZkvOLeCC1Wt6vZGvTtDq/n1u4JOJx3
Xpfb73O6fHf5l2rF4324v/OFgj5/OOQPRMIBz33k/iEWfQjGY+7bgD8YSsRD
4WQiHEklY/HHTDSWSccTT4/JVPY5kXx+SkXTWe9d8CGdyedy+Uo5ch9NPT4V
Xp6ei4XnbKmYTedKmceXvNV267YZ7bfFUqNeypUb5UqrWam2W9Vap12rdzv1
Rq87GM6mhWK91moPB+3OaNjpjkfd3uu41+y/9gfTSaPc7L0UatXhaD4bjd/m
r/3JYjJdLaez9Wo2f1/P3zbvb4vtZjFZbtfv31/L1efHav31+b75+d4uP343
29+f8evi7T+Tgp6L
              "]], 
             Polygon3DBox[{{145, 146, 147, 148, 149, 150}, {151, 152, 153, 
              154, 155, 156}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzN19tL02EAxvGfTgxheUiJEqkWKqYwSUxK0sdqGKYuifBQq6nlaemsPBRJ
mImUkoN5KllggnmooFXLU5a15bRcNF1O59zKQ670zUxLM1Daf/F68b35XD53
Dyc5+1iKLcMwd62xrAlDrzb4jBOo22LBKMz46ag42hL4DrT8s52/x4TVT2zw
8L3MN4Mt9S6wdaTnwv4vlbIJguXYcbf5byb4udY2nrT0UfOn3fz7ZycJdAGi
x6YrJvz6Gl+S+5KeM+z8Crcpgu0vlEsStgnXy9OmLlbS8zxzdFjQKIFGMNwb
d2sMt2v2uHgn0fMZuddcnJYge232zg72GJrqWKEGLj3nLmf6PlQTPEnhh2dJ
jCjLO2dbutpLzXNCFKlrXQQrGvlih7MR4kideq+GnhfxHO1tmglynVvEdswo
unsGYvYn0fOu7zEhoiqC4zPn54psDDgI+/ozq2pqLluJI5pSgk6pOLT20ggO
T7ZFRPTS8wIHocy/kMBrX6ZE/mMY/BsZC1wpPfcrHxpR5RL4N7Z1RqYOw+ev
IsBFQM9HnaM2x4us7sqyTJv1WE1ncha96fm9yda6ukSCtMjWalmiHmJDak3a
nx5qntLK2WWJJaguzuDFTAzBGPGhw6ii51nhCz2CKIKw/KDiUwlDkHD6TRwJ
Pc/XK5MHDxAspbOUIu0nhK/02aTH0/NnVVGBnlyCR1OZvHatDqamf05bfr+l
5pLg5zsN7gQVsxcKN+oH4TovjH4jpeeelm1HNjkQWJROrxdVAxDcrCrcupue
z1V/nD7EEDTzkr0SggdQ8t69YYmh5+28a8V5y7M4rVaUvZJr8YBd36fTqqj5
evtf622f/5kLjbI=
          "],
         VertexNormals->CompressedData["
1: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
          "]]}, {}}}, 
     {EdgeForm[None], Specularity[
       GrayLevel[1], 100]}}, {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1U21QkwUAXmguEEzakKFBgBgfCYPjy1LoGbgN8MTEwJIWFEGCbnwMFwhT
EGfjGHBm8L7vUHjfl8Yd14WFx41ElHUqVxeYtoDgUqYZhIAiKDexLX71j5/9
eP49d8/XPT4f56dkO3A4nK3LWLWMJF53iDfBokqmmvWSpkMg5GY5lupxe5Og
IC6PxbZ02w6Pb9OwyISw9h/1uFqrPvtKJosY7amt6lsyDPHTLE82NiFU45n+
SMdip9iuMEV89B8/sP9x4P1OGrzeDztKEnLBcN7M0dQSiJ85Yt+gptFw2iD2
F36KF1cbLzj9TMDYGmuMrKGxd19u6NdJuRie/WJCICZxTt1jWWWiceOYL/U8
6xCUD/j6M2tIEHLv4+IiGodZZkRxsBhvS0vGdCMELrbkFLQJaSy5pZo2pBfD
+SEnzMwlYZ3lczIkNE40Pyw2NSoRbntapThJYujS4DqblsZ80A6dx1dK5KQp
QvxTSYg69Nonz2hMzqVEZV4uQ0PiC+a2JRKhrNXAXfajOsv/rTm7HIoA1z82
iyhYN9+seP9XGqvvxJe87lMG48DL7Y7nKTiFFmVJXRioIk78PlF6FLdn7S26
XArMS9WK3DYGosGxwz2ZlXjvzPbL410UuAKfnthCBlE33KfCzJXwO7K72N1O
YQ/HtM1Tx+BB0S9lRF4lfgrqL7+u0uPvRwHTUhODp4Vf2rwXK2BL6LpeH7y8
Y5NzxkIgC3Yso1JtPYnPR48Prmmk0PRc6Vv6mIH87lRsv1wDw04V2TZMYaMk
8cpdAYsO4bMGo1aDyK72/ObdesjuW5Zk77C4F5A/Iudr4L7rgsG2Vg9V1IGE
1+JYLHV3ls4ItZifKz91r5XE96n7CiRcFr1xMX4WpRbmO71edVMkFo6FTxYG
swgPLo3OcK2GfXvy/qF4Ct9lvNWXdJBFYeus7tCAFl7JLlfe+IfEZJ9w2DzK
QP+qmPdZRQ1a3b5J1vMIXOP1tegMDBJ9/VOv1dYgeY9HVVoBAYegZuvpqwz+
OjeuXJ+nQxURM3DxPIEtwy5ho1YG0aQt7IcPdBiR3SRtKQScLOs633VkoMUn
c/b9dYikFuTVhgZMhLccdTbTiJZIwpOz6zB+K5MVOzTCL0ltdp2nYTbZ91Ki
erht0ky3ixohXZxeeyCAwZZLnut3RdQjzyLonvmzAf/3v1bSXcnnSrlW6uFf
uNDy+w==
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmIHY7ce39H6079ikXNG3OeOyxt0+Z0cq286E9tcRX
X3rkYLLzlr1f7KNzkrP22FtOXDCtOfwR1cRrOCc+DtC4af/7pYO03ac99oXT
pQpDmR9TTbzgt3f5v43X7Z9LJ0p3u+y1/zg/PvfIYuqJz1P+cIzZ+Zr9q92W
F62m7rVP+BR4mNfxCdXELSrMMt5tuWK/PnqHw8E3e+355LY9Wv2aeuJR21x6
Jq+8bO+oxZ127tZ++4WP7e9cq3xKNXHeurRgcaHL9nfepEYe4zpkv2G1yyen
v9QTN4/K3XSk7pL9ptTMYFfJI/YH9nVOFKp9RjVxWucvWrsfAJ/uG3U=
         "],
        VertexNormals->CompressedData["
1:eJy10F1L0wEYBfA/aqEso0LIbKRSaU2JvDDsRU44aVAjzGzVICJxU8Q07cK0
VQaZGJVkqBUpQZiVRaIXXpQeE0ydrkyHJVjLmTWdb8MEEWJ58fgN7IFzc/hx
Lp7w1Jxkk4+iKNFL8V3KoibD6KkeQar95mWftVZ6boSEm13jDLZ4Nn6PGaQx
JrSj2neaipx4iod4iId4LPu5RxkLKvMQVu08/DuoyEBdz/kx3dkpvm+bPZP7
boz++VvnUkvHmKBP8Wre9lM8xUM8xEM8xON1wd19T4OHMZVdPLP7Qx/8C5Lc
2iI377x64OOunGRr6PrG/Tob1sU8u29q/UrxFE/xEA/xFI+IuPyKmtND8NcG
XpyP7ManzuLYuqZJbjAa1MfMLu4ty+zaUT+KhPjS5trhboqneIqHeIineKjC
+vXV9j6sfqGZqox/yMLsIwj6Ns0mxXHv1uNx5v5KVHLejMCRFXWutsVG8RQP
8RAP8RSP5Lj6zC1DHSjLC3xePjHIoIhrA7NL/59zlzRaVdN0p6T9sVT1QuOx
HPBr66N4iod4iId4iod1jS6pON+KSH1A1qYAJ+3Hw8qvVI1zm/pEQ41qhtrr
Iy1Rdb0cGK03KfZmiqd4iId4iId4aC8V4PbVXkwWmWPVDU6qh9tL5hdd/FiY
7heyOMEexyHX5rIfZLRq15PO9mVP8RAP8RAP8fzf+we9GYk2vYutf3uc2xc+
w+u1ZJ/scq5YH2vsPLXH4MDRL0pahe9Ppr/MCx64MIqV6v8BzbEqOQ==
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1U21QkwUAXkYSSiBnBBZGnBsfUwl0B+ghexYfQaVxiuDw0MNDEpCQtkCY
QwaLNmQf78vLPt6B2EA4wW5OpKTlxZd5XiIjOoHixI4G8hHDDC5RWPzqHz/7
8fx77vm6e/xO5B08uY7BYOxYxcurILPD/gyMolD/MKT46kEBip8f4hn6CGzO
tGw07adAKpsbzrflwy2k7vPMHSSG/fte3SCmsJDsxnuHLYAxY+JK6AUSKdvj
p8tzKaxr1nrtvyv8j2+M+io+aA+JghuRJo+LQoSF7csgxSTyHXV36AgSoU1L
c6HuAjA9t/028jsJ5UgaszafRDA/SN8kFkI47/44Zl81fvBOv8z+jITgkxx+
hWsBKjzY+cvDJAzejSrfRyp8XZi8qWZjEaJ92AqLbzWGrFms8/dUGLLdDvMr
LwQnb+6wzxfVeDKl66+IUSN6lvsoof4s2sJHNy//XI3B175xSjmgxpYSa8et
gGJ0/+H1YW1uNd4OCLZzryvAZbGPsx6KsbvA7OAmU9gpGU6sMSpg7hooCflH
hFRNRFD4RQpnc7oXtnynBK+rMq5p/TnkLr7+y5dtFLI8vKneu0r0M8f9DbNi
xD1QtKhzKISOdld1uqng48QarzxVio6VXpn9Iw3O+BriE21KZEZm2G0PSpB9
o7WTlGnwZKSGo7WpYAxcSikILYGzfLEqKU0D/k/Hvi93VmPvUp7XoGcpkgfd
D5v9NDjyLXXf2q6Gsf9xpg+zDH7POC7t8To4RuumfjWpsesl7wF1jAQzhvcn
mfU6NPq8kibZTUAdMcn760Up0suqLk8X6bC8+JxXuIcAw/nmkHhUAu1Y0Z3i
bTp4nuSyrSwCkmztRLhDig/kjkmrUg+XroZjgncJvBVbOjKeJcXMtT6zbD0N
F6m/QGEhMHZJ1HspRYqonr0q1YIenoHdUdNmArE/kgN/z0pRZzh9e0ish7OQ
M6la1W+cMF9L58sRe+uU5X4ODTtl5vI4BJgiP0brigwVU63bn87TiM4+MV/S
SSBRv2uT+qkMW8+VbagZo3E0wabtW9W3OvV0xh2QY/RjLn0mlUZceEuDRUTg
U/l7qe0mBbyXZLVTDAOCjwS8OF1JYG7r9SsrSQrw/e+5ulUYULZz+GrLGyTe
jOzpGE9QYP6mccYkNIB2PZr0zJkE3Xwom25UwFR1XHTBTuP//tdavmvlXKvX
Wjv8C8hP8m4=
        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {2, 3, 7, 6}, {7, 8, 12, 11}, {3, 4, 8,
             7}, {5, 6, 10, 9}, {4, 1, 5, 8}, {37, 38, 39, 40}, {8, 5, 9, 
            12}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 13, 16}, {13, 14,
             18, 17}, {14, 15, 19, 18}, {15, 16, 20, 19}, {6, 7, 11, 10}, {16,
             13, 17, 20}, {17, 18, 22, 21}, {18, 19, 23, 22}, {21, 22, 26, 
            25}, {20, 17, 21, 24}, {22, 23, 27, 26}, {24, 21, 25, 28}, {23, 
            24, 28, 27}, {25, 26, 30, 29}, {9, 10, 14, 13}, {26, 27, 31, 
            30}, {32, 29, 33, 36}, {19, 20, 24, 23}, {28, 25, 29, 32}, {29, 
            30, 34, 33}, {30, 31, 35, 34}, {31, 32, 36, 35}, {27, 28, 32, 
            31}, {41, 42, 43, 44}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAWJmID5rPKfroPtFe8cj3HazD9+3bxP/Wydc89KeWuIh
ly1fty++aM/3rvjTzeAH9pukz+yZbkw9ccbtqi1s7JfsZUw1ZOrOP7A3CLTR
Zn76gmriZaviLd4mX7K3yL6x54PTQ/sdkZ83LJ5NPXHN/c/TGPdfsj+48tM8
+S0P7RP+71y9JZh64kwS+86eVbxsn6kcHP5M75F91DXF62tYqSe+uOGRP1Pd
ZXvFnvVt1Qsf2cc0XJC8tec51cSvr4jcffzfZXvL/n+6Mxgf27et0v7e6U89
8fJHB88ytVyxD55bc9kj/LH9P4d7nWfvPKOaOK3zF63dDwB4qCp1
         "],
        VertexNormals->CompressedData["
1:eJy1zF1L0wEYBfClq4giNlpSGIgvoK40kKSIwamQWaYmSq6L1DQSW4tG2Itl
uhIjMwpS8MJVRDIpyQiNBVaP1lysizZlRuk25/zbNOcqx2DIyqQ9fQM7cG4O
P058xZnCE1EikWjbUqOXenquQbohzk4aZ5pJFXiMB5LYsquH/bSAun5lmYnk
iSWLLW3fScRhD/bEHuzBHv98hnqkQCkZJulK+wE1dWBFpTHe1+Un2f1A6qVT
w6TQXxMv6P3kXkgeTHxmAHuwJ/ZgD/ZgT/7Lawylq8eo2CI3vygawMGA+Vdh
t49ueVVH2zrddMWaFKeTzJIt83n/DdkbZNT+9ciLeFJEPJ5EPNQRj76IJ2nX
rvbu2CmyPKrujXN4kDIS7Gj+4qS39Ttult/zkvRjZ2qWWKCE/Ik92Zk2sAd7
Yg/2YA/2FK7PviBsn6D1vb+tauc3OHYLRenhXorKW1y3c8hLifJcbeu+MVKO
vn8VPucGe7An9mAP9mBPaZmSfmwR6Hjt2ZchvRd92p9NF+usVBm0iZvEXyll
61qVJ/8z+UIDplzLJNiDPbEHe7AHezLOpB0pCnrJ0FNSrLONYjZQ8FSjddPe
qoofQ+MCmZvv6GtCdrpbFZ3kck2BPdgTe7AHe7Ang3F8fuOHaXLklMp0OTaM
jX5KiL/uoabY5IbqGIFe150sbKyxUHrWMakgmwZ7sCf2YA/2YP/f/6uD5zc3
zs/Rw9CqwYFD76CZ0S22ltuxXLtUcVtrbu6h9vCktWW/n6ZiXE7RJjst1/4H
2x46SA==
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJy1lmk41Hsbx6XiIJWk1FHJIUuLJUuifJuUtZBSyhKijsg2sh8NYhjLMKsJ
MfOfOXF0ipC0KETqKJ2UZSqhKVqck6KFeOZ59bzq5fPifnNf9/W979/3uj/3
9VvtH7YnUFZGRoYsjdnSUPGqf0upYoE2x1F+JIOJY2LLxce2l6G7plPPejsL
z95tuTTEZGIoymDLxrAyPMyK8alKkuZN6+hJ5kz4zPs5aJpXBiUT39Wf30p1
nJtepuj/r76aKLfqLWNjw1t+QZgsGwneZLvJG2Wo0rEq2m7FxjE5Veu6ZWx4
np0mbR0tw6tt7gGbo9g4eCd/N/kyC7prb3Fq1fl4ffOWbGcvG5rnVwvXl7Lg
MGJeFDlShrBgyzG9FVzI2V/2ePUbB3sLtSIkRnycSyVX9DVyoEZXddMr5aA4
fts67wA+JM3LWm694qCzpnuidz0HpPPnLNdT+aiseK600JaLWyEJU5x5HHy9
l/lb7T4+NnstHz1eWgj9ZG2SrysXxoHvL91q5OOj0hjFw7QQ1LbI0upILroN
B0mz3vBB2qH9t+8vhWBQtHQC33DQLvdwd/c3PjJZzluj8wphatnVqnKHg1+s
nzZyOvlo5gy6t+bz8F5tJGGdmINEs1DtI38IoNrZzV39Mw/PuT9ZGypxMa5/
YH5suwBig/czgr5CCFQsUrvpHDSVvGZXNQhAG/vcYO/GQ3Xu0uauwxw4VExV
FhcJsLxdj+75nodNU4b3zhexUVinPECpInBhj3pJTzQPxR3TjDiprxtUR0qm
2whoHzUttjTgIdbBNVw+ng1L4maNAkEg75ltXkMZD6qxlN+ttrBB2EkmsnMI
uI5s3lNN50E8bXK7X5EFasY2P8MsIf5UMRngr+KBmT1DMz3EQu/GyOlZXCE0
vvResJHOr/bVWyViJQt36w/xjvoLcePBoKaLEw9ex/MdNe4zETdv7XfmXiEY
ZDsdwqMQvoPU6s2HGQhpMG2K0RDBeNxYtP4DF+K9s88H3WSAP+75WkdXhIju
zBX/3uLCRtKt0fkHA7J2ZhRniRCPPM4WBekWojnSW4twYuAvpYVeJX1CRJ0k
u4a0cXA/SvHLkyv5oHzntTx1EqFyrpZ5oB8HrW68x+bqBVii4zD8zwERyuMl
L7tcOBg9+uFjw9oCSBa/Ok9WFSH8rcWMuJaDiUy/JYc68uH63iLLT06EJ0ud
bkwHsHFhoMNa0YiOBJJ+l4GaCJbT/9QNjLHQY6r84fYpOnzL1BTstEQoqMrv
OfGdhYzbk3eTrtARlr+j4/KAEIb33vXTTrDhE3ltSdMxOmgmntwzXUJEXtx6
d3yDlIc7+rodejlgkfNLBHFCPHEyk1e+zsSA8sdYtOWAKLFIdM0Qoq5voqmm
hwm/L3Fq4YG5EHgrNHnuFmKPjUx6sSML7dUXm6dac8DcGPCyEkLUDjjqvB9m
wDDjYczT0SwYq/cGePYRUKmp6KEyGXAkv+TNv0bDFZ7879wxAhJlUrZzPQO9
K3knxD7ZeC2hFp65SiDTarDn4jwmbhhnOJXn0+AbcNDDS0BgRO5LsKxNAWQz
Sgc5G7Lw4WXwqEYMga0DlXr/9ffryW8BV7VocNjbwU4qJBD64LPpqp0FmL5u
pulfJdUxFiu/8CagPk6KOepZAPn74pKt17Mg3xQbmGxFwPpx1eMDynSMjuv+
a9OfBYV4xtqqKAItsvrEOX06OB6zh/Y+oCFuo8ctR7Z0n4PSvvF16DBSCi78
5J0NeetRw+2eBO5sUl7nrkBHRkWuqD+UBk7KWl65uZSX4tDafPNsuKYOlTxK
p0Hlc7tMRR2BWXPUJ5cnZqNCwr6aHZGNQbd5jYulvnXxm29fXZ6NSrMXHLcF
ObAw0f1wXsrXZ6tlp0we07Dn0boErnY2grpfmmynELAn94ufjVGxSXh0YocM
DQqXO23KbIW44EwZ+qiZiToFZujzZzRc29IorxAmxNRzuBp6UdG1ZkkHU9pX
7F7upOcsBEvurP2yDVR4NI3sm2LQoNfRkHpztXT/L4bWW7akw1K2TYY8SIV8
vPdS/X+F6J4723X4XjpaKtZ4DBVlgjBSWbVLRwTdIw+TBY9O40KD1n01+Sz4
fdq5jrRQhOb51sOf7p2G9qLmWJFzJlq2MLRXioV47xgqstp2GrRT6lE+E6cx
N5l/tShUhGvJeaon55/GYSN7R65vOvrzzmrJ/inCsiPL+6wXpsFT5rxPYn06
vm52XHGUK4Kj4ZcQ2e1pSHNNyiC5pGOVwa66WVIev70505lanop1jyRvVT9S
ELigNr0nToQHmjnzjC1TEX1Go+LxCAXTquNulxqkfNU2NFJ2piDNveHcS7cU
xN3JLz1UJsL15PbUrroUWNFS32gdSsGLZrfHpw6LkKevbXgjPwV5X+1jJfGJ
6PdVHN69VIRofz+Vqq8UFN5b+aW1KAEpbXINi5xFSPoe9qxnPgVW3CP7E5MT
UZW93fyikQicFpNJiYgC49bcbp53Eubr2B15NylE0411lZHRKTBYuZGtxzsJ
7WHtqNIIISTCIDmzBxS4l9eEaA2RcfSCe1w7RQitrar7lT6fAmlLoO6UOBpj
0/pXww8LMePRO2VfTMGy6iFXWUYMLlhM1ti5CqV3M1WiZpKG7j3uftEforGX
xrF9UU/A1nGXe3B7KlYaHq92XkDGVyr16Y0SAnHFiz6Q5VOxP/+37y9Mo5Gy
8/XB8ngCTDOHVM3wVCysDapUWBqDZ/YTTXeZBOTa6nftV8mAi+n1Wb+Wx4Dn
YXbNR4VAeXDak8K+dDRyHwTbPItGu67HVvYbAYLP7juobJmOHWpL729SjUEa
dZumb6MAbZOZD++GpePxxTmB/v2x2HdZs0T3lQBncmO1vSVZiDtlOt6xJw5U
4oTiaKYAXYxLFn+xskDa5HIlOiYGHhpLtfR/FSBiR9mMolcWohyXGymWxsJg
cLdDzQYBNiHo3Zk/slBRMHPcPyEeXsEi4zgXAXxu+g9a2+bidOxw1YDaScwY
aNz8KUQAXZewmLKmHLTbFjFM95Khb3uK+UZaX9Gw/gVjLAfFjVNGIZrROCvc
IVi0QICBtaudDMm58Pxo77Js8CSiswfuG60V4AtjLmnqAR2J29Yf+eVuBGYc
Kt+tSRRgvsuaGmMWHRb12ZoG42G4q3j4BQ4LYK7wUYYvvftL/A9lvCoPh821
Rc5ZqwTQ3P13bsgnOk7akcTkuEiQJ30OhFsJMD7Zz2utKwB1+PeD4QEhcJmb
V1vDEUDpsozyVEIB2lb0Vbu3HMPyVlL5/QQBNkZ0eIaUFuCa/pyyCa1g5MWM
L1aX6qyoq3xtLi5A0qeH9qpNoWip27Z62kOA//f/8Ed9fzTnj971Ix/+AyHk
LfI=
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNwwWXwQAAAGDdbTqnZphupsdMjOlmmLxz9f/f+d77QPpF0RwWi3V/572z
OQI+XyARc7hCAZcnEprMdptAKJWI+GKZWKKQS6RKhVSmUvLYfJFQJJPKxHKV
QqnVaAGjQSVXA2qNXgeodUad3mwy6kxWpQrQ6g0Ws8FotcgVGvXH5+vLbHHY
rSab02kDPTa7C7Q73C6L1ekAXT6v2+OHPKDX7/UFYB8UDDicHjfkDwX9XjgE
B8JIMBSNhGAkioTjsXAkEddoDfpINJlIJLOZQDASjsXTqXgik44isWQylsqm
0vlcOlPIF4qVcjaVK+byJbSYQytoqVatoNVGrd5qlsr1WrnSqOcL5VK11sTq
DbzVJ0cU1iTazVaHaOHdDo61u+RgPGoT/V6vTw0bVQzvdAdkt90bEB2y73JD
vkFvOKaPFyaTLRYm0+WCGs2m09lqOZ8s1qv1fjebr1eL5XazXO22o/F8Nh5O
5uvFZr/Z0ofj6XrZbw6nA82cT4fzdUhNJ2fmfrtcn4/t7kjv9qcjc3ncr+fb
8/vn9+8fMPBeKw==
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJy11uszlHEUB/DNKkIZNexYSoYG2bTdh+JsUbSbyjWXjSm5VWJQM+7FLFq3
Gky6GMaEGTWSJEYmpqkll7Vi7WJvdp/niVTYlYzQ/hE/L75vPm/O95xXx/pa
vG+kDolEStaGrE27boAz99wYxP9r8I3cjsFq1+MvUVkqQOWLVd8q6JIxKORP
FyQBBp25TDuGMTr3cmdfOZ0hghX7J+Y1yRhwPuQXNpQrkXm1ZuZp2w4x5CfV
JzDrMHC3w8ptbNF5I1vIZNSKoaKAemNZiIEPR9wmbJlC5sP9feGHPcZhxWHt
fY8hDrF+wXLqSXS+yuT95IrGIbWdwTdxxeFu4NLLuD4FMncT9Mu9UybAm692
SUvEgdu7J93HB50bvf2UV350EnA91lxlKQ6XNBlepTI5MrcuOuC2jE/C3of8
gJg3OMQMz+0evYPOc/JixvzqJXChxdmsVYDDQLQsyJGMzvUMt6TgIVJgkVeD
pL9xGFy7vJlBlyHzNs2+7jkDGQzWVHbc3kbAPVI3JzxMiszfrVnOzvfK4ITU
JiV7PwFfE6wH6lMlyHymp73E1E0O6R7k9gQWAVmYq4ZWN4nM69Sug9gLOZzJ
n/QsjiBAQuvM9B+ZQOZOFgufBcYKmGe32R9LIkD0S2q1lYrOoyzDLB4kKUCH
NTPHv08Apyymk3VrHJkv+KtpTTIF7GymLNY+0s51koZMvBYjc6doxvMajyl4
cOiZPK5ae7dXHZq/6yJk3tXUytNtnoJNNKp+YpN2LytOccQpdK6qNLCI3aUE
k5a0fMcuAsaHjqedzR1D5orG6ESrbCUMlKpLgvsJsM0pIjxlQmRO/0NhXl1Q
goPLkXWjPgJoXpJZZiA614+359FDVbAmMssU9hIwLWB6XReOIvNGygp7vlsF
3ynzpnU9BJi751SRgtF5Rqhl3s2DGHApH0dCeQSUnf9xcWloBJlv9H+40f3/
AxFpvGI=
         "],
        VertexNormals->CompressedData["
1:eJyt1f83FoYeB3Ah2pXqRq3snu5mbnW6UnTdtOjdKmpKo5FqR51se3qQDZVO
Ztlq1a4aRRJZdSPyZclQ823vat1Fix6pGY/EQ54Hz/NY14zNkeucPvc/6HPO
+5f3eZ3Pj5/Pa8EfbfjA1MTEZPdYzMYyqbHK9tJJFYoXu32ms25GdPj4SAdL
Paft8zN1Ge2hX1LY565O7TCREU/xFA/xEM//+22e0819fqpF2dFIp9hnjdhR
mTzj06t62npt1Dhs7WZkUGW+WVQHFIrLW5K/vATxFE/xEA/xFM/Wodi0b5T1
8AnX/hTT1wT7+pXlpsZeTtH71KyY84TNQ1X7/5mhRWTYloG9MTcgnuIpHuIh
nuK50Cb0Wd+4Tkzou6b4w7cNnv8+dNxZp+Ga0l3OCXMf8W3HT872revF8oyJ
k46sVEE8xVM8xEM8xXP8+VVzHH0MUO8qDPSsacTukeMvB5z6ni2lG9oX+dfz
Rk1Qf8GbvdCX+i0sK2mBeIqneIiHeIrn0/edHr7t1of7s04MWMz/Ad9GhGzK
9biBPYpVU8um3aUqKGAgb1SHtKT9mvJiDcRTPMVTPMRTPBOWplZNdjZgwvKQ
r7qsyvj44DWzs3uaELzI/bd3+3/kyEG3fI/kLpTcVB45lPwE4ike4ike4ime
ZsOVn2vuaKFMWzNTteBnhiWlDETktGOClX63bnM9rdRhKbGXNVi8sNl77Sc6
iKd4iKd4iKd4nnpn9Mxe+w6khF21G3DTMNrLOOXBRA2cxm095W2pZv/G7NmK
XxsRHZW/fTS0B+IpHuIpHuIpnntqfRKeKtsQv7Z6lemzJ0y29zlcHt2GzlSD
+/qaDvr6b9uxvOo7PDoX91Fxsw7iKR7iKR7iKZ5zbY41GdLU2GEo0l7176bL
vNed3i9Ro+Clh4Ux2V2cfdnydFaeJ67ftv4v07sgnuIhnuIhnuJZ0Dt9pd1f
72HBWuW5hAgD4yxuReQVNGCLTeyFtCUdXJE6z3eWfQWyviydMbylG+IpHuIp
HuIpnt0xQX5urheYnDnpxJ6nRpbuODLrt9kqtDl4h15bWsvqzQ0b9e4qvGcS
3NBlY4R4iId4iod4iuer46O2LXmZLF9xa6bqKyNr9c45b/SoUP5G3rGTRbdg
VJuF31hwD2qPXOuhNCPEQzzEUzzFUzx9vz0anKYqwiZL83Z3RR9H8KjCZfxt
/LFsXmJCydg9zb+fYXu+Gsm+BR1mO/UQT/EQT/EUT/EsvGi93fDKz9ANZgaE
HzUwsKvOysOzmGGu50Yuhncgqt2w60DWbfy+M/6wVYUO4ike4iGe4imeFdEp
5YvRgRkx8/PtQrQs0mpzjfEPqNecDny8rxOdmSNZNl/X4O+H7Ab+UqWFeIqH
eIineIpn2gLnGh+FDgGuf/rdYvJjtipH1LXBai5zb5hX5NWG4nW2oTm6LGy2
nRj85qFeiKd4iId4iqd4mviqS48r9Eg8oMjzCqxjelPL7Ly3mliZfdLkjPoB
1paV2jW+ep+X2l4v/LVFD/EUD/EQT/EQT9R12p/vN6JwdU5qYNxeWg2OxHst
UzH064S48P13UO2Q+M2z/naenaIZfXSxG+IpHuIhnuIhnmevRCjPpxpxe+f2
rQfC6xCcfViVOfoffL/fxXdJP+F1XWF4eLCXkV3zh10LH0M8xVM8xVM8xHNX
d9jpng4trqxuNLo51mHQ7a3iDF0H7q1bP+7TpLvwj4mflWjZxxM3bb+z/7gM
4ime4ime4iGec5u8U0/7tGPhoPmmq5bVaLb45ZyvRw9iW07ZaKbXw3+ZZtCl
zkil4grXFGVDPMVTPMVTPMTzXolVZe7QQySlO5v/I/0uTCPWJC4a+zfFv1RV
OPTmc5Xa2vJAm5F3U8ra0yJUEE/xFE/xEA/x/HiJcn36a3eQmqqeapLZgL+1
B733AQ2o8Fp3PUPZwiPDFsda5/RwSDnTz/6zRoineIqneIiHeJpnFC2PzahE
1IcPtK9MbsQXq+Ou37xgQFLu3Mql+1qZ7Dj67tSEbrY0ty0qTmyEeIqneJ55
7nH8uYfmuX9h+8VDPMTT6YcYk3/NaMWHP4a8s+GiFp4djY6j7a14Ub33tNyT
Ad29fCki5+lw85grCKm+9edSvqj+fyPy4Fg=
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwNyFe7QgAAgOGWFiotRMlqoRANDVkltDv7XPUHzv+/Oy7e5/mej3793V+p
RCJxj2ViyVQWSGfyuUwSyKfSuSyQLRZqdQzNAwUomwOLuTwEFoolGIQq5VK5
VoUKcKUIxlmp16o1tFmBkTpSbTbe3j8+60gDa6JEC2vgJN7qtFGMJFoE1Wk0
W3i7w9AE2aU6FMtQXY7ttmmOYfs9lhv0aabHczQ/6PWFEVyqInxvNOwPRGHA
D8XhaCyNhMlYGqvKVFvMxaEkjydTVVFn+kTWprKkaOp0PtMUfbFebnaz+cqY
L9YrfWYsF/pybazM7WZrW0tju1mtdyaJt7tb07HD6HqxncPecf2DZe891/L8
/SEMvH1wFER5sttY7sGPQt87RtHxdA3Cy/l0vt8u1+fjero9zZ3rHIN4XR73
r++f3381xTnj
            "]]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGCIAWJmIP4dpRF5feNL+yeblhUkP3xmzzGrrPtDwwV7aonr
Fv6fyffnpX3JW5c7mquf2ds8MZ24zYd64hv+Kfxo9nllv+WZ7uKEgmf2Jxfs
/yUuQj1xsTkJSUumv7LX/p2/ucbymb3fzus3ivedp5r47WylTu+Hr+xXb4vO
WMP8zD66xmrLqTDqiX/YpHfWwPC1/W2DSRU+J5/aS6sYhUc8O0c18ZeckbIH
q1/bOx5TvHRx0lP7mlN5XOm11BMX8xHRkdj52t78qWB6l8NT+60/0m/riFFP
XN1ptavNk9f2U2coacbffmLfYzmjmHvXWaqJX3M/LlPF88Ze0eXYJIbaJ/bH
vp8zkE6hnniJfxqjrMUbe6OuX39Xiz2x//5yGtNrNuqJr0/rWnwz4Y19wYmD
AirbH9t3Rab+fL3+DNXEv3XclT3Z8cbev6vArjbysf3mG3v5F0dRT1xv7eal
slve2G9+tj73wedH9pe6l1tJ/TtNNfHeR01bK64C4+V+s+Wnnkf2vk+4NfWX
UE98B5Pog3nX39iLyKlIRH97aK85oyGp3ZB64t9fm//edfONfX8z54uWpIf2
96e5hf44cIpq4kLFERs23X5jLy2YZbn0xgP74OXrtf6HU098o6QB89W7b+xl
Dy2OlnZ+YH+v5FiayrOTVBPXiWP9cOn+G/sYs43/+PPv26uHNLTer6ae+ELj
hVO/P3xjzyZcuWqb0z37yzPiznVwUk+c1vU7rd0PAIv0e9s=
         "],
        VertexNormals->CompressedData["
1:eJytzHs0FgYcxnFUNts46bYkZ7XK6iyjRSH2dFUpXfVqJVKhpZTViHQQ2lao
jqLinJIu60LNpZaXnhXrYpq8oom583rxUpaTLmr98Wv/7uycfuc8//zO53xH
rtm8xFtPR0fH/c36vJmno32P3d2bsNrVMHfDxTruX5+ZF2TYynm/xWc+29bB
2GVmictPlFJHTjzFQzzEQzze+jvtkcMX+t+BlZ+L+nVDA/WveBesQguV5l+a
hSZ2cOnxiS4fF6jo+kvUDQtGUTzFQzzEQzzEY3nPwaLu9+5g9IHUFJ9CNW23
jlHYBzVSeyGpT7p7J0fW/jgjq4uceEpt9fedfIqneIiHeIiHeJjPKlm9aUAe
/ppyzGouNfTyNdPLP13PJMeMRSWzmukas9Rw4flytKQ524e9bKB4iod4iId4
isfWXs/lUxvzofSJPloWquEl4JuOjHo616VPXnb7OvV05ivnWtSj86zBK0W3
huIpHuIhHuIpHvuaPb4qVjyEW2Tsk3WD1MyumFiy8n4dJ9laGW0Ky2ZpcIu9
bnQ9TFXd0ZZv+uIpHuIhHuIpHhcCHl9dHd+Ki/Eut16cvUfT3QHJ+lE1PLBT
GfssqZxbJnyUVPuyErEe/YweB7ZSPMVDPMRDPMXjw7gNsZ/YtMNlqMfOZ6vu
YWtfZZrWt4KH7rvWuFZU0cJo2vSamYVwGzBvzsmiNoqneIqHeIineLRmtjg7
NLbBrj07zMnwAUxu9frfnV3GHgvdzn4W1by1pzLEKaYSxlnDGqemtFA8xVM8
xEM8xcO9ZMj1FQVtOLbLpGy+Qzn61+oGdrGcD0O2e+aOreajw/prBqVr8JNa
afHU7wHFUzzFQzzEUzxMM2YXfBHUjmp/44ji8HIEbE/1uXZOxZ16daXmfuWM
ubTQ4ZFGi68d0389/jrtrad4iod4iKd4amfN+aM3vAMRCSfG5StKYbQjar9N
5mbaJO/YnlOootnk0jMXlFoEm2t6G1gE8RRP8RAP8RTPrnUm/d2a2hHnm1/3
s18Brobo+pn+UAGvodULQrap2OfbjZm29lqE5W1xS/BWQTzFUzzFQzzF87CB
17XrnzVjrHvI5VMVKYz0y7Ew7a+Gi23QmHFHS3nz4Bwdz9B2qFL3Rk9IKIN4
iod4iod4iueIxKzimcOLYDw19fmQp2U8rfKIHGWnhUFc0aFlU/7kZW+LJedO
tSJyeuMVy8oKiKd4iKd4iKd4Ku1q7ZyzVFRMeWSgDm9gffWe29aH1LB+mTyp
sLGWqsHGCQMfqmEaZDr5iOFDiId4iKd4iKd4GvuPjyo1rKSmZFzWsMAmBp98
pbKMaEDEzHmW1lGNTNgwIueFczNGN/nmth25D/EQD/EUD/EUz+zvrlS/v/c2
P21YeiN+Wg1tdSPsmx3bYFX15EjyWjWNXyc7oagRrfZNaTZnCiEe4iGe4iGe
4rlolte+Os9MdH3vs8uhMocDdzvlf67sRJvvk43hma1cqw0IOGBThwgTjf76
6msQT/EQT/EQT/Eszy4clRucC+3zTU9jFCncndadsvl2JxSqjMXjA9vptVj3
ovXiKpy94bEg0T0P4ike4ike4in+335o7//ri//PfqXNrbuKnmLedFB7VP3e
Au3g2oTCg/Xv7L9ykfHN855VuJx1/NyMtHYsWNF3xgdx8e/s/w/0jKux
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAGJmIL6yqfXVjuJ+h6jLfzdPnVbmoDXh8oEZE+c7mPkX
rG5i6neQMT8zKeJBucP7iDkTZ+rOd/iy73i2cGG/g9He1erMk8sctiimJs06
Oc9hktLdVZ6P+h0KIu96OHiWwtX/tJ3VdZCtx2GytKbDoneFDkdeO/y4Nmm+
wyqP3PfR5d0OQm8WtswTK3ZoOjRT7YfhfId4J2YOzQ3dDvLbYtOZuwodcgJM
dptenOewztxgcZ99j8OCp0+U2JMKHNZV3u4RMZrv4N0jFSUr1+HAlBdoeLcg
x6Fyy4fwqQkLHP54Jjw2jGh34Nnq2iYYkucQrN+gJm6xwEF1trPCHY92h39c
fMo3l2c5LL61btsngQUOJXf/TjvO1+Hw5bDkuSVHMhxOxsu/KLBc4OC/5jVz
6vkWB6ezrr1/+lMdyvIlZ1wOX+iQ/9Px/bWrzQ7HStXO/zyS5mD/vXnxDpuF
Dmfbb5mo3Gh2ENtUu2WLabJDQcP/ootCCx3WWrV4brrY4jCJc27RdoYkh+U/
pqS/0V3okGgXU/uoo9lhUmJnV+78QAfu1KS3ZoKLHJRc3uzbmt/ksMvPW33G
1QAHoa1hC27xLHKw9w1VPN/S5PBnubt1Aau/g2x8wh3l4wsd6tyP3v89t9nh
2rOHDb0+AQ5i/DmaDacXOijM4NDi7Gp3eBr5Iz9TKO3AxAjdhmsCCx0ezp2R
faegzSEwebpiSHnagRkrFI2reBY6/FvGeO5ra5vDeoVstSMK6QcWB2nnHz62
wMF2YWGP0vx2B2fxMyU3d6cdmMNkvkf+9AIHWqcfXPbicicuf+EKBwDiaGnv

        "], {
         {EdgeForm[None], 
          GraphicsGroup3DBox[
           Polygon3DBox[{{1, 2, 6, 5}, {3, 4, 8, 7}, {2, 3, 7, 6}, {25, 26, 
            27, 28}, {5, 6, 10, 9}, {7, 8, 12, 11}, {4, 1, 5, 8}, {9, 10, 14, 
            13}, {6, 7, 11, 10}, {10, 11, 15, 14}, {11, 12, 16, 15}, {12, 9, 
            13, 16}, {16, 13, 17, 20}, {15, 16, 20, 19}, {14, 15, 19, 18}, {8,
             5, 9, 12}, {17, 18, 22, 21}, {13, 14, 18, 17}, {18, 19, 23, 
            22}, {19, 20, 24, 23}, {20, 17, 21, 24}, {29, 30, 31, 32}}]]}, {}},
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGBQAGJmINZqCZjqJ/rGvvfC8hCV5kv26TK+Sr+Lj9hTS1xa
UuDTyd+v7UWjnq5O+3LBvnf63eV1Lw5TTdwuMvSi/IPX9vc9oqbadpyznz73
9CS3QOqJ36xYx+R97LV93p93134knLbv0eZ/IHzkENXEr+ye9vr7mtf2F9/3
fu30PGF/cHqo9TJL6olbe3+0WTbhtb2jw7/brVeO2NuIs7remneQauK0Tj+0
dj8Ac9eL5g==
         "],
        VertexNormals->CompressedData["
1:eJy10tsrgwEYBvCvOSanNIcv0lAL03LBHOuV08QFuWBTy6lFbpTSLuZiEYmv
xZpQLsxaKMnFHFrxakJLSUpTKMuajbGVQy2KXbz+g3nruXn69Vy9WT2DrUoe
wzCCYMKC0VuvdjlWDYHcmfGRxiGIWOgt3P/xgbbctvPhcmB07/tg6sQTMHTk
kTySR/JAHv/8Vl293Lt9BouHX4oB9hCeO8N5/K9XuLWOdceH36OlJM+QbX6G
Nanh5rOgGskjeSSP5IE8kodiibJ2OMEBn8amJbv0EjI4z96e2gPGFgm7IblD
rZhf5FN5oTLGGEhZn0bySB7JI3kgj+TBmSkxHZw+QAko5jtSr+HEtDafn+wC
FaspjRI6sUKxLbL0uSF9M0nr91v/PJJH8kgeyCN5jKuqbJCfO0E01668WT4G
fk5sn9j8CJ2c43tW7MYpzbSs7MUEtg5YRY8TyCN5JI/kgTyS//d9jmlOuB9/
QoG3oe0i+C+C/mrdm0wDoepfdZFsotCMKWlddv2oD2oMKyOT7iMMVf8LN4mD
AA==
         "]]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
       Specularity[
        GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
TTlr9A==
        "], {
         {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwB0QMu/CFib1JiAgAAAPAAAAAEAAAAAQIIBw0OFBMDBAoJBQYMCwIDCQgG
AQcMBwgODQgJDw4KCxEQBAULCgsMEhEJChAPDAcNEh0eJCMODxUUEBEXFhES
GBcWFx0cEg0TGBUWHBsXGB4dOzxCQRscIiEZGiAfDxAWFRgTGR4cHSMiGhsh
IBQVGxoeGR8kMjM5OCwtMzIiIykoJB8lKiEiKCclJiwrJictLCcoLi0pKjAv
IyQqKSolKzAoKS8uKywyMR8gJiUgIScmLzA2NS4vNTQxMjg3MzQ6OTArMTY0
NTs6NTY8OzYxNzw4OT8+LS40Mzk6QD83OD49OjtBQBMUGhk8Nz1CPj9FREBB
R0ZCPUNIQUJIR0pLUVA/QEZFQ0RKSURFS0pIQ0lOS0xSUUlKUE9FRkxLRkdN
TEdITk1MTVNSVlddXFNUWllPUFZVUVJYV05JT1RSU1lYVE9VWj0+RENVVlxb
TU5UU1dYXl1YWV9eWVpgX1pVW2BbXGJhXF1jYmlqcG9fYGZlYWJoZ15fZWRi
Y2loY2RqaWRla2pmYWdsYFthZmdobm1lZmxraGlvbl1eZGNqa3FwbGdtcmts
cnFtbnRzbm91dG9wdnVwcXd2eHN5fnFyeHdzdHp5dXZ8e3Jtc3h2d318dHV7
end4fn1QUVdWeXqAf8nK0M99foSDf4CGhX55f4SHiI6NfH2DgoCBh4aBgoiH
hYaMi5eYnp2Gh42MgoOJiIOEiomEf4WKiImPjpOUmpmMjZOSjo+VlI2OlJOJ
ipCPi4ySkY+QlpWQi5GWlJWbmoqFi5CVlpybkZKYl5KTmZiWkZecmJmfnrSv
tbqlpqyrm5yioZ2epKOam6Ggnp+lpJ+gpqWgoaemop2jqJyXnaKjpKqpoaKo
p6Slq6qZmqCfpqetrKijqa6nqK6tqaqwr6qrsbCrrLKxrK2zsrW2vLutrrSz
r7C2tbGyuLeuqa+0srO5uLCxt7aztLq5enuBgLa3vby3uL69ubrAv7u8wsG6
tbvAw8TKybi5v768vcPCvb7Ew8HCyMfExcvKwsPJyL6/xcS/wMbFwLvBxsXG
zMvP0NbVzMfN0sjJz87Ky9HQx8jOzcvM0tHNztTTe3yCgc7P1dTGwcfM0NHX
1tHS2NfSzdPY09Ta2dTV29rV1tzb4uPp6NjT2d7a2+Hg19je3dvc4uHc3ePi
3d7k49/g5uXZ2uDf4OHn5t7Z3+Th4ujn1tfd3OPk6unl5uzr5+ju7enq8O/o
6e/u5N/l6ubn7ezq5evw8Ovx9uvs8vHt7vTz7O3z8u/w9vXu7/X0W/jRzA==

             "]], 
            Polygon3DBox[{{247, 248, 249, 250, 251, 252}, {253, 254, 255, 256,
              257, 258}}]}]}, {}},
        VertexColors->CompressedData["
1:eJzN2Pkz3HccBvC1GUKnaUvFVrRoHKtaTKzGEfomcYyZOKKOBJE06dJNqaNp
kG4UCRKNbogjpWINNV3WsYkQipSKa7M+ny/BrhDXBhtRQRJaxzb/xSc/PTOv
H5+fnnk+PhXtx6bTaDS6Co2243Wq+uryO5MG4FixItdNtxNiQmNKtS7MAimn
tdy1GXEagBars2neKvfhvDFHGH6HnG8wj/YqNinQ79j+IUhxH9KefdXYvEjO
g26EHUpvoECQPD0tl3fBlnhdJDafI+b16uzWvTEU2ECXT9xkN5yr4gnHIsi5
1GEjkGNJAb0k08Ff3ANlbtk1U3xyvhGZ/bz2GQa87W2yv6EXqImculkZOd8T
75/vLMRw6WJsFve3PvDYbg6VaM4Tc7sUhiP1LQZb9dyXHaliaP1wRr3ek5zf
5bl0L5hg0Gp6dzSL+wD4foLyoHRy7vxdKZ2xE8P8LouUT0sk8PySI2O9mpwn
xSqQRIkgq+0t6UpnP4xSvINB3eScq3atMGoZASt63rL5KYJO/ZmohklyHmci
9pBNIRiOPa6alYthaMT39Oeb5JzjqvbSdQCBltB9tYVFwey1tqP1DAUxz7Sv
C/u3A8GPrcbVqpgCpqHh0i1rci60DO6pvo1A3k+P8I4cAE5tSprIi5xrGZ4M
4fyOQG8lZ5/O9gBM9h76YyKcnMdrhv9jXIDAb7fR5jhvEALlquJdyeR8+Crt
a2EGgrhCC40Vi4fw4sx0Y0gRObdRL5KxEhBcN7DTUXvwEHKW28oFDeR8+Kfs
hA4OgtSGF6xfTwwBe8fmR0xMzhPXMhhHQhDEeomOfLY6BHa77QvKFeTc3W0x
zswLwS9/njogvTgMjlscUSn9KTHXvu7Xr/wCQeUn2iaXtEcAnhSKb+qRc7Nj
moyaKATuThVGNhUjwDJNNFXXIedP3g44X8xHoOzfz9C3lULj2RvxrHfIuf2G
zN8YI+Dy2CUBbVL43pW3KFcj51cVYVZVr3fRmk8uM8tNBlba6afzlQpijh08
UYEuhhglm2kglcE9QUZf5Ro5l9Fm1IJZGBQ1tkzRmVHwgSv77i2R8xMltYKy
wxjsJF/uzPtvFPgMfeH6HDmfdeIeXmRjyFyInkvIfATLS7dMrSfJeWOiojL1
AoZiO/PQyvfGINHToGtZSs4v3wnU+CAPQ12aHD/KHwOVsp/ZIoqcOzjrWQtr
MPzV7tIaYTYOxzvorwZ7yflC30Swcw8GvHVTsNo0Ds1Tiemv2sn53IorGE5i
KP+m0Fzi8hi8UnsOlDSTc/meSiPaOoaEwbyqit7HMLWXsexxm5xXBCjPndSl
YCgZNAJ9J2DYT0tSzyfnxhZpSe0eFKBIpUHR3xPQlHHl8vtccv6m/eFvWj//
AznJkw4=
         "],
        VertexNormals->CompressedData["
1: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
         "]]}, {}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
pfN/9cW/+uh/8yHomA==
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2utLk2EcxvFlrlLTcCkyzQ6Y5jIPg1pmtl/NckmQ2rQtZFIrpVK2SOyc
5bR0QlRzhWYpdticxjIrslpHCqWDWtRz1yoYdT+mRbWCDrSVPVD3/oa9uF9d
8Hl7vf1O0+hWFPnxeLyGUTzeaG57ZV3Tsw4ysK38xgBjwRCzTj00M5IF6v9c
0+p85+L84qbwy7I2DOZ2j/aYkDpxz0hIR8MhBlwlpSdsnMd/afoWQN3rSddL
xEOHGVividy434ohucLhNxxBnXj93FhpjYmBVdlbRks6MMxvUEZbwqkTV89q
UN5rZCBNlCQ5YsOgeJi7IiaUOvGv4RV1i04z4Hl1oklxCYN+dqY9ahx14tHD
Wa55VxjQL95dPHAHg9M/+dD475j6fx/qxY7zgww4O/XPQ5wYuv0Lt+I+6sT1
bT82xIUisGvzE9VuDKlCiTmvnTpxSchLy3POY6STHvdzXpBSG3fNSp142VV+
vlWAwPI595zIg6FqTdzncOpeF6vT92nDEEwtfrrwFuctg4UXr1uoEz970sr+
jEAgULxY+/E3BoerXxp8hjrx1sRqc/AUBD9mvbXKeSxk87sUZ1uoEzdkzIuf
m4jgpvP7HI8/C+lJW3a/N1EnPmTKuyVMQuCO6q6Q81m4v0mwWkrd6/JBncrD
eapye4+Rc9UFm8xYT50432CuvZ2CoOuRWyUaw0J56ruxaUbqxCv6Jg4vm43g
1FXerpVjWTgvUxkNB6kTL1v1ybp6PoIaU+CdzgAWZijTLPF11Ik/aQ+QZaQj
uNv/INDD+aVGxrDLQJ242DPdEbsAwaigAwp5IAsZrzaXDtRSJ/6xuSDwgxTB
jsoJ7GvONWs6xNtqqBNfj3s3lssQlGrDxgWNZ+F4ySR7TzV14j1zsJ8qA4HV
+ixnJecJtu7mKOpej6sZOZa2GAGLjza2cn7FlVepq6JO/I1I8mBkCYLCAmFC
ajALqPxAZoSeOvFFO3PXvslE0HTUUVbFeVG3SFRSSZ1488NS9105AvS4yd7H
+bdf94Ju7qVO/E90bb1lKYKwYDU/MoSF6gWaTwLqXlfrTiXUZSHIWTp5eRHn
gr1/Bor3UCfua72Nr7mv/eVr/hdPjO6y
          "],
         VertexNormals->CompressedData["
1:eJzt2vlbz/kax/GMphNJUbaxhkRJsjRZ6kvWcAgRaWKkaIwZg+GYCdm3GZSR
05CQsWWQoST6JkJHTfYtDAotlF3Gcs5cvZ790PwN56eu6/vj47rv133f7092
478eFvyRiYnJv6uYmFT962+1zNlxNR4XG15dHnd18uAsw4nojs1m38w1bn22
Yu+95cWG+hbNDCutzxvSnazmJGTkGgct9vvM8myRYUb8tmdtnHINl4c1aHrK
8opx0+ETnYddSzP89HlC9VrmjwzWjUpq5hy4Zdg3JnNgcuJD49Dmi0/G7Ewz
zLZ4kuZge9/gcKzq+Bj3QuP0WV3ezyjeZrwRnv0ia3ue4fCqlV1TzQuNVWo+
cFg/MdE4M2PA66pH8wx2b717lNkVGNfvMc+tU5ZifF7f3+fE4XxDbNvssLiS
POP3h7qGxC1MMT7OSjpUdrbA4OnhsGDKoTuGofZroz+4JRnuro8Ofte82NAj
cXjbFmtLDEkmO6bkF582OC+2mdy/e7bRN733uaWbHxnWu1U/VzA205CZ9TLj
5JbrxrB0+WSdlc/GRPkUP5XPD/9tWu6zt7N8Hi6Uj+M2+awdL5+tR+UzfaJ8
fD+WT95I+Uxzk88dK/lcTJKPSWv5VF0mH5tF8ml37n65j9UlfB7Lx+0r+UQ4
yiespXyuzJTPqkvysekhn2pd5PPHOvnEHJJPTPH2ch+rLfLpdFQ+xx3lY1Ms
n+rH5bP0hHwWpsqn43P5/P5OPt4d5PMUnzB8Pnwunx+z5OOKj5mpfLb7ysfd
IJ+XteRTO1E+ZabyCV0hH6858rFKkE+vW/LxfCgfuz7y8e4gH5dm8tntLZ+z
1+Tj01s+gwbJp8pa+Xjh8/S2fAIT5NPoiHw2N5HPN6/lc+SkfB4Z5bNtv3zy
8bnykfrrGv01a5F8ru2Wz0Y/+UTnyKdukHzq28jn9Qj5NPuU+rGWT8Fh+XzT
Rj6xS+QTt0A+RTnyyb8sn2ql8pk0Vj47W8vHtIV8+k6QT80r8rndRz5uveXT
JlI+AfiYPZDP7V3yaXBMPuc+kU816mfjCfm0OCqf2vSXNT43TOQzqr18cqmf
6vhEjZFPk//IJ3SCfO7WlE8vfIZ2kc9q6icUHzd8ei2Vj/dC+Wy+JJ+39Fck
PgdD5HPXQT7v8Vk5WT6tLstnND61vOQzHx9vfPbfl49PvHxG019jGsjHWCKf
DfgMoH76H5JPB3y6VZFPlIt88vFJ2yWfM/jUpL/m4DMcnyh8fPFxxWcMPgPI
n5H4dKd+Rp6Xz7gr8nHBp+94+XxJ/ewgf0xC5JNI/vxAf/n1l08hPt/iswWf
8J3y2YTP3IbyMXssn0H4NE6Tz2Dq5wnzq5T6OUP9ZOHjhM/zAPm8pn7cguVz
zEI+M/C53FU+ffDphc/TlvKZhc9KfMyy5WONz6IS+TgHkj9t5JNI/VgEyWdx
Rf3gM36gfD7gMwuf2fgsxGc+PrvxmY3PTHwM1E8e9VPjeWWfAHxy8Pkan9X4
XMCnNT5v8FmDTwg+bfGZgo8P/eWBTwY+DZhfyeTPG3xcP5dPAvUzjPoZHCyf
dxXzC592+DiRz5PwcSV/iv/mcxCf7/HZgs9kfNrg0wqfj+ivIvrrJj4j8fka
n4iz8imlvw7UkE80Pg/oLwd8JuITjk/vpZXz2Q2fPHzO43Mfn1x8/PDxmSif
UnzO9ZLPH/3kE4jPTHxq4mOPTyQ+9/Bpis8S5rtninz2MN9X0F/W7D9LOsrH
hP1w+i/y+ZX8+ey+fGKYX/+oyGfm+7Te8mlRWz41jsqnbnf5LFggnzFL5HOr
QD4p5+QzAp/8L+XTnv4yNpdPztfyqc38iqR+brjIpys+sfj8WSSfSew/zSry
p5l8yvDZi4/Jb/JpmiafEPbDf7L/HOsin04L5POe+tkXJJ+UXPk8pn6mVpfP
3CHyKfWST2Q9+QxjP/T/WD457IfTqJ/lyfJZSv7sL5TPKy/5zHGRzxZ8ZnXD
56p8TL3kEz1SPv1/kk8KPj/ekM/bPfKphY+jtXz6PZNPJvtPr2T51D8gnyP4
GOmvOuzPLefLp98++fyT/Xl4CvM9RD5Tqsnnl6HyWeIun/g68nl/gPn1p7v2
w1XyKZ4rn7gt8pmSKx+vR/LZ0Vk+p9vKJ4t83o2PHfUzk/5qMFs+JeTzVHyq
3pLP833yucP+s6GGfOqx/9jis5D5Vf83+eygvwJN5XOO/Mkgf9zZfzLor8BM
+XxCPo8jf66RP+fJ5yvsh6nUzwpX1Y8t9ZNP/exgvi8jf84+Yb6TPxGt5HMd
H4+p8mnH/PrA/hM0WD5PI+QTiM+Xj+QzY5t8/PFp1Eg+kYXy6UE+Z5PP/2a+
O5DP06mfLfjcwOfZTvk8IZ/bkc9f4FNKfxX9bf+5hE88+fyts3wK2Z8v4fPn
Bfmsx6eQ/EkOlk88+XwLnyGh8hmAT0Pyp3Zf+XxK/oTjs5R8NtshH2f6axn5
/Ir9cBE+ofjEML864ZPNfM/B5z0+vcmfB9TPu3T5GPG5js9e7tMi7ot/4PMd
Pv2c5OPE/NqEz0Xq5y4+ndkPE4LkE4jPwor9mfn1Mz5jqJ+oPvKZQX8F4/OC
/acn98UKfHrhE1qx/2TIZ/p5+XTZJZ+hr+RTpap8GjaXzyrur5Q98rnvK58f
EuWzH5/L9Je9n3yCuE9bcr9vSJZPl4fKHxPq51W4fCyOyGfiNe7TIvlkDJdP
WDv5/GYnH8eR8vEnn+3xmT9RPnb43Dwon6sl8nmzWz6JKfJ54CqfJeRPLO8b
njfkM4F8Lq7Yfz6WT5CjfD5hvvdjvk+gfg7flI8V892vlnxM6S+PnvKZzv6z
7oh8HGxUP2sWyceB+yszUz6jqJ/l9FfsSPlMYb63aC2f+DnyCT8vn568b6Ry
v4fzvvEL9WP1TD6eG+RTik8/Z/nE49MwTT6Fx+WzM10+Nk94HyN/LLvLx5X+
Mt0un3Tme4sX8lnI+9gd7ndLH/nM6iOfC3Xlc5n3DctW8hm4XD6x+Hx/TT5h
3KcXnsvnO+7T0ubyMXGUz67v5GN5Tj4/4eNBfwXj0433MXPypyM+reivJFv5
nHkin+PkT7Uk+Zwln+2pnwsftP94ucrHCp92v8pnHfWTwn1xm/q5ZC0fj+Hy
yfeUzxob7lN8xjLf6/H+02i+fPqe5n6/Kp9bvI8FcH9Z8D7WhP1nuo98mtBf
z+ivCD/5XGd+rad+LtyhfuivaHwm15dPLvnjyXxfz/vGV8z33/EpY39+7iyf
2uTPa+ZXLj6bjfKxY//JY/9xJ39MO7L/kD/p5POw9qqfTPJnGPk8jHzuzX7Y
F5/YcfL5FR837ovT3KcNyOdt7D+rmV/z1la+T9PuyecEPl2Y7za8bzwokk8G
Pn/SXy/2ySfohXzy8EngfSwAn428P7vyPtaZ+bWZ/dnFSj79uS82UT+TuC/8
8AmxrHy/76O/yv6QT1/66z37T+K38imwl89we/ls5H313kX5zOgrn7f4pFM/
rvRX/0L5dI2WT5BRPk7cF/P+kM8b5pcz+2FEvHzm4xNspvzp6lB5/+lIfyXg
sylePi1C5fNZFd5/eJ/37SafUdXl8zBFPqe85RPH/dWe+rlSKJ//ks8X8HGf
wvsG++GGNvKZtkg+HcmfDPaffzXnvvjb+2oZ830d72MBqfIxqyuf6AfymUT+
lByTzxfkT3v252Tm10XeN4LxKSSf9/L+7H9BPksmyafdh8flPmmj5TOc+6tW
DfnYMb+69ZHPE+bXd8z3vb/L5xfmewP2nwkj5JPF/vOqlXysxsun+IJ8XtNf
4d3kMw2fUcx393z5DDkqnwTenwPryWfrK/mcYb574fNJsnxS8BlPf63mff4o
Pp475BMzlv4qks8P4+UTwHx/z/1V00M+1txfFtwX45rLx4L5dZL6STwrn2zq
Zxrz/Tb7oYH53q2pfHoHyqfTdfnU6SefpwHysaW/5lI/RvprHfdFT/I5gf7y
J5/TuN/3p8rn7lH5zOQ+tXsvnzfu8rnHfRrEftiH+/Q876sFzPeX9XjfGCaf
VBfyB5+kQ/LJva35Zb5SPvXnycd7q3xcuU/92Q9vusvnEfvh0CbyacR+aHOD
/Zn88Zpb2cef+tnH/jN6v3zmsf/sbcz72FP51Gb/8eH7zlfsP7HsPxbM97Ru
8qkfLp8z3O+nQuSzPEM+PZlfP5lXft/o1U8+n/G+sZb5vrZIPveon0PUT+l+
+fgzv7Y8lc+yjvJZQ/4U0F97BrI/V+Qz/bWsu3xS6a8D+KQyv3Ylyed+snyi
mF/b38hnSMX74Wn5TDwon/vMd1/2w9S28oldWNln6wj55PB98CTza8rf5xf7
oRXz6wb5M8BN/WVD/vy2VD75efJpnCOfOi/l86+p8ulpJ59v2skngu8XqXw/
TegqH5c28gmJlo8V8ysvTz73YuUznfoJob9MqZ+L9Fd17q+SJPlkkj+vub+W
cp8uXyaffTHyseX+8oiTjyP1c9pSPuaB8vndTj655vL5mfurHd8vji6WTyTz
vT7v8+nMd3fyeTn74UzyOZv8ifWTz02+DxaTPyEj5LN7jXyO4+PL/twtUj7p
7D+7qJ/AAvmY4WMgn1vxfniP/Nn8Rv01i/dDG+6vT/GZHSyf0bu4L/CJ4n3e
bJR8Pm0onyfshyPpr3dv1V+N2Z9d2J/DdsnnC+bXS97HfLvw/csJH/rrYk/5
bKC/DhvkM7qjfByj5LMSn5fZ8knnfn9I/XxRXT6TX/B9h/3QaYd8th+Wzx32
H3t8HrI/11oln/Nh8tnDfE+IOFnus6zCp0jzvZT7a1CEfGzpr5/ZD+MWqX62
sD+H4vMyXj62+Bykfiw6yOcy9TOY/blxaOX3+dH01ypv+TjTX2ZJ8vHk+3vO
cvmMYr7fZ75bl8nHGp+W/H/CVL4vPy+TT198djWWz5wf5TN7Iu+Hc+Xj6JxR
7tPWXz6dqqp+dveSz9qB8vm2pXw8eJ+f79O13KfpfPkYK75/3ZHPLOb7Cr6/
15gsn5au+DjIZ94I+dxi/7G3l8+vTpHlPpa75fPiiHycd8vHZY58tibKJ47/
36ha5VW5z2v2n5+L5HN1j3xavJVPl2L5bMTn5Dz5zJ8nn1tx8vExl09Ab/mc
9JdPow78f8KmReU+GT3k48v+vKy1fGawP++gfh4/lM+hivf56/J5t1E+7j3k
E+kpn7uN5GN/XD7B71spn9+tKfdZd4r74ph8LnrLJ2q7fJ7tl0/EEPn0t5XP
kpPLu9++eNUwNeZa4tmYu4axKS0tHQofGv7/u34/FbZtwl+/G83rrj7w1+/G
6VFDzP763fj/3/X7/wBdPswB
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
0Jc9
         "], {
          {EdgeForm[None], 
           GraphicsGroup3DBox[{
             Polygon3DBox[{{1, 2, 8, 7}, {2, 3, 9, 8}, {7, 8, 14, 13}, {3, 4, 
              10, 9}, {6, 1, 7, 12}, {8, 9, 15, 14}, {14, 15, 21, 20}, {12, 7,
               13, 18}, {10, 11, 17, 16}, {5, 6, 12, 11}, {9, 10, 16, 15}, {
              13, 14, 20, 19}, {11, 12, 18, 17}, {4, 5, 11, 10}, {15, 16, 22, 
              21}, {17, 18, 24, 23}, {18, 13, 19, 24}, {22, 23, 29, 28}, {23, 
              24, 30, 29}, {21, 22, 28, 27}, {19, 20, 26, 25}, {30, 25, 31, 
              36}, {24, 19, 25, 30}, {28, 29, 35, 34}, {26, 27, 33, 32}, {16, 
              17, 23, 22}, {25, 26, 32, 31}, {29, 30, 36, 35}, {27, 28, 34, 
              33}, {20, 21, 27, 26}, {31, 32, 38, 37}, {51, 52, 58, 57}, {45, 
              46, 52, 51}, {34, 35, 41, 40}, {35, 36, 42, 41}, {36, 31, 37, 
              42}, {37, 38, 44, 43}, {46, 47, 53, 52}, {38, 39, 45, 44}, {40, 
              41, 47, 46}, {42, 37, 43, 48}, {39, 40, 46, 45}, {43, 44, 50, 
              49}, {41, 42, 48, 47}, {44, 45, 51, 50}, {32, 33, 39, 38}, {47, 
              48, 54, 53}, {48, 43, 49, 54}, {54, 49, 55, 60}, {50, 51, 57, 
              56}, {52, 53, 59, 58}, {49, 50, 56, 55}, {53, 54, 60, 59}, {55, 
              56, 62, 61}, {58, 59, 65, 64}, {33, 34, 40, 39}, {60, 55, 61, 
              66}, {59, 60, 66, 65}, {56, 57, 63, 62}, {57, 58, 64, 63}}], 
             Polygon3DBox[{{67, 68, 69, 70, 71, 72}, {73, 74, 75, 76, 77, 
              78}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGDwA2JmINbnnneLqeWKfQTHodse4Y/tA6VO152988x+oMTf
H/cvLl98xX6BsiBPS/Zj+3tBK/ZsOzhw4utaGHneHLpi/9wuwWZ//WP7nO7W
X/OXDZx47JWXr+XZr9oXJ2Y8n7P6sb0Rt8/Vx9kDJ35Uue3QOber9vZ1S9Im
XXls/0lzgjSP6cCJ7+KXOWvbetXexPqi2a4/j+2f8uicdP//dMDE7180a/t+
4qq92pP0QE+NJ/at/y5f/XJk4MR3T2Y10+G4Zh/WbuTwIeCJvXz/T9+2voET
P6UdOWW1zzX7FrH0yn81T+xT9bRVO4MHTtzY6nPEr9xr9tyzji3KmvTEnunK
dc5bZgMnPsejV9az/5r9JFm1M9eWP7GfX9nyTktq4MQHW30x2MIHAOhksfI=

          "],
         VertexNormals->CompressedData["
1:eJzF1MtLlGEUx/Hxktp1IVojUjipMxnTlFOR0eUpDFoV2EJoF1HRJqWYZbSY
aBHUIsagrGmwyaSpqbGJrurJC3ZfRKWj0I1i7DKS0WiLIBPPt4XvP+Di3ZzF
j897znmOY3f9jr2ZNptt+8SXNfEV+oK/d0W/mQZnU3dPstsMRqK1a0Y/SPHR
N2af/aVJ2svdgXDSLAzUb6sa+SxnQtWedPy7HMzN+BvsfG9e/2pqHu+LmQrN
kROaI/c1x4T9kzkypDmyUnNMWHPMas2RLWOTOVKCx4fnOZ5B/1RPBZ4beArw
+NLqceHJdKnnDp4reMbwOPA04/HiuTCqHjeeY3ju4jmJZ9Ti6cSTyFHPec0x
5Xjm4SHHDOD5gycfz2U8VXhE/0uceE7heYinEc9PPEvxxPHk0h+DZzGe08yr
F08HnhQecswlPGvxlNAfB55beB7hacMzjMeFhxzZhMdr8RzB8xhPCM8XPKvw
3MQzC08BniV4OvDcw/MWzw88zF0u4qnG48RDjly37HO/ZZ+Zu2nFMx/POubl
xdOGJ4Jn3DKvQjzsoWzGU8c+V+JpxRPFk8bzCY8TTwRPJZ6UvlNZjieBhxx5
iie7SD2z8bTg8eDZSX9W4GnEE8OToXdD6LPY8bRY9mc//SnFU4rnBZ6zeEbo
jxvPVTwL8HTp3TDcMQngGcATt7yvYjxBPDV45nB/PHhy8LTjeWLxlOGJ4cnD
swgPd0wO4OGOmQY8WUVT+/P//izDM4xnIx4/nnN4UnhmMK9sPO14ktyfPvZn
A546PCE8XXhm4snDcw1PPp5ePPGe4+vfveo3W4OJ28+CH82hB2VzXV+HzHTV
a7Quh7Uue7Qu01X/B64gMD0=
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
wOdMmz0BB9YOtvIgTvxpjOEzpsKiVc0+fqznyPHWP/sQFximkU6ZUCFoolB8
ZJIAXYfLwyTkp3XF5VltjJc7dCqmAfVrzvimdzLy05e7/d36o1SIVdL46Y3z
hm435Qfy86M2gjtThwqG4930Loy/bNb49x2+i3TNc1oa+7ZbJo5zH95d2qmm
e9qQh5f+/8qaNKngy9981gnrUbd14bmH+PFQ2fqbGlSYvfo1INSRgP1H60VO
YZ5oD3PzZIwXHWi/2idHQOjpJ7G6+Ls361l+rw5S4QS7yMso1POSZXEXfiE/
AfnqB9Wwnq7Q92fKMJ7X2ot7Db6r97eVZakBFZI02BIA86s0rHq2CfEzt569
1rKmQnjby9xNWE/ShducOojv8DoR4WNDRd8TpSA/SsDKu9M1AZifN3tXmhfG
q/RvtchB/3SWN7DcA7/X8uayOR8LKhjTZZ7k4xy1iWZfTcD+pzav/nHiBBX4
f/r/qcD4ls6cHfb43lIenusSyLOUExzwxvzvCy9uP76bCZZtt6w4kOeJcSlN
N6zn0prB3h2IRw9NJzViP9etPVVu40LAsvekrZPIT27xRlILvmv1QqamCupG
lvtfGTb83YcRkbKNRlToiYy9LCNFgLJdi0c7fkeFiP0aY8epYD0+M7MW49Xo
TZVr8F1sx9TvbsH6Lc/cL9iA+dle+XJoYvyjOI2VjItUSFGnmChjPetllSn2
iEt6mTrc9aTChoJVPA/6CbB5Kvn1PPJg1LO7sg7jdexWH3BZib5lfcZDQaxn
A9ellWruVKhOO/9oG/JQHtrKHMX6Ez+kn8tzpUKCEB+/H8bbBCaM+uB7JyVa
zQWdqZB92PrUMOZ/5vDxhrYMEwyDZG1cHKnwZVPs3atYT+6iyN+tiHelCS2e
cqCC/X2+4b9eBDhf3MUUxjwle7XSNTB+kLYQ1KlLQLHw/Tfu+LvD3L+tG51w
ftcfCXNGPV+R7t97B/vqgkbdb0usR3/379YnGO9cUBrHi+/im0zgGXdDHdvw
LPk55h8sOyniiXn0SyyuHqdTgVrvsc4O6zmTemsjBXHOq5e5lzFQb0+d0Xjw
Fu/k9rB8VfzuJZZGk+4Yn+yyk1KLd/hj/l9q5ljnVjL7tvIUKkhuUvwo+IuA
DvO9pGh8F/Fz1ME2iQqCxKffXzD+xb0rvAmyTDAxD2Gfi6fCjcox8U+Yf+Jh
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
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ovdMPwvOEeu9+h8nAgte
              "]], 
             Polygon3DBox[{{793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 
              803, 804}, {805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 
              815, 816}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt3PtbzHkUB/BJrcSTy5KUSptVNiqVUOEgRI2kEpJQkrakkGVzTRFlUhnX
XCujq0JMbIp0n4o00mqnGzM+DMYtsmE/z7PP5/s3+OE8z/np9ev7h3Pev5xf
/Dd4BPbh8XgT1Hk8Ojz3L7cELpMJ6FrYP0o2VoDSSazt33Yf0P/3AuGpcU3U
955p6oygPsTVY7xShs58qHVU1YopBFSDwt+4U5/soXTZgs55c5BDnwh7AtXv
LvYbRD16lXHcwX/QmftJxZHHHAlsFw9zjB+lAN0dcX2uPkFnHppf6PsUCLQ7
qc7uNVKA0/Wln9QfozOvdxX2rJ9BYEFhfI4/9XXF73QEzejMJyg2H/1EvcjU
rGgmdcG9hIkj0Dl/bzjxfv9ZBJK1/Bq/GyrgcWNpxPhH6My3xV9xsp5NYE5D
rcZ26hvejFV6NaEz37/2svnOeQSyfETBmw0UcGpsT3vGfXTmRC2xUnM+geGS
WVs8qZdapXy3QuecfzpsTRL16GmyaBvqTydZGN1sQGc+uMniTLoLAV9jnVTV
SAVYzVm9vL4enXn4Bm1HS1d6VyflX2qg7s3/d9tSdM4b+79qvkHdTp1fmEc9
ylN4vLMOnblwZs6QWj6BgfLo+lDqFaurpd0SdOafWuPzvBYQiFpi9MSVunJd
wIfd6Jwv2xriKqOuqCpSmFMfEv715wHonP811PV5kBsBL4fFH7So2/1xzFpY
i87c6LJ57FvqpdkqHtFXwPKd1u6j0Dnf6dLfJGohAQvDBO0q6ntia8Mya9CZ
tz8jtzXcCZwUmOmLqIsSAg/ZonM+a0/1cgH1vrwy033UJSnfs4ur0ZlnGGR+
1l1EYFOEn20gddXJEzXO6JxriuOE56m3dfbAbOrDL9iSB1XozIM819mM8yDA
9xLyR1Ofmlmn6YvOefVr54Zr1IvKJyzrQ90/P8hUXonOfPxBs9DpngTGTJYE
dugpYN8NtTnh6JwLxmhqVVFPuhS0sZR6zu1TAV8q0JmrSuUZi7wIfNNT33WW
+oNyu+gYdM6vfMpoW7OYwONe++MrqBs2BZccL0dnrpMSu/019dlh0vSp1Gc+
UZeZoHMeaRmot9WbQEFbeMFI6us6T/fm3ENnbh/4q2f8EgIH74pqWkYo4Krq
gf2dMnTmpY0XKgqWEZgap/N1MfV52g7XyB105iS5vHuuD4FtUtPZNtQdB2x9
HozO+RDP56at1G+YTIkfSN1K67rBi1J05v4PLfb39SVgXeyjV6lLe9lPNrEv
StCZqzWJnZf7ERj77qzdFOqK3t+8XxajM3eS1ldpBBAY6msepj9cATFKvc/K
InTmFc1fapaEEiBW0CYbqoDS2h5HVQE689bJF/ktfxKYwfdbm6SlAJ1zA0PS
ROjMV0R3aOQJCVxL7Wrp/iiHp4dFD+8cQWeuZq6bZXSUQPUNj4R06vuNTgo2
onN+8QF/YSJ1WeOd6R7Ux+UkzB+NzrnKWHwi/BiBflrn0nI/yGFjZURJTAo6
85gSgaXtCQK+kb7r17yXA++bY7ZzMjrz7F7HpeJUAhpuUl6jSg6GIfej6xLR
mX/ZcjT7bhoBr+8VZrkv5bB4To91y0F05meNJO626QSC9Sf97UO9p/Gl8gA6
504Vat1p1HfZZST0o356lUzkgM65QGf9jNgMApdC9r4NeCGHrqgyw9QD6MxN
rjlJnUUEepvhlj6he+3KIa2VcejM571VfZNkEcjIF7vFyeWQOMqk42ksOvPX
x03Tp2UTKKo1U5tE3SZ3WKoQnfOUGb7z86jXy49e7XomB6mD5pK56Jy3Jlam
JOYQ6DGIHAHUDb2VElEMOvNwyzNjPfIILDhg3fmxSw7ZCdfFv+9FZz780cO6
u9RXp587kkbdTT9z00h0zm/u0Npke5nAlpJBzouovxOdspREozPXqNtcPCyf
wPmPr7JzOuVgX7Y73QKd88zNWf6x1AsHr/Dzod7qvmmlbA86czeDds1u6jXj
JIP7Ud8tC9RPROf8fZlO7toCAu1zHcsKO+QwOnSpFNA5Pxbi6tFM/ePqrMgA
6pU9LodVu9GZ/2j/mn40/9Hy+tH8P+yss9s=
          "],
         VertexNormals->CompressedData["
1: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
9XxFXBt2BKyoshEoApEqkn4zkw1MmRp3Pv8OHItQq9uflwDBZk0HF4U40HSU
sf98chumyeU0bP+RjtV/4inytzlAEV5o36dZg9TzgdbRIyQ02lZrVCLaA4PX
tbuivtHhSA7Dep7wUVrie38yjYEDMh4DFB9iPyob6l8WQEG3FdycBHUW+vev
O889MwLl8qYhWUXFKGq660FjDgvt9bseTEcPQ37csMNe8WR8/H1txAo7Fr4j
e239L2MENu1pyitoT4V1MUG8JV8YWK20+dCPE+Nwfat6pW4NCR69lJU2+9wF
Ep/e67o4M+AUWeub5coxGKx+qqvnyYF9FbLhf99V4Xv02fBUjwwrfyctbxTm
wEbbTKMt/R9xSMNiz6+/hVD/c+jOArFH7JmccTm3vgNnHir88w1PAFUt68PG
khz4Qvncqj3wEXVITfrGi+kYVPGASz2GAzoKdgHbP1XhuWLf2aY+Ego+S/La
3EPM06dmd7IW6bDj04LzVrsxfPPg721Roj+UW/6nzDEeh8n6aA3XKxQUHbfj
qzIj+snmO3sk00ZgL+vfh9Dnxeg6Ncm30MbCKHH1TZ/6hiDY+yZn558kXGjQ
dZGOZuG5cwU5tK/D8EUp3WTbz1RofHrWRnvzFI7ENd+24x6HmkRqslEbCayT
D1O1HLrgrMlH1buBDPCvFebYC41Bu/dg7ttLHBAM3joZua0CxVX/Nn3aTYaw
rwrekTsIt9uP1vC6tOLOm3T3zaOFwGNgVlVF3JNFvRvOkm/aMNLuSYe7cgK8
2/DOWVOZ+PyJ0lHjs62YLCyj+psvA63ENmoW3eOABU1w0ke4Aq1v/KTXN5OQ
eylF9YV5N2wN2QnrxBjgeIVn0N5+DM+8WcxtpTOQ9vbj25X/xsD2MP/fnCgK
YoZP+8ErLJxN9NK+Syfe164/zSa7GCcdewy7ZKaxtt78q93lTxAq7p3bWJeE
8r/OvzhAY6Gt6OeHxneGwG/Zf1Nk3TRI7n21fvLmFH4PEFLpcR2DpnKd10/Z
JFhuctr8hV0npEWZ1kflMOBTuAStcu0YRPu9F7K5xYHXp0pTuOvK8F2ZrZrt
70Y451V+uNaMyDOXrRY+XXuPnTo/vO9lFEJ2uG/ifU0O3PfaYpHW0oK3TW10
TZLiocVjYY2XDQdsfER6Gi+9xzR9/0+wKwNTRxq3ZzzhQNGrhV/dN8qQq8wn
2amAhI/mHNoqTnVBJr1Oc8SQAdRR0dWXT49hZyx/Su6xKTz9/dH2rR5jcOx2
QkbQIwr6xO7W7+9k4QlZu0X7uCEIajEv0Ispxoe5Sa2/AqcRP0YE32QNgHnh
xyTf4CScbg1jp2tMo5LARVsZ3k9QEFrhvTkuDeR8jf5qcaZQvnZvlWUdDR7H
clWMCdbD0fJszSm9Dsi+QtnE08eAp3+atSvWjMF//DaxtLsc8PHxPMQv9xy3
KfyZFSI1gq5Ah2FxAAd4YtKHg7Xf4Rwo99seKwQvaaqDlRsHFELaiq1uN+MF
5yWr+4Nx0PPwKW01Mcdl0UtMROkdjpxU32yun4F/ZztJ/aXEfIxaCnJOy8ew
3RdYhlEkNA9Fj12anbDqdaX97VAGaNwSkZK0GEM6RTjP8c0U+g6GeHg30sAx
ix559RUFxcnXDhvLT+P2XqFdpDWf4CSviC2vTzGeFnU2UkyfRhpeWm1xZACU
DdadajmdhGab5FYK2U+jx0uHHc5Og9DteE3lXEEa3Hy0M8BOnIkijX91eYNp
0Fpw7JK+ZD3orD9ck5reDn5aK0VKWAyIzQr1fMUzBitJohsep3LAVeCUoBU9
FystKvDIs0awiF5mNUzcq2Uk63rPETJurf3SnSRXCNyB2nMCQRzIDFGvE9zR
hAI8dCHumDh4GvT43LJEDhit3TR0t4OMM7d2xRmaZhDPbXNh/jUH3E6baHo6
5mJW8ZBvTxAJ685aQw6lA3rFXP7WJTEg3yO6X+XEGB5bV0XmGZvC3d6u9RvD
aPA7FybNqon808BW+2Y2jRf5awSn3AdBM8V4Y8O5Ynwt4fJ5IHMaPa9oTFpq
DoDYqPRlb5sk5NzeptLuMI3T7tcPP7EchMTNJL2qojSIdexdl7KJiW+2mM3m
+dMgJO7Rin2b6uGXPPWveVQ79NpOG+axGfCuIOpf17Ix0DOLffSb8Nla+nSw
MiQXU70TZnY8aQTHHEfuNZEcEJH4JCReT0b/6f/21+wohIlXnrM2wUQOlGbS
2lc3oZ9l16mCm3Egt5DhuTuJA/WkP1MXyskoHnDBbZVZBo6ciSzUe8OB9ZA4
ZPAzB/mX7bRIDiRhxatXT/+r6QCTt7wR8XcZIJWz2rLpvzGM0DvZajk5ha38
Osuzg2hw/wGT/oXwKR4q+Pn2xDRaVyc82GA3CCYvlH4VnCX20ysXGY8fT6Ot
vnMCfdsA8B8RE9xtkYR7rOcCSc7T6Piizi8fBiE6Pu/Q99I0OB2a7m6/lYnl
yoalXOdp0Oz+/QBNqh6G3Wt3uru1Q1sPe4vGdwasXynzRpGY79v/cVFS0ziQ
EF6skFieg2s+iuQbZzdC7PmSxzvucEDerT5uNo6ME1GBl9NlCkH6obdsUSgH
1AZ2qHb1vUPVTq3AA8FxkMLl9EqLqNPXK3asz7pOxs979r5wPp6BXH1WPymE
z62DzqcHVXNQYzFN5uhlEloHKay4UdAB9tXcjt33GbDI2hfCRfiIHlPNPDE1
hVeMhaDBmwblONM2X0NB2eZ1t99aTuMyW9+9Pw0GAcIZc2VnilGvxP3RnoJp
nBk3+Uf90Q+ja6Mk7x5LwuaN5NB072m8mx72I06E8Ex3+GdblQa8f9+oUhWY
qK36Tarckgb7ZQvmVWTq4RHf7W0B29tBP3meEfKLARZnNte+/EuDnWu8dr1P
54Au5isvyT7Gl1TDr5dSG0HO66CvZRwHStjvvFfuJOP+Vut7GhsK4VPu0goT
Yp9SFHygZOj7DrWFfJO2O8ZBGGl4tdUDDhy0mtQIlCTjjw31/uvMM1C15+C+
hrdEPc5+c50qycbdfeX3X/qS0LlR8VHjnQ5Qe8687PqQAXq+Z1+cMRvDTSIL
J/Tnp/CR1JDxnC0N+G9qfRFCCnpLSfuWnJ3GVzNVHyPXD4JbrdPwS9tiVLQq
ltxRN41CgVd3i97vh5tlarq7NZNQ1zPrm8KNaWyr57vYWD4AaY5ZPcItadAp
qar33ICJjhHH921RooGY99+yqp310JuuaS/4uA3iZOzSg1ZNgU7bmpKmORpc
4DGxWMgk3lf0vrPgDPF9v+476RDVCNcfO8QkpBD7JmXrh0TLRnzqXLzjH3ch
KMpKnrYn7lVocMvwh2wKTsuxhQz2xYHpi6QTjlkceL/+wtvPxxqR2mdwxdgq
A7O0DotGVXLAVMl79TOtDPRlX1U+5EbsF1ZThysNO2D93Jj8qxcM2GrSR35v
MoaUBv494oJMjOxoVhbZR4PKW8cu7mykIO+TNk70pWlct//744mKAXjUEJrr
ZF6MJ4cunbvVPY27HmjCPrl+mLhq/nzZziR8sNKQrZE6jVutvjSYmQzAcHbf
qfGRNFD+8cHG/AwTi84vl5NcToMfWzX3cSnWw9fKxqJHq9vAvLJkfkp8Cgo3
LjwfY9IgrVPmsgTxXmKzYiWsjHvI0ufqvHO5EXZef7468xEHBNSunnB0bUCv
HWI/9zIKwG6CKe9E1JF4z5ZDs6VkFOpO1P+1GAsS/L8XDuQTe/rF7iMHHRpw
uebI02m7DHwW8VhAtZoD7lr2vafl7+GCy9VwLTsSXjd5+02Z0w6v04OfTlUy
oNVS+va5w2Pov/5Up6QcE9skZ49r89JgW5CVx+Mmov90scY50dOYvTHkoJHp
ANTerQqLOFKMVX93nbUemUYzN4l1DvN9cLxKYleMVBLeqbvAY5czjb4TWzfk
bxwA01ajhKgvafB+pV7kpvNMPODx7oMllQp8wonS/6nUQ1HhXr6djR9BaqvE
0I6tU+C0zqpx9gsNIusv1s0RPivkhgsi5JPQ5v1SeKZXI4R42+qW5HDg67Ia
y19z9Qj5QRN+IwXQ2vXWnknU0XKv/Nc6h8jYkLfHOWAiFt6crC7eV8iBubrh
6s3f6rGMtCbbxyEDX16/6T5E+Iif6Ns0OJKIc5ESsrxWJFxvnm2l96wdlklY
5y6RiDzmtVCrbjCGro3z9BRVJq59z5VYTDy/QlD2aO57Cu7+LGukkzKN8qP/
pS+XHIASnhrhJv1i/NTMGJ2mTmPXF/UNTHofPLjpt2WVZBLe3/m4lvfpNHJJ
XhuJ5BuA4FUP49roaVATuMlS5QITY7e570/roULVmL+Kwr56KNxx9n5MyUdQ
fesufk52CngTawLjPtPgU5uG4Z5sDmRvU00q103EqZOH/6mfb4TRR1736nM5
8O1k/MT6gXp8IsTtcvxTAYg9uW0oSfRzKj4SvStLxt6+iZOFw7EgebP5n3YR
kXP2X730qKseVaXdk9efzcCKDVHfeWo40CwHq67/TkB+P5HUbAsS2q2ePMdJ
bgfqueru8QYGFJDmRjP1x/DLOonF0QNMFOyRX25PPP/q2Lk+uQ8UnFJKLP3x
YBqDc68MvRYYADONglc3DhWjl4OryN3JadyydqTzSUcfpFLH9oatT8Lv3V4b
2p9P4+p9IcJDs/3wpGRfySQrDb6qhj2tucjEc4rW8fr1VDjl/tSxcj9RX1e0
fbgSPsIdB74NXrum4H5yq+/COA2mj/o/jiZ85pr9VOWV4vC3QYrPmEsjlL4s
7n/xlANeTd+XNubUIyPnY8vjngKif519pplB7B2sDVsX2Y345qDKA5eOWKjg
enVN4iWRk3esrrR6WI+Sktv/0z2Xgf+V5x82JnzCM0+YGrfHolaHOkXiJAmf
7fK8LeJL+Hzxunj0HQOMqBWXwg+N4Zbld2KbdZgocDrEZQap0Oa58oh4CwU/
px0M7iVyTlzin5HSuX64oSbVoqpbjHntpAf909M4puPTOpLVB7/nS6nWAkm4
V9vyr+0rYr5b6cqfIPeDYy7Fim8uDU58ymwiX2XiqmuNbinpVHDwf6PYol4P
3UZHBN8e/Qj9P9Z+eKw0BUKm5HXJIzS4q3TR/sBjDixUhB3vDbuNS6do0WL2
jWCjWh188TmxTyU0ltmq1mPI2lXXt70vADyrNOhH1GOiUFyKZEQjTsgF3Xj8
NhZ+qz3c01zGgRMu3F+lVepRQd59MsopA+N0nj6jED5Hrqh3lnrfxg+3heOX
TEk4Pp+YuCjXDgEe/MY7PzLgpcpKNxXdMVxLW2aQbsLEiwkaRsz7VLhR8PHO
TCsFZyy53ZKfTeOw859kL0o/SK9mnYrSLMbaQ4VZqQvTKDzlPFzg2gd9ey8m
31uWhL2f5KjexFxbFC7LyIjth4zdiuTwf2lg7e1ETYpmok1Dc6rzBSpMMMKa
LTSJ/QK2+P5ZbAWK2vHx4wen4KRzctyKfhoopRttpxM+v21/7ETdq5h+l+Na
YN4IMq8Lo8hEvby4KXX02WsShtAyLsZUFwAvVTLUkNinlNPLl4KWN+LL4o6l
wPRYuHLqIfUPkXNeW6nKHisn4a/uEY6Uawbu8nalaNdy4KyMusjVL1fRva1x
w5zR//9P6tvBzv42+DFX76nQywC5YrH+89pjmMbH3mVvzcTVrrb+7a5UyLf8
uIu/nYJ3/rNzHyudRtWzV5PbiPfliud4/FAtRhmJLb37/xH9Z73jbPKRPmhe
dsb982IiNj0x11cjT6PRrPOUmU8/dP+a5PXlSQdu/pYVkMTEtOt+q0stqLA8
TN5zj3Y9TMd28GR1t8I2z8EJb5iC9lHj2NBuGiRV7go6QPThynzjC76zl3DT
dTmGrGkj3L36ROMfUS/S0eu+2F4kYcSKS1TL8gJQJfWcanzGgXuH/h0g1zdg
jt3rYJGYWEi9M/dwOzHHP2+X91hFnE8S+KXj45aBXj8/dfoRPlTPz9X+vAGI
exm29QYk7Exdn3e3sA10tY7HOQ8ygPTleRZTcwxDr23fk+jAxMvHbKXCTKlw
/vMtaZkOCnK5hpY2v53GX9RNMdzE+9Z0tL/+rUL0Z5kux3ouNqoLMHv7DvYB
n72s7rHfiXgidadc3zsiD+j9Pfb9XD+E2uf1FvGmg8eVVbcN7zFRyGlTJ9OE
CuFvFJW4depB9W/HNJnUCpn3aqpb9KbgrXAytb2TBhssZ87bEj4NB5W+lm73
w+aFC43pJo0g8oC3ZamEA972XYXJRL+QNvFKW1VaAErPXX5O5BGeK1wLDXIb
8KI3/d7ym7Ewp7OmXbqK2L8a7yvVEedNU1t/rnDPQI08Hr5IwqdI+NCQmedF
5F6x/D9jfRJOSGs096a2wYmJsWjzIQbUK0ULHSB85LY1u/Q5MjFrhHZrRo8K
PZc0+R4RPpUinvmBVdPIM0jRdyPe9xd5vDJTmciHnuPPLXnZ+IzrZTz/1j6A
cdNfaXOJeOn0u1XxLdPI62v9oc+4H/aYb7/0enU60AOX7penMfFpmppnpDoV
9s21J4VBPdAOFr+kPGqFtktLe8QOE/2ZmZxU20aDhR9JencJn6LT53kl7jgj
6d61d0uGRP+Bkz6tRD8x92g5/l2ShNPXxk7xFRRA3tTF53SiLy0scF2U92rA
W9pe2wwCY+EkOWcDlZjjcdrT+iulSFil/ExczCMDA9YPGj8nfGZvH3up0O2G
Jr6NK7N1if1CJtpY5XIbLAV3NbSNMuC3KqzhaIwhf17onmp3Jiq/z2oTVyCe
f7+60tVOIh/yrD5wFKexZujlpsEj/eA8VnJERrEYwwS3DLPWsLHPtfvNc54+
6JyvOtrLScSjCgcumHUSeds/LvvYnn643OvJlyWYDvEJd7ROZTNx76WBmjZp
Khza/mudmV49lK2Z0tp+uRVass6J2h6dAsGYVQ+mPtBgFZfWnw7C52P8mPQB
BW08tEXS7aRuI2icjBb+Vc6B5/4vIs6/RJSc3Xu7ILcAqmM5PLZEzvlzL33i
wa4GpMotcKe7xQLdz8DzD+HgLGd1deQV4lzNGi+b8xl4Tffn+lbi8+PZ+1g9
wcfRrWXFThttEv72sfKJMG6DpvmuDesmGJDRLXTU8sAYzrVsKpn2YWLh/NbT
ceuocG1m94PoLiIfXhBfUKBM4w6+2Hd1u/vhksCKYaE9xbihyYQ7WJCNu1bY
3jb8X/v1/g8FuscB3EiYjErKJSZySUllkUsX33LNJSpWJE4q4cilEkrkUg4i
U2dFM5tkk9XUlLRSMs9Mg2gGiZlxinFJNDNmUKTLYp/zOufP2F+/P75fz+vz
fD4TfIg1VbY2HaMgWgA9aLpbhoJdy3cn6AqBsyO7tEGDCvovJh7k3JYihSDX
0Jql/UC4nlZwyokNHbc3bKAd4MEcsYX21EcC6yz77OJbBuAo+tL6Gfs8k5dE
DBR5A/Fn97UPt3GgrVCpbj/O26fkWGsIRKgoVOXlZCkdOjz0codxbsvexo7E
z7JR3g3Fy0Uh+fCLd1mNL8I9QaL6ZFMoQvPTCRkm0TRUVpBpLsI+6nujfYl5
ViDQ174KW1lIdOZScfmGdhDeZZZyP4hB7bmdpo/dIFJ5vv1yRoIUPUsJjYQF
/SBPDjW36WpCV06n6kpbZGhx+zlyjrYQXiC1Pi1zBtq4nu5H0JCjdaaGj8KG
+PA4wF8/XUxBxPe6dyhCGfqZQlz1RU0IH/NiKmc0qfCktZKUU4n3S1rhzY8L
+8HhMeOYizMbtFzcIn5154FeupfMbK8ETkSsdbzVPADh1KUFi3AP3DXl8SHz
VQjsXvYTYdkWDig/SR7Zg3elXFn4qk4XIXlkpF4+jQ6KhiOGs4xx8FoWF3Ze
xEbfig2ERwPyQSPlWPROFt5f7xNZbEOE2HjaP8Y+Y5Q/jcXYZ7+X0biCox/c
MtY3aXBgoY8GH1dX6bZD09ZwBzSK87lKd6TAdhBVJKkONydJESmGbH91RgTL
hGYX72Gf2XFj2jWcJy1L3UIaiUIw/+6+j76WgbLvKfgvWi5H5sZcMaOTD/bz
b2z2jlBQa+1vhx6+laH62E8xzB8CiJlW6ynXooJlxetMA7oUGRqfEn7+KoK2
1/XbHV3YQG1UkrZa8mBq1Pj+Cn8JCB3CXOIaB+CV6vpkY+zjvLzQK9U+EtKm
GONiWw5wp2zVz9aNw7XRVaOZ7UwUFcnsP1VMh05/Hskb57av/xxp11P8fkbm
lBp258MN0sSNMDZ2SLp5dVDARLa6/5SEHqehRWZEkynsQ00eno2NOAwstcAQ
qR0LTWYI0isI7aCTHVymLRHDtjCdr7c3D6L9Kxuia1Kk6MgdV0aOWATKd1u/
bu1uQvRzn761tsuQRcmZBrtvAriVS/CYWsNAW95lKV7RkiOn+2ISk8MHZkGq
3u/vKcjbMemLB95lvZsHV2yWC+Cgn3PiOx0qGMWnFuszpOjWjfTiNXIRnItG
XHVXNngsWW+KyDzoCjk6kROA++FiLq3oxQAk366wt8U+k1ZTL54S4uEAY4Gn
qw0Hkmau68fj/zrQvt3pQSETkVV+JCr/QofeC/+6E1Y9Dh4k06tWVDZakpJY
le6WDw6TOvZ7XoxDapfygk3XmWhHZ2StFPt8j1+V+t9cKjX24eg0RMH4g9DU
cFsWuulD5pfI2kD1zz+qSWNiaN30cmzAZhBp+S/1/ZomRd/r84pf94mgNYla
8wj7pC58rpWA83ao2yb8mFQAy6p9tC6YMlAuRfK9SEeOjpxXZ1+p44Owglh/
cZCCojwUCKF4lw1vWRRz8L0Avu3Yo1S+kgpnqohvzz+Uot07yS0ZH0Tg+ftU
RA32IeT+wzFtMQ88s86bZQRKAOlmqWuxB+BiVfWoM/ZpIF45vtroFBSH+0Sa
WnFgLK6OaIP/61djyte9Qpho3mX+365X6GBkf/idI/7XOmaSolwz2IiVZ2H2
aEc+mC6RmC/m4L6keTqoNoKJZm1WnAqOoSFSn6KFAnMc2FVxeXdK40DTsH6X
xWYWiu5Iepbd1wY2SYSjpTIxVH5qPumEfeqvfxUWZUiRRs+zPce7RTCYn7VJ
g9+E9uZXpBd1yVBh37SW34AAClWyPgSbMFBfaVkedaUc2bJL7MPu82FnyT2d
w/0UVKIwSj0xiPuP09C69B4BBHeKbCP1qRBP0YgbeiRFmdJAr95eEbQc5P4W
6MYGVrOBp8M8F3RmeAYpBySQ1CAfu4oGoNGSELEH+5Q/cpqLckkEPT+3+AWW
HLDJHlgxg30ONW3f0G7ORMTw4u2Zl+nQ6D/hoFeDe9Es1907ko1ObhcP9W/J
h1Afz21c7NPnrNq5xpaJJtU9D7zCPtpZ0pYF2OfdisuFceyT4C1bPTdpzUI0
lbmdsW1tMLxjX5XluBg+f1apLrceRJk/TvpZX5CibHJHgRJXBJqpBzfHYZ8U
J5trtXwZuqvzJWQrH+8sQzUvK2MG6lWcv/arnhyp/mTOe1nJh3ceS4d9RRTE
DDK1SBmSIe0jl1Q1ugTgN/2E7EWmgvnu6jOaj6Uo96zIPbdHBDt7yvXp2KdY
V0lcNMOF7rvChORgCVj6c0+8ZuL+XGtiHYB9WGRegrIgCRYtLBNMbuQAqdZr
ayDuM25GJr05GkwU22b8xqCADkfLFEm52IdX11XGC2aj3Ii4e9N2+RCg80f4
usZxyHZcbhFEZqJgM0kiIZaG9p4lWS7EPp3aldI3WxLAcXlJhj/2OfjyeeSh
Jvx+Tk/0f8M++1FUwj7sQ4s6Mp1xUYrcH5g+8G0WgYLVvHIp9ukhTEuaBfi/
5iV4MzoEYNDdTbhhhPfXrbFLp9P+AxsDtrXlBslgv32Ds1vXhb/v/79LoqgZ
+I4Ci1M68B2ZnQ0zwnf4+/6/+1+F4cPf
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
+cAw
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNxmdXKQAAANDmUyoa9qaUFbKlMipUGkYD2ZGyGogkSZFkFSk0f+nrwz3n
Ep0hnbOro6Oj/afnT2dXH6C7B9jf+29woK8fDPrXCRgE9IGGurr7+3p6B4Bj
EBSyHzgMHgJBxsDDMOjo0BgCODAyPDKKgA8Mjv4FDoNA0ajJqWkGaZxKgcGx
GDgCh0WMIXFIFAGPQhMJaAyJiMGOkwYBQ6NQGAaNJ0ySCcSpSSKJMoXFTYyP
T9CoE3gyjTzJoOOQ+AkQGAqZojCnqTQ2i0ams+kMzgxjmsuZZvK4TBafx2IL
+Gz6jGBWIpdJ5hRyLm9WzONLZvmCOckMRyQUihbmRWLpgnhWJuVwxaKNlU3D
nHBesbqm3VqQLi9JZcplmVyllCvUKsX8onpxaXVlaXltlUJlMecXlhZV6o11
9eLKxsrq1uayUrO2ptFpNet63fqGQa9UrWsEM8K5za2d7fvsU8GwuW3S6Y17
kehVQm8wGfeMNuvOrmV/e2ffvLtntRhNdpvD6T202twH+xaX07zvdFisBy7T
ttluNzs8NrvHHb1IXjldR94Dt+/Y5z879TgO/f7DwNmhNxg4Oj4JHftOT7xH
oaDr4PgoEAyfhyOJy9Oz2EXoJBoJhiLhk9OLqNvj952HL+NngfPYlnZ35yJ2
nYydx6/jlzepy0T65iqZuU3dZO+T13eZxNVt+vG+ULlJ57K3mfxD5u4xf5e6
f7yOp+6yueJT7qFUfMiXS+nbh1z+sVIuPD1Xa/VWs1x5rRdLtZdSuV6rFKqv
L7Xm+1Px5Vmr29t9rTba7cbH73vz+6vx9vlRfX5rvL1/fdZf261W+/en2fr5
fn55f/sP4FnI8Q==
              "]], 
             Polygon3DBox[{{163, 164, 165, 166, 167, 168}, {169, 170, 171, 
              172, 173, 174}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzN1/sv1XEcx3HHWSNLm3NISKTsOE6r3DJL3rkccTJx2DHOXCKX7cRJR3I4
jLZSySyXZnNMhSnj5IwpHZVwVJbOwXHtdJzkez7HXLazomim8198/PD85fHj
67fXsVQ+O93UxMREYoxszCo4tIbnQUDpwQYV9yMC4RVq4B+lCnD5WWeFbI5D
gIblblgdQXDNP9CG1YzPE3bili6KCDhf3mdZYvQUW/6y+CY+Z6l7DqhbCKgt
Fk3vM/rDoOaTh0PwuZ/Myuf6GAErAmiqlCN4nT3Dr6HgczdB/UbMLwLaJDnJ
jkZ3lawMcZYmsbkNw6nX104HacuNTp3DCOrWd23te/G5+HOiR2KADiyIIioY
fTWOI5bfw+fHs8Qdt9N0INXGm40PIQj50OGcy8XnAvOXtK8VOoh+zGuLN/p0
4X5rpjs+J9H+ZdOkOpj4XT0SLkNgHaGd1Zjj87X+1vVXkzp48m3UgtyNwCOD
6hK8MoHNp9hR/LBNHfAHTS/3tyOILg3ltY3h8yT74YG3DghyG6Vnhp8iIEfe
cnzUic91P3wpXoEI8gpSKF/qEfQ4PFcUVuLzjIj2sq10BLFCc9VOFQKpkhm1
nY3Pid4jhvcPEHgXdtWdLkcgufNTKYzE52bFbq2WnQjkfdWzf0sQTMla2bYe
+Nw92Dueq0DA2cpzGMxHsG3IVPVQ8XmHpyZ1wE4Piyk0teEqAp4cvdieHMfm
eXNvNryS9aBkRjZFxSI41dBVJqrH50oF7XtAmR5cNfNaegQC7hrJP6YInzNG
aofDm/UgzM90IYcguA8xm/QkfH5ifVTk90kPpmQeiXEOQRjzmd3dAHzueIjk
Q1/TQ0VVjpbticD8ksF/8Sg+ZyQmaPwoyzCfxVDfoCO4sBDn5rKrxOa+Ld3l
LN9loAfpZ6qdERQI3lFTF/D5XvvLe22f/2LZOkc=
          "],
         VertexNormals->CompressedData["
1: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
          "]]}, {}}}, {{
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
l27/S+f/1Rf/1Uf/A5WrBm4=
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNl3dYFWQbxs+JHDhwEuLGjbgnOEBA3IqipqKESCpgIiLOSG2YacORadlw
NKwsK7PStlm2zcoys102zIZlWlnZfV/n19X54754v/t9nvv5PS/nYF/clFlZ
xecFAoGyYCBwvn7qR8D/O0qqLkUEQn5NqQZ3EZxdEy1dIDWT4qQKUkWptlRL
qiRVlupKdciqwJ0zI6UqZETTW4na2txVlWKo8bmaVA+vGszV8WqS3UhqCGdN
zg1grsG5PmyRzK5Lr+c2JqM6Pa6N5c5sTaipQ19TvLpkxeG1lzpIvaQkdjB3
c96sHjOc3QIus7aRWjO3AedW1NXn3JIMZ3VkTkO448mIo6YDLI3gbktNY7gT
8JrD0Sks0z97s4Pr2kmJUk8YzNJF6szZrF3xWsPRDS+GnVuEzYolpxMMCWT3
oNec3cloxx5JMMTT04OajuT0gXmSlCMVSgXSCClTmihlw2iuFCmZHbpw7iv1
lzKkUdJIGDwnVerHXLOmS2lkdeMuBcYkMvrT24PaVO78rgOo6QX3QLze7DII
L4XsYdJQOFM4D4E5mfNg2BKZnU6v5w4now8792VGKmwjqEmjLxMvnayReBlw
ZvFGA+AcjTeQ3DF4g5g1GG8wrBdKYzl7l3F4I8nN4Xc5ityL8IbD5d/lBHq9
13gyMslw70TuhlPrmqaB0HfEn6l2ZJszlxnZ9E2XpoUxm3UyP805Rcrj7Ln5
eP4stuSN+5A9ht5cOLLJnkqvuS4mYyLsBTCMp2cqNU3YwewJvIm5iwKhz3wu
sy6RZsBormJpZtgOedTMkcqkpdISGDynRJrFXLOWSrPJyueuGMYCMubQO5Xa
Eu7MNZeaQljn4RXBOR+vmOxLpUUwF3NeCHMe/gLYpjO7lF7PLSdjBj0LmFEC
22XUzKZvMV4pWUvwyuC8nDeaC+cVePPIvRJvPrOuwlsA60K8hexytbSMOc69
TrqWs3OvxyuHa4V0Db3eazkZi8lw70ruyqldju+cm6UNZJvzBmasoG+9dBPM
5lwtrQpjXoa3jLlrpTVkO+cWZlxBxipmXMMMZ6+j11w3krESxg0wLKdnHTVP
Sk9JL0v7meXcjcx8QHpQ2iPtDmM0221wrOZ8q7RVulN6SNoBg+dsku5grlm3
SJvJWcvd7TBuIGMrveuo3cSd3+Euam6G8268W2C/B+92su+X7oNzDf69MN/G
eRts65m9hV7P3U7GRnq2MWMTbA9Qs5m+B/G2kLUD7044H+aN7oLzEby7yd2J
dw+zHsXbBusuvHvZ5T68HeQ+xe/2IXKfxtsOl3+XT9DnvR6XHoNxB717uNtO
rWv8t9B/A/29LyLbnM8wYzd9L0kvwmzO56RnOZvzebxdMDyG58/eKt54I9k7
6X0Gjt1k76PPXC9Ie5lt9v0wPE7PPmr8Xfd32t+LFbyJuV8JhL4DifqP3/ZS
ktQ/GJprztel16S3pXekT6SPmencA9KbzDHbQekt7vZxPkCW93yDzBfhfJue
l2B/B+95dtxLz34436XmZdgP4b3JnA+lI/Tsxf+AmW9wPkyG+z5lpwOwHiXj
IBze9SPpVd7hfek9Zr/K+RC9B6k9Srb9z5hxiNrP8b6UvpJ+ln6CwXXfS8ep
9awv6Hkf7i/xDrPLV3gfsOsRvCPs8bV0jLO5vsE7Cuu3eB+x63d4r/Fmh5n9
MYzHqYnRZ6Se1EJqHgztZM4fpBOczfkj3hdw/oT3Ke9wgp3/Yz7GmxyD8xfp
JGdz/or3DZyn8L6F6zc8s8VKLWH8DvbT1HzP7N+lMzCZ7az0J8w/cv5D8v85
DErVpWrB/xnN9hdM5jgn/UPWz9ydhclzneGsk/S49m/uzHYec07DFREMeWdg
PT8Y8s6SXVnnSsEQpz2fKwZDzPZ8rhAMsZ1ij3P0nmS2M35nT9d6xt+wVdE5
Mhg6u69qMOSdI8tvYe8Eb/YHnEG4o3izCHJrSjW4i+AcxZ1n16KmAnvUxqvI
nnXwfDZ3XbzKMEfiRcJ5gRTN2ZwxeFVhr4d3nM/EGX4P1eCOpSYK1gZSfRg8
t4nUGMbanBuxQy3ODcmKojeWXnM2JaMGPQ2Z8d8O0dREw91MiuMcw3fPnv+W
+98J/03y36ZYZrXiO1Cf3NZ4DZjVBq+D1FHqLfViD3MlSG3DGDy7HXdNOSeQ
5V3jyYyDy7ntOTdnRgdqG5Mdz52/p52oaQF3Z7y2zOkp9aCnLefuzIzn3I0M
9/VhpwRYE8loD4d3TeJN/A5dpS7MbsW5M71x9CVS24ZZXZnlur7M7CelSsOl
YdR0w08htyvnZBjdN0gayB7eLY2cnsz1v83pZHXnrh87eJcBUga9PalN4643
2QOYZdbBYTP9c4w0mjtzDaEmGdaheCnMHYbXmZ2S6U1l7gjeIA2WTLx0dhmJ
158dMvAy4MySRnEeCFsWrOYaC3OuNFm6RJoh5UgXSUVSIQyemy1NYKbnTJIm
cpfJOZuZWWTksLP3HCddiJ/LrKIw5lFkDuVtxtMzDIYJeFnskktWNrOnS9Oo
y+Y8lZ4JnC8Ohr7rz/LvtL/zY+GaIuWRZY4CMifBloM3mnebDMMY3jIPbxwz
PSsfz3czeeNiaZZ0qbSIuyn4M3kTv818aR45Zp8tlbCXueZIpdxN4zybrHxm
FFNr7jJ6CtilEC+fGSX0FMLg2XNhMfcCmEqYc5lUzp25F1Izk7mL8GbRU87O
pXAskRbDUMispWSXcucZ/qwO4Xc0lt4yapfgj2MP7/4vFux3IA==
              "]], 
             Polygon3DBox[{{385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
              395, 396}, {397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 
              407, 408}}]}]}, {}},
         VertexColors->CompressedData["
1:eJzt2vsv1XEcx/ETdWqoDnJNUunUwWHqLJdDb1tyQiTaMU1TyKXJpU7SRa2Q
eycpTiG6WHVMqUxNSebSrIw+53tqMrlsFfmGEJZun60+/gY/fH56bY9fX78+
V4XG+e/X4HA4inkcjiZe1wSFgOfCwtqn2SOKNAYMDXivFoubgfo/t+vxMf8i
ZsFQPlmuTGGAu8Ktz9uZOvFVPpr6Tdi5YfuCn51hYNIyfirTiTpxriD251Hs
fVoOrT3JDKhEHWu4jtSJd/Ruae9xZuHO7v4b/EQG8nddOPlbRJ14mN+I7L4T
C1Y/HKXVEQzwLvFsR2ypE8+083jh68CCyOnTs3YJAzr6unkdq6kTV38dl+Zu
YGHzY7csrhYDHF29wHwt6sR1XGQ1rutZyJAOOi9NVcH+1Os/579tov7fLTQj
NErMWZjm1hdPc1XQaaYvHrtFnbj+vroCGXbRne+HhuaroC0rRGRJfdYX1C+z
3o490tPG84OGCuqmK4TSm9SJDx5vDJhZwcKb7CvfG38jKGXcLWqvUyf+cMyi
PAi7kifzlU8iCM9JXHD2GnXi7v1dEkMzFkJNBRz+JwTfZjrbdRXUiUc27MyV
m7DwUpgfFtCMgNtVFm6fTZ34ce96u2jsKUvOv3NvRBBs/uRzdBZ14iEGPd4S
7MNHjbdtbEAQED52uyqTOnHBXfNUTeyvvYQCXh2CraMR6zdnUCf+vKNk4oQx
C2mj0qHWagT8RX6CoDTqxAdWFqtjjFiYFCvjXG8hGHBYbS0/TZ142+DTb17Y
I8pFvdY3EPQlBw+pT1En/uhR12IBdvWSej/TMgSdjQUVZtRnPVmy3OOjIQv3
+1T2U0UIWndo2yhPUieuF3e1Zg/2qPRf41X5CJSREzbNx6gTn3KsRWLs70bT
w0vzENystP2qTX3WuzXeD5tgl+zWU+fKERSNR1X6J1EnfrvAZN1bAxb4wnU1
B7IR5J7uFvYmUiees9dpSzX2ywUP+EGZCM41Gw3zqc96glVQyEXsf/6ICyXp
CJK1/e8dPEKdeOBE0ol47HHRLQs3pSE4sjMntlpGnbjLc0WhL/ZO5JdkmYIg
prDFduYwdeJzrbeZaz7X/ppr/hev12sS
          "],
         VertexNormals->CompressedData["
1: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
6LBYWWHNwSdEnsyaw//N/2f+/wBW7gW0
          "]]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
        Specularity[
         GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
NQ==
         "], {
          {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwNw1m2QgAAANDmKDJEpZIhlFBRoYSEBqJxBW3g7f/vdc+53Pfv9S0VCoX8
t/JbLAH1UhkEypUGCIBIC2ygSK1Yh+pAC65Um41qDWo2mhiKoB0SqsM43CLa
ONzuNSEcQ7FuB8N73RZCEpPpXGsTfYrsDAedLj3s9kY0PRLGvTY16g84dkiP
earPMgQ56I8oRhAYccbx0wk/lqcMK4ksN5FESVWkiaaOhZk8GPLcVF7Mj254
UVRDV7WVoRu2Zay29mJpbpaKbmrz9Wq+2KxX693W3vrextw7pm7tnf0xWG+c
3XZ38HdOcLBsz5Vny8VMVJaeH0f+4RQfgvMpPt3S0zm7hVFyjeI0CY6X895y
j+dLnt2y9+uaPO5J+ny4XhRewmue5Z93ens98+v98w/cnzXH
              "]], 
             Polygon3DBox[{{85, 86, 87, 88, 89, 90}, {91, 92, 93, 94, 95, 
              96}}]}]}, {}},
         VertexColors->CompressedData["
1:eJxTTMoPSmViYGBIAGJmIP6lfGvq94dv7J+X+nZvc7pnz3Sv4VAH50n7gRJ/
p1QkMufRG/ufnR82rXxx1/6gbNZth+cnBkz8sSLXZIfHb+xF5k2+Nafvrn1z
bPCXH0cGTrzafY7Dmbtv7Pnlsp6+23XHnk9fSi+3eODEdWbZ/PQ688b+MGPy
l/rrt+0Fu/TOGUsNnDhPV8tMxd1v7Bsm75Rt/3HL/g7Pw5pdh44PmPiXmSdv
Na94Yy/Pkeewgu2WvUZDrfb15IETn9vKra4y/Y29lwBD31uVm/Y3zYQ+eHAP
nLj/RC+RgJY39nG/31/xMbhhz3tvwpaA1ccGTNzQyvDl5cI39pVTbM2UHK7b
c65d2y7hO3Dil/eJnJyaACwHDmYckk64Zp+6/1CB6dejAyZel/zV87HvG/t5
Fz666+detXc7dDDyxdSBE+fYuGHXT5c39vuk5qin/LxiL1MnIF6dMXDik/5l
awvYvLG/lOLGPrP1iv07y/grvNYDJz7Y6vfBFj4AQHSL2w==
          "],
         VertexNormals->CompressedData["
1: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
W9x2V13gwn/l/wWNSe09
          "]]}, {}}}, 
     {EdgeForm[None], Specularity[
       GrayLevel[1], 100]}}}, 
   {AbsoluteThickness[3], EdgeForm[None], Specularity[
     GrayLevel[1], 100], 
    GraphicsComplex3DBox[{{1452.3999999999999`, 633.9000000000001, 140.9}, {
     1365.1999999999998`, 677., 254.3}, {1553.6, 538.1999999999999, 189.7}, {
     1512.2, 749.9, 73.7}, {1367.2, 560.8, 41.199999999999996`}, {1482.3, 
     691.9000000000001, 107.30000000000001`}, {1503., 586.05, 165.3}, {
     1408.7999999999997`, 655.45, 197.60000000000002`}, {1409.8, 597.35, 
     91.05}}, {
      {RGBColor[0.800498, 0.201504, 0.192061], SphereBox[2, 31.], 
       SphereBox[3, 31.], SphereBox[4, 31.], SphereBox[5, 31.]}, 
      {RGBColor[0.90443, 0.97015, 0.13504], SphereBox[1, 36.]}, 
      {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{6, 4}, 15.], 
       CylinderBox[{7, 3}, 15.], CylinderBox[{8, 2}, 15.], 
       CylinderBox[{9, 5}, 15.]}, 
      {RGBColor[0.90443, 0.97015, 0.13504], CylinderBox[{1, 6}, 15.], 
       CylinderBox[{1, 7}, 15.], CylinderBox[{1, 8}, 15.], 
       CylinderBox[{1, 9}, 15.]}}]}},
  Axes->False,
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  FormatType->TraditionalForm,
  ImagePadding->Automatic,
  ImageSize->{389.58735949351626`, 273.91174572493276`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.350451383181431, 0.41549958131844816`, -0.16197415491931974`},
  ViewVertical->{-0.4315418487524066, -0.07441451050737115, 
   0.8990184166085272}]], "Output",
 CellChangeTimes->{
  3.9098803054432783`*^9, 3.909880342142476*^9, 3.9100463655396953`*^9, 
   3.9101125124378095`*^9, {3.9106502917015233`*^9, 3.9106502948781757`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"62b9c704-eb47-42c0-bfdd-e91446617db4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testProteinSequence", "=", 
  RowBox[{"testProtein", "[", "\"\<Sequence\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9097949450911765`*^9, 3.909794988186093*^9}, {
   3.909795184428056*^9, 3.9097951856791086`*^9}, {3.909795275760633*^9, 
   3.9097952890028505`*^9}, {3.909795469490639*^9, 3.909795478718128*^9}, {
   3.909795529526188*^9, 3.9097955307152357`*^9}, {3.9097971377636547`*^9, 
   3.9097972451103115`*^9}, {3.9097972881969347`*^9, 
   3.9097972885084705`*^9}, {3.909869639278968*^9, 3.9098696401569834`*^9}, {
   3.9098704715058107`*^9, 3.9098704863118963`*^9}, 3.9098748367273893`*^9, {
   3.909874897913427*^9, 3.9098749004782248`*^9}, {3.909880235042326*^9, 
   3.9098802358730965`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ae175ed5-6535-4e36-be0d-8fc75f3ff8f8"],

Cell[BoxData["\<\"\
MRVLYLLFSFLFIFLMPLPGVFGGIGDPVTCLKSGAICHPVFCPRRYKQIGTCGLPGTKCCKKP\"\>"], \
"Output",
 CellChangeTimes->{
  3.909874900687608*^9, 3.90988003273612*^9, 3.909880236714181*^9, 
   3.9098803643021293`*^9, 3.910046366994622*^9, 3.9100531611557446`*^9, 
   3.910112512852273*^9, {3.910650293019308*^9, 3.910650295112379*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"4b5d073a-d867-4de7-aeda-331d2a080b16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProteinTokenizer", "[", "testProteinSequence", "]"}]], "Input",
 CellChangeTimes->{{3.9098796231894293`*^9, 3.909879630229365*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"a73f5f90-0f88-4c9a-a4f7-73fa4d467434"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "21", ",", "13", ",", "8", ",", "5", ",", "20", ",", "5", ",", 
   "5", ",", "19", ",", "10", ",", "19", ",", "5", ",", "19", ",", "11", ",", 
   "19", ",", "5", ",", "21", ",", "16", ",", "5", ",", "16", ",", "7", ",", 
   "8", ",", "19", ",", "7", ",", "7", ",", "11", ",", "7", ",", "14", ",", 
   "16", ",", "8", ",", "15", ",", "23", ",", "5", ",", "12", ",", "10", ",", 
   "7", ",", "6", ",", "11", ",", "23", ",", "22", ",", "16", ",", "8", ",", 
   "19", ",", "23", ",", "16", ",", "13", ",", "13", ",", "20", ",", "12", 
   ",", "18", ",", "11", ",", "7", ",", "15", ",", "23", ",", "7", ",", "5", 
   ",", "16", ",", "7", ",", "15", ",", "12", ",", "23", ",", "23", ",", "12",
    ",", "12", ",", "16", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.90987963108125*^9, 3.909880072682168*^9, 3.9098802385397034`*^9, 
   3.9098803657536116`*^9, 3.9100463671213217`*^9, 3.9100531622797127`*^9, 
   3.9101125129573565`*^9, {3.9106502931904883`*^9, 3.910650295224435*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"091bf7be-3974-44dd-8fbf-3b8eff575fd6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Molecule Tokenizer", "Subsection",
 CellChangeTimes->{{3.909775573353794*^9, 3.90977557686125*^9}, {
  3.909869300036014*^9, 
  3.9098693011888103`*^9}},ExpressionUUID->"456ccf88-3d03-4468-9c3e-\
da77d3789a5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"moleculeTokenVocabulary", "=", 
   RowBox[{"Association", "@@", 
    RowBox[{"Import", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<SmilesTokenizer\>\"", ",", " ", "\"\<vocab.json\>\""}], "}"}], 
      "]"}], "]"}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.909087158635081*^9, 3.9090872310762997`*^9}, {
  3.90908732154321*^9, 3.909087348658099*^9}, {3.9090873937410536`*^9, 
  3.909087405304*^9}, {3.90908754759625*^9, 3.9090876474243937`*^9}, {
  3.909793408473879*^9, 3.9097934761744776`*^9}, {3.9097935085539646`*^9, 
  3.9097935447468204`*^9}, {3.9098693482689853`*^9, 3.9098693983285584`*^9}, {
  3.9098694399123726`*^9, 3.909869478712335*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"00b8eae2-9bd3-40a3-bfd9-d997fc20a2d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ImportMerges", "[", "filePath_String", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fileContent", ",", " ", "parsedLines"}], "}"}], ",", "\n", 
    "    ", 
    RowBox[{"(*", " ", 
     RowBox[{"Read", " ", "file", " ", "content"}], " ", "*)"}], "\n", "    ", 
    RowBox[{
     RowBox[{"fileContent", " ", "=", " ", 
      RowBox[{"Import", "[", 
       RowBox[{"filePath", ",", " ", "\"\<Lines\>\""}], "]"}]}], ";", "\n", 
     "    ", 
     RowBox[{"(*", " ", 
      RowBox[{"Parse", " ", "lines"}], " ", "*)"}], "\n", "    ", 
     RowBox[{"parsedLines", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"fileContent", ",", " ", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"StringStartsQ", "[", 
           RowBox[{"#", ",", " ", "\"\<#\>\""}], "]"}], "]"}], " ", "&"}]}], 
       "]"}]}], ";", "\n", "    ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Split", " ", "each", " ", "line", " ", "into", " ", "a", " ", "list", 
       " ", "and", " ", "remove", " ", "empty", " ", "lines"}], " ", "*)"}], 
     "\n", "    ", 
     RowBox[{"parsedLines", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"StringSplit", "[", 
         RowBox[{"parsedLines", ",", " ", "Whitespace"}], "]"}], " ", ",", 
        " ", 
        RowBox[{
         RowBox[{"#", " ", "=!=", " ", 
          RowBox[{"{", "}"}]}], " ", "&"}]}], "]"}]}], ";", "\n", "    ", 
     "parsedLines"}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.909876599774044*^9, 3.909876600060991*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"16d7395b-5636-4e2d-88de-7c1b4a089139"],

Cell[BoxData[
 RowBox[{
  RowBox[{"moleculeTokenMerges", "=", 
   RowBox[{"ImportMerges", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<SmilesTokenizer\>\"", ",", " ", "\"\<merges.txt\>\""}], "}"}], 
     "]"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.9098694930743303`*^9, 3.9098695190477295`*^9}, {
  3.9098766045238543`*^9, 3.9098766355782137`*^9}, {3.9098777984736896`*^9, 
  3.909877866728259*^9}, {3.909879501048078*^9, 3.9098795023672757`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"94872ed4-c556-416a-9338-19e5df5ef69f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoleculeTokenizerMerger", "[", "tokens_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"currentTokens", " ", "=", " ", "tokens"}], ",", " ", 
      RowBox[{"currentMerge", "=", 
       RowBox[{"moleculeTokenMerges", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"mergeIndex", "=", "1"}], ",", " ", 
      RowBox[{"index", "=", "1"}], ",", " ", "pair", ",", " ", 
      RowBox[{"found", "=", "True"}]}], "}"}], ",", " ", "\n", "\t", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"found", "==", "True"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"found", "=", "False"}], ";", "\n", "\t\t", 
        RowBox[{"mergeIndex", "=", "1"}], ";", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Echo", "[", "currentTokens", "]"}], ";"}], "*)"}], "\n", 
        "\t\t", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"mergeIndex", "<=", 
           RowBox[{"Length", "[", "moleculeTokenMerges", "]"}]}], ",", "\n", 
          "\t\t\t", 
          RowBox[{
           RowBox[{"currentMerge", "=", 
            RowBox[{"moleculeTokenMerges", "[", 
             RowBox[{"[", "mergeIndex", "]"}], "]"}]}], ";", "\n", "\t\t\t", 
           RowBox[{"mergeIndex", "=", 
            RowBox[{"mergeIndex", "+", "1"}]}], ";", "\n", "\t\t\t", 
           RowBox[{"index", "=", "1"}], ";", "\n", "\t\t\t", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"index", "<=", 
              RowBox[{
               RowBox[{"Length", "[", "currentTokens", "]"}], "-", "1"}]}], 
             ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"pair", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"currentTokens", "[", 
                  RowBox[{"[", "index", "]"}], "]"}], ",", 
                 RowBox[{"currentTokens", "[", 
                  RowBox[{"[", 
                   RowBox[{"index", "+", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
              "\n", "\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"pair", "==", "currentMerge"}], ",", "\n", 
                "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"currentTokens", "=", 
                  RowBox[{"Drop", "[", 
                   RowBox[{"currentTokens", ",", 
                    RowBox[{"{", 
                    RowBox[{"index", ",", 
                    RowBox[{"index", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
                 "\n", "\t\t\t\t\t", 
                 RowBox[{"currentTokens", "=", 
                  RowBox[{"Insert", "[", 
                   RowBox[{"currentTokens", ",", 
                    RowBox[{"StringJoin", "[", "pair", "]"}], ",", "index"}], 
                   "]"}]}], ";", "\n", "\t\t\t\t\t", 
                 RowBox[{"found", "=", "True"}]}]}], "\n", "\t\t\t\t", "]"}], 
              ";", "\n", "\t\t\t\t", 
              RowBox[{"index", "=", 
               RowBox[{"index", "+", "1"}]}]}]}], "\n", "\t\t\t", "]"}], 
           ";"}]}], "\n", "\t\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Echo", "[", "currentTokens", "]"}], ";"}], "*)"}], "\n", 
         "\t\t", "]"}]}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
     RowBox[{"Return", "[", "currentTokens", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.9098737402825747`*^9, 3.909873784108281*^9}, 
   3.9098738167950535`*^9, {3.909873853510811*^9, 3.9098738568527784`*^9}, {
   3.909873946662884*^9, 3.90987400701272*^9}, {3.909874037170156*^9, 
   3.909874165601466*^9}, {3.9098742320410643`*^9, 3.9098742529037695`*^9}, {
   3.909874314402236*^9, 3.9098743304940186`*^9}, {3.909874378444606*^9, 
   3.909874524122841*^9}, 3.9098746982138157`*^9, {3.9098749215482874`*^9, 
   3.9098749263755903`*^9}, {3.9098749857489047`*^9, 3.909875014390709*^9}, {
   3.909875134185954*^9, 3.9098751626221046`*^9}, {3.9098752112547283`*^9, 
   3.9098752356919217`*^9}, {3.90987528668311*^9, 3.9098753183464375`*^9}, {
   3.909875381538886*^9, 3.9098753900468783`*^9}, {3.909875561288168*^9, 
   3.9098755938225756`*^9}, {3.909875728958452*^9, 3.909875853873358*^9}, {
   3.909876064316538*^9, 3.909876085128188*^9}, 3.9098765118439827`*^9, {
   3.9098765475391045`*^9, 3.90987656981336*^9}, {3.9098767028584633`*^9, 
   3.909876711591093*^9}, {3.9098767869621906`*^9, 3.9098770674066925`*^9}, {
   3.9098777234999385`*^9, 3.909877730019337*^9}, {3.9098778915811834`*^9, 
   3.909877902601407*^9}, {3.909877932622528*^9, 3.9098779414119263`*^9}, {
   3.9098779732157974`*^9, 3.909877981377992*^9}, {3.9098782170267134`*^9, 
   3.90987822262722*^9}, 3.910053133795359*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"4a96be2d-4de1-43bd-82a2-ee5484069e70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MoleculeTokenizerMerger", "[", 
  RowBox[{"Characters", "@", "\"\<CCCCCCCCCCCCCCCCCC(=O)O\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9098804873012505`*^9, 3.9098805149661465`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"38b7515b-97ce-421b-a97d-d84bf8b5426e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CCCCCCCC\"\>", ",", "\<\"CCCC\"\>", ",", "\<\"CCCCCC\"\>", 
   ",", "\<\"(=\"\>", ",", "\<\"O\"\>", ",", "\<\")\"\>", ",", "\<\"O\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9098805064474807`*^9, 3.909880515291835*^9}, 
   3.910046367461647*^9, 3.9100531878212214`*^9, 3.910112513158391*^9, 
   3.9106502954034386`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"9a74ba76-2945-4a54-9225-ff7ce3cd8c78"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoleculeTokenizer", "[", "smiles_String", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tokens", ",", "mergedTokens", ",", "translatedTokens"}], "}"}], 
    ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tokens", "=", 
      RowBox[{"Characters", "[", "smiles", "]"}]}], ";", "\n", "\t", 
     RowBox[{"mergedTokens", "=", 
      RowBox[{"MoleculeTokenizerMerger", "[", "tokens", "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"translatedTokens", "=", 
      RowBox[{"mergedTokens", "/.", "moleculeTokenVocabulary"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "translatedTokens", ",", " ", "2"}], "}"}], 
      "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{
  3.909878226845108*^9, {3.9098792019052086`*^9, 3.909879202245753*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0ae2148f-7e52-4688-a16e-c68534d55fdf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MoleculeTokenizer", "[", 
   RowBox[{"smilesBatch_List", ",", "length_Integer"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tokens", ",", "paddedTokens", ",", "truncatedTokens", ",", 
      "attentionMasks"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"tokens", "=", 
      RowBox[{"MoleculeTokenizer", "/@", "smilesBatch"}]}], ";", "\n", "\t", 
     RowBox[{"paddedTokens", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"PadRight", "[", 
         RowBox[{"#", ",", "length", ",", "1"}], "]"}], "&"}], "/@", 
       "tokens"}]}], ";", "\n", "\t", 
     RowBox[{"truncatedTokens", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", " ", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], ",", " ", "length"}], "]"}]}], 
         "]"}], "&"}], "/@", "paddedTokens"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"attentionMasks", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"#", "!=", "1"}], ",", "1", ",", "0"}], "]"}], "&"}], "/@",
           "#"}], ")"}], "&"}], "/@", "truncatedTokens"}]}], ";", "\n", "\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<input_ids\>\"", "->", "truncatedTokens"}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<attention_mask\>\"", "->", "attentionMasks"}]}], 
      "|>"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.9098782357648115`*^9, 3.9098782684789505`*^9}, {
   3.9098782996129*^9, 3.909878327836134*^9}, {3.9098784038475094`*^9, 
   3.909878471161277*^9}, {3.909878507594044*^9, 3.909878510281584*^9}, {
   3.9098787712885485`*^9, 3.909878830470569*^9}, {3.909878892994097*^9, 
   3.9098789193082232`*^9}, {3.9098789569199142`*^9, 3.909878957170249*^9}, {
   3.9098790087352*^9, 3.9098790377874823`*^9}, 3.9098791096976795`*^9, {
   3.909879157445093*^9, 3.909879158638588*^9}, {3.9098792183024435`*^9, 
   3.909879261432085*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"643a3c40-d81a-4d1c-825e-c34330ad6233"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testMolecule", "=", 
   TemplateBox[{"\"stearic acid\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Chemical\"", ",", "\"StearicAcid\""}], "]"}], 
     "\"Entity[\\\"Chemical\\\", \\\"StearicAcid\\\"]\"", "\"chemical\""},
    "Entity"]}], ";"}]], "Input",
 CellChangeTimes->{{3.9098696475502977`*^9, 3.909869689595866*^9}, {
   3.909869743788046*^9, 3.909869785276269*^9}, {3.909869846270773*^9, 
   3.9098699124220266`*^9}, 3.909869947751172*^9, {3.909870006069347*^9, 
   3.909870010437278*^9}, {3.9098700976904135`*^9, 3.909870118022809*^9}, {
   3.9098702100232954`*^9, 3.909870219667635*^9}, 3.909870276195284*^9, {
   3.9098703316338587`*^9, 3.9098703489290967`*^9}, {3.909870381962987*^9, 
   3.90987038308708*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"7d99647c-69e1-4395-8cfd-1b59841dc8bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MoleculePlot3D", "[", "testMolecule", "]"}]], "Input",
 CellChangeTimes->{{3.909796758685381*^9, 3.909796845483782*^9}, {
  3.909796879553452*^9, 3.9097968868617706`*^9}, {3.909796922114812*^9, 
  3.909796981399127*^9}, {3.9097970464920125`*^9, 3.9097970996183586`*^9}, {
  3.909797149202671*^9, 3.9097971509243107`*^9}, {3.909869683644479*^9, 
  3.909869691682618*^9}, {3.9098697353294086`*^9, 3.909869737546611*^9}, {
  3.9098704362103014`*^9, 3.9098704388329782`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"ca6af99f-5c79-431c-856c-8a59ccdbb8b3"],

Cell[BoxData[
 Graphics3DBox[
  {EdgeForm[None], Specularity[
    GrayLevel[1], 100], GraphicsComplex3DBox[CompressedData["
1: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
    "], {{
      {RGBColor[0.4, 0.4, 0.4], 
       SphereBox[{3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
         20}, 0.34]}, 
      {RGBColor[0.65, 0.7, 0.7], 
       SphereBox[{21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 
        53, 54, 55, 56}, 0.24]}, 
      {RGBColor[0.800498, 0.201504, 0.192061], 
       SphereBox[{1, 2}, 0.31000000000000005`]}}, {{
       {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{1, 57}, 0.15]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{57, 20}, 0.15]}}, {
       {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{1, 58}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{58, 56}, 0.15]}}, {
       {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{61, 59}, 0.08]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{59, 62}, 0.08]}, 
       {RGBColor[0.800498, 0.201504, 0.192061], CylinderBox[{63, 60}, 0.08]}, 
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{60, 64}, 0.08]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 4}, 0.15]}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 5}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 65}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{65, 21}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{3, 66}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{66, 22}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{4, 6}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{4, 67}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{67, 23}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{4, 68}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{68, 24}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{5, 7}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{5, 69}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{69, 25}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{5, 70}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{70, 26}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{6, 8}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{6, 71}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{71, 27}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{6, 72}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{72, 28}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{7, 9}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{7, 73}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{73, 29}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{7, 74}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{74, 30}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{8, 10}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{8, 75}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{75, 31}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{8, 76}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{76, 32}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{9, 11}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{9, 77}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{77, 33}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{9, 78}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{78, 34}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{10, 12}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{10, 79}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{79, 35}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{10, 80}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{80, 36}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{11, 13}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{11, 81}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{81, 37}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{11, 82}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{82, 38}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{12, 14}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{12, 83}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{83, 39}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{12, 84}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{84, 40}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{13, 15}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{13, 85}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{85, 41}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{13, 86}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{86, 42}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{14, 16}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{14, 87}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{87, 43}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{14, 88}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{88, 44}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{15, 17}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{15, 89}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{89, 45}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{15, 90}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{90, 46}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{16, 18}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{16, 91}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{91, 47}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{16, 92}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{92, 48}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{17, 19}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{17, 93}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{93, 49}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{17, 94}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{94, 50}, 0.15]}}, 
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{18, 20}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{18, 95}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{95, 51}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{18, 96}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{96, 52}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{19, 97}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{97, 53}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{19, 98}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{98, 54}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{19, 99}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{99, 55}, 0.15]}}}, 
     {Opacity[0.7]}}]},
  Boxed->False,
  Lighting->"Neutral",
  Method->{
   "ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  ViewPoint->{1.2985430641925364`, -2.3973212731701015`, -1.9977578991568374`},
  ViewVertical->{-0.016318086706823456`, -0.9775271755522315, 
   0.21017692809417832`}]], "Output",
 CellChangeTimes->{{3.909796772661806*^9, 3.909796788930931*^9}, {
   3.909796832593303*^9, 3.9097968464981947`*^9}, {3.9097969546440563`*^9, 
   3.909796964219364*^9}, {3.9097970207735643`*^9, 3.9097971018257217`*^9}, 
   3.9097971637432003`*^9, 3.9097981401243496`*^9, 3.9098006663993645`*^9, 
   3.9098697056087637`*^9, 3.9098697379545097`*^9, {3.909869779661895*^9, 
   3.9098697964703274`*^9}, {3.909869960379038*^9, 3.9098699635089655`*^9}, {
   3.9098703434998026`*^9, 3.909870371145116*^9}, {3.9098704186352386`*^9, 
   3.909870439391485*^9}, 3.9100463688340487`*^9, 3.910053198911505*^9, 
   3.9101125139978685`*^9, 3.910650296730791*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"d8a79d3c-6f0e-4c94-9e6f-2816c7367d4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testMoleculeSmiles", "=", 
  RowBox[{"testMolecule", "[", "\"\<SMILES\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9097949450911765`*^9, 3.909794988186093*^9}, {
  3.909795184428056*^9, 3.9097951856791086`*^9}, {3.909795275760633*^9, 
  3.9097952890028505`*^9}, {3.909795469490639*^9, 3.909795478718128*^9}, {
  3.909795529526188*^9, 3.9097955307152357`*^9}, {3.9097971377636547`*^9, 
  3.9097972451103115`*^9}, {3.9097972881969347`*^9, 3.9097972885084705`*^9}, {
  3.90987044262404*^9, 3.909870457071977*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"2bb78d6a-cd1a-4d0c-9c85-df87113cf295"],

Cell[BoxData["\<\"CCCCCCCCCCCCCCCCCC(=O)O\"\>"], "Output",
 CellChangeTimes->{3.9098704577307587`*^9, 3.9100463690253005`*^9, 
  3.910053202301852*^9, 3.910112514206294*^9, 3.910650296972593*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"8d07783f-8217-403c-8956-35791e58cd15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MoleculeTokenizer", "[", "testMoleculeSmiles", "]"}]], "Input",
 CellChangeTimes->{{3.9098796030273027`*^9, 3.9098796065623927`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"8b696a90-bbe5-445a-89dc-7aef5d4a3c82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "693", ",", "285", ",", "365", ",", "263", ",", "51", ",", "13", 
   ",", "51", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.909879606992264*^9, 3.910046369136417*^9, 
  3.9100532046981936`*^9, 3.9101125143307304`*^9, 3.910650297116145*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"3e1f8564-8a10-4375-832e-a991570bfad7"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Encoders", "Section",
 CellChangeTimes->{{3.9100533631346626`*^9, 
  3.9100533638837695`*^9}},ExpressionUUID->"00b55cc4-dba9-4e7e-ad19-\
2589963f6500"],

Cell[CellGroupData[{

Cell["Import Encoders", "Subsection",
 CellChangeTimes->{{3.909775586864499*^9, 
  3.909775588420287*^9}},ExpressionUUID->"da43b552-a489-4289-9cc0-\
a4d65a015ed5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"protEncoder", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$UserDocumentsDirectory", ",", "\"\<WELP-PLAPT\>\"", ",", 
       "\"\<models\>\"", ",", "\"\<prot_encoder.onnx\>\""}], "}"}], "]"}], 
    ",", "\"\<NetExternalObject\>\""}], " ", "]"}]}]], "Code",
 CellChangeTimes->{{3.9097709075958014`*^9, 3.9097709081497016`*^9}, {
   3.9097720427549934`*^9, 3.909772048171756*^9}, {3.9097722048895674`*^9, 
   3.9097722051800766`*^9}, {3.9097745391544743`*^9, 
   3.9097745806350727`*^9}, {3.909774661324283*^9, 3.909774661759324*^9}, {
   3.909775480545163*^9, 3.9097754807335806`*^9}, {3.9097755386181197`*^9, 
   3.909775538680035*^9}, {3.9100462013310485`*^9, 3.9100462150033765`*^9}, 
   3.9100463785657763`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"35a1e5f0-687a-43b6-aa0f-c8a5d560dc2d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetExternalObject", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.04], {
                  FaceForm[{
                    RGBColor[0.20392156862745098`, 0.20392156862745098`, 0.2], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    2.461699962615967, 12.887800216674805`}, {
                    2.461699962615967, 13.069800227880478`}, {
                    6.384700059890747, 15.39680027961731}, {6.476700305938721,
                     15.305800199508667`}, {6.567699909210205, 
                    15.25980019569397}, {6.658699989318848, 
                    15.214800119400024`}, {5.381700038909912, 
                    4.265799522399902}, {2.187699943780899, 
                    12.157800257205963`}, {2.324699968099594, 
                    12.340800166130066`}, {2.461699962615967, 
                    12.568800210952759`}, {2.461699962615967, 
                    12.887800216674805`}}, {{17.561700344085693`, 
                    21.09980010986328}, {7.6626996994018555`, 
                    16.76579999923706}, {7.616700172424316, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.856800317764282`}, {8.848700046539307, 
                    22.239800453186035`}, {8.894700050354004, 
                    22.239800453186035`}, {9.258699893951416, 
                    22.239800453186035`}, {9.532700061798096, 
                    22.422800064086914`}, {9.715700149536133, 
                    22.69580078125}, {17.561700344085693`, 
                    21.09980010986328}}, {{17.333699703216553`, 
                    6.728800296783447}, {17.653700351715088`, 
                    6.865800380706787}, {17.881700038909912`, 
                    7.230800151824951}, {17.881700038909912`, 
                    7.595800399780273}, {17.881700038909912`, 
                    7.686800479888916}, {17.881700038909912`, 
                    7.7778000831604}, {17.835699558258057`, 
                    7.823800086975098}, {22.58070135116577, 
                    11.062800288200378`}, {17.790700435638428`, 
                    2.759799003601074}, {17.333699703216553`, 
                    6.728800296783447}}, {{16.14769983291626, 
                    6.9567999839782715`}, {16.284700870513916`, 
                    6.81980037689209}, {16.46769952774048, 
                    6.728800296783447}, {16.64970064163208, 
                    6.683800220489502}, {17.10570001602173, 
                    2.622799873352051}, {16.923699855804443`, 
                    2.5318002700805664`}, {16.740699291229248`, 
                    2.3498001098632812`}, {16.64970064163208, 
                    2.166799545288086}, {6.841700077056885, 
                    3.1247997283935547`}, {16.14769983291626, 
                    6.9567999839782715`}}, {{7.251699924468994, 
                    15.077800035476685`}, {7.388700008392334, 
                    15.122800350189209`}, {7.525700092315674, 
                    15.168800115585327`}, {7.616700172424316, 
                    15.214800119400024`}, {15.965699672698975`, 
                    7.9608001708984375`}, {15.919700145721436`, 
                    7.869800090789795}, {15.919700145721436`, 
                    7.732800006866455}, {15.919700145721436`, 
                    7.595800399780273}, {15.919700145721436`, 
                    7.549799919128418}, {6.567699909210205, 
                    3.7178001403808594`}, {6.430700063705444, 
                    3.9008007049560547`}, {6.202699899673462, 
                    4.082799911499023}, {5.974699974060059, 
                    4.128800392150879}, {5.974699974060059, 
                    4.128800392150879}, {7.251699924468994, 
                    15.077800035476685`}, {7.251699924468994, 
                    15.077800035476685`}}, {{6.88670015335083, 
                    16.993800163269043`}, {6.430700063705444, 
                    16.90280055999756}, {6.065699815750122, 
                    16.537800073623657`}, {6.065699815750122, 
                    16.035799980163574`}, {6.065699815750122, 
                    15.989800214767456`}, {2.5986999571323395`, 
                    13.936800122261047`}, {7.9816999435424805`, 
                    21.64680004119873}, {6.88670015335083, 
                    16.993800163269043`}}, {{22.625699520111084`, 
                    11.929800152778625`}, {17.425699710845947`, 
                    8.371799945831299}, {17.379700183868408`, 
                    8.416800022125244}, {17.333699703216553`, 
                    8.416800022125244}, {17.288700580596924`, 
                    8.462800025939941}, {18.884700298309326`, 
                    20.14180040359497}, {22.853700160980225`, 
                    12.841800216585398`}, {22.717700481414795`, 
                    12.659800216555595`}, {22.625699520111084`, 
                    12.431800216436386`}, {22.625699520111084`, 
                    12.203800201416016`}, {22.58070135116577, 
                    12.111800253391266`}, {22.625699520111084`, 
                    12.020800173282623`}, {22.625699520111084`, 
                    11.929800152778625`}}, {{17.744699954986572`, 
                    20.460800170898438`}, {17.881700038909912`, 
                    20.323800563812256`}, {18.018700122833252`, 
                    20.186800003051758`}, {18.20069932937622, 
                    20.14180040359497}, {16.64970064163208, 
                    8.553799629211426}, {16.55870008468628, 
                    8.553799629211426}, {16.46769952774048, 
                    8.507800102233887}, {16.375699520111084`, 
                    8.462800025939941}, {7.935700416564941, 
                    15.761800050735474`}, {7.935700416564941, 
                    15.852800369262695`}, {7.9816999435424805`, 
                    15.94480013847351}, {7.9816999435424805`, 
                    16.035799980163574`}, {7.9816999435424805`, 
                    16.21780014038086}, {17.744699954986572`, 
                    20.460800170898438`}}, CompressedData["
1:eJxTTMoPSmViYGCwBWIQDQQVuVPNHYD0joeZWiC6Yk4RCn/HvyRjEF3AOdME
REv0VIH5D6T3oPAD9O6jyh/lNUXmT+CfBeH3sYL5CazMZiB6hk+rETJ/h7o9
Cv8F009DsHmf7oP1Z3y4CuYnRG8E8y+wz1UGu29rKNjdBVWtYH6DxTUw/0Pf
ZiUQbbDS2AKsvmOTIjI/4etMBWT+AuEJ8mB1b/aZI/M3ZNqh8BdM4AfzHTT2
QeT3vwG794DTWzDfYe1JMF+Ae+tveyCdVT9TG6zPz+EXMt9g0ukfIP4eno1g
vsPeoO8o/BKVt8j8BtHf90H8J5OPayHzD/Qe00Tmx9Su0wDr95z7DsQ/wndH
Hdl8GH+BOv8PZL7AhRZhsDlVS3mg4Qrhf+7jBofnAnUwnyGhjAuZ33AmlhOF
X/ebBWz+pF8iYP6FzYxg+Xl/xJD5BjoiEsj8Dft1JMHmp5xhAtvPuRPMb1Bw
BJv3g63fACx/rxDs7hNByyD85kcfQXyOLn5w+mCY0v4SxK9wa0Hhr/ATMELm
/2ithPBXCn9B4d+S/oPC33fwP4ivYZVkhOxeWHpl6NVgBtES/NHgdHHk8RQ1
EG3xohOFX/FB1AKZv0O9HsyfEVOnjszfl1QPjr8ba7rA/McZDeD4ldiuCObD
8yty/gUAq1v3GA==
                    "]}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8745098039215686, 0.8784313725490196, 
                    0.8784313725490196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{18.88519859313965, 
                   20.14150047302246}, {22.854198694229126`, 
                   12.842500686645508`}, {22.717198610305786`, 
                   12.65950059890747}, {22.626198530197144`, 
                   12.431500434875488`}, {22.626198530197144`, 
                   12.203500270843506`}, {22.626198530197144`, 
                   12.112500190734863`}, {22.626198530197144`, 
                   12.021499633789062`}, {22.67219853401184, 
                   11.929500579833984`}, {17.471198678016663`, 
                   8.371500968933105}, {17.425198674201965`, 
                   8.416500091552734}, {17.38019859790802, 
                   8.416500091552734}, {17.334198594093323`, 
                   8.46250057220459}, {18.88519859313965, 
                   20.14150047302246}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{17.33409881591797, 
                   6.728999614715576}, {17.653098821640015`, 
                   6.865999609231949}, {17.881098866462708`, 
                   7.23099958896637}, {17.881098866462708`, 
                   7.595999658107758}, {17.881098866462708`, 
                   7.686999678611755}, {17.881098866462708`, 
                   7.777999520301819}, {17.836098790168762`, 
                   7.823999643325806}, {22.580098628997803`, 
                   11.063000202178955`}, {17.790098816156387`, 
                   2.7599995136260986`}, {17.33409881591797, 
                   6.728999614715576}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{16.14790153503418, 
                   6.9571003913879395`}, {16.284901529550552`, 
                   6.820100396871567}, {16.466901540756226`, 
                   6.72910039126873}, {16.649901509284973`, 
                   6.683100372552872}, {17.10590159893036, 
                   2.6230998039245605`}, {16.92390149831772, 
                   2.532100200653076}, {16.74090152978897, 
                   2.3491005897521973`}, {16.649901509284973`, 
                   2.167100429534912}, {6.8409013748168945`, 
                   3.1251003742218018`}, {16.14790153503418, 
                   6.9571003913879395`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.9647058823529412, 
                    0.9686274509803922], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                   7.251899719238281, 15.07759952545166}, {7.388899713754654, 
                   15.123599525541067`}, {7.525899738073349, 
                   15.168599523603916`}, {7.616899728775024, 
                   15.214599519968033`}, {15.965899467468262`, 
                   7.960599422454834}, {15.919900894165039`, 
                   7.86959981918335}, {15.919900894165039`, 
                   7.732599258422852}, {15.919900894165039`, 
                   7.59559965133667}, {15.919900894165039`, 
                   7.550599575042725}, {6.567899703979492, 
                   3.7175989151000977`}, {6.430899739265442, 
                   3.900599479675293}, {6.202899813652039, 
                   4.082599639892578}, {5.974899649620056, 
                   4.128600120544434}, {5.974899649620056, 
                   4.128600120544434}, {7.251899719238281, 
                   15.07759952545166}, {7.251899719238281, 
                   15.07759952545166}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8509803921568627, 0.8509803921568627, 
                    0.8509803921568627], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}}}, {{{2.461699962615967, 
                   12.887800216674805`}, {2.461699962615967, 
                   13.069800227880478`}, {6.384700059890747, 
                   15.39680027961731}, {6.476700305938721, 
                   15.305800199508667`}, {6.567699909210205, 
                   15.25980019569397}, {6.658699989318848, 
                   15.214800119400024`}, {5.381700038909912, 
                   4.265799522399902}, {2.187699943780899, 
                   12.157800257205963`}, {2.324699968099594, 
                   12.340800166130066`}, {2.461699962615967, 
                   12.568800210952759`}, {2.461699962615967, 
                   12.887800216674805`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{6.886899948120117, 
                   16.99370002746582}, {6.430899947881699, 
                   16.902700029313564`}, {6.065899968147278, 
                   16.5377000272274}, {6.065899968147278, 
                   16.03569996356964}, {6.065899968147278, 
                   15.989700078964233`}, {2.598900318145752, 
                   13.936700105667114`}, {7.981899976730347, 
                   21.646699905395508`}, {6.886899948120117, 
                   16.99370002746582}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{17.56220054626465, 
                   21.09950065612793}, {7.662200927734375, 
                   16.76550006866455}, {7.61720085144043, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.85650110244751}, {8.848200798034668, 
                   22.240500688552856`}, {8.89419937133789, 
                   22.240500688552856`}, {9.259200096130371, 
                   22.240500688552856`}, {9.53320026397705, 
                   22.422500610351562`}, {9.715200424194336, 
                   22.696500658988953`}, {17.56220054626465, 
                   21.09950065612793}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   17.744701385498047`, 20.460798263549805`}, {
                   17.88170138001442, 20.323798269033432`}, {
                   18.018701404333115`, 20.186798244714737`}, {
                   18.200701385736465`, 20.14179825782776}, {
                   16.649701356887817`, 8.55379867553711}, {
                   16.558701276779175`, 8.55379867553711}, {
                   16.467701315879822`, 8.507798194885254}, {
                   16.375701546669006`, 8.462798118591309}, {
                   7.936700820922852, 15.76179838180542}, {7.936700820922852, 
                   15.852798461914062`}, {7.981700897216797, 
                   15.944797992706299`}, {7.981700897216797, 
                   16.03579807281494}, {7.981700897216797, 
                   16.217798709869385`}, {17.744701385498047`, 
                   20.460798263549805`}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}],
                CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Input Ports", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"input_ids\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"input_ids\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"input_ids"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"input_ids\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"input_ids"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3200\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"attention_mask\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"attention_mask\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"attention_mask"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"attention_mask\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"attention_mask"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3200\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"token_type_ids\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"token_type_ids\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"token_type_ids"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"token_type_ids\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"token_type_ids"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3200\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\"", 
                    StyleBox["\"b\"", Italic, StripOnInput -> False], 
                    "\"\[Times]1024\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"4195\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"4195\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"4195"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"4195\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"4195"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]1024\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.04], {
                  FaceForm[{
                    RGBColor[0.20392156862745098`, 0.20392156862745098`, 0.2], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    2.461699962615967, 12.887800216674805`}, {
                    2.461699962615967, 13.069800227880478`}, {
                    6.384700059890747, 15.39680027961731}, {6.476700305938721,
                     15.305800199508667`}, {6.567699909210205, 
                    15.25980019569397}, {6.658699989318848, 
                    15.214800119400024`}, {5.381700038909912, 
                    4.265799522399902}, {2.187699943780899, 
                    12.157800257205963`}, {2.324699968099594, 
                    12.340800166130066`}, {2.461699962615967, 
                    12.568800210952759`}, {2.461699962615967, 
                    12.887800216674805`}}, {{17.561700344085693`, 
                    21.09980010986328}, {7.6626996994018555`, 
                    16.76579999923706}, {7.616700172424316, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.856800317764282`}, {8.848700046539307, 
                    22.239800453186035`}, {8.894700050354004, 
                    22.239800453186035`}, {9.258699893951416, 
                    22.239800453186035`}, {9.532700061798096, 
                    22.422800064086914`}, {9.715700149536133, 
                    22.69580078125}, {17.561700344085693`, 
                    21.09980010986328}}, {{17.333699703216553`, 
                    6.728800296783447}, {17.653700351715088`, 
                    6.865800380706787}, {17.881700038909912`, 
                    7.230800151824951}, {17.881700038909912`, 
                    7.595800399780273}, {17.881700038909912`, 
                    7.686800479888916}, {17.881700038909912`, 
                    7.7778000831604}, {17.835699558258057`, 
                    7.823800086975098}, {22.58070135116577, 
                    11.062800288200378`}, {17.790700435638428`, 
                    2.759799003601074}, {17.333699703216553`, 
                    6.728800296783447}}, {{16.14769983291626, 
                    6.9567999839782715`}, {16.284700870513916`, 
                    6.81980037689209}, {16.46769952774048, 
                    6.728800296783447}, {16.64970064163208, 
                    6.683800220489502}, {17.10570001602173, 
                    2.622799873352051}, {16.923699855804443`, 
                    2.5318002700805664`}, {16.740699291229248`, 
                    2.3498001098632812`}, {16.64970064163208, 
                    2.166799545288086}, {6.841700077056885, 
                    3.1247997283935547`}, {16.14769983291626, 
                    6.9567999839782715`}}, {{7.251699924468994, 
                    15.077800035476685`}, {7.388700008392334, 
                    15.122800350189209`}, {7.525700092315674, 
                    15.168800115585327`}, {7.616700172424316, 
                    15.214800119400024`}, {15.965699672698975`, 
                    7.9608001708984375`}, {15.919700145721436`, 
                    7.869800090789795}, {15.919700145721436`, 
                    7.732800006866455}, {15.919700145721436`, 
                    7.595800399780273}, {15.919700145721436`, 
                    7.549799919128418}, {6.567699909210205, 
                    3.7178001403808594`}, {6.430700063705444, 
                    3.9008007049560547`}, {6.202699899673462, 
                    4.082799911499023}, {5.974699974060059, 
                    4.128800392150879}, {5.974699974060059, 
                    4.128800392150879}, {7.251699924468994, 
                    15.077800035476685`}, {7.251699924468994, 
                    15.077800035476685`}}, {{6.88670015335083, 
                    16.993800163269043`}, {6.430700063705444, 
                    16.90280055999756}, {6.065699815750122, 
                    16.537800073623657`}, {6.065699815750122, 
                    16.035799980163574`}, {6.065699815750122, 
                    15.989800214767456`}, {2.5986999571323395`, 
                    13.936800122261047`}, {7.9816999435424805`, 
                    21.64680004119873}, {6.88670015335083, 
                    16.993800163269043`}}, {{22.625699520111084`, 
                    11.929800152778625`}, {17.425699710845947`, 
                    8.371799945831299}, {17.379700183868408`, 
                    8.416800022125244}, {17.333699703216553`, 
                    8.416800022125244}, {17.288700580596924`, 
                    8.462800025939941}, {18.884700298309326`, 
                    20.14180040359497}, {22.853700160980225`, 
                    12.841800216585398`}, {22.717700481414795`, 
                    12.659800216555595`}, {22.625699520111084`, 
                    12.431800216436386`}, {22.625699520111084`, 
                    12.203800201416016`}, {22.58070135116577, 
                    12.111800253391266`}, {22.625699520111084`, 
                    12.020800173282623`}, {22.625699520111084`, 
                    11.929800152778625`}}, {{17.744699954986572`, 
                    20.460800170898438`}, {17.881700038909912`, 
                    20.323800563812256`}, {18.018700122833252`, 
                    20.186800003051758`}, {18.20069932937622, 
                    20.14180040359497}, {16.64970064163208, 
                    8.553799629211426}, {16.55870008468628, 
                    8.553799629211426}, {16.46769952774048, 
                    8.507800102233887}, {16.375699520111084`, 
                    8.462800025939941}, {7.935700416564941, 
                    15.761800050735474`}, {7.935700416564941, 
                    15.852800369262695`}, {7.9816999435424805`, 
                    15.94480013847351}, {7.9816999435424805`, 
                    16.035799980163574`}, {7.9816999435424805`, 
                    16.21780014038086}, {17.744699954986572`, 
                    20.460800170898438`}}, CompressedData["
1:eJxTTMoPSmViYGCwBWIQDQQVuVPNHYD0joeZWiC6Yk4RCn/HvyRjEF3AOdME
REv0VIH5D6T3oPAD9O6jyh/lNUXmT+CfBeH3sYL5CazMZiB6hk+rETJ/h7o9
Cv8F009DsHmf7oP1Z3y4CuYnRG8E8y+wz1UGu29rKNjdBVWtYH6DxTUw/0Pf
ZiUQbbDS2AKsvmOTIjI/4etMBWT+AuEJ8mB1b/aZI/M3ZNqh8BdM4AfzHTT2
QeT3vwG794DTWzDfYe1JMF+Ae+tveyCdVT9TG6zPz+EXMt9g0ukfIP4eno1g
vsPeoO8o/BKVt8j8BtHf90H8J5OPayHzD/Qe00Tmx9Su0wDr95z7DsQ/wndH
Hdl8GH+BOv8PZL7AhRZhsDlVS3mg4Qrhf+7jBofnAnUwnyGhjAuZ33AmlhOF
X/ebBWz+pF8iYP6FzYxg+Xl/xJD5BjoiEsj8Dft1JMHmp5xhAtvPuRPMb1Bw
BJv3g63fACx/rxDs7hNByyD85kcfQXyOLn5w+mCY0v4SxK9wa0Hhr/ATMELm
/2ithPBXCn9B4d+S/oPC33fwP4ivYZVkhOxeWHpl6NVgBtES/NHgdHHk8RQ1
EG3xohOFX/FB1AKZv0O9HsyfEVOnjszfl1QPjr8ba7rA/McZDeD4ldiuCObD
8yty/gUAq1v3GA==
                    "]}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8745098039215686, 0.8784313725490196, 
                    0.8784313725490196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{18.88519859313965, 
                   20.14150047302246}, {22.854198694229126`, 
                   12.842500686645508`}, {22.717198610305786`, 
                   12.65950059890747}, {22.626198530197144`, 
                   12.431500434875488`}, {22.626198530197144`, 
                   12.203500270843506`}, {22.626198530197144`, 
                   12.112500190734863`}, {22.626198530197144`, 
                   12.021499633789062`}, {22.67219853401184, 
                   11.929500579833984`}, {17.471198678016663`, 
                   8.371500968933105}, {17.425198674201965`, 
                   8.416500091552734}, {17.38019859790802, 
                   8.416500091552734}, {17.334198594093323`, 
                   8.46250057220459}, {18.88519859313965, 
                   20.14150047302246}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{17.33409881591797, 
                   6.728999614715576}, {17.653098821640015`, 
                   6.865999609231949}, {17.881098866462708`, 
                   7.23099958896637}, {17.881098866462708`, 
                   7.595999658107758}, {17.881098866462708`, 
                   7.686999678611755}, {17.881098866462708`, 
                   7.777999520301819}, {17.836098790168762`, 
                   7.823999643325806}, {22.580098628997803`, 
                   11.063000202178955`}, {17.790098816156387`, 
                   2.7599995136260986`}, {17.33409881591797, 
                   6.728999614715576}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{16.14790153503418, 
                   6.9571003913879395`}, {16.284901529550552`, 
                   6.820100396871567}, {16.466901540756226`, 
                   6.72910039126873}, {16.649901509284973`, 
                   6.683100372552872}, {17.10590159893036, 
                   2.6230998039245605`}, {16.92390149831772, 
                   2.532100200653076}, {16.74090152978897, 
                   2.3491005897521973`}, {16.649901509284973`, 
                   2.167100429534912}, {6.8409013748168945`, 
                   3.1251003742218018`}, {16.14790153503418, 
                   6.9571003913879395`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.9647058823529412, 
                    0.9686274509803922], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                   7.251899719238281, 15.07759952545166}, {7.388899713754654, 
                   15.123599525541067`}, {7.525899738073349, 
                   15.168599523603916`}, {7.616899728775024, 
                   15.214599519968033`}, {15.965899467468262`, 
                   7.960599422454834}, {15.919900894165039`, 
                   7.86959981918335}, {15.919900894165039`, 
                   7.732599258422852}, {15.919900894165039`, 
                   7.59559965133667}, {15.919900894165039`, 
                   7.550599575042725}, {6.567899703979492, 
                   3.7175989151000977`}, {6.430899739265442, 
                   3.900599479675293}, {6.202899813652039, 
                   4.082599639892578}, {5.974899649620056, 
                   4.128600120544434}, {5.974899649620056, 
                   4.128600120544434}, {7.251899719238281, 
                   15.07759952545166}, {7.251899719238281, 
                   15.07759952545166}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8509803921568627, 0.8509803921568627, 
                    0.8509803921568627], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}}}, {{{2.461699962615967, 
                   12.887800216674805`}, {2.461699962615967, 
                   13.069800227880478`}, {6.384700059890747, 
                   15.39680027961731}, {6.476700305938721, 
                   15.305800199508667`}, {6.567699909210205, 
                   15.25980019569397}, {6.658699989318848, 
                   15.214800119400024`}, {5.381700038909912, 
                   4.265799522399902}, {2.187699943780899, 
                   12.157800257205963`}, {2.324699968099594, 
                   12.340800166130066`}, {2.461699962615967, 
                   12.568800210952759`}, {2.461699962615967, 
                   12.887800216674805`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{6.886899948120117, 
                   16.99370002746582}, {6.430899947881699, 
                   16.902700029313564`}, {6.065899968147278, 
                   16.5377000272274}, {6.065899968147278, 
                   16.03569996356964}, {6.065899968147278, 
                   15.989700078964233`}, {2.598900318145752, 
                   13.936700105667114`}, {7.981899976730347, 
                   21.646699905395508`}, {6.886899948120117, 
                   16.99370002746582}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{17.56220054626465, 
                   21.09950065612793}, {7.662200927734375, 
                   16.76550006866455}, {7.61720085144043, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.85650110244751}, {8.848200798034668, 
                   22.240500688552856`}, {8.89419937133789, 
                   22.240500688552856`}, {9.259200096130371, 
                   22.240500688552856`}, {9.53320026397705, 
                   22.422500610351562`}, {9.715200424194336, 
                   22.696500658988953`}, {17.56220054626465, 
                   21.09950065612793}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   17.744701385498047`, 20.460798263549805`}, {
                   17.88170138001442, 20.323798269033432`}, {
                   18.018701404333115`, 20.186798244714737`}, {
                   18.200701385736465`, 20.14179825782776}, {
                   16.649701356887817`, 8.55379867553711}, {
                   16.558701276779175`, 8.55379867553711}, {
                   16.467701315879822`, 8.507798194885254}, {
                   16.375701546669006`, 8.462798118591309}, {
                   7.936700820922852, 15.76179838180542}, {7.936700820922852, 
                   15.852798461914062`}, {7.981700897216797, 
                   15.944797992706299`}, {7.981700897216797, 
                   16.03579807281494}, {7.981700897216797, 
                   16.217798709869385`}, {17.744701385498047`, 
                   20.460798263549805`}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}],
                CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Information", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Format\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"ONNX\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"LayersCount\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["3309", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"ByteCount\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["1680669520", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Input Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"input_ids\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"input_ids\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"input_ids"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"input_ids\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"input_ids"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3200\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"attention_mask\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"attention_mask\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"attention_mask"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"attention_mask\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"attention_mask"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3200\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"token_type_ids\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"token_type_ids\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"token_type_ids"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"token_type_ids\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"token_type_ids"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]3200\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\"", 
                    StyleBox["\"b\"", Italic, StripOnInput -> False], 
                    "\"\[Times]1024\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"4195\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"4195\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"4195"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"4195\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"4195"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]1024\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetExternalObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.909774571326637*^9, 3.90977458963113*^9}, 
   3.9097746771103787`*^9, 3.909775492764675*^9, 3.90977554731925*^9, 
   3.909869419573751*^9, 3.909881005109132*^9, 3.9099810709370685`*^9, 
   3.9100205878645973`*^9, {3.910046369380662*^9, 3.9100463950454273`*^9}, 
   3.91005322017232*^9, 3.9101125029078665`*^9, 3.9106503107701044`*^9, 
   3.911570376608747*^9, 3.9116685668642664`*^9, 3.911668612408677*^9, 
   3.911670322978252*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d3cb31a3-6042-40f3-ac1b-964e93fe57f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"molEncoder", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$UserDocumentsDirectory", ",", "\"\<WELP-PLAPT\>\"", ",", 
       "\"\<models\>\"", ",", "\"\<mol_encoder.onnx\>\""}], "}"}], "]"}], 
    ",", "\"\<NetExternalObject\>\""}], " ", "]"}]}]], "Code",
 CellChangeTimes->{{3.9097745928134995`*^9, 3.9097745997273088`*^9}, 
   3.9097746643428555`*^9, {3.9100462225591965`*^9, 3.910046232412987*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"27bfc65c-1fbd-428a-a121-8c0a8747c6f1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetExternalObject", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.04], {
                  FaceForm[{
                    RGBColor[0.20392156862745098`, 0.20392156862745098`, 0.2], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    2.461699962615967, 12.887800216674805`}, {
                    2.461699962615967, 13.069800227880478`}, {
                    6.384700059890747, 15.39680027961731}, {6.476700305938721,
                     15.305800199508667`}, {6.567699909210205, 
                    15.25980019569397}, {6.658699989318848, 
                    15.214800119400024`}, {5.381700038909912, 
                    4.265799522399902}, {2.187699943780899, 
                    12.157800257205963`}, {2.324699968099594, 
                    12.340800166130066`}, {2.461699962615967, 
                    12.568800210952759`}, {2.461699962615967, 
                    12.887800216674805`}}, {{17.561700344085693`, 
                    21.09980010986328}, {7.6626996994018555`, 
                    16.76579999923706}, {7.616700172424316, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.856800317764282`}, {8.848700046539307, 
                    22.239800453186035`}, {8.894700050354004, 
                    22.239800453186035`}, {9.258699893951416, 
                    22.239800453186035`}, {9.532700061798096, 
                    22.422800064086914`}, {9.715700149536133, 
                    22.69580078125}, {17.561700344085693`, 
                    21.09980010986328}}, {{17.333699703216553`, 
                    6.728800296783447}, {17.653700351715088`, 
                    6.865800380706787}, {17.881700038909912`, 
                    7.230800151824951}, {17.881700038909912`, 
                    7.595800399780273}, {17.881700038909912`, 
                    7.686800479888916}, {17.881700038909912`, 
                    7.7778000831604}, {17.835699558258057`, 
                    7.823800086975098}, {22.58070135116577, 
                    11.062800288200378`}, {17.790700435638428`, 
                    2.759799003601074}, {17.333699703216553`, 
                    6.728800296783447}}, {{16.14769983291626, 
                    6.9567999839782715`}, {16.284700870513916`, 
                    6.81980037689209}, {16.46769952774048, 
                    6.728800296783447}, {16.64970064163208, 
                    6.683800220489502}, {17.10570001602173, 
                    2.622799873352051}, {16.923699855804443`, 
                    2.5318002700805664`}, {16.740699291229248`, 
                    2.3498001098632812`}, {16.64970064163208, 
                    2.166799545288086}, {6.841700077056885, 
                    3.1247997283935547`}, {16.14769983291626, 
                    6.9567999839782715`}}, {{7.251699924468994, 
                    15.077800035476685`}, {7.388700008392334, 
                    15.122800350189209`}, {7.525700092315674, 
                    15.168800115585327`}, {7.616700172424316, 
                    15.214800119400024`}, {15.965699672698975`, 
                    7.9608001708984375`}, {15.919700145721436`, 
                    7.869800090789795}, {15.919700145721436`, 
                    7.732800006866455}, {15.919700145721436`, 
                    7.595800399780273}, {15.919700145721436`, 
                    7.549799919128418}, {6.567699909210205, 
                    3.7178001403808594`}, {6.430700063705444, 
                    3.9008007049560547`}, {6.202699899673462, 
                    4.082799911499023}, {5.974699974060059, 
                    4.128800392150879}, {5.974699974060059, 
                    4.128800392150879}, {7.251699924468994, 
                    15.077800035476685`}, {7.251699924468994, 
                    15.077800035476685`}}, {{6.88670015335083, 
                    16.993800163269043`}, {6.430700063705444, 
                    16.90280055999756}, {6.065699815750122, 
                    16.537800073623657`}, {6.065699815750122, 
                    16.035799980163574`}, {6.065699815750122, 
                    15.989800214767456`}, {2.5986999571323395`, 
                    13.936800122261047`}, {7.9816999435424805`, 
                    21.64680004119873}, {6.88670015335083, 
                    16.993800163269043`}}, {{22.625699520111084`, 
                    11.929800152778625`}, {17.425699710845947`, 
                    8.371799945831299}, {17.379700183868408`, 
                    8.416800022125244}, {17.333699703216553`, 
                    8.416800022125244}, {17.288700580596924`, 
                    8.462800025939941}, {18.884700298309326`, 
                    20.14180040359497}, {22.853700160980225`, 
                    12.841800216585398`}, {22.717700481414795`, 
                    12.659800216555595`}, {22.625699520111084`, 
                    12.431800216436386`}, {22.625699520111084`, 
                    12.203800201416016`}, {22.58070135116577, 
                    12.111800253391266`}, {22.625699520111084`, 
                    12.020800173282623`}, {22.625699520111084`, 
                    11.929800152778625`}}, {{17.744699954986572`, 
                    20.460800170898438`}, {17.881700038909912`, 
                    20.323800563812256`}, {18.018700122833252`, 
                    20.186800003051758`}, {18.20069932937622, 
                    20.14180040359497}, {16.64970064163208, 
                    8.553799629211426}, {16.55870008468628, 
                    8.553799629211426}, {16.46769952774048, 
                    8.507800102233887}, {16.375699520111084`, 
                    8.462800025939941}, {7.935700416564941, 
                    15.761800050735474`}, {7.935700416564941, 
                    15.852800369262695`}, {7.9816999435424805`, 
                    15.94480013847351}, {7.9816999435424805`, 
                    16.035799980163574`}, {7.9816999435424805`, 
                    16.21780014038086}, {17.744699954986572`, 
                    20.460800170898438`}}, CompressedData["
1:eJxTTMoPSmViYGCwBWIQDQQVuVPNHYD0joeZWiC6Yk4RCn/HvyRjEF3AOdME
REv0VIH5D6T3oPAD9O6jyh/lNUXmT+CfBeH3sYL5CazMZiB6hk+rETJ/h7o9
Cv8F009DsHmf7oP1Z3y4CuYnRG8E8y+wz1UGu29rKNjdBVWtYH6DxTUw/0Pf
ZiUQbbDS2AKsvmOTIjI/4etMBWT+AuEJ8mB1b/aZI/M3ZNqh8BdM4AfzHTT2
QeT3vwG794DTWzDfYe1JMF+Ae+tveyCdVT9TG6zPz+EXMt9g0ukfIP4eno1g
vsPeoO8o/BKVt8j8BtHf90H8J5OPayHzD/Qe00Tmx9Su0wDr95z7DsQ/wndH
Hdl8GH+BOv8PZL7AhRZhsDlVS3mg4Qrhf+7jBofnAnUwnyGhjAuZ33AmlhOF
X/ebBWz+pF8iYP6FzYxg+Xl/xJD5BjoiEsj8Dft1JMHmp5xhAtvPuRPMb1Bw
BJv3g63fACx/rxDs7hNByyD85kcfQXyOLn5w+mCY0v4SxK9wa0Hhr/ATMELm
/2ithPBXCn9B4d+S/oPC33fwP4ivYZVkhOxeWHpl6NVgBtES/NHgdHHk8RQ1
EG3xohOFX/FB1AKZv0O9HsyfEVOnjszfl1QPjr8ba7rA/McZDeD4ldiuCObD
8yty/gUAq1v3GA==
                    "]}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8745098039215686, 0.8784313725490196, 
                    0.8784313725490196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{18.88519859313965, 
                   20.14150047302246}, {22.854198694229126`, 
                   12.842500686645508`}, {22.717198610305786`, 
                   12.65950059890747}, {22.626198530197144`, 
                   12.431500434875488`}, {22.626198530197144`, 
                   12.203500270843506`}, {22.626198530197144`, 
                   12.112500190734863`}, {22.626198530197144`, 
                   12.021499633789062`}, {22.67219853401184, 
                   11.929500579833984`}, {17.471198678016663`, 
                   8.371500968933105}, {17.425198674201965`, 
                   8.416500091552734}, {17.38019859790802, 
                   8.416500091552734}, {17.334198594093323`, 
                   8.46250057220459}, {18.88519859313965, 
                   20.14150047302246}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{17.33409881591797, 
                   6.728999614715576}, {17.653098821640015`, 
                   6.865999609231949}, {17.881098866462708`, 
                   7.23099958896637}, {17.881098866462708`, 
                   7.595999658107758}, {17.881098866462708`, 
                   7.686999678611755}, {17.881098866462708`, 
                   7.777999520301819}, {17.836098790168762`, 
                   7.823999643325806}, {22.580098628997803`, 
                   11.063000202178955`}, {17.790098816156387`, 
                   2.7599995136260986`}, {17.33409881591797, 
                   6.728999614715576}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{16.14790153503418, 
                   6.9571003913879395`}, {16.284901529550552`, 
                   6.820100396871567}, {16.466901540756226`, 
                   6.72910039126873}, {16.649901509284973`, 
                   6.683100372552872}, {17.10590159893036, 
                   2.6230998039245605`}, {16.92390149831772, 
                   2.532100200653076}, {16.74090152978897, 
                   2.3491005897521973`}, {16.649901509284973`, 
                   2.167100429534912}, {6.8409013748168945`, 
                   3.1251003742218018`}, {16.14790153503418, 
                   6.9571003913879395`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.9647058823529412, 
                    0.9686274509803922], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                   7.251899719238281, 15.07759952545166}, {7.388899713754654, 
                   15.123599525541067`}, {7.525899738073349, 
                   15.168599523603916`}, {7.616899728775024, 
                   15.214599519968033`}, {15.965899467468262`, 
                   7.960599422454834}, {15.919900894165039`, 
                   7.86959981918335}, {15.919900894165039`, 
                   7.732599258422852}, {15.919900894165039`, 
                   7.59559965133667}, {15.919900894165039`, 
                   7.550599575042725}, {6.567899703979492, 
                   3.7175989151000977`}, {6.430899739265442, 
                   3.900599479675293}, {6.202899813652039, 
                   4.082599639892578}, {5.974899649620056, 
                   4.128600120544434}, {5.974899649620056, 
                   4.128600120544434}, {7.251899719238281, 
                   15.07759952545166}, {7.251899719238281, 
                   15.07759952545166}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8509803921568627, 0.8509803921568627, 
                    0.8509803921568627], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}}}, {{{2.461699962615967, 
                   12.887800216674805`}, {2.461699962615967, 
                   13.069800227880478`}, {6.384700059890747, 
                   15.39680027961731}, {6.476700305938721, 
                   15.305800199508667`}, {6.567699909210205, 
                   15.25980019569397}, {6.658699989318848, 
                   15.214800119400024`}, {5.381700038909912, 
                   4.265799522399902}, {2.187699943780899, 
                   12.157800257205963`}, {2.324699968099594, 
                   12.340800166130066`}, {2.461699962615967, 
                   12.568800210952759`}, {2.461699962615967, 
                   12.887800216674805`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{6.886899948120117, 
                   16.99370002746582}, {6.430899947881699, 
                   16.902700029313564`}, {6.065899968147278, 
                   16.5377000272274}, {6.065899968147278, 
                   16.03569996356964}, {6.065899968147278, 
                   15.989700078964233`}, {2.598900318145752, 
                   13.936700105667114`}, {7.981899976730347, 
                   21.646699905395508`}, {6.886899948120117, 
                   16.99370002746582}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{17.56220054626465, 
                   21.09950065612793}, {7.662200927734375, 
                   16.76550006866455}, {7.61720085144043, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.85650110244751}, {8.848200798034668, 
                   22.240500688552856`}, {8.89419937133789, 
                   22.240500688552856`}, {9.259200096130371, 
                   22.240500688552856`}, {9.53320026397705, 
                   22.422500610351562`}, {9.715200424194336, 
                   22.696500658988953`}, {17.56220054626465, 
                   21.09950065612793}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   17.744701385498047`, 20.460798263549805`}, {
                   17.88170138001442, 20.323798269033432`}, {
                   18.018701404333115`, 20.186798244714737`}, {
                   18.200701385736465`, 20.14179825782776}, {
                   16.649701356887817`, 8.55379867553711}, {
                   16.558701276779175`, 8.55379867553711}, {
                   16.467701315879822`, 8.507798194885254}, {
                   16.375701546669006`, 8.462798118591309}, {
                   7.936700820922852, 15.76179838180542}, {7.936700820922852, 
                   15.852798461914062`}, {7.981700897216797, 
                   15.944797992706299`}, {7.981700897216797, 
                   16.03579807281494}, {7.981700897216797, 
                   16.217798709869385`}, {17.744701385498047`, 
                   20.460798263549805`}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}],
                CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Input Ports", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"input_ids\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"input_ids\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"input_ids"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"input_ids\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"input_ids"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]278\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"attention_mask\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"attention_mask\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"attention_mask"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"attention_mask\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"attention_mask"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]278\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\"", 
                    StyleBox["\"b\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"909\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"909\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"909"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"909\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"909"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.04], {
                  FaceForm[{
                    RGBColor[0.20392156862745098`, 0.20392156862745098`, 0.2], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                    2.461699962615967, 12.887800216674805`}, {
                    2.461699962615967, 13.069800227880478`}, {
                    6.384700059890747, 15.39680027961731}, {6.476700305938721,
                     15.305800199508667`}, {6.567699909210205, 
                    15.25980019569397}, {6.658699989318848, 
                    15.214800119400024`}, {5.381700038909912, 
                    4.265799522399902}, {2.187699943780899, 
                    12.157800257205963`}, {2.324699968099594, 
                    12.340800166130066`}, {2.461699962615967, 
                    12.568800210952759`}, {2.461699962615967, 
                    12.887800216674805`}}, {{17.561700344085693`, 
                    21.09980010986328}, {7.6626996994018555`, 
                    16.76579999923706}, {7.616700172424316, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.810800313949585`}, {7.571700096130371, 
                    16.856800317764282`}, {8.848700046539307, 
                    22.239800453186035`}, {8.894700050354004, 
                    22.239800453186035`}, {9.258699893951416, 
                    22.239800453186035`}, {9.532700061798096, 
                    22.422800064086914`}, {9.715700149536133, 
                    22.69580078125}, {17.561700344085693`, 
                    21.09980010986328}}, {{17.333699703216553`, 
                    6.728800296783447}, {17.653700351715088`, 
                    6.865800380706787}, {17.881700038909912`, 
                    7.230800151824951}, {17.881700038909912`, 
                    7.595800399780273}, {17.881700038909912`, 
                    7.686800479888916}, {17.881700038909912`, 
                    7.7778000831604}, {17.835699558258057`, 
                    7.823800086975098}, {22.58070135116577, 
                    11.062800288200378`}, {17.790700435638428`, 
                    2.759799003601074}, {17.333699703216553`, 
                    6.728800296783447}}, {{16.14769983291626, 
                    6.9567999839782715`}, {16.284700870513916`, 
                    6.81980037689209}, {16.46769952774048, 
                    6.728800296783447}, {16.64970064163208, 
                    6.683800220489502}, {17.10570001602173, 
                    2.622799873352051}, {16.923699855804443`, 
                    2.5318002700805664`}, {16.740699291229248`, 
                    2.3498001098632812`}, {16.64970064163208, 
                    2.166799545288086}, {6.841700077056885, 
                    3.1247997283935547`}, {16.14769983291626, 
                    6.9567999839782715`}}, {{7.251699924468994, 
                    15.077800035476685`}, {7.388700008392334, 
                    15.122800350189209`}, {7.525700092315674, 
                    15.168800115585327`}, {7.616700172424316, 
                    15.214800119400024`}, {15.965699672698975`, 
                    7.9608001708984375`}, {15.919700145721436`, 
                    7.869800090789795}, {15.919700145721436`, 
                    7.732800006866455}, {15.919700145721436`, 
                    7.595800399780273}, {15.919700145721436`, 
                    7.549799919128418}, {6.567699909210205, 
                    3.7178001403808594`}, {6.430700063705444, 
                    3.9008007049560547`}, {6.202699899673462, 
                    4.082799911499023}, {5.974699974060059, 
                    4.128800392150879}, {5.974699974060059, 
                    4.128800392150879}, {7.251699924468994, 
                    15.077800035476685`}, {7.251699924468994, 
                    15.077800035476685`}}, {{6.88670015335083, 
                    16.993800163269043`}, {6.430700063705444, 
                    16.90280055999756}, {6.065699815750122, 
                    16.537800073623657`}, {6.065699815750122, 
                    16.035799980163574`}, {6.065699815750122, 
                    15.989800214767456`}, {2.5986999571323395`, 
                    13.936800122261047`}, {7.9816999435424805`, 
                    21.64680004119873}, {6.88670015335083, 
                    16.993800163269043`}}, {{22.625699520111084`, 
                    11.929800152778625`}, {17.425699710845947`, 
                    8.371799945831299}, {17.379700183868408`, 
                    8.416800022125244}, {17.333699703216553`, 
                    8.416800022125244}, {17.288700580596924`, 
                    8.462800025939941}, {18.884700298309326`, 
                    20.14180040359497}, {22.853700160980225`, 
                    12.841800216585398`}, {22.717700481414795`, 
                    12.659800216555595`}, {22.625699520111084`, 
                    12.431800216436386`}, {22.625699520111084`, 
                    12.203800201416016`}, {22.58070135116577, 
                    12.111800253391266`}, {22.625699520111084`, 
                    12.020800173282623`}, {22.625699520111084`, 
                    11.929800152778625`}}, {{17.744699954986572`, 
                    20.460800170898438`}, {17.881700038909912`, 
                    20.323800563812256`}, {18.018700122833252`, 
                    20.186800003051758`}, {18.20069932937622, 
                    20.14180040359497}, {16.64970064163208, 
                    8.553799629211426}, {16.55870008468628, 
                    8.553799629211426}, {16.46769952774048, 
                    8.507800102233887}, {16.375699520111084`, 
                    8.462800025939941}, {7.935700416564941, 
                    15.761800050735474`}, {7.935700416564941, 
                    15.852800369262695`}, {7.9816999435424805`, 
                    15.94480013847351}, {7.9816999435424805`, 
                    16.035799980163574`}, {7.9816999435424805`, 
                    16.21780014038086}, {17.744699954986572`, 
                    20.460800170898438`}}, CompressedData["
1:eJxTTMoPSmViYGCwBWIQDQQVuVPNHYD0joeZWiC6Yk4RCn/HvyRjEF3AOdME
REv0VIH5D6T3oPAD9O6jyh/lNUXmT+CfBeH3sYL5CazMZiB6hk+rETJ/h7o9
Cv8F009DsHmf7oP1Z3y4CuYnRG8E8y+wz1UGu29rKNjdBVWtYH6DxTUw/0Pf
ZiUQbbDS2AKsvmOTIjI/4etMBWT+AuEJ8mB1b/aZI/M3ZNqh8BdM4AfzHTT2
QeT3vwG794DTWzDfYe1JMF+Ae+tveyCdVT9TG6zPz+EXMt9g0ukfIP4eno1g
vsPeoO8o/BKVt8j8BtHf90H8J5OPayHzD/Qe00Tmx9Su0wDr95z7DsQ/wndH
Hdl8GH+BOv8PZL7AhRZhsDlVS3mg4Qrhf+7jBofnAnUwnyGhjAuZ33AmlhOF
X/ebBWz+pF8iYP6FzYxg+Xl/xJD5BjoiEsj8Dft1JMHmp5xhAtvPuRPMb1Bw
BJv3g63fACx/rxDs7hNByyD85kcfQXyOLn5w+mCY0v4SxK9wa0Hhr/ATMELm
/2ithPBXCn9B4d+S/oPC33fwP4ivYZVkhOxeWHpl6NVgBtES/NHgdHHk8RQ1
EG3xohOFX/FB1AKZv0O9HsyfEVOnjszfl1QPjr8ba7rA/McZDeD4ldiuCObD
8yty/gUAq1v3GA==
                    "]}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8745098039215686, 0.8784313725490196, 
                    0.8784313725490196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{18.88519859313965, 
                   20.14150047302246}, {22.854198694229126`, 
                   12.842500686645508`}, {22.717198610305786`, 
                   12.65950059890747}, {22.626198530197144`, 
                   12.431500434875488`}, {22.626198530197144`, 
                   12.203500270843506`}, {22.626198530197144`, 
                   12.112500190734863`}, {22.626198530197144`, 
                   12.021499633789062`}, {22.67219853401184, 
                   11.929500579833984`}, {17.471198678016663`, 
                   8.371500968933105}, {17.425198674201965`, 
                   8.416500091552734}, {17.38019859790802, 
                   8.416500091552734}, {17.334198594093323`, 
                   8.46250057220459}, {18.88519859313965, 
                   20.14150047302246}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{17.33409881591797, 
                   6.728999614715576}, {17.653098821640015`, 
                   6.865999609231949}, {17.881098866462708`, 
                   7.23099958896637}, {17.881098866462708`, 
                   7.595999658107758}, {17.881098866462708`, 
                   7.686999678611755}, {17.881098866462708`, 
                   7.777999520301819}, {17.836098790168762`, 
                   7.823999643325806}, {22.580098628997803`, 
                   11.063000202178955`}, {17.790098816156387`, 
                   2.7599995136260986`}, {17.33409881591797, 
                   6.728999614715576}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{16.14790153503418, 
                   6.9571003913879395`}, {16.284901529550552`, 
                   6.820100396871567}, {16.466901540756226`, 
                   6.72910039126873}, {16.649901509284973`, 
                   6.683100372552872}, {17.10590159893036, 
                   2.6230998039245605`}, {16.92390149831772, 
                   2.532100200653076}, {16.74090152978897, 
                   2.3491005897521973`}, {16.649901509284973`, 
                   2.167100429534912}, {6.8409013748168945`, 
                   3.1251003742218018`}, {16.14790153503418, 
                   6.9571003913879395`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9607843137254902, 0.9647058823529412, 
                    0.9686274509803922], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}}, {{{
                   7.251899719238281, 15.07759952545166}, {7.388899713754654, 
                   15.123599525541067`}, {7.525899738073349, 
                   15.168599523603916`}, {7.616899728775024, 
                   15.214599519968033`}, {15.965899467468262`, 
                   7.960599422454834}, {15.919900894165039`, 
                   7.86959981918335}, {15.919900894165039`, 
                   7.732599258422852}, {15.919900894165039`, 
                   7.59559965133667}, {15.919900894165039`, 
                   7.550599575042725}, {6.567899703979492, 
                   3.7175989151000977`}, {6.430899739265442, 
                   3.900599479675293}, {6.202899813652039, 
                   4.082599639892578}, {5.974899649620056, 
                   4.128600120544434}, {5.974899649620056, 
                   4.128600120544434}, {7.251899719238281, 
                   15.07759952545166}, {7.251899719238281, 
                   15.07759952545166}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8509803921568627, 0.8509803921568627, 
                    0.8509803921568627], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {0, 1, 0}, {1, 3, 3}}}, {{{2.461699962615967, 
                   12.887800216674805`}, {2.461699962615967, 
                   13.069800227880478`}, {6.384700059890747, 
                   15.39680027961731}, {6.476700305938721, 
                   15.305800199508667`}, {6.567699909210205, 
                   15.25980019569397}, {6.658699989318848, 
                   15.214800119400024`}, {5.381700038909912, 
                   4.265799522399902}, {2.187699943780899, 
                   12.157800257205963`}, {2.324699968099594, 
                   12.340800166130066`}, {2.461699962615967, 
                   12.568800210952759`}, {2.461699962615967, 
                   12.887800216674805`}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7019607843137254, 0.7019607843137254, 
                    0.7019607843137254], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}}}, {{{6.886899948120117, 
                   16.99370002746582}, {6.430899947881699, 
                   16.902700029313564`}, {6.065899968147278, 
                   16.5377000272274}, {6.065899968147278, 
                   16.03569996356964}, {6.065899968147278, 
                   15.989700078964233`}, {2.598900318145752, 
                   13.936700105667114`}, {7.981899976730347, 
                   21.646699905395508`}, {6.886899948120117, 
                   16.99370002746582}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8235294117647058, 0.8235294117647058, 
                    0.8235294117647058], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}}}, {{{17.56220054626465, 
                   21.09950065612793}, {7.662200927734375, 
                   16.76550006866455}, {7.61720085144043, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.811501026153564`}, {7.571200370788574, 
                   16.85650110244751}, {8.848200798034668, 
                   22.240500688552856`}, {8.89419937133789, 
                   22.240500688552856`}, {9.259200096130371, 
                   22.240500688552856`}, {9.53320026397705, 
                   22.422500610351562`}, {9.715200424194336, 
                   22.696500658988953`}, {17.56220054626465, 
                   21.09950065612793}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
                   17.744701385498047`, 20.460798263549805`}, {
                   17.88170138001442, 20.323798269033432`}, {
                   18.018701404333115`, 20.186798244714737`}, {
                   18.200701385736465`, 20.14179825782776}, {
                   16.649701356887817`, 8.55379867553711}, {
                   16.558701276779175`, 8.55379867553711}, {
                   16.467701315879822`, 8.507798194885254}, {
                   16.375701546669006`, 8.462798118591309}, {
                   7.936700820922852, 15.76179838180542}, {7.936700820922852, 
                   15.852798461914062`}, {7.981700897216797, 
                   15.944797992706299`}, {7.981700897216797, 
                   16.03579807281494}, {7.981700897216797, 
                   16.217798709869385`}, {17.744701385498047`, 
                   20.460798263549805`}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {25., 25.}, PlotRange -> {{0., 25.}, {0., 25.}}],
                CacheGraphics -> False], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Information", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Format\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"ONNX\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"LayersCount\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["720", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"ByteCount\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["176549400", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Input Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"input_ids\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"input_ids\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"input_ids"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"input_ids\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"input_ids"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]278\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"attention_mask\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox[
                    "\"attention_mask\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"attention_mask"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"attention_mask\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"attention_mask"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]278\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of integers\""}, "RowDefault"], Short], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Output Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"array\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\"", 
                    StyleBox["\"b\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"909\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox[
                    "\"909\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"909"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"909\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"909"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"a\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetExternalObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.909774601344368*^9, 3.909774678352106*^9, 3.9098810063015337`*^9, 
   3.9100205892101717`*^9, {3.9100463773779173`*^9, 3.9100463962289066`*^9}, 
   3.9100532240706224`*^9, 3.9101125042530346`*^9, 3.9106503122285123`*^9, 
   3.9116686138604865`*^9, 3.911670325283544*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5b707260-62ae-4975-a1d0-1553130dd102"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Encoders", "Subsection",
 CellChangeTimes->{{3.90977560864793*^9, 
  3.909775618679577*^9}},ExpressionUUID->"c8423a7d-459a-443c-a1b6-\
b5f5c6d9bb0a"],

Cell["\<\
Using an epsilon of less than 1 e - 3, we verified the consistency of \
ChemBERTa' s and ProtBERT\[CloseCurlyQuote]s molecular encodings in the \
Wolfram Language against the same models using Python' s HuggingFace library, \
confirming near - identical outputs .\
\>", "Text",
 CellChangeTimes->{{3.909881905888051*^9, 
  3.909881929566351*^9}},ExpressionUUID->"9f46e916-5444-4b8d-9d6d-\
7e866c4b84ab"],

Cell[CellGroupData[{

Cell["Molecule Encoder", "Subsubsection",
 CellChangeTimes->{{3.909775693205987*^9, 
  3.9097756964322133`*^9}},ExpressionUUID->"f68b4d15-cace-4580-b4c7-\
b2958fe0611b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testMolInput", "=", 
  RowBox[{"MoleculeTokenizer", "[", 
   RowBox[{
    RowBox[{"{", "\"\<CCCCCCCCCCCCCCCCCCCC(=O)O\>\"", "}"}], ",", "278"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9097935757118196`*^9, 3.909793599185889*^9}, 
   3.909880894779956*^9, {3.9098809726116614`*^9, 3.909880992239831*^9}, {
   3.90988102690528*^9, 3.9098810272551484`*^9}, 3.9098812192747545`*^9, {
   3.909881354131518*^9, 3.909881354951351*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"aec8ff51-b5ec-4254-b8b5-abdf51337f1b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"input_ids\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "693", ",", "693", ",", "285", ",", "263", ",", "51", ",", 
       "13", ",", "51", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",",
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"attention_mask\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9098812195784636`*^9, 3.909881355524413*^9, {3.910046377712969*^9, 
   3.9100463964344406`*^9}, 3.9100532356439986`*^9, 3.910650312447194*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"be378c1f-cc47-4e89-802f-b47e25bc4292"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testMolOutput", "=", 
  RowBox[{"molEncoder", "[", "testMolInput", "]"}]}]], "Input",
 CellChangeTimes->{{3.909774604648677*^9, 3.9097746058923264`*^9}, {
  3.9097746958693266`*^9, 3.9097747110271735`*^9}, {3.909774747894433*^9, 
  3.9097748112978287`*^9}, {3.909774857455142*^9, 3.9097748677611833`*^9}, {
  3.909774951343148*^9, 3.9097749601139016`*^9}, {3.909793583937993*^9, 
  3.9097936102571545`*^9}, {3.909793667816658*^9, 3.9097936687511454`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"583cf84e-8305-431c-91a7-37083580073d"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{"\"output\"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"{", 
               TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], "}"}]}],
          ",", 
         RowBox[{"\"909\"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"{", 
               RowBox[{"0.29265838861465454`", ",", 
                 RowBox[{"-", "0.20105978846549988`"}], ",", 
                 RowBox[{"-", "0.2514451742172241`"}], ",", 
                 "0.27638164162635803`", ",", 
                 RowBox[{"-", "0.5940092206001282`"}], ",", 
                 "0.4767305850982666`", ",", "0.4014252722263336`", ",", 
                 "0.15805020928382874`", ",", 
                 RowBox[{"-", "0.22579523921012878`"}], ",", 
                 RowBox[{"-", "0.47935327887535095`"}], ",", 
                 RowBox[{"-", "0.6765188574790955`"}], ",", 
                 "0.016724620014429092`", ",", "0.9453138113021851`", ",", 
                 "0.3697268068790436`", ",", "0.37976041436195374`", ",", 
                 RowBox[{"-", "0.2046014815568924`"}], ",", 
                 RowBox[{"-", "0.10614736378192902`"}], ",", 
                 RowBox[{"-", "0.37675660848617554`"}], ",", 
                 RowBox[{"-", "0.18930402398109436`"}], ",", 
                 RowBox[{"-", "0.23976421356201172`"}], ",", 
                 "0.00838769506663084`", ",", "0.27116042375564575`", ",", 
                 RowBox[{"-", "0.24826931953430176`"}], ",", 
                 "0.2423955500125885`", ",", 
                 TemplateBox[{"720"}, "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"-", "0.36646008491516113`"}], ",", 
                 RowBox[{"-", "0.6000258922576904`"}], ",", 
                 "0.8329029083251953`", ",", "0.49221789836883545`", ",", 
                 RowBox[{"-", "0.44597235321998596`"}], ",", 
                 RowBox[{"-", "0.6737632751464844`"}], ",", 
                 RowBox[{"-", "0.8218211531639099`"}], ",", 
                 "0.41200554370880127`", ",", "0.18402256071567535`", ",", 
                 "0.3982252776622772`", ",", "0.811536967754364`", ",", 
                 RowBox[{"-", "0.22929057478904724`"}], ",", 
                 RowBox[{"-", "0.7282369136810303`"}], ",", 
                 RowBox[{"-", "0.5526841878890991`"}], ",", 
                 RowBox[{"-", "0.018650507554411888`"}], ",", 
                 RowBox[{"-", "0.4860563576221466`"}], ",", 
                 RowBox[{"-", "0.08751929551362991`"}], ",", 
                 "0.3757752776145935`", ",", 
                 RowBox[{"-", "0.15729816257953644`"}], ",", 
                 RowBox[{"-", "0.4873029887676239`"}], ",", 
                 "0.20851995050907135`", ",", 
                 RowBox[{"-", "0.6608127355575562`"}], ",", 
                 "0.6894199848175049`", ",", "0.5655734539031982`"}], "}"}], 
             "}"}]}]}], "\[RightAssociation]"}], Short[#, 8]& ], "line" -> 74,
    "sessionID" -> 28217936057227393136, "byteCount" -> 1715240, "size" -> 8, 
   "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{
  3.9097936115222096`*^9, 3.9097936724378557`*^9, {3.9098810117896347`*^9, 
   3.9098810474301205`*^9}, 3.9098813653744144`*^9, {3.9100463782824473`*^9, 
   3.9100463969471283`*^9}, 3.910053239198634*^9, 3.9106503130527163`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"0f0916d1-8889-4751-99c6-a9f782023d7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testMolOutput", "[", "\"\<909\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"the", " ", "pooled", " ", "output"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.909774980442442*^9, 3.9097749919450917`*^9}, 
   3.909793621292965*^9, 3.909793671020465*^9, {3.909881373490513*^9, 
   3.909881386986476*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"12033fe8-495e-4853-8226-e8a705212512"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"0.29265838861465454`", ",", 
    RowBox[{"-", "0.20105978846549988`"}], ",", 
    RowBox[{"-", "0.2514451742172241`"}], ",", "0.27638164162635803`", ",", 
    RowBox[{"-", "0.5940092206001282`"}], ",", "0.4767305850982666`", ",", 
    "0.4014252722263336`", ",", "0.15805020928382874`", ",", 
    RowBox[{"-", "0.22579523921012878`"}], ",", 
    RowBox[{"-", "0.47935327887535095`"}], ",", 
    RowBox[{"-", "0.6765188574790955`"}], ",", "0.016724620014429092`", ",", 
    "0.9453138113021851`", ",", "0.3697268068790436`", ",", 
    "0.37976041436195374`", ",", 
    RowBox[{"-", "0.2046014815568924`"}], ",", 
    RowBox[{"-", "0.10614736378192902`"}], ",", 
    RowBox[{"-", "0.37675660848617554`"}], ",", 
    RowBox[{"-", "0.18930402398109436`"}], ",", 
    RowBox[{"-", "0.23976421356201172`"}], ",", "0.00838769506663084`", ",", 
    "0.27116042375564575`", ",", 
    RowBox[{"-", "0.24826931953430176`"}], ",", "0.2423955500125885`", ",", 
    RowBox[{"-", "0.651577353477478`"}], ",", 
    RowBox[{"-", "0.10793765634298325`"}], ",", 
    RowBox[{"-", "0.29412829875946045`"}], ",", 
    RowBox[{"-", "0.17536155879497528`"}], ",", "0.04484134167432785`", ",", 
    RowBox[{"-", "0.00009270010923501104`"}], ",", 
    RowBox[{"-", "0.10005199909210205`"}], ",", "0.051791492849588394`", ",", 
    "0.42853060364723206`", ",", 
    RowBox[{"-", "0.1951841413974762`"}], ",", 
    RowBox[{"-", "0.3701923191547394`"}], ",", 
    RowBox[{"-", "0.6410254836082458`"}], ",", "0.6456980109214783`", ",", 
    RowBox[{"-", "0.3364613354206085`"}], ",", "0.38487371802330017`", ",", 
    RowBox[{"-", "0.1338377445936203`"}], ",", "0.04458605498075485`", ",", 
    "0.6111125946044922`", ",", 
    RowBox[{"-", "0.23333896696567535`"}], ",", 
    RowBox[{"-", "0.5110452175140381`"}], ",", 
    RowBox[{"-", "0.3247017562389374`"}], ",", 
    RowBox[{"-", "0.03888281434774399`"}], ",", "0.22601595520973206`", ",", 
    RowBox[{"-", "0.26721426844596863`"}], ",", 
    RowBox[{"-", "0.714155375957489`"}], ",", 
    RowBox[{"-", "0.09921467304229736`"}], ",", 
    RowBox[{"-", "0.6614468097686768`"}], ",", 
    RowBox[{"-", "0.06701818108558655`"}], ",", "0.6771184802055359`", ",", 
    "0.4456636905670166`", ",", 
    RowBox[{"-", "0.6144254207611084`"}], ",", 
    RowBox[{"-", "0.7404314875602722`"}], ",", 
    RowBox[{"-", "0.36977776885032654`"}], ",", "0.31467586755752563`", ",", 
    "0.5863282680511475`", ",", 
    RowBox[{"-", "0.6999736428260803`"}], ",", 
    RowBox[{"-", "0.8404735922813416`"}], ",", "0.7723726630210876`", ",", 
    "0.6069249510765076`", ",", "0.8201822638511658`", ",", 
    "0.6000967025756836`", ",", 
    RowBox[{"-", "0.0004764794430229813`"}], ",", 
    RowBox[{"-", "0.6080315113067627`"}], ",", 
    RowBox[{"-", "0.011622083373367786`"}], ",", "0.8340273499488831`", ",", 
    "0.27373674511909485`", ",", 
    RowBox[{"-", "0.38763460516929626`"}], ",", "0.2885037660598755`", ",", 
    RowBox[{"-", "0.6311266422271729`"}], ",", 
    RowBox[{"-", "0.057871732860803604`"}], ",", 
    RowBox[{"-", "0.4430336058139801`"}], ",", 
    RowBox[{"-", "0.6897637248039246`"}], ",", 
    RowBox[{"-", "0.06219923123717308`"}], ",", 
    RowBox[{"-", "0.24623779952526093`"}], ",", 
    RowBox[{"-", "0.35231831669807434`"}], ",", "0.1453203707933426`", ",", 
    "0.4018494486808777`", ",", "0.022907240316271782`", ",", 
    "0.4801386594772339`", ",", "0.3594512343406677`", ",", 
    "0.4437909722328186`", ",", 
    RowBox[{"-", "0.003423185320571065`"}], ",", "0.515313446521759`", ",", 
    "0.29359152913093567`", ",", 
    RowBox[{"-", "0.4385460317134857`"}], ",", 
    RowBox[{"-", "0.1257065385580063`"}], ",", "0.2507967948913574`", ",", 
    RowBox[{"-", "0.1338377147912979`"}], ",", "0.004397124983370304`", ",", 
    RowBox[{"-", "0.42842406034469604`"}], ",", "0.527316689491272`", ",", 
    RowBox[{"-", "0.45867931842803955`"}], ",", "0.6507025361061096`", ",", 
    "0.4387263059616089`", ",", "0.9076009392738342`", ",", 
    RowBox[{"-", "0.5204775929450989`"}], ",", 
    RowBox[{"-", "0.1609598845243454`"}], ",", "0.16239717602729797`", ",", 
    "0.6280298233032227`", ",", "0.7443671822547913`", ",", 
    RowBox[{"-", "0.6171703338623047`"}], ",", 
    RowBox[{"-", "0.18278038501739502`"}], ",", 
    RowBox[{"-", "0.49923959374427795`"}], ",", 
    RowBox[{"-", "0.5768304467201233`"}], ",", 
    RowBox[{"-", "0.20258963108062744`"}], ",", "0.11569053679704666`", ",", 
    "0.04627267271280289`", ",", "0.5695089101791382`", ",", 
    RowBox[{"-", "0.5652768611907959`"}], ",", "0.27899834513664246`", ",", 
    RowBox[{"-", "0.46982571482658386`"}], ",", "0.18459820747375488`", ",", 
    RowBox[{"-", "0.6821020245552063`"}], ",", "0.601060688495636`", ",", 
    RowBox[{"-", "0.38627997040748596`"}], ",", "0.20333877205848694`", ",", 
    "0.2080843597650528`", ",", 
    RowBox[{"-", "0.4916669428348541`"}], ",", 
    RowBox[{"-", "0.09924273192882538`"}], ",", "0.057945504784584045`", ",", 
    "0.15097180008888245`", ",", 
    RowBox[{"-", "0.005493674427270889`"}], ",", "0.6669026017189026`", ",", 
    "0.06387223303318024`", ",", "0.21548423171043396`", ",", 
    RowBox[{"-", "0.2506854236125946`"}], ",", "0.24343377351760864`", ",", 
    RowBox[{"-", "0.626753032207489`"}], ",", 
    RowBox[{"-", "0.7598717212677002`"}], ",", "0.26855412125587463`", ",", 
    RowBox[{"-", "0.04445524886250496`"}], ",", 
    RowBox[{"-", "0.2816797196865082`"}], ",", "0.9136367440223694`", ",", 
    RowBox[{"-", "0.040819983929395676`"}], ",", 
    RowBox[{"-", "0.33918991684913635`"}], ",", "0.6028576493263245`", ",", 
    RowBox[{"-", "0.27430951595306396`"}], ",", "0.5929235219955444`", ",", 
    "0.24104245007038116`", ",", 
    RowBox[{"-", "0.45743146538734436`"}], ",", 
    RowBox[{"-", "0.01694522798061371`"}], ",", "0.172526553273201`", ",", 
    "0.3410452604293823`", ",", 
    RowBox[{"-", "0.05337132140994072`"}], ",", 
    RowBox[{"-", "0.03597769886255264`"}], ",", 
    RowBox[{"-", "0.4179210364818573`"}], ",", "0.02966604381799698`", ",", 
    "0.45602548122406006`", ",", "0.791696310043335`", ",", 
    "0.09087104350328445`", ",", "0.46061402559280396`", ",", 
    "0.45809468626976013`", ",", 
    RowBox[{"-", "0.26914146542549133`"}], ",", "0.25590333342552185`", ",", 
    "0.24507662653923035`", ",", "0.5829870104789734`", ",", 
    RowBox[{"-", "0.369789183139801`"}], ",", "0.6106560230255127`", ",", 
    "0.2160348892211914`", ",", 
    RowBox[{"-", "0.5962019562721252`"}], ",", 
    RowBox[{"-", "0.6470853090286255`"}], ",", 
    RowBox[{"-", "0.2936224341392517`"}], ",", 
    RowBox[{"-", "0.09476197510957718`"}], ",", 
    RowBox[{"-", "0.30879607796669006`"}], ",", 
    RowBox[{"-", "0.6818532943725586`"}], ",", "0.1969187706708908`", ",", 
    "0.5204110145568848`", ",", 
    RowBox[{"-", "0.25413092970848083`"}], ",", "0.10203805565834045`", ",", 
    "0.36088094115257263`", ",", 
    RowBox[{"-", "0.32305073738098145`"}], ",", "0.11571148037910461`", ",", 
    "0.17291709780693054`", ",", "0.6048101186752319`", ",", 
    "0.2913510501384735`", ",", 
    RowBox[{"-", "0.4542836546897888`"}], ",", 
    RowBox[{"-", "0.48679161071777344`"}], ",", "0.3591417074203491`", ",", 
    "0.11823329329490662`", ",", 
    RowBox[{"-", "0.6589837074279785`"}], ",", 
    RowBox[{"-", "0.249145969748497`"}], ",", 
    RowBox[{"-", "0.5271969437599182`"}], ",", "0.6421319246292114`", ",", 
    "0.758126437664032`", ",", 
    RowBox[{"-", "0.33928385376930237`"}], ",", "0.22836469113826752`", ",", 
    RowBox[{"-", "0.3463298976421356`"}], ",", "0.2957440912723541`", ",", 
    "0.4695485234260559`", ",", 
    RowBox[{"-", "0.20307984948158264`"}], ",", "0.04677199944853783`", ",", 
    "0.8187083005905151`", ",", 
    RowBox[{"-", "0.48880335688591003`"}], ",", "0.41498568654060364`", ",", 
    RowBox[{"-", "0.4507559835910797`"}], ",", 
    RowBox[{"-", "0.1415446251630783`"}], ",", "0.25151002407073975`", ",", 
    RowBox[{"-", "0.2527390122413635`"}], ",", "0.7820354700088501`", ",", 
    RowBox[{"-", "0.6361509561538696`"}], ",", "0.37210503220558167`", ",", 
    "0.3549864888191223`", ",", 
    RowBox[{"-", "0.8843034505844116`"}], ",", "0.12391107529401779`", ",", 
    RowBox[{"-", "0.0945785865187645`"}], ",", 
    RowBox[{"-", "0.24235576391220093`"}], ",", 
    RowBox[{"-", "0.6742563843727112`"}], ",", 
    RowBox[{"-", "0.6103878021240234`"}], ",", 
    RowBox[{"-", "0.1767290234565735`"}], ",", 
    RowBox[{"-", "0.6686544418334961`"}], ",", 
    RowBox[{"-", "0.2788518965244293`"}], ",", "0.5080500245094299`", ",", 
    RowBox[{"-", "0.33920618891716003`"}], ",", "0.09348949790000916`", ",", 
    "0.3769150972366333`", ",", 
    RowBox[{"-", "0.06161542981863022`"}], ",", "0.11616126447916031`", ",", 
    RowBox[{"-", "0.6876237988471985`"}], ",", 
    RowBox[{"-", "0.2577521800994873`"}], ",", "0.18795423209667206`", ",", 
    RowBox[{"-", "0.06962346285581589`"}], ",", 
    RowBox[{"-", "0.23427917063236237`"}], ",", "0.23471049964427948`", ",", 
    "0.2769906520843506`", ",", "0.4083532989025116`", ",", 
    RowBox[{"-", "0.6020585298538208`"}], ",", 
    RowBox[{"-", "0.31559446454048157`"}], ",", 
    RowBox[{"-", "0.4414829611778259`"}], ",", "0.09262457489967346`", ",", 
    RowBox[{"-", "0.7760383486747742`"}], ",", "0.7524669170379639`", ",", 
    RowBox[{"-", "0.3478417992591858`"}], ",", 
    RowBox[{"-", "0.29180702567100525`"}], ",", 
    RowBox[{"-", "0.13648496568202972`"}], ",", 
    RowBox[{"-", "0.5635176301002502`"}], ",", "0.007653352804481983`", ",", 
    "0.6649829745292664`", ",", 
    RowBox[{"-", "0.18469174206256866`"}], ",", "0.08631432056427002`", ",", 
    "0.5965715646743774`", ",", 
    RowBox[{"-", "0.6580386757850647`"}], ",", "0.26182040572166443`", ",", 
    RowBox[{"-", "0.3758372962474823`"}], ",", 
    RowBox[{"-", "0.4782538115978241`"}], ",", "0.39715370535850525`", ",", 
    RowBox[{"-", "0.17592200636863708`"}], ",", "0.26041316986083984`", ",", 
    "0.1789344996213913`", ",", 
    RowBox[{"-", "0.015761200338602066`"}], ",", "0.033932168036699295`", ",", 
    RowBox[{"-", "0.0642278790473938`"}], ",", 
    RowBox[{"-", "0.1205693855881691`"}], ",", "0.3401978313922882`", ",", 
    "0.3001916706562042`", ",", 
    RowBox[{"-", "0.35585516691207886`"}], ",", 
    RowBox[{"-", "0.39305010437965393`"}], ",", 
    RowBox[{"-", "0.8858796954154968`"}], ",", 
    RowBox[{"-", "0.08075036108493805`"}], ",", 
    RowBox[{"-", "0.6838212609291077`"}], ",", "0.577164888381958`", ",", 
    RowBox[{"-", "0.8819602727890015`"}], ",", 
    RowBox[{"-", "0.4283129870891571`"}], ",", 
    RowBox[{"-", "0.19757963716983795`"}], ",", 
    RowBox[{"-", "0.528552234172821`"}], ",", "0.2917619049549103`", ",", 
    "0.7371471524238586`", ",", "0.14874130487442017`", ",", 
    RowBox[{"-", "0.036739204078912735`"}], ",", 
    RowBox[{"-", "0.13302111625671387`"}], ",", 
    RowBox[{"-", "0.6939855217933655`"}], ",", "0.2932024896144867`", ",", 
    RowBox[{"-", "0.4599801003932953`"}], ",", "0.5581986308097839`", ",", 
    RowBox[{"-", "0.18237341940402985`"}], ",", "0.047170162200927734`", ",", 
    "0.27973654866218567`", ",", 
    RowBox[{"-", "0.2687297761440277`"}], ",", 
    RowBox[{"-", "0.1611197292804718`"}], ",", "0.7930592894554138`", ",", 
    RowBox[{"-", "0.7592270970344543`"}], ",", 
    RowBox[{"-", "0.660974383354187`"}], ",", 
    RowBox[{"-", "0.060325175523757935`"}], ",", "0.29259103536605835`", ",", 
    "0.8381397724151611`", ",", "0.06976781040430069`", ",", 
    "0.29654842615127563`", ",", "0.6822100281715393`", ",", 
    RowBox[{"-", "0.7222291231155396`"}], ",", 
    RowBox[{"-", "0.14917603135108948`"}], ",", 
    RowBox[{"-", "0.903419017791748`"}], ",", 
    RowBox[{"-", "0.49295130372047424`"}], ",", "0.3991684913635254`", ",", 
    "0.40683233737945557`", ",", 
    RowBox[{"-", "0.2966040372848511`"}], ",", "0.2695227265357971`", ",", 
    RowBox[{"-", "0.36836114525794983`"}], ",", 
    RowBox[{"-", "0.34452807903289795`"}], ",", 
    RowBox[{"-", "0.2524365186691284`"}], ",", "0.9225166440010071`", ",", 
    "0.42579615116119385`", ",", 
    RowBox[{"-", "0.23096536099910736`"}], ",", 
    RowBox[{"-", "0.23022176325321198`"}], ",", "0.034273188561201096`", ",", 
    RowBox[{"-", "0.55837482213974`"}], ",", 
    RowBox[{"-", "0.17408868670463562`"}], ",", "0.020257508382201195`", ",", 
    RowBox[{"-", "0.09512806683778763`"}], ",", 
    RowBox[{"-", "0.2429189532995224`"}], ",", "0.6184204816818237`", ",", 
    RowBox[{"-", "0.6525313258171082`"}], ",", "0.5298067331314087`", ",", 
    "0.6405975222587585`", ",", 
    RowBox[{"-", "0.6931500434875488`"}], ",", "0.32876724004745483`", ",", 
    RowBox[{"-", "0.7662444114685059`"}], ",", "0.17027747631072998`", ",", 
    RowBox[{"-", "0.13933545351028442`"}], ",", "0.3467482328414917`", ",", 
    "0.29760804772377014`", ",", "0.500548779964447`", ",", 
    "0.1461716890335083`", ",", "0.0668189525604248`", ",", 
    RowBox[{"-", "0.31181785464286804`"}], ",", 
    RowBox[{"-", "0.3561006784439087`"}], ",", "0.45259997248649597`", ",", 
    "0.1090676560997963`", ",", "0.8847025632858276`", ",", 
    "0.7184687852859497`", ",", "0.3700718879699707`", ",", 
    RowBox[{"-", "0.39098483324050903`"}], ",", "0.5639559030532837`", ",", 
    RowBox[{"-", "0.21772699058055878`"}], ",", 
    RowBox[{"-", "0.6034682989120483`"}], ",", "0.1790945827960968`", ",", 
    "0.11723057925701141`", ",", "0.248109370470047`", ",", 
    "0.4684343934059143`", ",", "0.1871151328086853`", ",", 
    "0.16246014833450317`", ",", 
    RowBox[{"-", "0.07578734308481216`"}], ",", "0.2694956064224243`", ",", 
    "0.008698510937392712`", ",", 
    RowBox[{"-", "0.5349038243293762`"}], ",", "0.4063243567943573`", ",", 
    RowBox[{"-", "0.7129248976707458`"}], ",", 
    RowBox[{"-", "0.3794621229171753`"}], ",", "0.5261600017547607`", ",", 
    "0.11130933463573456`", ",", 
    RowBox[{"-", "0.6756464242935181`"}], ",", "0.4025938808917999`", ",", 
    RowBox[{"-", "0.12210917472839355`"}], ",", 
    RowBox[{"-", "0.011305936612188816`"}], ",", "0.07500546425580978`", ",", 
    RowBox[{"-", "0.33856138586997986`"}], ",", "0.4055437445640564`", ",", 
    RowBox[{"-", "0.09322082996368408`"}], ",", 
    RowBox[{"-", "0.6362344622612`"}], ",", "0.49199816584587097`", ",", 
    "0.11054543405771255`", ",", 
    RowBox[{"-", "0.2639196515083313`"}], ",", "0.16519320011138916`", ",", 
    "0.27617526054382324`", ",", 
    RowBox[{"-", "0.30051353573799133`"}], ",", "0.5881439447402954`", ",", 
    "0.0035147073213011026`", ",", 
    RowBox[{"-", "0.7850476503372192`"}], ",", 
    RowBox[{"-", "0.2049247920513153`"}], ",", "0.601557731628418`", ",", 
    "0.553866446018219`", ",", "0.03205340355634689`", ",", 
    "0.1275864541530609`", ",", 
    RowBox[{"-", "0.7044795751571655`"}], ",", "0.4033750593662262`", ",", 
    RowBox[{"-", "0.12790215015411377`"}], ",", "0.5242803692817688`", ",", 
    "0.1725340485572815`", ",", 
    RowBox[{"-", "0.6751900911331177`"}], ",", 
    RowBox[{"-", "0.5352931022644043`"}], ",", "0.44248464703559875`", ",", 
    RowBox[{"-", "0.07023441791534424`"}], ",", "0.6817424297332764`", ",", 
    "0.04604487121105194`", ",", "0.6762598752975464`", ",", 
    RowBox[{"-", "0.5141015648841858`"}], ",", 
    RowBox[{"-", "0.26933014392852783`"}], ",", 
    RowBox[{"-", "0.1487157940864563`"}], ",", "0.8396336436271667`", ",", 
    "0.30456364154815674`", ",", 
    RowBox[{"-", "0.2659071981906891`"}], ",", "0.34988921880722046`", ",", 
    "0.03168433532118797`", ",", "0.005244661122560501`", ",", 
    RowBox[{"-", "0.6669905185699463`"}], ",", 
    RowBox[{"-", "0.3290196359157562`"}], ",", "0.5252034068107605`", ",", 
    RowBox[{"-", "0.1168021410703659`"}], ",", "0.7600236535072327`", ",", 
    RowBox[{"-", "0.4011439383029938`"}], ",", 
    RowBox[{"-", "0.0882500484585762`"}], ",", 
    RowBox[{"-", "0.38436266779899597`"}], ",", 
    RowBox[{"-", "0.7938480377197266`"}], ",", 
    RowBox[{"-", "0.23930774629116058`"}], ",", "0.17621876299381256`", ",", 
    "0.31945985555648804`", ",", "0.5726764798164368`", ",", 
    "0.1480344980955124`", ",", "0.2049500048160553`", ",", 
    "0.771905779838562`", ",", 
    RowBox[{"-", "0.47491970658302307`"}], ",", 
    RowBox[{"-", "0.046505406498909`"}], ",", 
    RowBox[{"-", "0.37237927317619324`"}], ",", 
    RowBox[{"-", "0.30059814453125`"}], ",", 
    RowBox[{"-", "0.0395025834441185`"}], ",", 
    RowBox[{"-", "0.38723209500312805`"}], ",", "0.11615508794784546`", ",", 
    RowBox[{"-", "0.39340415596961975`"}], ",", 
    RowBox[{"-", "0.16677385568618774`"}], ",", 
    RowBox[{"-", "0.4868246614933014`"}], ",", 
    RowBox[{"-", "0.4303623139858246`"}], ",", "0.23242881894111633`", ",", 
    RowBox[{"-", "0.16634516417980194`"}], ",", 
    RowBox[{"-", "0.08548786491155624`"}], ",", "0.056731197983026505`", ",", 
    RowBox[{"-", "0.41402527689933777`"}], ",", 
    RowBox[{"-", "0.22940470278263092`"}], ",", 
    RowBox[{"-", "0.004472150932997465`"}], ",", "0.31064656376838684`", ",", 
    RowBox[{"-", "0.25698035955429077`"}], ",", "0.6246638894081116`", ",", 
    "0.5318982005119324`", ",", 
    RowBox[{"-", "0.4074142277240753`"}], ",", "0.5520204901695251`", ",", 
    "0.007632002234458923`", ",", 
    RowBox[{"-", "0.14648611843585968`"}], ",", 
    RowBox[{"-", "0.49081212282180786`"}], ",", "0.8313730955123901`", ",", 
    RowBox[{"-", "0.4970259368419647`"}], ",", 
    RowBox[{"-", "0.46177807450294495`"}], ",", 
    RowBox[{"-", "0.2810898721218109`"}], ",", "0.4906974732875824`", ",", 
    "0.6487441658973694`", ",", 
    RowBox[{"-", "0.8144760727882385`"}], ",", "0.3805851638317108`", ",", 
    RowBox[{"-", "0.24878086149692535`"}], ",", 
    RowBox[{"-", "0.21170136332511902`"}], ",", 
    RowBox[{"-", "0.17103134095668793`"}], ",", "0.17325375974178314`", ",", 
    RowBox[{"-", "0.09649970382452011`"}], ",", "0.43680277466773987`", ",", 
    RowBox[{"-", "0.3118918538093567`"}], ",", 
    RowBox[{"-", "0.1602710634469986`"}], ",", "0.684726357460022`", ",", 
    RowBox[{"-", "0.7175136804580688`"}], ",", 
    RowBox[{"-", "0.5729024410247803`"}], ",", 
    RowBox[{"-", "0.10336767137050629`"}], ",", 
    RowBox[{"-", "0.7721395492553711`"}], ",", "0.27153176069259644`", ",", 
    RowBox[{"-", "0.4759797155857086`"}], ",", 
    RowBox[{"-", "0.5959433913230896`"}], ",", "0.2780316472053528`", ",", 
    "0.12124709784984589`", ",", 
    RowBox[{"-", "0.2690913677215576`"}], ",", 
    RowBox[{"-", "0.35185858607292175`"}], ",", "0.2382153570652008`", ",", 
    "0.36605405807495117`", ",", "0.08645177632570267`", ",", 
    RowBox[{"-", "0.0239787008613348`"}], ",", 
    RowBox[{"-", "0.3302101492881775`"}], ",", "0.8265398144721985`", ",", 
    RowBox[{"-", "0.5067098140716553`"}], ",", "0.8470888137817383`", ",", 
    "0.3449518382549286`", ",", "0.5679528117179871`", ",", 
    RowBox[{"-", "0.4855829179286957`"}], ",", 
    RowBox[{"-", "0.2142648994922638`"}], ",", "0.5478184223175049`", ",", 
    "0.12531337141990662`", ",", 
    RowBox[{"-", "0.5810956358909607`"}], ",", 
    RowBox[{"-", "0.37883320450782776`"}], ",", "0.7716627717018127`", ",", 
    RowBox[{"-", "0.42582884430885315`"}], ",", 
    RowBox[{"-", "0.21068213880062103`"}], ",", "0.33739498257637024`", ",", 
    RowBox[{"-", "0.05082879960536957`"}], ",", 
    RowBox[{"-", "0.5829143524169922`"}], ",", "0.7571738362312317`", ",", 
    "0.7636680006980896`", ",", "0.04223853722214699`", ",", 
    "0.5034552812576294`", ",", 
    RowBox[{"-", "0.4683131277561188`"}], ",", "0.14458712935447693`", ",", 
    RowBox[{"-", "0.6169304251670837`"}], ",", 
    RowBox[{"-", "0.4523906409740448`"}], ",", "0.5788801908493042`", ",", 
    RowBox[{"-", "0.3000839948654175`"}], ",", 
    RowBox[{"-", "0.2132112681865692`"}], ",", 
    RowBox[{"-", "0.2868340313434601`"}], ",", 
    RowBox[{"-", "0.4100514054298401`"}], ",", "0.15731893479824066`", ",", 
    "0.5815225839614868`", ",", 
    RowBox[{"-", "0.8671642541885376`"}], ",", "0.37028536200523376`", ",", 
    "0.059107352048158646`", ",", "0.5201857089996338`", ",", 
    "0.4045669734477997`", ",", 
    RowBox[{"-", "0.6409047842025757`"}], ",", "0.2231084257364273`", ",", 
    RowBox[{"-", "0.17763015627861023`"}], ",", "0.08840913325548172`", ",", 
    "0.3917357921600342`", ",", "0.029132433235645294`", ",", 
    RowBox[{"-", "0.38701027631759644`"}], ",", "0.18685491383075714`", ",", 
    RowBox[{"-", "0.5897173285484314`"}], ",", "0.29444119334220886`", ",", 
    RowBox[{"-", "0.5052083134651184`"}], ",", "0.042299382388591766`", ",", 
    RowBox[{"-", "0.2382969707250595`"}], ",", 
    RowBox[{"-", "0.07644618302583694`"}], ",", "0.2124328315258026`", ",", 
    RowBox[{"-", "0.3904770016670227`"}], ",", "0.015058688819408417`", ",", 
    RowBox[{"-", "0.07354174554347992`"}], ",", "0.6263636946678162`", ",", 
    RowBox[{"-", "0.08328832685947418`"}], ",", 
    RowBox[{"-", "0.28523311018943787`"}], ",", "0.7864222526550293`", ",", 
    RowBox[{"-", "0.37586480379104614`"}], ",", "0.5880106687545776`", ",", 
    "0.5530522465705872`", ",", "0.6873838305473328`", ",", 
    "0.08474370092153549`", ",", "0.019354019314050674`", ",", 
    "0.5995085835456848`", ",", "0.6978434920310974`", ",", 
    "0.24599650502204895`", ",", 
    RowBox[{"-", "0.7563007473945618`"}], ",", "0.2880345582962036`", ",", 
    "0.6233782172203064`", ",", 
    RowBox[{"-", "0.45702478289604187`"}], ",", 
    RowBox[{"-", "0.47391992807388306`"}], ",", "0.37605494260787964`", ",", 
    "0.21874666213989258`", ",", "0.6555517911911011`", ",", 
    "0.8175562620162964`", ",", "0.7180326581001282`", ",", 
    RowBox[{"-", "0.6844039559364319`"}], ",", 
    RowBox[{"-", "0.05307159572839737`"}], ",", 
    RowBox[{"-", "0.5170698761940002`"}], ",", "0.36396706104278564`", ",", 
    RowBox[{"-", "0.44672760367393494`"}], ",", "0.19359055161476135`", ",", 
    "0.43042054772377014`", ",", "0.6481549739837646`", ",", 
    RowBox[{"-", "0.39844149351119995`"}], ",", "0.38398274779319763`", ",", 
    "0.07708615064620972`", ",", "0.23044337332248688`", ",", 
    RowBox[{"-", "0.9184812903404236`"}], ",", 
    RowBox[{"-", "0.6266483664512634`"}], ",", "0.21387386322021484`", ",", 
    "0.07828843593597412`", ",", 
    RowBox[{"-", "0.07485303282737732`"}], ",", "0.7490774393081665`", ",", 
    RowBox[{"-", "0.5556839108467102`"}], ",", 
    RowBox[{"-", "0.4756909906864166`"}], ",", 
    RowBox[{"-", "0.5558727979660034`"}], ",", 
    RowBox[{"-", "0.14949706196784973`"}], ",", "0.057175878435373306`", ",", 
    "0.16273446381092072`", ",", 
    RowBox[{"-", "0.6331642270088196`"}], ",", 
    RowBox[{"-", "0.07149569690227509`"}], ",", 
    RowBox[{"-", "0.16120411455631256`"}], ",", "0.137843519449234`", ",", 
    "0.4219765365123749`", ",", 
    RowBox[{"-", "0.20397332310676575`"}], ",", 
    RowBox[{"-", "0.2921379804611206`"}], ",", 
    RowBox[{"-", "0.19453515112400055`"}], ",", "0.1627209335565567`", ",", 
    RowBox[{"-", "0.21363718807697296`"}], ",", "0.5522159934043884`", ",", 
    RowBox[{"-", "0.8757845759391785`"}], ",", "0.41630592942237854`", ",", 
    "0.8473379611968994`", ",", 
    RowBox[{"-", "0.2909218668937683`"}], ",", "0.2825716733932495`", ",", 
    RowBox[{"-", "0.7753733992576599`"}], ",", "0.7390487194061279`", ",", 
    "0.605749785900116`", ",", 
    RowBox[{"-", "0.45451799035072327`"}], ",", 
    RowBox[{"-", "0.8185968995094299`"}], ",", 
    RowBox[{"-", "0.4095870852470398`"}], ",", "0.46899452805519104`", ",", 
    RowBox[{"-", "0.5157379508018494`"}], ",", "0.7091897130012512`", ",", 
    "0.11514430493116379`", ",", "0.39173564314842224`", ",", 
    "0.31414535641670227`", ",", "0.5484020709991455`", ",", 
    RowBox[{"-", "0.10543441027402878`"}], ",", "0.13217563927173615`", ",", 
    "0.7596920132637024`", ",", "0.3367213010787964`", ",", 
    RowBox[{"-", "0.3680843412876129`"}], ",", "0.15984871983528137`", ",", 
    "0.15619708597660065`", ",", "0.1949213743209839`", ",", 
    RowBox[{"-", "0.7163589000701904`"}], ",", "0.37513431906700134`", ",", 
    "0.08710411936044693`", ",", 
    RowBox[{"-", "0.6684053540229797`"}], ",", "0.267890065908432`", ",", 
    RowBox[{"-", "0.7112156748771667`"}], ",", 
    RowBox[{"-", "0.4349103569984436`"}], ",", 
    RowBox[{"-", "0.28127390146255493`"}], ",", 
    RowBox[{"-", "0.486174613237381`"}], ",", 
    RowBox[{"-", "0.07494375854730606`"}], ",", 
    RowBox[{"-", "0.11695589870214462`"}], ",", 
    RowBox[{"-", "0.2843545973300934`"}], ",", 
    RowBox[{"-", "0.8480941653251648`"}], ",", 
    RowBox[{"-", "0.5171367526054382`"}], ",", 
    RowBox[{"-", "0.9130285382270813`"}], ",", "0.2457721084356308`", ",", 
    "0.6447847485542297`", ",", "0.596790075302124`", ",", 
    "0.22563377022743225`", ",", 
    RowBox[{"-", "0.2568057179450989`"}], ",", "0.1944342851638794`", ",", 
    "0.3924168050289154`", ",", 
    RowBox[{"-", "0.09993591159582138`"}], ",", 
    RowBox[{"-", "0.5407223701477051`"}], ",", "0.17852279543876648`", ",", 
    RowBox[{"-", "0.09026790410280228`"}], ",", "0.6016600728034973`", ",", 
    "0.491367369890213`", ",", 
    RowBox[{"-", "0.8996298909187317`"}], ",", "0.7846274375915527`", ",", 
    "0.4996279776096344`", ",", "0.15921303629875183`", ",", 
    RowBox[{"-", "0.5340288877487183`"}], ",", 
    RowBox[{"-", "0.18652555346488953`"}], ",", "0.7491416335105896`", ",", 
    RowBox[{"-", "0.7727423906326294`"}], ",", 
    RowBox[{"-", "0.5590652823448181`"}], ",", "0.5473202466964722`", ",", 
    "0.0701066330075264`", ",", "0.4016243517398834`", ",", 
    "0.6871559619903564`", ",", "0.26635444164276123`", ",", 
    RowBox[{"-", "0.3494260907173157`"}], ",", "0.24822834134101868`", ",", 
    RowBox[{"-", "0.5286633372306824`"}], ",", 
    RowBox[{"-", "0.6790585517883301`"}], ",", "0.23657234013080597`", ",", 
    "0.2769094407558441`", ",", "0.23464561998844147`", ",", 
    "0.0732932910323143`", ",", "0.7424939274787903`", ",", 
    "0.4760906994342804`", ",", 
    RowBox[{"-", "0.11436738073825836`"}], ",", "0.5290094614028931`", ",", 
    "0.11346769332885742`", ",", 
    RowBox[{"-", "0.6767847537994385`"}], ",", 
    RowBox[{"-", "0.4222690463066101`"}], ",", 
    RowBox[{"-", "0.35853201150894165`"}], ",", 
    RowBox[{"-", "0.7831525802612305`"}], ",", 
    RowBox[{"-", "0.043806545436382294`"}], ",", 
    RowBox[{"-", "0.8721920847892761`"}], ",", 
    RowBox[{"-", "0.5320592522621155`"}], ",", 
    RowBox[{"-", "0.2287294864654541`"}], ",", 
    RowBox[{"-", "0.10465086996555328`"}], ",", "0.4931230843067169`", ",", 
    "0.6025594472885132`", ",", "0.08877261728048325`", ",", 
    RowBox[{"-", "0.7386156916618347`"}], ",", 
    RowBox[{"-", "0.5366941690444946`"}], ",", 
    RowBox[{"-", "0.4018615484237671`"}], ",", 
    RowBox[{"-", "0.6481517553329468`"}], ",", "0.0006296782521530986`", ",", 
    RowBox[{"-", "0.24779298901557922`"}], ",", "0.6243602633476257`", ",", 
    RowBox[{"-", "0.31828466057777405`"}], ",", 
    RowBox[{"-", "0.8552056550979614`"}], ",", 
    RowBox[{"-", "0.38313028216362`"}], ",", "0.04091358184814453`", ",", 
    "0.48200592398643494`", ",", 
    RowBox[{"-", "0.21526704728603363`"}], ",", 
    RowBox[{"-", "0.902624249458313`"}], ",", 
    RowBox[{"-", "0.02785477228462696`"}], ",", "0.10322139412164688`", ",", 
    "0.13151152431964874`", ",", 
    RowBox[{"-", "0.5341617465019226`"}], ",", "0.5079475045204163`", ",", 
    RowBox[{"-", "0.07580675184726715`"}], ",", 
    RowBox[{"-", "0.10240399837493896`"}], ",", "0.29667022824287415`", ",", 
    RowBox[{"-", "0.5538026690483093`"}], ",", 
    RowBox[{"-", "0.571840763092041`"}], ",", 
    RowBox[{"-", "0.032263390719890594`"}], ",", "0.34248867630958557`", ",", 
    "0.660834789276123`", ",", 
    RowBox[{"-", "0.256743460893631`"}], ",", 
    RowBox[{"-", "0.24113598465919495`"}], ",", 
    RowBox[{"-", "0.7516781687736511`"}], ",", 
    RowBox[{"-", "0.31381523609161377`"}], ",", 
    RowBox[{"-", "0.2587483823299408`"}], ",", 
    RowBox[{"-", "0.42257043719291687`"}], ",", 
    RowBox[{"-", "0.0907716155052185`"}], ",", 
    RowBox[{"-", "0.07282286882400513`"}], ",", "0.11923719197511673`", ",", 
    RowBox[{"-", "0.4943457543849945`"}], ",", 
    RowBox[{"-", "0.36359137296676636`"}], ",", 
    RowBox[{"-", "0.48533448576927185`"}], ",", "0.28615906834602356`", ",", 
    "0.7300304770469666`", ",", "0.1591675579547882`", ",", 
    RowBox[{"-", "0.5497615337371826`"}], ",", "0.4480096697807312`", ",", 
    "0.5785125494003296`", ",", "0.28454235196113586`", ",", 
    RowBox[{"-", "0.3373072147369385`"}], ",", 
    RowBox[{"-", "0.658204972743988`"}], ",", 
    RowBox[{"-", "0.15476498007774353`"}], ",", "0.11744751781225204`", ",", 
    "0.0720236599445343`", ",", "0.22826386988162994`", ",", 
    "0.3932599723339081`", ",", "0.09531504660844803`", ",", 
    "0.5900093913078308`", ",", "0.607414722442627`", ",", 
    "0.17065048217773438`", ",", "0.20511895418167114`", ",", 
    "0.2598958909511566`", ",", "0.13177089393138885`", ",", 
    "0.32254067063331604`", ",", 
    RowBox[{"-", "0.09864918887615204`"}], ",", 
    RowBox[{"-", "0.6291831135749817`"}], ",", "0.5066846013069153`", ",", 
    RowBox[{"-", "0.8166782259941101`"}], ",", 
    RowBox[{"-", "0.11121747642755508`"}], ",", 
    RowBox[{"-", "0.36646008491516113`"}], ",", 
    RowBox[{"-", "0.6000258922576904`"}], ",", "0.8329029083251953`", ",", 
    "0.49221789836883545`", ",", 
    RowBox[{"-", "0.44597235321998596`"}], ",", 
    RowBox[{"-", "0.6737632751464844`"}], ",", 
    RowBox[{"-", "0.8218211531639099`"}], ",", "0.41200554370880127`", ",", 
    "0.18402256071567535`", ",", "0.3982252776622772`", ",", 
    "0.811536967754364`", ",", 
    RowBox[{"-", "0.22929057478904724`"}], ",", 
    RowBox[{"-", "0.7282369136810303`"}], ",", 
    RowBox[{"-", "0.5526841878890991`"}], ",", 
    RowBox[{"-", "0.018650507554411888`"}], ",", 
    RowBox[{"-", "0.4860563576221466`"}], ",", 
    RowBox[{"-", "0.08751929551362991`"}], ",", "0.3757752776145935`", ",", 
    RowBox[{"-", "0.15729816257953644`"}], ",", 
    RowBox[{"-", "0.4873029887676239`"}], ",", "0.20851995050907135`", ",", 
    RowBox[{"-", "0.6608127355575562`"}], ",", "0.6894199848175049`", ",", 
    "0.5655734539031982`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.909881387441476*^9, 3.9098872314460545`*^9, {3.9100463784532676`*^9, 
   3.9100463970976615`*^9}, 3.910053244105692*^9, 3.9106503133128166`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"b040d5f8-3796-4291-a575-5a0c4bfa3699"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Protein Encoder", "Subsubsection",
 CellChangeTimes->{{3.9097757197333555`*^9, 
  3.909775721313589*^9}},ExpressionUUID->"056c8b1e-7d1d-43b2-b1c5-\
d8a162e5c725"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testProtInput", "=", 
   RowBox[{"ProteinTokenizer", "[", 
    RowBox[{
     RowBox[{
     "{", "\"\<M T V P D R S E I A G K W Y V V A L A S N T E F F L R E K D K \
M K M A M A R I S F L G E D E L K V S Y A V P K P N G C R K W E T T F K K T S \
D D G E V Y Y S E E A K K K V E V L D T D Y K S Y A V I Y A T R V K D G R T L \
H M M R L Y S R S P E V S P A A T A I F R K L A G E R N Y T D E M V A M L P R \
Q E E C T V D E V\>\"", "}"}], ",", "3200"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9097757332696505`*^9, 3.9097757346016903`*^9}, 
   3.9097933935421486`*^9, {3.90979377199771*^9, 3.9097937723083887`*^9}, {
   3.9097938396559987`*^9, 3.909793840278351*^9}, 3.909794548995319*^9, 
   3.9098813375443864`*^9, {3.9098815031375704`*^9, 3.9098815094822707`*^9}, 
   3.9098876315889535`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"b2f5d596-1292-4342-a6fc-f1adf7bf7582"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testProtOutput", "=", 
  RowBox[{"protEncoder", "[", "testProtInput", "]"}]}]], "Input",
 CellChangeTimes->{{3.9097936557160616`*^9, 3.909793703451147*^9}, {
  3.9097937422401056`*^9, 3.9097937432441645`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"044635c6-2d6b-439d-bb58-5456f4c09afe"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{"\"output\"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "0.009555280208587646`"}], ",", 
                    "0.03727555274963379`", ",", 
                    RowBox[{"-", "0.00484185665845871`"}], ",", 
                    RowBox[{"-", "0.2066931128501892`"}], ",", 
                    "0.12718141078948975`", ",", "0.004001306369900703`", ",", 
                    RowBox[{"-", "0.059334687888622284`"}], ",", 
                    "0.07797878980636597`", ",", 
                    RowBox[{"-", "0.022761046886444092`"}], ",", 
                    RowBox[{"-", "0.0232265442609787`"}], ",", 
                    RowBox[{"-", "0.14074411988258362`"}], ",", 
                    RowBox[{"-", "0.05574122816324234`"}], ",", 
                    "0.08982843160629272`", ",", "0.05222001671791077`", ",", 
                    "0.003286883234977722`", ",", "0.04523610323667526`", ",", 
                    RowBox[{"-", "0.06135321035981178`"}], ",", 
                    "0.09227689355611801`", ",", "0.08004019409418106`", ",", 
                    RowBox[{"-", "0.07707427442073822`"}], ",", 
                    "0.02865738235414028`", ",", "0.020402753725647926`", ",",
                     "0.0544903501868248`", ",", 
                    TemplateBox[{"978"}, "OutputSizeLimit`Skeleton"], ",", 
                    RowBox[{"-", "0.016589650884270668`"}], ",", 
                    "0.01454981043934822`", ",", 
                    RowBox[{"-", "0.24985943734645844`"}], ",", 
                    RowBox[{"-", "0.028261378407478333`"}], ",", 
                    RowBox[{"-", "0.018971402198076248`"}], ",", 
                    RowBox[{"-", "0.02004249580204487`"}], ",", 
                    "0.005555003881454468`", ",", 
                    RowBox[{"-", "0.0039579421281814575`"}], ",", 
                    "0.049148235470056534`", ",", 
                    RowBox[{"-", "0.08180655539035797`"}], ",", 
                    RowBox[{"-", "0.05987413972616196`"}], ",", 
                    "0.008848607540130615`", ",", "0.01272079348564148`", ",", 
                    RowBox[{"-", "0.055504024028778076`"}], ",", 
                    "0.03652287647128105`", ",", 
                    RowBox[{"-", "0.135703906416893`"}], ",", 
                    RowBox[{"-", "0.12003059685230255`"}], ",", 
                    "0.010357316583395004`", ",", 
                    RowBox[{"-", "0.08566120266914368`"}], ",", 
                    RowBox[{"-", "0.012529687955975533`"}], ",", 
                    "0.0011233948171138763`", ",", "0.11829923838376999`", 
                    ",", "0.04113355278968811`"}], "}"}], ",", 
                 TemplateBox[{"3198"}, "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"{", 
                   TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}]}], 
               "}"}], "}"}]}], ",", 
         RowBox[{"\"4195\"", "\[Rule]", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}]}], 
       "\[RightAssociation]"}], Short[#, 8]& ], "line" -> 77, "sessionID" -> 
   28217936057227393136, "byteCount" -> 26224168, "size" -> 8, "stored" -> 
   False, "expr" -> Missing["NotAvailable", "NewSessionID"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.9097937054162703`*^9, 3.909793730075938*^9}, {
   3.9097937614327865`*^9, 3.909793797562189*^9}, 3.909793989094932*^9, 
   3.909794364990369*^9, 3.909794561186651*^9, 3.909794625267373*^9, 
   3.909881435018179*^9, 3.9098872726688967`*^9, 3.90988765395632*^9, 
   3.9100463785857096`*^9, 3.910046415342985*^9, 3.91005327198866*^9, 
   3.910650334387374*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"720e3d1f-7d23-4cca-9093-33978329a067"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"testProtOutput", "[", "\"\<4195\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"pooled", " ", "output"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9098815445440717`*^9, 3.9098815612221937`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"aa30a657-019b-4eb0-a620-94cb6bbf98e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.2664080262184143`"}], ",", "0.28103336691856384`", ",", 
    RowBox[{"-", "0.2537377178668976`"}], ",", 
    RowBox[{"-", "0.26887214183807373`"}], ",", 
    RowBox[{"-", "0.2876514792442322`"}], ",", 
    RowBox[{"-", "0.2814942002296448`"}], ",", 
    RowBox[{"-", "0.2792550325393677`"}], ",", 
    RowBox[{"-", "0.2763672173023224`"}], ",", "0.2596435248851776`", ",", 
    RowBox[{"-", "0.272237628698349`"}], ",", "0.27404192090034485`", ",", 
    "0.27738040685653687`", ",", 
    RowBox[{"-", "0.2800295948982239`"}], ",", "0.2564559876918793`", ",", 
    RowBox[{"-", "0.2689228355884552`"}], ",", 
    RowBox[{"-", "0.2837328612804413`"}], ",", "0.27204233407974243`", ",", 
    "0.25653940439224243`", ",", "0.27265772223472595`", ",", 
    RowBox[{"-", "0.20685787498950958`"}], ",", 
    RowBox[{"-", "0.25405147671699524`"}], ",", 
    RowBox[{"-", "0.2756553590297699`"}], ",", 
    RowBox[{"-", "0.2704531252384186`"}], ",", 
    RowBox[{"-", "0.27960148453712463`"}], ",", "0.2302895337343216`", ",", 
    RowBox[{"-", "0.2781156003475189`"}], ",", "0.2715483605861664`", ",", 
    "0.27774861454963684`", ",", "0.26827526092529297`", ",", 
    "0.2601374089717865`", ",", "0.2749796509742737`", ",", 
    "0.27461040019989014`", ",", "0.269122451543808`", ",", 
    RowBox[{"-", "0.2803207039833069`"}], ",", "0.2525927424430847`", ",", 
    RowBox[{"-", "0.26927128434181213`"}], ",", "0.27969375252723694`", ",", 
    RowBox[{"-", "0.2733762860298157`"}], ",", "0.27552899718284607`", ",", 
    RowBox[{"-", "0.27891069650650024`"}], ",", "0.2729904353618622`", ",", 
    RowBox[{"-", "0.2846902012825012`"}], ",", "0.23726511001586914`", ",", 
    RowBox[{"-", "0.27574077248573303`"}], ",", 
    RowBox[{"-", "0.27570345997810364`"}], ",", 
    RowBox[{"-", "0.2791692018508911`"}], ",", 
    RowBox[{"-", "0.2743784487247467`"}], ",", "0.26926690340042114`", ",", 
    "0.2737201154232025`", ",", 
    RowBox[{"-", "0.2801409959793091`"}], ",", "0.26161089539527893`", ",", 
    RowBox[{"-", "0.2799847722053528`"}], ",", "0.27855184674263`", ",", 
    RowBox[{"-", "0.27042093873023987`"}], ",", "0.2769308388233185`", ",", 
    RowBox[{"-", "0.23895855247974396`"}], ",", "0.26577693223953247`", ",", 
    "0.2753339409828186`", ",", "0.27866610884666443`", ",", 
    "0.2835704982280731`", ",", "0.26880139112472534`", ",", 
    "0.265297532081604`", ",", 
    RowBox[{"-", "0.276116281747818`"}], ",", "0.2788582444190979`", ",", 
    "0.2724471390247345`", ",", "0.27724337577819824`", ",", 
    RowBox[{"-", "0.26983168721199036`"}], ",", 
    RowBox[{"-", "0.2701833248138428`"}], ",", 
    RowBox[{"-", "0.2654915153980255`"}], ",", 
    RowBox[{"-", "0.2688455879688263`"}], ",", 
    RowBox[{"-", "0.21951232850551605`"}], ",", "0.2734041213989258`", ",", 
    "0.28058168292045593`", ",", "0.2660839259624481`", ",", 
    "0.2716633975505829`", ",", 
    RowBox[{"-", "0.26606959104537964`"}], ",", 
    RowBox[{"-", "0.27527087926864624`"}], ",", "0.2744121849536896`", ",", 
    "0.26377999782562256`", ",", "0.276956170797348`", ",", 
    RowBox[{"-", "0.2759893834590912`"}], ",", 
    RowBox[{"-", "0.2703258991241455`"}], ",", 
    RowBox[{"-", "0.281035840511322`"}], ",", "0.27199479937553406`", ",", 
    RowBox[{"-", "0.27462688088417053`"}], ",", "0.2662631571292877`", ",", 
    "0.28127095103263855`", ",", "0.23409125208854675`", ",", 
    RowBox[{"-", "0.27633899450302124`"}], ",", 
    RowBox[{"-", "0.27864521741867065`"}], ",", 
    RowBox[{"-", "0.2751848101615906`"}], ",", "0.2595197856426239`", ",", 
    "0.2664262354373932`", ",", "0.28697869181632996`", ",", 
    "0.27720314264297485`", ",", "0.2351965308189392`", ",", 
    RowBox[{"-", "0.2705141007900238`"}], ",", 
    RowBox[{"-", "0.27948659658432007`"}], ",", "0.26699745655059814`", ",", 
    RowBox[{"-", "0.28500741720199585`"}], ",", "0.28011026978492737`", ",", 
    RowBox[{"-", "0.2754358947277069`"}], ",", "0.2767268419265747`", ",", 
    "0.26482728123664856`", ",", 
    RowBox[{"-", "0.2755813002586365`"}], ",", "0.2860088050365448`", ",", 
    RowBox[{"-", "0.26912182569503784`"}], ",", 
    RowBox[{"-", "0.2859967350959778`"}], ",", "0.2859494090080261`", ",", 
    RowBox[{"-", "0.2643975019454956`"}], ",", 
    RowBox[{"-", "0.2726530432701111`"}], ",", 
    RowBox[{"-", "0.27798619866371155`"}], ",", 
    RowBox[{"-", "0.22827807068824768`"}], ",", 
    RowBox[{"-", "0.28586167097091675`"}], ",", "0.28552424907684326`", ",", 
    RowBox[{"-", "0.2675354778766632`"}], ",", 
    RowBox[{"-", "0.2651800513267517`"}], ",", 
    RowBox[{"-", "0.2586560845375061`"}], ",", 
    RowBox[{"-", "0.27145320177078247`"}], ",", "0.27394914627075195`", ",", 
    RowBox[{"-", "0.282256156206131`"}], ",", 
    RowBox[{"-", "0.2792451083660126`"}], ",", 
    RowBox[{"-", "0.28328388929367065`"}], ",", "0.20684847235679626`", ",", 
    RowBox[{"-", "0.28199127316474915`"}], ",", 
    RowBox[{"-", "0.27092164754867554`"}], ",", 
    RowBox[{"-", "0.2746502161026001`"}], ",", "0.27877724170684814`", ",", 
    "0.27924644947052`", ",", 
    RowBox[{"-", "0.2706504762172699`"}], ",", "0.27176907658576965`", ",", 
    "0.2812725007534027`", ",", "0.22594581544399261`", ",", 
    RowBox[{"-", "0.27624353766441345`"}], ",", "0.27280715107917786`", ",", 
    RowBox[{"-", "0.2682158648967743`"}], ",", "0.2807307243347168`", ",", 
    RowBox[{"-", "0.2537558376789093`"}], ",", 
    RowBox[{"-", "0.26552408933639526`"}], ",", 
    RowBox[{"-", "0.2795077860355377`"}], ",", "0.28070053458213806`", ",", 
    RowBox[{"-", "0.27119195461273193`"}], ",", 
    RowBox[{"-", "0.2606707513332367`"}], ",", "0.27677634358406067`", ",", 
    "0.27209123969078064`", ",", "0.28105592727661133`", ",", 
    RowBox[{"-", "0.2587880492210388`"}], ",", "0.26248490810394287`", ",", 
    "0.266083687543869`", ",", 
    RowBox[{"-", "0.26626622676849365`"}], ",", 
    RowBox[{"-", "0.27463987469673157`"}], ",", 
    RowBox[{"-", "0.26672080159187317`"}], ",", 
    RowBox[{"-", "0.2796801030635834`"}], ",", "0.2602071464061737`", ",", 
    RowBox[{"-", "0.27285656332969666`"}], ",", "0.23776227235794067`", ",", 
    RowBox[{"-", "0.2729026973247528`"}], ",", 
    RowBox[{"-", "0.26416465640068054`"}], ",", "0.2719208300113678`", ",", 
    RowBox[{"-", "0.2664428949356079`"}], ",", "0.26954081654548645`", ",", 
    "0.273761510848999`", ",", 
    RowBox[{"-", "0.26992592215538025`"}], ",", "0.27705952525138855`", ",", 
    RowBox[{"-", "0.2641223073005676`"}], ",", "0.2850150763988495`", ",", 
    "0.2770695388317108`", ",", 
    RowBox[{"-", "0.2780071794986725`"}], ",", "0.2764465808868408`", ",", 
    "0.23476795852184296`", ",", "0.26918330788612366`", ",", 
    RowBox[{"-", "0.25955334305763245`"}], ",", "0.27876850962638855`", ",", 
    "0.27283400297164917`", ",", 
    RowBox[{"-", "0.27811217308044434`"}], ",", "0.2646484971046448`", ",", 
    "0.26406946778297424`", ",", 
    RowBox[{"-", "0.276083767414093`"}], ",", "0.2807696461677551`", ",", 
    RowBox[{"-", "0.2532459497451782`"}], ",", "0.2730838358402252`", ",", 
    "0.2762752175331116`", ",", "0.2839316129684448`", ",", 
    RowBox[{"-", "0.27480337023735046`"}], ",", 
    RowBox[{"-", "0.2323153018951416`"}], ",", 
    RowBox[{"-", "0.27329352498054504`"}], ",", 
    RowBox[{"-", "0.28351619839668274`"}], ",", "0.23990213871002197`", ",", 
    "0.27276769280433655`", ",", "0.22765547037124634`", ",", 
    RowBox[{"-", "0.26820820569992065`"}], ",", 
    RowBox[{"-", "0.26522645354270935`"}], ",", "0.26155251264572144`", ",", 
    "0.2740875780582428`", ",", 
    RowBox[{"-", "0.27318865060806274`"}], ",", 
    RowBox[{"-", "0.27951711416244507`"}], ",", 
    RowBox[{"-", "0.2597487270832062`"}], ",", 
    RowBox[{"-", "0.2670265734195709`"}], ",", "0.27327004075050354`", ",", 
    "0.2817457616329193`", ",", "0.28630414605140686`", ",", 
    "0.28363659977912903`", ",", "0.2694181799888611`", ",", 
    "0.26193568110466003`", ",", "0.26636800169944763`", ",", 
    RowBox[{"-", "0.27077752351760864`"}], ",", "0.27775388956069946`", ",", 
    "0.240085631608963`", ",", 
    RowBox[{"-", "0.2739931643009186`"}], ",", 
    RowBox[{"-", "0.257709264755249`"}], ",", "0.271883487701416`", ",", 
    RowBox[{"-", "0.2715719938278198`"}], ",", 
    RowBox[{"-", "0.2702398896217346`"}], ",", 
    RowBox[{"-", "0.2695821523666382`"}], ",", "0.2577078640460968`", ",", 
    "0.27318075299263`", ",", 
    RowBox[{"-", "0.27459049224853516`"}], ",", "0.26944106817245483`", ",", 
    RowBox[{"-", "0.27684375643730164`"}], ",", "0.274898886680603`", ",", 
    RowBox[{"-", "0.27648794651031494`"}], ",", 
    RowBox[{"-", "0.28604263067245483`"}], ",", 
    RowBox[{"-", "0.28200802206993103`"}], ",", 
    RowBox[{"-", "0.27559709548950195`"}], ",", "0.24096232652664185`", ",", 
    RowBox[{"-", "0.2321951985359192`"}], ",", "0.27366721630096436`", ",", 
    RowBox[{"-", "0.25624388456344604`"}], ",", "0.22030407190322876`", ",", 
    "0.2679792642593384`", ",", "0.2310592383146286`", ",", 
    RowBox[{"-", "0.2665952742099762`"}], ",", 
    RowBox[{"-", "0.2184915691614151`"}], ",", 
    RowBox[{"-", "0.2775405943393707`"}], ",", 
    RowBox[{"-", "0.2712146043777466`"}], ",", 
    RowBox[{"-", "0.273969829082489`"}], ",", 
    RowBox[{"-", "0.2556232511997223`"}], ",", "0.25426778197288513`", ",", 
    "0.27169543504714966`", ",", 
    RowBox[{"-", "0.22572079300880432`"}], ",", 
    RowBox[{"-", "0.27069708704948425`"}], ",", 
    RowBox[{"-", "0.26012539863586426`"}], ",", 
    RowBox[{"-", "0.27031487226486206`"}], ",", "0.2770695388317108`", ",", 
    RowBox[{"-", "0.27322253584861755`"}], ",", 
    RowBox[{"-", "0.27038338780403137`"}], ",", 
    RowBox[{"-", "0.2603563070297241`"}], ",", "0.2726019620895386`", ",", 
    RowBox[{"-", "0.2701452374458313`"}], ",", "0.2749597430229187`", ",", 
    "0.24036864936351776`", ",", 
    RowBox[{"-", "0.27962028980255127`"}], ",", 
    RowBox[{"-", "0.23617732524871826`"}], ",", 
    RowBox[{"-", "0.24468927085399628`"}], ",", "0.2799418568611145`", ",", 
    RowBox[{"-", "0.27785685658454895`"}], ",", 
    RowBox[{"-", "0.26511919498443604`"}], ",", 
    RowBox[{"-", "0.28379809856414795`"}], ",", 
    RowBox[{"-", "0.277505487203598`"}], ",", 
    RowBox[{"-", "0.2883375585079193`"}], ",", 
    RowBox[{"-", "0.26546546816825867`"}], ",", "0.28383129835128784`", ",", 
    RowBox[{"-", "0.2696378827095032`"}], ",", 
    RowBox[{"-", "0.2699943482875824`"}], ",", "0.2741278409957886`", ",", 
    "0.2688126266002655`", ",", 
    RowBox[{"-", "0.23682160675525665`"}], ",", "0.27439969778060913`", ",", 
    "0.27186667919158936`", ",", "0.27705952525138855`", ",", 
    RowBox[{"-", "0.26088374853134155`"}], ",", "0.27707964181900024`", ",", 
    RowBox[{"-", "0.23568284511566162`"}], ",", 
    RowBox[{"-", "0.2769376039505005`"}], ",", "0.2874514162540436`", ",", 
    "0.2682516574859619`", ",", 
    RowBox[{"-", "0.24196283519268036`"}], ",", "0.27285444736480713`", ",", 
    RowBox[{"-", "0.2709478437900543`"}], ",", "0.2796624004840851`", ",", 
    "0.24074237048625946`", ",", "0.2649622857570648`", ",", 
    RowBox[{"-", "0.2670648992061615`"}], ",", 
    RowBox[{"-", "0.27358752489089966`"}], ",", 
    RowBox[{"-", "0.2806321382522583`"}], ",", 
    RowBox[{"-", "0.2669183611869812`"}], ",", 
    RowBox[{"-", "0.27841517329216003`"}], ",", "0.22083589434623718`", ",", 
    "0.27408501505851746`", ",", "0.26887837052345276`", ",", 
    RowBox[{"-", "0.27155205607414246`"}], ",", 
    RowBox[{"-", "0.26272082328796387`"}], ",", 
    RowBox[{"-", "0.2704600393772125`"}], ",", 
    RowBox[{"-", "0.2789345383644104`"}], ",", "0.27961379289627075`", ",", 
    RowBox[{"-", "0.2800339162349701`"}], ",", "0.26483842730522156`", ",", 
    RowBox[{"-", "0.27501025795936584`"}], ",", 
    RowBox[{"-", "0.27720507979393005`"}], ",", "0.2749188244342804`", ",", 
    "0.27292293310165405`", ",", "0.2672361433506012`", ",", 
    RowBox[{"-", "0.24491029977798462`"}], ",", 
    RowBox[{"-", "0.23084214329719543`"}], ",", 
    RowBox[{"-", "0.2742106020450592`"}], ",", 
    RowBox[{"-", "0.2655428647994995`"}], ",", "0.2788761258125305`", ",", 
    RowBox[{"-", "0.2743054926395416`"}], ",", 
    RowBox[{"-", "0.229060560464859`"}], ",", 
    RowBox[{"-", "0.269805908203125`"}], ",", 
    RowBox[{"-", "0.27816063165664673`"}], ",", "0.26647061109542847`", ",", 
    RowBox[{"-", "0.2750020921230316`"}], ",", "0.27688419818878174`", ",", 
    "0.2876123785972595`", ",", 
    RowBox[{"-", "0.2742062211036682`"}], ",", "0.2663036286830902`", ",", 
    RowBox[{"-", "0.27465930581092834`"}], ",", 
    RowBox[{"-", "0.2795523703098297`"}], ",", "0.2796940803527832`", ",", 
    RowBox[{"-", "0.27795132994651794`"}], ",", "0.2604673206806183`", ",", 
    "0.2777456045150757`", ",", "0.2607581317424774`", ",", 
    RowBox[{"-", "0.2388087660074234`"}], ",", "0.26445579528808594`", ",", 
    RowBox[{"-", "0.2733079493045807`"}], ",", 
    RowBox[{"-", "0.28199708461761475`"}], ",", 
    RowBox[{"-", "0.2663924992084503`"}], ",", "0.2817005515098572`", ",", 
    "0.2751789093017578`", ",", "0.27439892292022705`", ",", 
    "0.265215128660202`", ",", "0.2707362174987793`", ",", 
    RowBox[{"-", "0.28029733896255493`"}], ",", "0.2690337300300598`", ",", 
    "0.27251195907592773`", ",", "0.277497261762619`", ",", 
    "0.27637383341789246`", ",", 
    RowBox[{"-", "0.27313634753227234`"}], ",", "0.27683624625205994`", ",", 
    RowBox[{"-", "0.2716992497444153`"}], ",", "0.26797568798065186`", ",", 
    "0.22154971957206726`", ",", 
    RowBox[{"-", "0.2701186537742615`"}], ",", "0.2541232407093048`", ",", 
    "0.2690667510032654`", ",", 
    RowBox[{"-", "0.23732493817806244`"}], ",", "0.2711557149887085`", ",", 
    RowBox[{"-", "0.27646443247795105`"}], ",", 
    RowBox[{"-", "0.2711673378944397`"}], ",", "0.26285964250564575`", ",", 
    RowBox[{"-", "0.27162835001945496`"}], ",", 
    RowBox[{"-", "0.2695712149143219`"}], ",", 
    RowBox[{"-", "0.2706977427005768`"}], ",", 
    RowBox[{"-", "0.261538565158844`"}], ",", "0.264760285615921`", ",", 
    RowBox[{"-", "0.26468223333358765`"}], ",", 
    RowBox[{"-", "0.27144715189933777`"}], ",", "0.27934640645980835`", ",", 
    RowBox[{"-", "0.2879425585269928`"}], ",", 
    RowBox[{"-", "0.23622868955135345`"}], ",", 
    RowBox[{"-", "0.27730897068977356`"}], ",", 
    RowBox[{"-", "0.28675585985183716`"}], ",", "0.27702605724334717`", ",", 
    "0.22044557332992554`", ",", "0.2836892902851105`", ",", 
    RowBox[{"-", "0.2707993984222412`"}], ",", 
    RowBox[{"-", "0.2609538435935974`"}], ",", "0.2745807468891144`", ",", 
    "0.25616538524627686`", ",", 
    RowBox[{"-", "0.2726277709007263`"}], ",", "0.26769331097602844`", ",", 
    "0.2815861999988556`", ",", 
    RowBox[{"-", "0.27097687125205994`"}], ",", 
    RowBox[{"-", "0.27392199635505676`"}], ",", "0.2688976526260376`", ",", 
    RowBox[{"-", "0.28582853078842163`"}], ",", "0.2827291488647461`", ",", 
    RowBox[{"-", "0.276775985956192`"}], ",", 
    RowBox[{"-", "0.26985964179039`"}], ",", 
    RowBox[{"-", "0.2941253185272217`"}], ",", 
    RowBox[{"-", "0.27947375178337097`"}], ",", "0.2689199149608612`", ",", 
    "0.22536727786064148`", ",", 
    RowBox[{"-", "0.2403489202260971`"}], ",", "0.2782602310180664`", ",", 
    "0.2683161497116089`", ",", 
    RowBox[{"-", "0.27034446597099304`"}], ",", 
    RowBox[{"-", "0.2810792326927185`"}], ",", 
    RowBox[{"-", "0.27765747904777527`"}], ",", 
    RowBox[{"-", "0.22615186870098114`"}], ",", 
    RowBox[{"-", "0.27803441882133484`"}], ",", 
    RowBox[{"-", "0.2704382836818695`"}], ",", "0.27117931842803955`", ",", 
    "0.27573657035827637`", ",", "0.2768678069114685`", ",", 
    RowBox[{"-", "0.2752426862716675`"}], ",", "0.2665875554084778`", ",", 
    RowBox[{"-", "0.26858237385749817`"}], ",", 
    RowBox[{"-", "0.27836889028549194`"}], ",", 
    RowBox[{"-", "0.2677718698978424`"}], ",", "0.27260541915893555`", ",", 
    "0.2788260579109192`", ",", "0.27063947916030884`", ",", 
    RowBox[{"-", "0.2799457609653473`"}], ",", "0.27711722254753113`", ",", 
    "0.2724483609199524`", ",", "0.23722194135189056`", ",", 
    "0.27797743678092957`", ",", "0.2736183702945709`", ",", 
    "0.22561022639274597`", ",", 
    RowBox[{"-", "0.2753951847553253`"}], ",", "0.23865990340709686`", ",", 
    RowBox[{"-", "0.2737187147140503`"}], ",", "0.27151259779930115`", ",", 
    RowBox[{"-", "0.28214380145072937`"}], ",", 
    RowBox[{"-", "0.27343395352363586`"}], ",", 
    RowBox[{"-", "0.28181910514831543`"}], ",", "0.28192299604415894`", ",", 
    "0.2706722319126129`", ",", "0.24037419259548187`", ",", 
    RowBox[{"-", "0.2755279242992401`"}], ",", 
    RowBox[{"-", "0.27373868227005005`"}], ",", "0.26805806159973145`", ",", 
    "0.28041428327560425`", ",", 
    RowBox[{"-", "0.26240620017051697`"}], ",", 
    RowBox[{"-", "0.2718922197818756`"}], ",", 
    RowBox[{"-", "0.2321617156267166`"}], ",", 
    RowBox[{"-", "0.26947692036628723`"}], ",", "0.2651781737804413`", ",", 
    RowBox[{"-", "0.28196683526039124`"}], ",", 
    RowBox[{"-", "0.2771171033382416`"}], ",", "0.2765718102455139`", ",", 
    "0.266534686088562`", ",", 
    RowBox[{"-", "0.2759857773780823`"}], ",", "0.2734570801258087`", ",", 
    RowBox[{"-", "0.2764509320259094`"}], ",", "0.27345579862594604`", ",", 
    RowBox[{"-", "0.28066205978393555`"}], ",", 
    RowBox[{"-", "0.2755357027053833`"}], ",", "0.26917412877082825`", ",", 
    "0.2827417552471161`", ",", 
    RowBox[{"-", "0.2789238393306732`"}], ",", 
    RowBox[{"-", "0.2602559030056`"}], ",", 
    RowBox[{"-", "0.27739495038986206`"}], ",", 
    RowBox[{"-", "0.27144408226013184`"}], ",", "0.23261545598506927`", ",", 
    "0.2438332736492157`", ",", "0.2790554463863373`", ",", 
    RowBox[{"-", "0.27887094020843506`"}], ",", 
    RowBox[{"-", "0.2743609547615051`"}], ",", "0.220809668302536`", ",", 
    RowBox[{"-", "0.23476052284240723`"}], ",", 
    RowBox[{"-", "0.28504496812820435`"}], ",", "0.2737392783164978`", ",", 
    RowBox[{"-", "0.2745944857597351`"}], ",", 
    RowBox[{"-", "0.28287994861602783`"}], ",", "0.2679971754550934`", ",", 
    RowBox[{"-", "0.279262512922287`"}], ",", 
    RowBox[{"-", "0.28296366333961487`"}], ",", 
    RowBox[{"-", "0.24097111821174622`"}], ",", 
    RowBox[{"-", "0.28302571177482605`"}], ",", "0.2361372411251068`", ",", 
    "0.2635698616504669`", ",", "0.26229700446128845`", ",", 
    RowBox[{"-", "0.2778306305408478`"}], ",", 
    RowBox[{"-", "0.21958574652671814`"}], ",", "0.27390697598457336`", ",", 
    "0.26779037714004517`", ",", 
    RowBox[{"-", "0.27642738819122314`"}], ",", 
    RowBox[{"-", "0.24146272242069244`"}], ",", "0.27261850237846375`", ",", 
    "0.2817334234714508`", ",", "0.2743813097476959`", ",", 
    RowBox[{"-", "0.283845454454422`"}], ",", "0.2566587030887604`", ",", 
    RowBox[{"-", "0.26341480016708374`"}], ",", "0.27345728874206543`", ",", 
    "0.2728893756866455`", ",", 
    RowBox[{"-", "0.2772441506385803`"}], ",", "0.2629186809062958`", ",", 
    RowBox[{"-", "0.2670031785964966`"}], ",", "0.25223150849342346`", ",", 
    RowBox[{"-", "0.2714811861515045`"}], ",", "0.27340421080589294`", ",", 
    RowBox[{"-", "0.25886043906211853`"}], ",", "0.22854575514793396`", ",", 
    RowBox[{"-", "0.2840319573879242`"}], ",", "0.2715730667114258`", ",", 
    RowBox[{"-", "0.27160516381263733`"}], ",", 
    RowBox[{"-", "0.2757035493850708`"}], ",", 
    RowBox[{"-", "0.2739676237106323`"}], ",", 
    RowBox[{"-", "0.2706986665725708`"}], ",", "0.2680162191390991`", ",", 
    "0.2725178599357605`", ",", "0.2653140127658844`", ",", 
    RowBox[{"-", "0.27276647090911865`"}], ",", "0.23609215021133423`", ",", 
    "0.27346429228782654`", ",", "0.2801528573036194`", ",", 
    "0.2506915032863617`", ",", 
    RowBox[{"-", "0.2746336758136749`"}], ",", "0.271752268075943`", ",", 
    "0.27230778336524963`", ",", "0.2792799770832062`", ",", 
    RowBox[{"-", "0.2466222494840622`"}], ",", 
    RowBox[{"-", "0.2778739035129547`"}], ",", "0.2716194987297058`", ",", 
    RowBox[{"-", "0.2723109722137451`"}], ",", "0.24704629182815552`", ",", 
    RowBox[{"-", "0.27571848034858704`"}], ",", 
    RowBox[{"-", "0.28170543909072876`"}], ",", 
    RowBox[{"-", "0.26907047629356384`"}], ",", 
    RowBox[{"-", "0.269084632396698`"}], ",", 
    RowBox[{"-", "0.27472370862960815`"}], ",", "0.2773077189922333`", ",", 
    "0.27917248010635376`", ",", 
    RowBox[{"-", "0.2708948254585266`"}], ",", 
    RowBox[{"-", "0.27248623967170715`"}], ",", "0.266299307346344`", ",", 
    "0.27814188599586487`", ",", 
    RowBox[{"-", "0.2750743329524994`"}], ",", 
    RowBox[{"-", "0.21795012056827545`"}], ",", 
    RowBox[{"-", "0.27624520659446716`"}], ",", "0.2769505977630615`", ",", 
    "0.2651236057281494`", ",", 
    RowBox[{"-", "0.2796187996864319`"}], ",", 
    RowBox[{"-", "0.2628656327724457`"}], ",", 
    RowBox[{"-", "0.27375736832618713`"}], ",", "0.23017893731594086`", ",", 
    "0.27089688181877136`", ",", 
    RowBox[{"-", "0.27200615406036377`"}], ",", "0.2755376100540161`", ",", 
    "0.27120909094810486`", ",", 
    RowBox[{"-", "0.23730981349945068`"}], ",", 
    RowBox[{"-", "0.24426500499248505`"}], ",", "0.26951947808265686`", ",", 
    "0.27502667903900146`", ",", 
    RowBox[{"-", "0.25222763419151306`"}], ",", "0.26723945140838623`", ",", 
    "0.27190762758255005`", ",", "0.26809290051460266`", ",", 
    "0.2765439748764038`", ",", "0.263857364654541`", ",", 
    "0.2744709849357605`", ",", 
    RowBox[{"-", "0.271493136882782`"}], ",", 
    RowBox[{"-", "0.2732888460159302`"}], ",", "0.2664691209793091`", ",", 
    RowBox[{"-", "0.27434420585632324`"}], ",", 
    RowBox[{"-", "0.21468520164489746`"}], ",", "0.26828786730766296`", ",", 
    RowBox[{"-", "0.26907679438591003`"}], ",", "0.22974717617034912`", ",", 
    RowBox[{"-", "0.28468814492225647`"}], ",", 
    RowBox[{"-", "0.2457168847322464`"}], ",", "0.2665438652038574`", ",", 
    RowBox[{"-", "0.26850438117980957`"}], ",", 
    RowBox[{"-", "0.2777552008628845`"}], ",", 
    RowBox[{"-", "0.26421257853507996`"}], ",", "0.27869880199432373`", ",", 
    RowBox[{"-", "0.26915785670280457`"}], ",", "0.2554555833339691`", ",", 
    "0.27676236629486084`", ",", 
    RowBox[{"-", "0.26364028453826904`"}], ",", "0.27272170782089233`", ",", 
    RowBox[{"-", "0.21967869997024536`"}], ",", 
    RowBox[{"-", "0.27280497550964355`"}], ",", "0.2710294723510742`", ",", 
    "0.2676665186882019`", ",", "0.2821188271045685`", ",", 
    RowBox[{"-", "0.26752057671546936`"}], ",", "0.27669429779052734`", ",", 
    "0.2727707028388977`", ",", "0.2701748311519623`", ",", 
    RowBox[{"-", "0.2814942002296448`"}], ",", "0.2486976832151413`", ",", 
    RowBox[{"-", "0.2782306969165802`"}], ",", "0.26691168546676636`", ",", 
    RowBox[{"-", "0.25206488370895386`"}], ",", 
    RowBox[{"-", "0.2746284008026123`"}], ",", 
    RowBox[{"-", "0.2662624418735504`"}], ",", "0.2817310094833374`", ",", 
    "0.26922276616096497`", ",", 
    RowBox[{"-", "0.26670217514038086`"}], ",", 
    RowBox[{"-", "0.27755242586135864`"}], ",", "0.2683705687522888`", ",", 
    RowBox[{"-", "0.21974441409111023`"}], ",", 
    RowBox[{"-", "0.2736395001411438`"}], ",", "0.26596799492836`", ",", 
    "0.2780790328979492`", ",", 
    RowBox[{"-", "0.2621934115886688`"}], ",", "0.28062903881073`", ",", 
    "0.26314541697502136`", ",", "0.2743965983390808`", ",", 
    "0.2010563164949417`", ",", "0.2794567942619324`", ",", 
    "0.273217111825943`", ",", 
    RowBox[{"-", "0.27603083848953247`"}], ",", "0.27421170473098755`", ",", 
    RowBox[{"-", "0.26716557145118713`"}], ",", 
    RowBox[{"-", "0.2830067574977875`"}], ",", "0.2548429071903229`", ",", 
    RowBox[{"-", "0.2799685299396515`"}], ",", "0.27059295773506165`", ",", 
    "0.2747296094894409`", ",", 
    RowBox[{"-", "0.2774554491043091`"}], ",", "0.27046650648117065`", ",", 
    "0.2817701995372772`", ",", "0.2592964768409729`", ",", 
    "0.23310574889183044`", ",", 
    RowBox[{"-", "0.27745169401168823`"}], ",", "0.2658849060535431`", ",", 
    "0.27019041776657104`", ",", "0.26887059211730957`", ",", 
    RowBox[{"-", "0.2664002776145935`"}], ",", "0.2753162980079651`", ",", 
    "0.2806119918823242`", ",", "0.27061018347740173`", ",", 
    "0.27121612429618835`", ",", "0.22871118783950806`", ",", 
    RowBox[{"-", "0.2664426565170288`"}], ",", 
    RowBox[{"-", "0.27517691254615784`"}], ",", 
    RowBox[{"-", "0.27647021412849426`"}], ",", 
    RowBox[{"-", "0.27038446068763733`"}], ",", 
    RowBox[{"-", "0.2242404967546463`"}], ",", "0.28240981698036194`", ",", 
    "0.2789348363876343`", ",", 
    RowBox[{"-", "0.2709907591342926`"}], ",", "0.22308963537216187`", ",", 
    "0.23732538521289825`", ",", 
    RowBox[{"-", "0.27792465686798096`"}], ",", 
    RowBox[{"-", "0.27372074127197266`"}], ",", "0.2749894857406616`", ",", 
    RowBox[{"-", "0.2385384440422058`"}], ",", "0.27315035462379456`", ",", 
    RowBox[{"-", "0.28098514676094055`"}], ",", "0.2782476246356964`", ",", 
    RowBox[{"-", "0.2777493894100189`"}], ",", "0.2744324505329132`", ",", 
    RowBox[{"-", "0.2771323025226593`"}], ",", 
    RowBox[{"-", "0.2712636888027191`"}], ",", "0.28359535336494446`", ",", 
    "0.268561989068985`", ",", "0.2719215750694275`", ",", 
    "0.2675211429595947`", ",", 
    RowBox[{"-", "0.27475249767303467`"}], ",", "0.26879173517227173`", ",", 
    RowBox[{"-", "0.24858811497688293`"}], ",", 
    RowBox[{"-", "0.2689199447631836`"}], ",", "0.2790796160697937`", ",", 
    RowBox[{"-", "0.19760611653327942`"}], ",", 
    RowBox[{"-", "0.2823459506034851`"}], ",", "0.2581441104412079`", ",", 
    "0.27043405175209045`", ",", 
    RowBox[{"-", "0.2790098786354065`"}], ",", "0.25659239292144775`", ",", 
    "0.27605918049812317`", ",", "0.26713433861732483`", ",", 
    "0.2802566587924957`", ",", "0.26133841276168823`", ",", 
    "0.23161843419075012`", ",", 
    RowBox[{"-", "0.26956942677497864`"}], ",", 
    RowBox[{"-", "0.2345345914363861`"}], ",", "0.2646043300628662`", ",", 
    RowBox[{"-", "0.2710413932800293`"}], ",", "0.25225603580474854`", ",", 
    "0.2773532569408417`", ",", 
    RowBox[{"-", "0.2831805646419525`"}], ",", 
    RowBox[{"-", "0.27112188935279846`"}], ",", 
    RowBox[{"-", "0.27337324619293213`"}], ",", "0.276394248008728`", ",", 
    RowBox[{"-", "0.2310158908367157`"}], ",", 
    RowBox[{"-", "0.26371338963508606`"}], ",", 
    RowBox[{"-", "0.2704401910305023`"}], ",", "0.2757033407688141`", ",", 
    "0.2737073004245758`", ",", 
    RowBox[{"-", "0.278041273355484`"}], ",", 
    RowBox[{"-", "0.27753692865371704`"}], ",", 
    RowBox[{"-", "0.27161434292793274`"}], ",", "0.27186673879623413`", ",", 
    RowBox[{"-", "0.2729152739048004`"}], ",", "0.2626076340675354`", ",", 
    RowBox[{"-", "0.27531054615974426`"}], ",", "0.27671295404434204`", ",", 
    "0.29259243607521057`", ",", "0.2606663107872009`", ",", 
    RowBox[{"-", "0.27791130542755127`"}], ",", "0.2652508616447449`", ",", 
    RowBox[{"-", "0.2769955098628998`"}], ",", 
    RowBox[{"-", "0.2798897325992584`"}], ",", 
    RowBox[{"-", "0.2799467444419861`"}], ",", "0.26179468631744385`", ",", 
    RowBox[{"-", "0.28051966428756714`"}], ",", 
    RowBox[{"-", "0.22707387804985046`"}], ",", "0.23712751269340515`", ",", 
    "0.26302942633628845`", ",", "0.2829318940639496`", ",", 
    RowBox[{"-", "0.2742116451263428`"}], ",", "0.27413296699523926`", ",", 
    RowBox[{"-", "0.22970399260520935`"}], ",", "0.27395352721214294`", ",", 
    RowBox[{"-", "0.23819974064826965`"}], ",", "0.27345988154411316`", ",", 
    RowBox[{"-", "0.2732209861278534`"}], ",", "0.2728479206562042`", ",", 
    RowBox[{"-", "0.25466853380203247`"}], ",", 
    RowBox[{"-", "0.2759348154067993`"}], ",", "0.2700918912887573`", ",", 
    RowBox[{"-", "0.2827991247177124`"}], ",", 
    RowBox[{"-", "0.23044846951961517`"}], ",", 
    RowBox[{"-", "0.27621471881866455`"}], ",", "0.270585834980011`", ",", 
    RowBox[{"-", "0.2736467123031616`"}], ",", "0.28426435589790344`", ",", 
    RowBox[{"-", "0.28414225578308105`"}], ",", "0.27063480019569397`", ",", 
    "0.27409088611602783`", ",", "0.2700444459915161`", ",", 
    "0.2743386924266815`", ",", 
    RowBox[{"-", "0.26853880286216736`"}], ",", "0.2715250849723816`", ",", 
    "0.268230140209198`", ",", "0.27335241436958313`", ",", 
    "0.26944416761398315`", ",", 
    RowBox[{"-", "0.26533520221710205`"}], ",", 
    RowBox[{"-", "0.2675991654396057`"}], ",", 
    RowBox[{"-", "0.2713227868080139`"}], ",", 
    RowBox[{"-", "0.2683295011520386`"}], ",", 
    RowBox[{"-", "0.26934561133384705`"}], ",", 
    RowBox[{"-", "0.28583869338035583`"}], ",", "0.27395308017730713`", ",", 
    "0.28014495968818665`", ",", 
    RowBox[{"-", "0.2778153717517853`"}], ",", 
    RowBox[{"-", "0.274803102016449`"}], ",", 
    RowBox[{"-", "0.2652036249637604`"}], ",", "0.2716851234436035`", ",", 
    RowBox[{"-", "0.2627492845058441`"}], ",", 
    RowBox[{"-", "0.2659068703651428`"}], ",", 
    RowBox[{"-", "0.2677549719810486`"}], ",", 
    RowBox[{"-", "0.23946720361709595`"}], ",", 
    RowBox[{"-", "0.27561214566230774`"}], ",", 
    RowBox[{"-", "0.2688954770565033`"}], ",", 
    RowBox[{"-", "0.2684938311576843`"}], ",", "0.26144805550575256`", ",", 
    "0.27078312635421753`", ",", 
    RowBox[{"-", "0.2733994424343109`"}], ",", 
    RowBox[{"-", "0.23693904280662537`"}], ",", "0.2733600437641144`", ",", 
    "0.27778491377830505`", ",", "0.272714763879776`", ",", 
    "0.2744862735271454`", ",", 
    RowBox[{"-", "0.2664467394351959`"}], ",", 
    RowBox[{"-", "0.23384705185890198`"}], ",", 
    RowBox[{"-", "0.27267852425575256`"}], ",", 
    RowBox[{"-", "0.2820073664188385`"}], ",", "0.26770055294036865`", ",", 
    "0.25852105021476746`", ",", 
    RowBox[{"-", "0.2608049511909485`"}], ",", "0.22007952630519867`", ",", 
    "0.2400473952293396`", ",", 
    RowBox[{"-", "0.2587711811065674`"}], ",", "0.24300514161586761`", ",", 
    RowBox[{"-", "0.2737644612789154`"}], ",", 
    RowBox[{"-", "0.2643638551235199`"}], ",", "0.2796412706375122`", ",", 
    RowBox[{"-", "0.22864463925361633`"}], ",", "0.2817280888557434`", ",", 
    "0.28408634662628174`", ",", "0.2734921872615814`", ",", 
    RowBox[{"-", "0.28417590260505676`"}], ",", 
    RowBox[{"-", "0.21755535900592804`"}], ",", "0.2666447162628174`", ",", 
    RowBox[{"-", "0.2692791819572449`"}], ",", 
    RowBox[{"-", "0.23976458609104156`"}], ",", 
    RowBox[{"-", "0.2600511610507965`"}], ",", "0.21901662647724152`", ",", 
    RowBox[{"-", "0.27320846915245056`"}], ",", "0.19966191053390503`", ",", 
    "0.2743770182132721`", ",", "0.27399492263793945`", ",", 
    "0.2695143520832062`", ",", 
    RowBox[{"-", "0.2730044424533844`"}], ",", "0.274250864982605`", ",", 
    RowBox[{"-", "0.27502861618995667`"}], ",", "0.273600310087204`", ",", 
    RowBox[{"-", "0.2714531719684601`"}], ",", 
    RowBox[{"-", "0.2775256931781769`"}], ",", "0.27639925479888916`", ",", 
    RowBox[{"-", "0.2795795798301697`"}], ",", 
    RowBox[{"-", "0.23172561824321747`"}], ",", "0.2688683271408081`", ",", 
    "0.26814326643943787`", ",", 
    RowBox[{"-", "0.27305838465690613`"}], ",", 
    RowBox[{"-", "0.2779199481010437`"}], ",", 
    RowBox[{"-", "0.26984190940856934`"}], ",", "0.27546852827072144`", ",", 
    "0.2834765911102295`", ",", "0.2681189775466919`", ",", 
    "0.26640620827674866`", ",", 
    RowBox[{"-", "0.2795451283454895`"}], ",", 
    RowBox[{"-", "0.28231656551361084`"}], ",", "0.24470826983451843`", ",", 
    RowBox[{"-", "0.28602156043052673`"}], ",", 
    RowBox[{"-", "0.26730209589004517`"}], ",", 
    RowBox[{"-", "0.28387340903282166`"}], ",", 
    RowBox[{"-", "0.2664099335670471`"}], ",", "0.25737741589546204`", ",", 
    RowBox[{"-", "0.22429069876670837`"}], ",", 
    RowBox[{"-", "0.2645540237426758`"}], ",", 
    RowBox[{"-", "0.27829208970069885`"}], ",", 
    RowBox[{"-", "0.233193039894104`"}], ",", 
    RowBox[{"-", "0.2812166213989258`"}], ",", "0.27545738220214844`", ",", 
    "0.27527305483818054`", ",", "0.27285662293434143`", ",", 
    "0.27299991250038147`", ",", 
    RowBox[{"-", "0.280335009098053`"}], ",", 
    RowBox[{"-", "0.2726592719554901`"}], ",", "0.27604570984840393`", ",", 
    "0.2720843255519867`", ",", 
    RowBox[{"-", "0.26858624815940857`"}], ",", 
    RowBox[{"-", "0.2317693531513214`"}], ",", 
    RowBox[{"-", "0.2682655453681946`"}], ",", "0.2739593982696533`", ",", 
    RowBox[{"-", "0.259724497795105`"}], ",", 
    RowBox[{"-", "0.2831513583660126`"}], ",", 
    RowBox[{"-", "0.274475634098053`"}], ",", "0.2661193907260895`", ",", 
    RowBox[{"-", "0.26899173855781555`"}], ",", 
    RowBox[{"-", "0.27032431960105896`"}], ",", 
    RowBox[{"-", "0.2830928862094879`"}], ",", "0.2746073007583618`", ",", 
    RowBox[{"-", "0.26144808530807495`"}], ",", 
    RowBox[{"-", "0.23152866959571838`"}], ",", 
    RowBox[{"-", "0.27566859126091003`"}], ",", 
    RowBox[{"-", "0.27498146891593933`"}], ",", "0.2695119082927704`", ",", 
    "0.27494609355926514`", ",", 
    RowBox[{"-", "0.26919299364089966`"}], ",", "0.26949888467788696`", ",", 
    "0.2523074448108673`", ",", "0.28354156017303467`", ",", 
    "0.2711437940597534`", ",", "0.2585877478122711`", ",", 
    "0.28206005692481995`", ",", "0.27647387981414795`", ",", 
    RowBox[{"-", "0.27280303835868835`"}], ",", 
    RowBox[{"-", "0.27527275681495667`"}], ",", "0.2814745306968689`", ",", 
    RowBox[{"-", "0.28601542115211487`"}], ",", "0.27672338485717773`", ",", 
    "0.2703797221183777`", ",", "0.275005042552948`", ",", 
    RowBox[{"-", "0.2829907536506653`"}], ",", "0.27152174711227417`", ",", 
    RowBox[{"-", "0.27031198143959045`"}], ",", "0.27210697531700134`", ",", 
    RowBox[{"-", "0.27559593319892883`"}], ",", 
    RowBox[{"-", "0.2665715217590332`"}], ",", 
    RowBox[{"-", "0.26733216643333435`"}], ",", "0.27808451652526855`", ",", 
    "0.2777681350708008`", ",", "0.2742084860801697`", ",", 
    "0.26807093620300293`", ",", 
    RowBox[{"-", "0.2757604718208313`"}], ",", "0.2728092074394226`", ",", 
    "0.2718900144100189`", ",", 
    RowBox[{"-", "0.2617648243904114`"}], ",", "0.2741314768791199`", ",", 
    RowBox[{"-", "0.28566479682922363`"}], ",", "0.2714158594608307`", ",", 
    "0.2738090753555298`", ",", 
    RowBox[{"-", "0.2655022144317627`"}], ",", 
    RowBox[{"-", "0.265768438577652`"}], ",", "0.27330946922302246`", ",", 
    "0.2773536145687103`", ",", "0.2243344932794571`", ",", 
    RowBox[{"-", "0.2776438295841217`"}], ",", "0.28134241700172424`", ",", 
    RowBox[{"-", "0.2723250985145569`"}], ",", 
    RowBox[{"-", "0.2653459906578064`"}], ",", "0.26917755603790283`", ",", 
    "0.2784492075443268`", ",", 
    RowBox[{"-", "0.2773756980895996`"}], ",", 
    RowBox[{"-", "0.2769007682800293`"}], ",", 
    RowBox[{"-", "0.26826757192611694`"}], ",", 
    RowBox[{"-", "0.2461451292037964`"}], ",", "0.26086941361427307`", ",", 
    "0.27508124709129333`", ",", 
    RowBox[{"-", "0.27284762263298035`"}], ",", 
    RowBox[{"-", "0.2820773720741272`"}], ",", "0.2685311436653137`", ",", 
    RowBox[{"-", "0.27729859948158264`"}], ",", 
    RowBox[{"-", "0.28030234575271606`"}], ",", "0.273470938205719`", ",", 
    "0.27762842178344727`", ",", 
    RowBox[{"-", "0.22095322608947754`"}], ",", 
    RowBox[{"-", "0.2662339508533478`"}], ",", 
    RowBox[{"-", "0.2557847499847412`"}], ",", "0.2715575098991394`", ",", 
    RowBox[{"-", "0.27493852376937866`"}], ",", "0.2764754891395569`", ",", 
    RowBox[{"-", "0.268993616104126`"}], ",", "0.27492132782936096`", ",", 
    RowBox[{"-", "0.2584754526615143`"}], ",", "0.27291926741600037`", ",", 
    "0.26701948046684265`", ",", 
    RowBox[{"-", "0.2818233072757721`"}], ",", "0.27604472637176514`", ",", 
    RowBox[{"-", "0.27010035514831543`"}], ",", "0.2754696011543274`", ",", 
    "0.27630674839019775`", ",", "0.2822200357913971`", ",", 
    "0.272810161113739`", ",", "0.2197631299495697`", ",", 
    RowBox[{"-", "0.27023354172706604`"}], ",", "0.28190985321998596`", ",", 
    "0.27573761343955994`", ",", "0.2729192078113556`", ",", 
    "0.2756313383579254`", ",", 
    RowBox[{"-", "0.2682414650917053`"}], ",", 
    RowBox[{"-", "0.2718408405780792`"}], ",", 
    RowBox[{"-", "0.23230905830860138`"}], ",", "0.2761670649051666`", ",", 
    "0.2760084867477417`", ",", 
    RowBox[{"-", "0.23195402324199677`"}], ",", 
    RowBox[{"-", "0.27861225605010986`"}], ",", "0.2707934081554413`", ",", 
    RowBox[{"-", "0.26564326882362366`"}], ",", "0.2764486074447632`", ",", 
    RowBox[{"-", "0.2666274905204773`"}], ",", 
    RowBox[{"-", "0.277059406042099`"}], ",", 
    RowBox[{"-", "0.286016583442688`"}], ",", "0.27866315841674805`", ",", 
    "0.28071531653404236`", ",", 
    RowBox[{"-", "0.27602332830429077`"}], ",", "0.27776551246643066`", ",", 
    "0.2759852409362793`", ",", 
    RowBox[{"-", "0.27462121844291687`"}], ",", "0.27009186148643494`", ",", 
    RowBox[{"-", "0.26942333579063416`"}], ",", "0.27138176560401917`", ",", 
    RowBox[{"-", "0.2645537257194519`"}], ",", 
    RowBox[{"-", "0.2707449197769165`"}], ",", "0.2515849173069`", ",", 
    "0.27729326486587524`", ",", "0.28173375129699707`", ",", 
    "0.2735138535499573`", ",", "0.2579498589038849`", ",", 
    RowBox[{"-", "0.2597035765647888`"}], ",", "0.2785435914993286`", ",", 
    RowBox[{"-", "0.22763386368751526`"}], ",", 
    RowBox[{"-", "0.2851041257381439`"}], ",", "0.2774450182914734`", ",", 
    RowBox[{"-", "0.2298865169286728`"}], ",", 
    RowBox[{"-", "0.22699908912181854`"}], ",", 
    RowBox[{"-", "0.27130287885665894`"}], ",", "0.27059265971183777`", ",", 
    RowBox[{"-", "0.283225953578949`"}], ",", "0.27164387702941895`", ",", 
    RowBox[{"-", "0.27009162306785583`"}], ",", 
    RowBox[{"-", "0.26734447479248047`"}], ",", "0.2668425738811493`", ",", 
    RowBox[{"-", "0.2603082060813904`"}], ",", 
    RowBox[{"-", "0.28177914023399353`"}], ",", 
    RowBox[{"-", "0.2716907560825348`"}], ",", "0.27910175919532776`", ",", 
    RowBox[{"-", "0.2697407901287079`"}], ",", 
    RowBox[{"-", "0.2855795621871948`"}], ",", 
    RowBox[{"-", "0.26306796073913574`"}], ",", 
    RowBox[{"-", "0.22951462864875793`"}], ",", "0.25562185049057007`", ",", 
    "0.2594258487224579`", ",", "0.2777492105960846`", ",", 
    "0.27966758608818054`", ",", 
    RowBox[{"-", "0.27148139476776123`"}], ",", 
    RowBox[{"-", "0.2732294499874115`"}], ",", 
    RowBox[{"-", "0.22775426506996155`"}], ",", "0.22321966290473938`", ",", 
    "0.2655845582485199`", ",", "0.2644440829753876`", ",", 
    RowBox[{"-", "0.27248623967170715`"}], ",", 
    RowBox[{"-", "0.26861461997032166`"}], ",", 
    RowBox[{"-", "0.2653011083602905`"}], ",", 
    RowBox[{"-", "0.27958306670188904`"}], ",", "0.27523812651634216`", ",", 
    "0.2821654677391052`", ",", "0.2735022008419037`", ",", 
    "0.26855728030204773`", ",", "0.2750105559825897`", ",", 
    "0.2727168798446655`", ",", "0.2769060730934143`", ",", 
    RowBox[{"-", "0.27265819907188416`"}], ",", "0.2681945562362671`", ",", 
    "0.2686285972595215`", ",", 
    RowBox[{"-", "0.2825024127960205`"}], ",", "0.26224881410598755`", ",", 
    RowBox[{"-", "0.2830045223236084`"}], ",", 
    RowBox[{"-", "0.2694414556026459`"}], ",", "0.2613455355167389`", ",", 
    "0.26918187737464905`", ",", "0.2746564447879791`", ",", 
    RowBox[{"-", "0.27497801184654236`"}], ",", "0.27114105224609375`", ",", 
    "0.28611910343170166`", ",", "0.27714279294013977`", ",", 
    RowBox[{"-", "0.2557414472103119`"}], ",", 
    RowBox[{"-", "0.22932636737823486`"}], ",", 
    RowBox[{"-", "0.2751937508583069`"}], ",", "0.2705628275871277`", ",", 
    RowBox[{"-", "0.2806331515312195`"}], ",", 
    RowBox[{"-", "0.27224206924438477`"}], ",", "0.27155816555023193`", ",", 
    "0.2730751633644104`", ",", 
    RowBox[{"-", "0.2638035714626312`"}], ",", "0.27851104736328125`", ",", 
    RowBox[{"-", "0.2760221064090729`"}], ",", 
    RowBox[{"-", "0.27398183941841125`"}], ",", 
    RowBox[{"-", "0.2575174868106842`"}], ",", "0.26432645320892334`", ",", 
    "0.2681245505809784`", ",", "0.25087612867355347`", ",", 
    RowBox[{"-", "0.2736840546131134`"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.909881551759838*^9, 3.9098815615733085`*^9}, 
   3.9100463786912217`*^9, 3.910046415583087*^9, 3.910053272188651*^9, 
   3.910650334620777*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"70cf972d-0df9-4651-a1a3-e7f9cab78715"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"d528a066-10b2-4c43-bf59-3f88f1b2e399"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dataset Creation", "Section",
 CellChangeTimes->{{3.9116719153269644`*^9, 
  3.911671927062662*^9}},ExpressionUUID->"8783985f-79fa-4c99-ae9f-\
9e7626cbe43f"],

Cell[CellGroupData[{

Cell["Import Embeddings", "Subsection",
 CellChangeTimes->{{3.9098920151069193`*^9, 3.909892020435858*^9}, {
  3.9098921717854385`*^9, 
  3.9098921828503747`*^9}},ExpressionUUID->"48c49601-bd82-4cf9-8f90-\
7f4b41547da0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataRaw", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$UserDocumentsDirectory", ",", " ", "\"\<WELP-PLAPT\>\"", ",", " ", 
       "\"\<data\>\"", ",", " ", "\"\<tensor_dataset100k.json\>\""}], "}"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataRaw", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", " ", "@@", " ", "#"}], " ", "&"}], " ", "/@", " ",
     "dataRaw"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9099369294465837`*^9, 3.9099369696542835`*^9}, {
   3.9099370110755763`*^9, 3.909937011400304*^9}, {3.9099374372769976`*^9, 
   3.9099374443184075`*^9}, {3.9099375272222924`*^9, 3.909937531655785*^9}, {
   3.909937688241046*^9, 3.9099377008192945`*^9}, {3.909937756708956*^9, 
   3.909937797901091*^9}, {3.909937851445735*^9, 3.909937851753973*^9}, 
   3.90993840523386*^9, {3.909939486210565*^9, 3.9099394889171333`*^9}, {
   3.909939534729265*^9, 3.909939536251178*^9}, {3.909940636855259*^9, 
   3.9099406374258347`*^9}, {3.9099406964964213`*^9, 
   3.9099406972459774`*^9}, {3.909940846195138*^9, 3.9099408985974655`*^9}, {
   3.909947579151523*^9, 3.9099475794331055`*^9}, {3.90994773699387*^9, 
   3.909947746963648*^9}, {3.9100205687361526`*^9, 3.9100205691365824`*^9}, {
   3.9100460900482974`*^9, 3.9100461596570044`*^9}, {3.9106498370726027`*^9, 
   3.9106498543363333`*^9}, {3.911570628947074*^9, 3.911570629948372*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"d682961e-7b69-4213-8047-acafaa242b2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Dataset", "[", "dataRaw", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9099374591404195`*^9, 3.9099374706854353`*^9}, {
   3.909937693116251*^9, 3.909937696572955*^9}, {3.9099385226010475`*^9, 
   3.90993852412111*^9}, 3.909938718446071*^9, 3.909939491977028*^9, {
   3.909939631460472*^9, 3.9099396541840487`*^9}, {3.9099397806678567`*^9, 
   3.9099397864921513`*^9}, 3.909940644350941*^9, 3.9099406956616216`*^9, 
   3.909947581622777*^9, 3.9099477447628307`*^9, {3.9115706773992195`*^9, 
   3.9115706830337515`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"df6bbc7f-b880-4fcf-9f5d-ba066589197c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "data"}]], "Input",
 CellChangeTimes->{{3.909939657119164*^9, 3.9099396602258577`*^9}, {
   3.9099397912807612`*^9, 3.9099398270954547`*^9}, {3.9099398923159876`*^9, 
   3.90993991380746*^9}, {3.909940036376548*^9, 3.909940039273258*^9}, 
   3.9099406717597866`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"f43a9ae4-2839-470f-8636-ba0c29f8c5e7"],

Cell[BoxData["100000"], "Output",
 CellChangeTimes->{
  3.9099396606692915`*^9, 3.90993975590276*^9, {3.909939800539859*^9, 
   3.909939827524351*^9}, {3.9099399014049063`*^9, 3.909939907093954*^9}, 
   3.909940039594991*^9, 3.9099406737700167`*^9, 3.9099407076353025`*^9, 
   3.9099481380382967`*^9, 3.9100464910349593`*^9, 3.910053383565399*^9, 
   3.9106496376743097`*^9, 3.9106499424081035`*^9, 3.91166869216381*^9, 
   3.9116720513580546`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"bace7bdd-85a7-474c-8f35-9f1f941424ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.909940678246107*^9, 3.9099406897273083`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"947e7a9f-b927-445e-b6fb-a462e6a12049"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"prot_embeddings" -> CompressedData["
1:eJxFmGd4E+fWtUe9mhJDqIlkeiCE0DtboYZO6CWgoZtOMMVAQAMEAqGFEjpI
1NB7b1s0E8CS5xlCCwSJ3sHYkqw+3+ac816f/+iyLGue2eVea03aoHFdhyo4
+lFzXKH6cfmmmeHIWBgz4gw8Zw1c06YiHuiVZ6lTl+GmLLPtcbqEuz8EnZxa
whRXntzFx7DyqSRwBxluGKfiuE0iFGmRkHuNZmjsm3C+WMCgut5oXedmUL6e
7FC8ZahdoxCyRojQJiajvh7DOjWUwv4qEg7ilf4KIxjUWiljhVEiBMSgo2EG
g7EdFELXadfRnhV2Dmwu4oPnQey5jWGLefly6c4MM9flQfIpwzbal860aR7o
4TP5t2czfDRebTMPZFBxmZnfksVg6syQY3Q1BsXuaNwldogw/YZGaLmWwRkd
J9RfwcD0nZnr1JCBLV/FZ+UyvHY6xTq9qghPGuX7zjVmWHptSBaeM7i+IeCT
ZzLcl6oWWm5hcO5D3LH3HsPj043+vZkM5s5XCf0bSHh2StR+ZIAX9iuU3Lnt
DK1TVC4rvU7+w+R/+S/Di28KfCOXMiwZTjj3NGbQyhmxb/6FgX+m0nrrHcNS
ZZLQ5LwI9XvGfK3eMOyhyLffuMlgq7kAV3SiPhkKnE1OMdjzUWertcqLlcoF
YYaSwbcTVMJnTgZTypj9u28xCLwJo7qSBEllyG6qwyBHUHJboyIcH2Pmnu5h
OKJWGMW7DIy/hyFrHNXBo3T1O88gfUzM/rYlwxc14/L+dgyHH4/7xISIdyWl
7UodhrcPxiyxktk4tXTCOdFB558chpQggx/TdMJcHYPwmTx8P4iBb5LZ1lbH
sNBRrdW4iaH3tNkaXsogEgg7rjwS4UqG7NxB9/HVSJ1V3MWwyOdh0HRkqIpE
LTPjDAfkqG390xkUSlX5f17BcO6XAfskI4PlUwP23pwEP05RCkdDHlj8NCEv
OMCw2sModr3FME2ht23eQHP5fcAXXi+CXDXfkpbCwNAkannQX4KSlhT34XMM
qkzPdbwt7YXVpZVC6S5U1zuys+wThm9zza6fP2ewJEPGpU0ltDdSct3fMdBl
huC8i+atQkh+eoyB/NHMfcgTwaI0uyxbGR4elm8Pd5RgRk4S2jdkuHEKx1/p
KOFHf8wid5Cg3XWT9ekbERfv0tgqZdD5ZmmEX68zXC5p+PoNPDjOo+aXtpdw
Tn+toGstwcUsja2jheGwiUH78bCIXVOCdmmxiGe+0Lpm2Bl2vKS1DZrPYKIl
hj8XkfCgT+2uTHu5cDLHdUuT8FCt4jbVtOvQLksnVDRLWD8zxX+1J8NvlUl8
SPUc8XtM/vkOg6xFGq66j8HTSMTZsyvNu6wQdg+h++2lt9mpzs3TSvDZb7Kh
yGotF93HcNAENb93EoMOPZL2jKoM17KgZWYBg8XjtNwC4sYNT569T1LE8sZ8
mET1FFqpBTlEXPkj6qvbj2H1f0P2v/eLmHtT4Tp6nMHPmzj3R9r/8n6VIBF/
9ueG5dhSEdnfnHVxtgjd1ppcv9BcDSij5WYbGZ6OJR1H6Py6IMcHijJ8PlHn
b/OcYYXdCbnxnyK0vV1gnz6ZIZMKWblxXuj+psDSdArDSr1jmPpSxG1N4lhp
OAPnznx5WArD2ZVN/io2ButLm/nOcxmMdJmEKa0Z6nOMfO8zDKZP56wDX4h4
aFgSDjaVwLo9JM+i9zOexRw+6l/HIgqh4yEGReG945HZC29isr1jIwbFzxi4
eRtE5GuG7L2pzuPH6l1lJ9P3S0phNXGq04SEg8sVQbyk5H55LsLa5RHsR3tZ
Y5VOSAszMP9i5mrUFXHKAaO77jQGx2MB58z9DLxfarncahK0KhmU+VUMZ1zg
+NlnPTghruG2zWCobM3Z0ipKmPF3nuPLY15Y/jQua6lfF3qaeFbeA13KJC3d
qG/deudhZkTEZooUa5tzVLe2etufvzHo/zDmfDud4Zcho2s99W/7aIX7lFPE
RUfDcuhzhk9GGG3NZzD4vEvIYdFLML5fisvbVYIPO3TuUpUlKD+bs1VqRrw9
mfQtviRC++uc7WszA/e4uDyyO8PmT/Suk8Tln0fkY9oZL/ySmfSVXsCwodZk
6zxTxKaj4s7fhjGovTkC4wYyvJUb861vz/DH73T+WzaG6S3MrrYzRdikVVpv
TGcQ7WJ0P13O0KXW2ObRddtmBiw5Jxh+7K4RPq5mULlqwhE9RHozUM3P6yTh
ZwmtaxTtw5P1Ctsg2tvA3Hdw/44XopHXuPykB9tPSuKlOQx+n6mzdRwm4jR9
zPKuVjYYWhj8yysxyDWGsM8KD5zsFZOfFWbYu15x6/yCG3jbmWdpdIlh3hda
YSXNefCZ0npqPsOC45yQ9qOINatrXW9bifCsh8k/aTBx7XHEMeppNhp6mPjS
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
uopTpEpw7qLSVfQfypkfgviK9N5d1mytsyQbLo8POPbz5Hc3aKxzybdFr2n4
baRDBWdDljFr6foFT2HsfC9e+ibsa0/5aMJCnXtXjPJwq4Ajx8tg6fq4YzvN
35ZZEWcHmnd+ZQgXkP6IkYRz0I/0uS0G65hKEth7aGyWbxm8u6Tzf0V5+e4U
o7WohUHJLK1rIXGhX2+t8Lg26UVlo/ssy8H177Qu8hNYZbfOP550JH/NS/iq
/TWcYU1YgkUljF3Ig3FzRXj1q9l9vRPxanPQ3uE+w2nfhn3K0SJ41iYdgd10
v2ujeLok6XdFjjv9gfRso9565ZQIo6Iy7NvuAf9aDe8in3an2GtLY40X673X
29p8EOHpPbX1fG/iZw/ZHiJury0XkCu7SZf/zndstkg4J2J2FSbft3uwLOfN
JF30J+En8pmnxTf4bpkHN54Iwn6/iKs3Ftifko+JnFPzVvIvddeHcRTp3J39
ButY8jnrvEZXVZrz+P4CSCPf+PhOwt6SuFJ8RgwmTGHIn9H4f/eK0HWM0XZw
E8POg1Jcu2n/hota161TEoRCnO3ifhHSKxVgB+rfnNF58kPyx9x2nb/9acrz
OxKWE68Y2i6Y+R3kd1KXRZ3NLoiwUVBYDQGGHr4kf7GIB7XjOL5WXy+czcz3
Tb0lQnSz3rWkjATudwGkvcAp0xI4lHKZcUiB7+MwD5bUxh0T55MvLl/M32MG
+WKvmR9A+rLsaIGcQfly7DCTrRflq7ZP4jijg4i/pSUdr3cy/Pdrhb9GWwZb
d4Xsg0pJqC2b6+vp8GD3QNgn7GP4zX0134bmfXhuzDKW9nzkoAQOrilBoq3G
P6iGhKsWcu5i5J8yjBH5KOWslYcUrvTvKafowvKlJQwGWwyuc8TFOvs01j3k
x6YtiVkOVGVw1KtxrZ/J4GUobF9BuT7yIWa3xUSUywaht5X8enYC+vYnH58w
WLt8TTp1NYDBJlQ/i9r1DfngCWs1rgl0v5oeCuHZOwatRhv8p8lX7Kodle2r
GP6UrrOWiog4rrPZ1Y7yeI8LCcdjynvKTnphk5rh+fcq7nk5hi3NAfnBDi/2
+9Fo3byV4RfDDf4/aM6PbDa5OTp37VFJ5+9nRMjpZOLmdCe+8fkyTz7yRY+g
Rdvdi/M761xn6D4C6Sp/o6u0jwqV9SviuCUetNdYRjnHHPRNJi5c2lfMdeS9
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
        "], "mol_embeddings" -> CompressedData["
1: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
4pDJrkb4nGKGCUO08H/REtLA
        "], "affinity" -> 0.691712141|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"prot_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"mol_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"affinity"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"prot_embeddings", "mol_embeddings", "affinity"}, {
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1024], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 768], 
        TypeSystem`Atom[Real]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"prot_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"mol_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"affinity"} -> 
        TypeSystem`PackageScope`AtomShape[60]|>, 1], "Type" -> 
     TypeSystem`Struct[{"prot_embeddings", "mol_embeddings", "affinity"}, {
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1024], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 768], 
        TypeSystem`Atom[Real]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 3, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["prot_embeddings", 
                  Style[
                  "prot_embeddings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["prot_embeddings"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prot_embeddings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1024], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1024], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["prot_embeddings"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prot_embeddings"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mol_embeddings", 
                  Style[
                  "mol_embeddings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mol_embeddings"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mol_embeddings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 768], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 768], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mol_embeddings"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mol_embeddings"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["affinity", 
                  Style[
                  "affinity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["affinity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["affinity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.691712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["affinity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{182., {46.134033098001964`, 51.865966901998036`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{182., {46.134033098001964`, 51.865966901998036`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.909940685475751*^9, 3.9099407091370945`*^9}, 
   3.9099481396890125`*^9, 3.910046491204954*^9, 3.9106496381174793`*^9, 
   3.910649943746298*^9, 3.911668693390134*^9, 3.9116720526215787`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"9ed081c6-f36b-4a66-bebe-6cb90e082eae"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Prepare Data For Training", "Subsection",
 CellChangeTimes->{{3.909941013994733*^9, 3.9099410229070644`*^9}, {
  3.909948143229324*^9, 
  3.90994815199083*^9}},ExpressionUUID->"55acf473-f533-4f65-877a-\
71eb5532ae45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", " ", 
        RowBox[{"\"\<concat_embeddings\>\"", " ", "->", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"#", "[", "\"\<prot_embeddings\>\"", "]"}], ",", " ", 
           RowBox[{"#", "[", "\"\<mol_embeddings\>\"", "]"}]}], "]"}]}]}], 
       "]"}], ")"}], " ", "&"}], " ", "/@", " ", "data"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9099410611467447`*^9, 3.9099410685898995`*^9}, {
  3.909941360239479*^9, 3.9099414166573915`*^9}, {3.909946914033044*^9, 
  3.909946924150159*^9}, {3.909947456380375*^9, 3.9099474804097843`*^9}, {
  3.909947597820702*^9, 3.909947598133284*^9}, {3.9099476955124454`*^9, 
  3.9099477015919504`*^9}, {3.909947814406619*^9, 3.9099478167966304`*^9}, {
  3.9099479459936724`*^9, 3.9099480076610513`*^9}, {3.9099481638003283`*^9, 
  3.909948182687015*^9}, {3.911570690338647*^9, 3.9115707076488957`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"54091813-4dee-4c2a-b6a9-246cccfc8fca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.909947773900098*^9, 3.909947789727951*^9}, {
  3.909948014216488*^9, 3.909948022462824*^9}, {3.9099484653626866`*^9, 
  3.909948465977629*^9}, {3.9099485595509057`*^9, 3.9099485597780313`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"f92213d9-cec2-4e78-a9a2-d6bf70a025dc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|"prot_embeddings" -> CompressedData["
1:eJxFmGd4E+fWtUe9mhJDqIlkeiCE0DtboYZO6CWgoZtOMMVAQAMEAqGFEjpI
1NB7b1s0E8CS5xlCCwSJ3sHYkqw+3+ac816f/+iyLGue2eVea03aoHFdhyo4
+lFzXKH6cfmmmeHIWBgz4gw8Zw1c06YiHuiVZ6lTl+GmLLPtcbqEuz8EnZxa
whRXntzFx7DyqSRwBxluGKfiuE0iFGmRkHuNZmjsm3C+WMCgut5oXedmUL6e
7FC8ZahdoxCyRojQJiajvh7DOjWUwv4qEg7ilf4KIxjUWiljhVEiBMSgo2EG
g7EdFELXadfRnhV2Dmwu4oPnQey5jWGLefly6c4MM9flQfIpwzbal860aR7o
4TP5t2czfDRebTMPZFBxmZnfksVg6syQY3Q1BsXuaNwldogw/YZGaLmWwRkd
J9RfwcD0nZnr1JCBLV/FZ+UyvHY6xTq9qghPGuX7zjVmWHptSBaeM7i+IeCT
ZzLcl6oWWm5hcO5D3LH3HsPj043+vZkM5s5XCf0bSHh2StR+ZIAX9iuU3Lnt
DK1TVC4rvU7+w+R/+S/Di28KfCOXMiwZTjj3NGbQyhmxb/6FgX+m0nrrHcNS
ZZLQ5LwI9XvGfK3eMOyhyLffuMlgq7kAV3SiPhkKnE1OMdjzUWertcqLlcoF
YYaSwbcTVMJnTgZTypj9u28xCLwJo7qSBEllyG6qwyBHUHJboyIcH2Pmnu5h
OKJWGMW7DIy/hyFrHNXBo3T1O88gfUzM/rYlwxc14/L+dgyHH4/7xISIdyWl
7UodhrcPxiyxktk4tXTCOdFB558chpQggx/TdMJcHYPwmTx8P4iBb5LZ1lbH
sNBRrdW4iaH3tNkaXsogEgg7rjwS4UqG7NxB9/HVSJ1V3MWwyOdh0HRkqIpE
LTPjDAfkqG390xkUSlX5f17BcO6XAfskI4PlUwP23pwEP05RCkdDHlj8NCEv
OMCw2sModr3FME2ht23eQHP5fcAXXi+CXDXfkpbCwNAkannQX4KSlhT34XMM
qkzPdbwt7YXVpZVC6S5U1zuys+wThm9zza6fP2ewJEPGpU0ltDdSct3fMdBl
huC8i+atQkh+eoyB/NHMfcgTwaI0uyxbGR4elm8Pd5RgRk4S2jdkuHEKx1/p
KOFHf8wid5Cg3XWT9ekbERfv0tgqZdD5ZmmEX68zXC5p+PoNPDjOo+aXtpdw
Tn+toGstwcUsja2jheGwiUH78bCIXVOCdmmxiGe+0Lpm2Bl2vKS1DZrPYKIl
hj8XkfCgT+2uTHu5cDLHdUuT8FCt4jbVtOvQLksnVDRLWD8zxX+1J8NvlUl8
SPUc8XtM/vkOg6xFGq66j8HTSMTZsyvNu6wQdg+h++2lt9mpzs3TSvDZb7Kh
yGotF93HcNAENb93EoMOPZL2jKoM17KgZWYBg8XjtNwC4sYNT569T1LE8sZ8
mET1FFqpBTlEXPkj6qvbj2H1f0P2v/eLmHtT4Tp6nMHPmzj3R9r/8n6VIBF/
9ueG5dhSEdnfnHVxtgjd1ppcv9BcDSij5WYbGZ6OJR1H6Py6IMcHijJ8PlHn
b/OcYYXdCbnxnyK0vV1gnz6ZIZMKWblxXuj+psDSdArDSr1jmPpSxG1N4lhp
OAPnznx5WArD2ZVN/io2ButLm/nOcxmMdJmEKa0Z6nOMfO8zDKZP56wDX4h4
aFgSDjaVwLo9JM+i9zOexRw+6l/HIgqh4yEGReG945HZC29isr1jIwbFzxi4
eRtE5GuG7L2pzuPH6l1lJ9P3S0phNXGq04SEg8sVQbyk5H55LsLa5RHsR3tZ
Y5VOSAszMP9i5mrUFXHKAaO77jQGx2MB58z9DLxfarncahK0KhmU+VUMZ1zg
+NlnPTghruG2zWCobM3Z0ipKmPF3nuPLY15Y/jQua6lfF3qaeFbeA13KJC3d
qG/deudhZkTEZooUa5tzVLe2etufvzHo/zDmfDud4Zcho2s99W/7aIX7lFPE
RUfDcuhzhk9GGG3NZzD4vEvIYdFLML5fisvbVYIPO3TuUpUlKD+bs1VqRrw9
mfQtviRC++uc7WszA/e4uDyyO8PmT/Suk8Tln0fkY9oZL/ySmfSVXsCwodZk
6zxTxKaj4s7fhjGovTkC4wYyvJUb861vz/DH73T+WzaG6S3MrrYzRdikVVpv
TGcQ7WJ0P13O0KXW2ObRddtmBiw5Jxh+7K4RPq5mULlqwhE9RHozUM3P6yTh
ZwmtaxTtw5P1Ctsg2tvA3Hdw/44XopHXuPykB9tPSuKlOQx+n6mzdRwm4jR9
zPKuVjYYWhj8yysxyDWGsM8KD5zsFZOfFWbYu15x6/yCG3jbmWdpdIlh3hda
YSXNefCZ0npqPsOC45yQ9qOINatrXW9bifCsh8k/aTBx7XHEMeppNhp6mPjS
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
uopTpEpw7qLSVfQfypkfgviK9N5d1mytsyQbLo8POPbz5Hc3aKxzybdFr2n4
baRDBWdDljFr6foFT2HsfC9e+ibsa0/5aMJCnXtXjPJwq4Ajx8tg6fq4YzvN
35ZZEWcHmnd+ZQgXkP6IkYRz0I/0uS0G65hKEth7aGyWbxm8u6Tzf0V5+e4U
o7WohUHJLK1rIXGhX2+t8Lg26UVlo/ssy8H177Qu8hNYZbfOP550JH/NS/iq
/TWcYU1YgkUljF3Ig3FzRXj1q9l9vRPxanPQ3uE+w2nfhn3K0SJ41iYdgd10
v2ujeLok6XdFjjv9gfRso9565ZQIo6Iy7NvuAf9aDe8in3an2GtLY40X673X
29p8EOHpPbX1fG/iZw/ZHiJury0XkCu7SZf/zndstkg4J2J2FSbft3uwLOfN
JF30J+En8pmnxTf4bpkHN54Iwn6/iKs3Ftifko+JnFPzVvIvddeHcRTp3J39
ButY8jnrvEZXVZrz+P4CSCPf+PhOwt6SuFJ8RgwmTGHIn9H4f/eK0HWM0XZw
E8POg1Jcu2n/hota161TEoRCnO3ifhHSKxVgB+rfnNF58kPyx9x2nb/9acrz
OxKWE68Y2i6Y+R3kd1KXRZ3NLoiwUVBYDQGGHr4kf7GIB7XjOL5WXy+czcz3
Tb0lQnSz3rWkjATudwGkvcAp0xI4lHKZcUiB7+MwD5bUxh0T55MvLl/M32MG
+WKvmR9A+rLsaIGcQfly7DCTrRflq7ZP4jijg4i/pSUdr3cy/Pdrhb9GWwZb
d4Xsg0pJqC2b6+vp8GD3QNgn7GP4zX0134bmfXhuzDKW9nzkoAQOrilBoq3G
P6iGhKsWcu5i5J8yjBH5KOWslYcUrvTvKafowvKlJQwGWwyuc8TFOvs01j3k
x6YtiVkOVGVw1KtxrZ/J4GUobF9BuT7yIWa3xUSUywaht5X8enYC+vYnH58w
WLt8TTp1NYDBJlQ/i9r1DfngCWs1rgl0v5oeCuHZOwatRhv8p8lX7Kodle2r
GP6UrrOWiog4rrPZ1Y7yeI8LCcdjynvKTnphk5rh+fcq7nk5hi3NAfnBDi/2
+9Fo3byV4RfDDf4/aM6PbDa5OTp37VFJ5+9nRMjpZOLmdCe+8fkyTz7yRY+g
Rdvdi/M761xn6D4C6Sp/o6u0jwqV9SviuCUetNdYRjnHHPRNJi5c2lfMdeS9
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
        "], "mol_embeddings" -> CompressedData["
1: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
4pDJrkb4nGKGCUO08H/REtLA
        "], "affinity" -> 0.691712141, "concat_embeddings" -> CompressedData["
1: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
        "]|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"prot_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"mol_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"affinity"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"concat_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "prot_embeddings", "mol_embeddings", "affinity", "concat_embeddings"}, {
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1024], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 768], 
        TypeSystem`Atom[Real], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1792]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"prot_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"mol_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"affinity"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"concat_embeddings"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "prot_embeddings", "mol_embeddings", "affinity", "concat_embeddings"}, {
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1024], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 768], 
        TypeSystem`Atom[Real], 
        TypeSystem`Vector[
         TypeSystem`Atom[Real], 1792]}], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["prot_embeddings", 
                  Style[
                  "prot_embeddings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["prot_embeddings"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prot_embeddings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1024], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1024], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["prot_embeddings"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["prot_embeddings"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mol_embeddings", 
                  Style[
                  "mol_embeddings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mol_embeddings"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mol_embeddings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 768], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 768], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["mol_embeddings"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["mol_embeddings"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["affinity", 
                  Style[
                  "affinity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["affinity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["affinity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.691712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["affinity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["concat_embeddings", 
                  Style[
                  "concat_embeddings", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["concat_embeddings"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["concat_embeddings"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1792], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1792], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["concat_embeddings"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["concat_embeddings"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{197., {59.634033098001964`, 65.36596690199804}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{197., {59.634033098001964`, 65.36596690199804}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.909948015439785*^9, 3.9099480227691345`*^9}, 
   3.9099481877682276`*^9, 3.909948471110749*^9, 3.909948560151186*^9, 
   3.9100464929523144`*^9, 3.910046599115199*^9, 3.910053398753928*^9, 
   3.9106496389810076`*^9, 3.910649948305128*^9, 3.911668695386935*^9, 
   3.911672055328741*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"3dd896de-0bd0-4ca7-96fc-6b3c12a3f3a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"train", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"Length", "[", "data", "]"}], "*", "0.9"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "train"}]}], "Input",
 CellChangeTimes->{{3.909948679961256*^9, 3.909948683411852*^9}, {
   3.909949089637044*^9, 3.9099490924707336`*^9}, {3.9099491968410378`*^9, 
   3.909949198027009*^9}, {3.9099492750329275`*^9, 3.9099492875899086`*^9}, {
   3.9099493977151294`*^9, 3.909949406037058*^9}, {3.909950132174063*^9, 
   3.9099501799390125`*^9}, 3.909950684711171*^9, {3.9099508257344327`*^9, 
   3.909950829877878*^9}, {3.909958272753399*^9, 3.909958272855611*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"38352e7e-e9f5-499c-b816-fb664cde0c19"],

Cell[BoxData["90000"], "Output",
 CellChangeTimes->{3.9099508319823933`*^9, 3.9099582942997274`*^9, 
  3.9099585489209394`*^9, 3.909981086404448*^9, 3.910020737902993*^9, 
  3.9100464935408993`*^9, 3.910046599689668*^9, 3.9101193284947224`*^9, 
  3.9106496393071165`*^9, 3.9106499503006124`*^9, 3.9116686960327215`*^9, 
  3.9116720559824724`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"af37c5b5-ef8d-4f60-a6e3-97e55ef161b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"data", ",", "train"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "test"}]}], "Input",
 CellChangeTimes->{{3.909948916399723*^9, 3.909948917750747*^9}, {
   3.909950205050912*^9, 3.909950205505521*^9}, {3.909950264168948*^9, 
   3.90995028278723*^9}, 3.909950739649819*^9, {3.909950833833449*^9, 
   3.909950836228704*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"62c09de5-d472-4ace-9fb6-daed1421d645"],

Cell[BoxData["10000"], "Output",
 CellChangeTimes->{3.9099508368988237`*^9, 3.90995829619178*^9, 
  3.909958549974601*^9, 3.90998108783243*^9, 3.9100207478131447`*^9, 
  3.910046501900112*^9, 3.91004660811032*^9, 3.910119337310768*^9, 
  3.9106496467865305`*^9, 3.9106499594870996`*^9, 3.9116687046403203`*^9, 
  3.911672064626535*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"0f55b974-a88e-496a-a8f9-49febea5f493"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainInputs", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"train", "[", 
     RowBox[{"All", ",", "\"\<concat_embeddings\>\""}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"trainOutputs", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"train", "[", 
     RowBox[{"All", ",", "\"\<affinity\>\""}], "]"}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.909951088006054*^9, 3.9099511026790524`*^9}, {
   3.9099513077312293`*^9, 3.9099513329524646`*^9}, {3.9099550892582912`*^9, 
   3.909955093132696*^9}, 3.9099553429560947`*^9, {3.9099563023049383`*^9, 
   3.9099563040971675`*^9}, 3.9099571174630527`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"bcedf6a0-8858-43cf-a7a9-924ceb53f143"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testInputs", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"test", "[", 
     RowBox[{"All", ",", "\"\<concat_embeddings\>\""}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"testOutputs", "=", 
   RowBox[{"Normal", "@", 
    RowBox[{"test", "[", 
     RowBox[{"All", ",", "\"\<affinity\>\""}], "]"}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.909951088006054*^9, 3.9099511026790524`*^9}, {
   3.9099513077312293`*^9, 3.9099513329524646`*^9}, {3.9099550892582912`*^9, 
   3.909955093132696*^9}, {3.9099553429560947`*^9, 3.909955359474533*^9}, 
   3.9099571225658474`*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"5d0479af-a56e-442e-bd42-02a9bb9db39a"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model Creation", "Section",
 CellChangeTimes->{{3.9100533678678446`*^9, 3.9100533700231614`*^9}, {
  3.910651545931266*^9, 3.910651547365039*^9}, {3.9106541853985324`*^9, 
  3.9106541896439037`*^9}},ExpressionUUID->"af59b1f2-a106-40b7-850c-\
b406fc2eaf60"],

Cell[CellGroupData[{

Cell["Initialize Different Neural Networks", "Subsection",
 CellChangeTimes->{{3.910667175915612*^9, 
  3.9106671772566433`*^9}},ExpressionUUID->"34031fc7-9615-4ddc-b23b-\
f0808f7c2f68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NetParameterCount", "[", "nnet_", "]"}], ":=", 
  RowBox[{"Total", "[", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "@@", 
      RowBox[{"Dimensions", "[", "#", "]"}]}], "&"}], "/@", 
    RowBox[{"Quiet", "[", "\n", "\t\t", 
     RowBox[{"Select", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Flatten", "[", "\n", "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"Join", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"NetExtract", "[", 
            RowBox[{"nnet", ",", 
             RowBox[{"{", 
              RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"NetExtract", "[", 
            RowBox[{"nnet", ",", 
             RowBox[{"{", 
              RowBox[{"All", ",", "\"\<Biases\>\""}], "}"}]}], "]"}]}], "]"}],
          "}"}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"MissingQ", "[", "#", "]"}], "]"}], "&"}]}], "\n", "\t\t", 
      "]"}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.910024309518396*^9, 3.910024311850499*^9}, {
   3.9100243842586823`*^9, 3.910024387734864*^9}, {3.910024445438048*^9, 
   3.9100244669530478`*^9}, 3.910046658055966*^9, {3.9101189867649956`*^9, 
   3.9101189936970825`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"cde82127-c427-4370-8e61-a1213cd58549"],

Cell[CellGroupData[{

Cell["Dense neural networks of different sizes", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9106669464678135`*^9, 3.910666963419501*^9}, 
   3.9106670053447704`*^9},ExpressionUUID->"ce564bb7-56e6-473a-b9f9-\
b5e411b5ba47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"netDense238k", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "128", "]"}], ",", "Ramp", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "64", "]"}], ",", "Ramp", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "1", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "->", "1792"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"netDense238k", "=", 
  RowBox[{
  "NetInitialize", "[", "netDense238k", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NetParameterCount", "[", "netDense238k", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.909954333624861*^9, 3.909954333626869*^9}, {
   3.9099546012029285`*^9, 3.9099546018195944`*^9}, 3.909954649151846*^9, {
   3.909954936722696*^9, 3.9099549577520666`*^9}, {3.909956640114616*^9, 
   3.9099566505529394`*^9}, {3.909956680788104*^9, 3.909956687496849*^9}, {
   3.909957246300339*^9, 3.9099572515858536`*^9}, {3.909957819729806*^9, 
   3.909957819992828*^9}, {3.9099580714077077`*^9, 3.9099580870151854`*^9}, {
   3.909958603959533*^9, 3.909958606145589*^9}, {3.909958930462202*^9, 
   3.9099589305870557`*^9}, {3.9099589764170647`*^9, 
   3.9099589803946548`*^9}, {3.9099811700816517`*^9, 
   3.9099811835353975`*^9}, {3.90998128152629*^9, 3.909981304731513*^9}, {
   3.909981359529007*^9, 3.909981362938651*^9}, {3.909983618534058*^9, 
   3.9099836204286785`*^9}, {3.909983751681897*^9, 3.9099837653195486`*^9}, {
   3.910020789961317*^9, 3.9100207920971107`*^9}, {3.9100212236934357`*^9, 
   3.91002123294011*^9}, {3.9100216138420286`*^9, 3.9100216234959145`*^9}, 
   3.9100219239307203`*^9, {3.910025445621727*^9, 3.910025453824823*^9}, {
   3.9100255284410944`*^9, 3.910025562131671*^9}, {3.9100255949115486`*^9, 
   3.910025602239092*^9}, {3.910026169490904*^9, 3.9100261697816086`*^9}, {
   3.91002653284774*^9, 3.9100265329317303`*^9}, {3.910026877946718*^9, 
   3.9100268964563737`*^9}, {3.910028747530244*^9, 3.9100287532816467`*^9}, {
   3.9100290855980268`*^9, 3.9100291135788994`*^9}, {3.9100304387717457`*^9, 
   3.9100304510151625`*^9}, {3.9100420656368046`*^9, 
   3.9100420872300816`*^9}, {3.9101128317589245`*^9, 3.91011283196902*^9}, {
   3.9101133002170877`*^9, 3.910113306810546*^9}, {3.910114096751924*^9, 
   3.9101140974564834`*^9}, {3.9101143341764035`*^9, 3.910114335655804*^9}, {
   3.910119195718251*^9, 3.9101191970808372`*^9}, 3.9106670053447704`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"4cbd71ae-4dd6-48b7-976c-5be0c24e8b55"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 1792}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{128}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {128}, "$OutputSize" -> 128, 
                    "$InputSize" -> 1792, "$InputDimensions" -> {1792}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 128}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 128, "$InputDimensions" -> {128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.2.1"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9106670053447704`*^9, 3.91166870531698*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"cc1efc29-774e-456d-87f5-129842cc7910"],

Cell[BoxData["237825"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.9106670053447704`*^9, 3.9116687054711533`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f7fd5d89-5a77-4243-a4c9-bbde488e7dd3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"netDense2m", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "1024", "]"}], ",", "Ramp", ",", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "160", "]"}], ",", "Ramp", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "1", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "->", "1792"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"netDense2m", "=", 
  RowBox[{"NetInitialize", "[", "netDense2m", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NetParameterCount", "[", "netDense2m", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.910113326225498*^9, 3.910113372852347*^9}, {
   3.9101134137558327`*^9, 3.910113431501696*^9}, {3.910113511042137*^9, 
   3.91011353987679*^9}, 3.9101141012468405`*^9, {3.9101143199736924`*^9, 
   3.9101143297236376`*^9}, {3.9101191911396*^9, 3.9101191928677487`*^9}, 
   3.9106670053447704`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"e1a1f1dd-3255-4172-9dd1-927fa21757d5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 1792}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 1792, "$InputDimensions" -> {1792}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 1024, "$SpatialDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{160, 1024}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{160}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {160}, "$OutputSize" -> 160, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {160}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 160}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 160, "$InputDimensions" -> {160}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{160}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.2.1"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 160\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 160\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.910667005345771*^9, 3.9116687056920624`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"75476cab-a86e-4ccf-ab64-30e5248b0337"],

Cell[BoxData["2001217"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.910667005345771*^9, 3.9116687058342576`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"35cedddc-9feb-45d5-a81d-fa043b0f96fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"netDense1214k", "=", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "512", "]"}], ",", "Ramp", ",", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "512", "]"}], ",", "Ramp", ",", 
       RowBox[{"DropoutLayer", "[", "0.2", "]"}], ",", 
       RowBox[{"BatchNormalizationLayer", "[", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "64", "]"}], ",", "Ramp", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "1", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "->", "1792"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"netDense1214k", "=", 
  RowBox[{
  "NetInitialize", "[", "netDense1214k", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NetParameterCount", "[", "netDense1214k", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.910113596900378*^9, 3.910113611352851*^9}, {
   3.9101136669828615`*^9, 3.9101137045102496`*^9}, {3.9101141027258487`*^9, 
   3.910114133484394*^9}, {3.9101143398000717`*^9, 3.9101143500248203`*^9}, {
   3.9101191860066814`*^9, 3.910119187598802*^9}, 3.910667005345771*^9, 
   3.9116687883457217`*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"7d3888dd-bb07-4a5b-8360-5c8d46a57468"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 1792}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1792, "$InputDimensions" -> {1792}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 512, "$SpatialDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 512, "$SpatialDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 512}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
                    "10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>|>, 
                    "11" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.2.1"|>|>|>, NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.910113613483404*^9, {3.9101136688835306`*^9, 3.910113706484511*^9}, 
   3.9101138523867865`*^9, 3.910119133291683*^9, 3.9101192149193153`*^9, 
   3.910667005345771*^9, 3.911668706230299*^9, 3.911670186817145*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"68d3b371-2b50-45ef-9fcd-ee2692db043a"],

Cell[BoxData["1214593"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.910113613483404*^9, {3.9101136688835306`*^9, 3.910113706484511*^9}, 
   3.9101138523867865`*^9, 3.910119133291683*^9, 3.9101192149193153`*^9, 
   3.910667005345771*^9, 3.911668706230299*^9, 3.911670186973011*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"5bc64f00-b9cc-4302-8d51-ed8516858ae8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Branching neural network", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.9106670144670744`*^9, 3.91066702140958*^9}, 
   3.9106671011004906`*^9},ExpressionUUID->"0bce2f9b-8ada-437f-934c-\
8e141f1be25e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"netBranching", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<ProtOnly\>\"", "->", 
        RowBox[{"PartLayer", "[", 
         RowBox[{"1", ";;", "1024"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<MolOnly\>\"", "->", 
        RowBox[{"PartLayer", "[", 
         RowBox[{"1025", ";;", "1792"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<ProtLinear\>\"", "->", 
        RowBox[{"LinearLayer", "[", "512", "]"}]}], ",", 
       RowBox[{"\"\<ProtRamp\>\"", "->", "Ramp"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<MolLinear\>\"", "->", 
        RowBox[{"LinearLayer", "[", "512", "]"}]}], ",", 
       RowBox[{"\"\<MolRamp\>\"", "->", "Ramp"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Combined\>\"", "->", 
        RowBox[{"ThreadingLayer", "[", "Plus", "]"}]}], ",", 
       RowBox[{"\"\<Normalize\>\"", "->", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Linear1\>\"", "->", 
        RowBox[{"LinearLayer", "[", "512", "]"}]}], ",", 
       RowBox[{"\"\<Ramp1\>\"", "->", "Ramp"}], ",", 
       RowBox[{"\"\<Dropout1\>\"", "->", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Linear2\>\"", "->", 
        RowBox[{"LinearLayer", "[", "64", "]"}]}], ",", 
       RowBox[{"\"\<Ramp2\>\"", "->", "Ramp"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<FinalLinear\>\"", "->", 
        RowBox[{"LinearLayer", "[", "1", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", 
        RowBox[{"\"\<ProtOnly\>\"", "->", 
         RowBox[{"\"\<ProtLinear\>\"", "->", "\"\<ProtRamp\>\""}]}]}], ",", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "->", 
        RowBox[{"\"\<MolOnly\>\"", "->", 
         RowBox[{"\"\<MolLinear\>\"", "->", "\"\<MolRamp\>\""}]}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<ProtRamp\>\"", ",", "\"\<MolRamp\>\""}], "}"}], "->", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Combined\>\"", "->", 
         RowBox[{"\"\<Normalize\>\"", "->", "\[IndentingNewLine]", 
          RowBox[{"\"\<Linear1\>\"", "->", 
           RowBox[{"\"\<Ramp1\>\"", "->", "\[IndentingNewLine]", 
            RowBox[{"\"\<Dropout1\>\"", "->", "\[IndentingNewLine]", 
             RowBox[{"\"\<Linear2\>\"", "->", 
              RowBox[{"\"\<Ramp2\>\"", "->", 
               RowBox[{"\"\<FinalLinear\>\"", "->", 
                RowBox[{
                "NetPort", "[", "\"\<Output\>\"", "]"}]}]}]}]}]}]}]}]}]}]}], 
      "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "->", "1792"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", "\"\<Scalar\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"netBranching", "=", 
  RowBox[{"NetInitialize", "[", "netBranching", "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.9101142314347997`*^9, 3.910114251146826*^9}, {
   3.9101143772125053`*^9, 3.910114378569604*^9}, {3.910114550193469*^9, 
   3.910114551965592*^9}, {3.9101146551894507`*^9, 3.910114655573701*^9}, {
   3.9101149195622177`*^9, 3.910114924702112*^9}, {3.910114958692397*^9, 
   3.9101149646356215`*^9}, {3.910115223935285*^9, 3.9101152256037436`*^9}, {
   3.9101155525712337`*^9, 3.9101157398459616`*^9}, {3.910115788219839*^9, 
   3.9101158416341133`*^9}, {3.910115871814997*^9, 3.9101159077496924`*^9}, {
   3.91011594392319*^9, 3.9101159449223886`*^9}, {3.9101159863215513`*^9, 
   3.9101160352985177`*^9}, {3.910116198022385*^9, 3.910116362539587*^9}, {
   3.910116395460289*^9, 3.910116400813568*^9}, {3.9101165050562706`*^9, 
   3.910116544964324*^9}, {3.910116578464431*^9, 3.9101165787333164`*^9}, {
   3.9101166333940554`*^9, 3.9101166740195456`*^9}, {3.9101167286671333`*^9, 
   3.9101168039712167`*^9}, {3.9101168667321815`*^9, 3.910117040068204*^9}, {
   3.910117074975938*^9, 3.9101170870098906`*^9}, {3.9101174832544603`*^9, 
   3.910117496963283*^9}, {3.9101177495924053`*^9, 3.9101177523385296`*^9}, {
   3.9101178182693624`*^9, 3.9101178521885552`*^9}, {3.9101185253253603`*^9, 
   3.910118581655469*^9}, {3.9101186154480476`*^9, 3.910118616923691*^9}, {
   3.910118930094761*^9, 3.910118939360248*^9}, {3.910119037586876*^9, 
   3.910119096391694*^9}, {3.9101192037050877`*^9, 3.9101192237068405`*^9}, {
   3.9101199645412154`*^9, 3.9101199839407673`*^9}, {3.910120037394414*^9, 
   3.910120051470847*^9}, {3.9101202485771065`*^9, 3.91012028148409*^9}, {
   3.910120394521596*^9, 3.9101204332227745`*^9}, {3.910654221691941*^9, 
   3.9106542300477247`*^9}, 3.9106671011004906`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"ca1be931-aa70-4101-9bc7-f70b10378299"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolOnly\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    
                    Offset[{0, -13.5}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtOnly\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.9999999732051, 
                    1.000000294743867}], 
                    
                    Offset[{0, -13.5}, {-10.9999999732051, 
                    1.000000294743867}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Combined\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    Offset[{0, -13.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Normalize\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Dropout1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Linear2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"FinalLine..\"", "\"FinalLinear\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "FinalLinear", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Linear1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ramp1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ramp2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolLinear\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{0, -13.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolRamp\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    
                    Offset[{0, -13.5}, {-8.999999999999996, 
                    2.411540732620606*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtLinear\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    Offset[{0, -13.5}, {-9.9999999732051, 1.00000026794897}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtRamp\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.9999999732051, 1.000000241154073}], 
                    
                    Offset[{0, -13.5}, {-8.9999999732051, 
                    1.000000241154073}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"1792\"", TraditionalForm], 
                    
                    Offset[{1.473719336601483*^-7, 
                    5.499999999999997}, {-11.449999999999996`, 
                    3.0680157098339927`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117876`*^-8}], 
                    InsetBox[
                    FormBox["\"1792\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-11.449999985262803`, 
                    0.5500003068015709}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-7.4499999732051005`, 
                    1.0000001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-9.449999999999996, 
                    2.532117769251636*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"768\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-10.449999999999996`, 
                    2.8000667395428143`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    Offset[{-3.8890871923183177`, 
                    3.889087400733702}, {-8.449999985262803, 
                    0.5500002264168798}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.7071067622396942}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999973205099, 
                    1.0000002532117764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"1024\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-10.449999973205099`, 
                    1.0000002800066736`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-8.4499999732051, 
                    1.0000002264168797`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-9.999999999999996, 
                    2.679489702911784*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 
                    1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.9999999732051, 
                    1.000000294743867}, {-9.9999999732051, 
                    1.00000026794897}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.9999999732051, 
                    1.000000241154073}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999999999996`, 
                    3.0680157098339927`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489702911789*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999985262803`, 
                    0.5500003068015709}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999732051005`, 
                    1.0000001996219825`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999999999996, 
                    2.532117769251636*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999999999996`, 
                    2.8000667395428143`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999985262803, 
                    0.5500002264168798}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999973205099, 
                    1.0000002532117764`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999973205099`, 
                    1.0000002800066736`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.4499999732051, 
                    1.0000002264168797`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.999999999999996`, 2.9474386732029625`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    GrayLevel[0.33], 13, Bold, StripOnInput -> False], 
                    TraditionalForm]], {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolOnly\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolOnly", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.9999999732051, 1.000000294743867}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    GrayLevel[0.33], 13, Bold, StripOnInput -> False], 
                    TraditionalForm]], {-10.9999999732051, 
                    1.000000294743867}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtOnly\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtOnly", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.9999999732051, 1.000000214359176}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-7.9999999732051, 
                    1.000000214359176}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Combined\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Combined", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{-10.5, -10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{10.5, 10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"BN\"", Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Normalize\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "BatchNormalizationLayer", FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Normalize", Bold], 
                    Style[
                    BatchNormalizationLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"D\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dropout1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "DropoutLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Dropout1", Bold], 
                    Style[
                    DropoutLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999973205102, 1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Linear2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Linear2", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"FinalLinear\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["FinalLinear", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999973205101, 
                    1.0000001607693818`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-5.999999973205101, 1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Linear1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Linear1", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ramp1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ramp1", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ramp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ramp2", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-9.999999999999996, 2.679489702911784*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolLinear\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolLinear", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.999999999999996, 
                    2.411540732620606*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolRamp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolRamp", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{-10.5, -10.5}, {-9.9999999732051, 
                    1.00000026794897}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{10.5, 10.5}, {-9.9999999732051, 
                    1.00000026794897}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-9.9999999732051, 1.00000026794897}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtLinear\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtLinear", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.9999999732051, 1.000000241154073}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.9999999732051, 
                    1.000000241154073}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtRamp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtRamp", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-10.9999999732051, 
                    1.000000294743867}, {-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}, {-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}, {-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 1.000000241154073}},
                     NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 21, 21, 21, 21, 21, 8, 21, 21, 21, 21, 
                    21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {711.5000014737192, 97.50000294743867}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{25., 26.5}, {27.5, 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "ProtOnly" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 1024]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1792}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "MolOnly" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1025, 1792]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1792}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ProtLinear" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    1024}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "MolLinear" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "ProtRamp" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "MolRamp" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Combined" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[Automatic]|>, 
                    "Inputs" -> <|
                    "Input1" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Normalize" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 512, "$SpatialDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Linear1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    512}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Ramp1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Dropout1" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Linear2" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 512}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Ramp2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "FinalLinear" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.2.1"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtOnly", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolOnly", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtLinear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtOnly", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolLinear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolOnly", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtRamp", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtLinear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolRamp", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolLinear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtRamp", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolRamp", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Normalize", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Normalize", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FinalLinear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FinalLinear", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MolOnly"], 
                    NeuralNetworks`NetPath["Nodes", "ProtOnly"], 
                    NeuralNetworks`NetPath["Nodes", "Combined"], 
                    NeuralNetworks`NetPath["Nodes", "Normalize"], 
                    NeuralNetworks`NetPath["Nodes", "Dropout1"], 
                    NeuralNetworks`NetPath["Nodes", "Linear2"], 
                    NeuralNetworks`NetPath["Nodes", "FinalLinear"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Linear1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp2"], 
                    NeuralNetworks`NetPath["Nodes", "MolLinear"], 
                    NeuralNetworks`NetPath["Nodes", "MolRamp"], 
                    NeuralNetworks`NetPath["Nodes", "ProtLinear"], 
                    NeuralNetworks`NetPath["Nodes", "ProtRamp"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MolOnly"], 
                    NeuralNetworks`NetPath["Nodes", "ProtOnly"], 
                    NeuralNetworks`NetPath["Nodes", "Combined"], 
                    NeuralNetworks`NetPath["Nodes", "Normalize"], 
                    NeuralNetworks`NetPath["Nodes", "Dropout1"], 
                    NeuralNetworks`NetPath["Nodes", "Linear2"], 
                    NeuralNetworks`NetPath["Nodes", "FinalLinear"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Linear1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp2"], 
                    NeuralNetworks`NetPath["Nodes", "MolLinear"], 
                    NeuralNetworks`NetPath["Nodes", "MolRamp"], 
                    NeuralNetworks`NetPath["Nodes", "ProtLinear"], 
                    NeuralNetworks`NetPath["Nodes", "ProtRamp"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.910116703555888*^9, 3.9101170454415455`*^9, 3.910117087670061*^9, 
   3.9101171586492753`*^9, 3.9101174984581757`*^9, 3.9101177533642187`*^9, 
   3.9101178395651264`*^9, 3.910118466124708*^9, 3.9101185374131813`*^9, {
   3.9101185731144423`*^9, 3.9101185844848537`*^9}, 3.9101186191498003`*^9, 
   3.9101189997112703`*^9, {3.9101190399350805`*^9, 3.9101190670124264`*^9}, 
   3.9101190974546223`*^9, {3.9101192077377405`*^9, 3.91011922450471*^9}, 
   3.91011999533684*^9, {3.910120042112625*^9, 3.9101200521656847`*^9}, 
   3.910120282796826*^9, {3.9101204065241303`*^9, 3.910120423481183*^9}, 
   3.9106499677431774`*^9, 3.91065225043666*^9, 3.910667101101493*^9, 
   3.9116687082915945`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"cc35530e-d375-4f9e-be5f-45c969629f7f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Train Neural Networks", "Subsection",
 CellChangeTimes->{{3.9099548227763677`*^9, 3.909954828098688*^9}, 
   3.9106672886699324`*^9},ExpressionUUID->"df39cdf3-8b9a-4f38-b201-\
e0b57a1122a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrainingProtocol", "[", 
   RowBox[{
   "net_", ",", "trainInputs_", ",", "trainOutputs_", ",", "testInputs_", ",",
     "testOutputs_"}], "]"}], ":=", 
  RowBox[{"NetTrain", "[", "\n", "\t", 
   RowBox[{"net", ",", "\n", "\t", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "->", "trainInputs"}], ",", 
      RowBox[{"\"\<Output\>\"", "->", "trainOutputs"}]}], "|>"}], ",", "\n", 
    "\t", 
    RowBox[{"LossFunction", "->", 
     RowBox[{"MeanSquaredLossLayer", "[", "]"}]}], ",", "\n", "\t", 
    RowBox[{"BatchSize", "->", "32"}], ",", "\n", "\t", 
    RowBox[{"MaxTrainingRounds", "->", "60"}], ",", "\n", "\t", 
    RowBox[{"ValidationSet", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "->", "testInputs"}], ",", 
       RowBox[{"\"\<Output\>\"", "->", "testOutputs"}]}], "|>"}]}], ",", "\n",
     "\t", 
    RowBox[{"TrainingProgressReporting", "->", "\"\<Panel\>\""}], ",", "\n", 
    "\t", 
    RowBox[{"WorkingPrecision", "\[Rule]", "\"\<Real32\>\""}], ",", "\n", 
    "\t", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.910113159961425*^9, 3.910113262632827*^9}, {
  3.9106670674256477`*^9, 3.9106670915232906`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a8d04031-08c3-4bf7-b9b8-658ed6405cba"],

Cell[CellGroupData[{

Cell["Training dense neural networks", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9106670286913214`*^9, 
  3.910667042014228*^9}},ExpressionUUID->"04a60efb-f01b-4097-b02d-\
8cb76112ee29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainedDense238k", "=", 
   RowBox[{"TrainingProtocol", "[", "netDense238k", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainedDense2m", "=", 
   RowBox[{"TrainingProtocol", "[", "netDense2m", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainedDense1214k", "=", 
   RowBox[{"TrainingProtocol", "[", "netDense1214k", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.9099546477475266`*^9, 3.9099546477480984`*^9}, 
   3.9099547936527615`*^9, {3.90995505178884*^9, 3.9099550561116066`*^9}, {
   3.9099551257876043`*^9, 3.9099551272457447`*^9}, {3.9099552994414797`*^9, 
   3.9099553373835506`*^9}, {3.9099561383715334`*^9, 
   3.9099561530704217`*^9}, {3.9099576659560537`*^9, 
   3.9099576681899047`*^9}, {3.909958313468606*^9, 3.909958313689849*^9}, {
   3.909958434536993*^9, 3.9099584386966763`*^9}, {3.90995891061716*^9, 
   3.909958926212792*^9}, 3.9099590586734447`*^9, {3.9099814206322193`*^9, 
   3.9099814207259693`*^9}, {3.909983662867047*^9, 3.909983664303387*^9}, {
   3.9100212445087805`*^9, 3.910021244625951*^9}, {3.9100256305840635`*^9, 
   3.910025630698577*^9}, {3.910025976843134*^9, 3.9100259770133514`*^9}, {
   3.9100312570924845`*^9, 3.910031268089466*^9}, {3.910046285312828*^9, 
   3.9100462854094076`*^9}, {3.9101132681611586`*^9, 
   3.9101132781324244`*^9}, {3.9101137465058427`*^9, 
   3.9101137900761185`*^9}, {3.910113822753865*^9, 3.9101138348555007`*^9}, {
   3.9101141543736897`*^9, 3.910114159370533*^9}, {3.9101146097034206`*^9, 
   3.9101146394063063`*^9}, {3.910119126105666*^9, 3.910119127987506*^9}, 
   3.910667042014228*^9, {3.911670171331399*^9, 
   3.9116701811695776`*^9}},ExpressionUUID->"73b89ea1-b5ef-4332-8d7e-\
97c03e1fdfb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training branching neural network", "Subsubsection",
 CellChangeTimes->{{3.910667220598722*^9, 
  3.910667227365097*^9}},ExpressionUUID->"591572ec-2d72-4cc3-a17a-\
c8ee786cf5fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedBranching", "=", 
  RowBox[{"TrainingProtocol", "[", 
   RowBox[{
   "netBranching", ",", "trainInputs", ",", "trainOutputs", ",", "testInputs",
     ",", "testOutputs"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9101191531519732`*^9, 3.910119172734824*^9}, {
  3.9101192357439127`*^9, 3.9101192384942617`*^9}, {3.910119514327989*^9, 
  3.9101195393529673`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"25cb9f7b-0906-4b20-afb6-11f6d0eada71"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolOnly\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    
                    Offset[{0, -13.5}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtOnly\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.9999999732051, 
                    1.000000294743867}], 
                    
                    Offset[{0, -13.5}, {-10.9999999732051, 
                    1.000000294743867}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Combined\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    Offset[{0, -13.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Normalize\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Dropout1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Linear2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"FinalLine..\"", "\"FinalLinear\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "FinalLinear", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Linear1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ramp1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ramp2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolLinear\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{0, -13.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolRamp\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    
                    Offset[{0, -13.5}, {-8.999999999999996, 
                    2.411540732620606*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtLinear\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    Offset[{0, -13.5}, {-9.9999999732051, 1.00000026794897}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtRamp\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.9999999732051, 1.000000241154073}], 
                    
                    Offset[{0, -13.5}, {-8.9999999732051, 
                    1.000000241154073}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"1792\"", TraditionalForm], 
                    
                    Offset[{1.473719336601483*^-7, 
                    5.499999999999997}, {-11.449999999999996`, 
                    3.0680157098339927`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117876`*^-8}], 
                    InsetBox[
                    FormBox["\"1792\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-11.449999985262803`, 
                    0.5500003068015709}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-7.4499999732051005`, 
                    1.0000001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-9.449999999999996, 
                    2.532117769251636*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"768\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-10.449999999999996`, 
                    2.8000667395428143`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    Offset[{-3.8890871923183177`, 
                    3.889087400733702}, {-8.449999985262803, 
                    0.5500002264168798}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.7071067622396942}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999973205099, 
                    1.0000002532117764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"1024\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-10.449999973205099`, 
                    1.0000002800066736`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-8.4499999732051, 
                    1.0000002264168797`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-9.999999999999996, 
                    2.679489702911784*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 
                    1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.9999999732051, 
                    1.000000294743867}, {-9.9999999732051, 
                    1.00000026794897}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.9999999732051, 
                    1.000000241154073}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999999999996`, 
                    3.0680157098339927`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489702911789*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999985262803`, 
                    0.5500003068015709}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999732051005`, 
                    1.0000001996219825`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999999999996, 
                    2.532117769251636*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999999999996`, 
                    2.8000667395428143`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999985262803, 
                    0.5500002264168798}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999973205099, 
                    1.0000002532117764`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999973205099`, 
                    1.0000002800066736`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.4499999732051, 
                    1.0000002264168797`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.999999999999996`, 2.9474386732029625`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    GrayLevel[0.33], 13, Bold, StripOnInput -> False], 
                    TraditionalForm]], {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolOnly\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolOnly", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.9999999732051, 1.000000294743867}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    GrayLevel[0.33], 13, Bold, StripOnInput -> False], 
                    TraditionalForm]], {-10.9999999732051, 
                    1.000000294743867}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtOnly\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtOnly", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.9999999732051, 1.000000214359176}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-7.9999999732051, 
                    1.000000214359176}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Combined\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Combined", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{-10.5, -10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{10.5, 10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"BN\"", Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Normalize\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "BatchNormalizationLayer", FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Normalize", Bold], 
                    Style[
                    BatchNormalizationLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"D\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Dropout1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "DropoutLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Dropout1", Bold], 
                    Style[
                    DropoutLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999973205102, 1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Linear2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Linear2", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"FinalLinear\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["FinalLinear", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999973205101, 
                    1.0000001607693818`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-5.999999973205101, 1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Linear1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Linear1", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ramp1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ramp1", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ramp2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ramp2", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-9.999999999999996, 2.679489702911784*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolLinear\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolLinear", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.999999999999996, 
                    2.411540732620606*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolRamp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolRamp", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{-10.5, -10.5}, {-9.9999999732051, 
                    1.00000026794897}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{10.5, 10.5}, {-9.9999999732051, 
                    1.00000026794897}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-9.9999999732051, 1.00000026794897}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtLinear\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtLinear", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.9999999732051, 1.000000241154073}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.9999999732051, 
                    1.000000241154073}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtRamp\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtRamp", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-10.9999999732051, 
                    1.000000294743867}, {-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}, {-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}, {-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 1.000000241154073}},
                     NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 21, 21, 21, 21, 21, 8, 21, 21, 21, 21, 
                    21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {711.5000014737192, 97.50000294743867}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{25., 26.5}, {27.5, 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"scalar\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "ProtOnly" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1, 1024]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1792}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "MolOnly" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[
                    Span[1025, 1792]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1792}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ProtLinear" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    1024}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "MolLinear" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "ProtRamp" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "MolRamp" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Combined" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[Automatic]|>, 
                    "Inputs" -> <|
                    "Input1" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Normalize" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 512, "$SpatialDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Linear1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    512}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Ramp1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Dropout1" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Linear2" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 512}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Ramp2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "FinalLinear" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "Type" -> "Scalar", "$Version" -> 
                    "13.2.1"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtOnly", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolOnly", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtLinear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtOnly", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolLinear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolOnly", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtRamp", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtLinear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolRamp", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolLinear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtRamp", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolRamp", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Normalize", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Normalize", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FinalLinear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FinalLinear", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MolOnly"], 
                    NeuralNetworks`NetPath["Nodes", "ProtOnly"], 
                    NeuralNetworks`NetPath["Nodes", "Combined"], 
                    NeuralNetworks`NetPath["Nodes", "Normalize"], 
                    NeuralNetworks`NetPath["Nodes", "Dropout1"], 
                    NeuralNetworks`NetPath["Nodes", "Linear2"], 
                    NeuralNetworks`NetPath["Nodes", "FinalLinear"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Linear1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp2"], 
                    NeuralNetworks`NetPath["Nodes", "MolLinear"], 
                    NeuralNetworks`NetPath["Nodes", "MolRamp"], 
                    NeuralNetworks`NetPath["Nodes", "ProtLinear"], 
                    NeuralNetworks`NetPath["Nodes", "ProtRamp"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MolOnly"], 
                    NeuralNetworks`NetPath["Nodes", "ProtOnly"], 
                    NeuralNetworks`NetPath["Nodes", "Combined"], 
                    NeuralNetworks`NetPath["Nodes", "Normalize"], 
                    NeuralNetworks`NetPath["Nodes", "Dropout1"], 
                    NeuralNetworks`NetPath["Nodes", "Linear2"], 
                    NeuralNetworks`NetPath["Nodes", "FinalLinear"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Linear1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp2"], 
                    NeuralNetworks`NetPath["Nodes", "MolLinear"], 
                    NeuralNetworks`NetPath["Nodes", "MolRamp"], 
                    NeuralNetworks`NetPath["Nodes", "ProtLinear"], 
                    NeuralNetworks`NetPath["Nodes", "ProtRamp"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.91011917383696*^9, 3.91011922896215*^9, 
  3.910119933747608*^9, 3.9101202293263445`*^9, 3.9101203891233053`*^9, 
  3.9106501720331955`*^9, 3.9106526415857954`*^9, 3.911669152976793*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"43e2b5bb-f628-4cea-b0a0-dbdfdaf3b5f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meanSquaredError", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"testOutputs", "-", 
      RowBox[{"trainedBranching", "[", "testInputs", "]"}]}], ",", "2"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.909954786584852*^9, 3.90995479089326*^9}, {
   3.9099558016563735`*^9, 3.909955803906337*^9}, 3.909956083746208*^9, {
   3.9099572196589546`*^9, 3.9099572208700457`*^9}, {3.910025633641653*^9, 
   3.9100256337462087`*^9}, {3.910120065503337*^9, 3.910120072082555*^9}, {
   3.9106495117211*^9, 3.910649515552764*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"29f4aee7-4d1f-416a-a6a6-55a4e349071b"],

Cell[BoxData["0.629843276483568`"], "Output",
 CellChangeTimes->{3.9101200738163247`*^9, 3.9101202316624174`*^9, 
  3.910650174424674*^9, 3.9106526440395155`*^9, 3.911669153695159*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"e3bb7000-1241-4df8-abe5-a3149da53106"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export trained model", "Subsubsection",
 CellChangeTimes->{{3.911570948617378*^9, 
  3.91157096442084*^9}},ExpressionUUID->"996b7a70-19fd-4e18-b6a7-\
7e0f7098f310"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$UserDocumentsDirectory", ",", "\"\<WELP-PLAPT\>\"", ",", 
      "\"\<models\>\"", ",", "\"\<affinity_predictor.onnx\>\""}], "}"}], 
    "]"}], ",", "trainedBranching"}], "]"}]], "Input",
 CellChangeTimes->{{3.911570971876609*^9, 3.9115709763798437`*^9}, {
  3.9116683275603514`*^9, 3.9116683523643107`*^9}, {3.9116692030217714`*^9, 
  3.9116692062502995`*^9}, {3.9116696249261923`*^9, 3.9116696301538844`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"bbd73fe4-2b93-47a5-bce7-c2cdc1880bb6"],

Cell[BoxData["\<\"C:\\\\Users\\\\tatwo\\\\Documents\\\\WELP-PLAPT\\\\models\\\
\\affinity_predictor.onnx\"\>"], "Output",
 CellChangeTimes->{3.911669154167738*^9, 3.9116692072883854`*^9, 
  3.9116692909154253`*^9, 3.911669675106018*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"312a10b6-5983-4a91-82d7-1a7a00ef5e43"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"plapt", "=", "trainedBranching"}]], "Input",
 CellChangeTimes->{{3.911670388738286*^9, 
  3.9116703949129267`*^9}},ExpressionUUID->"aba1a167-e942-4ee0-ba6c-\
f362f9d43e2d"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model Importing (Alternative to Model Creation)", "Section",
 CellChangeTimes->{{3.911570887924678*^9, 3.9115709126645823`*^9}, {
  3.9115709868597097`*^9, 3.9115709897643332`*^9}, {3.9116675067607946`*^9, 
  3.9116675106769333`*^9}},ExpressionUUID->"cb686650-5218-4fdf-b3d5-\
320ceeee9c8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plapt", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$UserDocumentsDirectory", ",", "\"\<WELP-PLAPT\>\"", ",", 
      "\"\<models\>\"", ",", "\"\<affinity_predictor.onnx\>\""}], "}"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9115709185298243`*^9, 3.9115709209577985`*^9}, {
   3.9116675182789993`*^9, 3.9116675262739053`*^9}, {3.9116682750002136`*^9, 
   3.9116682959265995`*^9}, 3.911669697024212*^9, {3.9116699667963095`*^9, 
   3.9116699693380938`*^9}, {3.911670367098304*^9, 3.911670368055772*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"6ba63208-8952-467a-b7ba-3d8dcad97a83"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"MolOnly/S..\"", "\"MolOnly/Slice\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MolOnly/Slice", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    
                    Offset[{0, -13.5}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"ProtOnly/..\"", "\"ProtOnly/Slice\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "ProtOnly/Slice", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.9999999732051, 
                    1.000000294743867}], 
                    
                    Offset[{0, -13.5}, {-10.9999999732051, 
                    1.000000294743867}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Combined/1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    Offset[{0, -13.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Normalize..\"", "\"Normalize/BatchNorm\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, "Normalize/BatchNorm", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Dropout1/..\"", "\"Dropout1/Dropout\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Dropout1/Dropout", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Linear2/G..\"", "\"Linear2/Gemm\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Linear2/Gemm", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"FinalLine..\"", "\"FinalLinear/Gemm\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "FinalLinear/Gemm", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Linear1/G..\"", "\"Linear1/Gemm\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Linear1/Gemm", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ramp1/1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Ramp2/1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"MolLinear..\"", "\"MolLinear/Gemm\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MolLinear/Gemm", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{0, -13.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"MolRamp/1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    
                    Offset[{0, -13.5}, {-8.999999999999996, 
                    2.411540732620606*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"ProtLinea..\"", "\"ProtLinear/Gemm\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "ProtLinear/Gemm", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    Offset[{0, -13.5}, {-9.9999999732051, 1.00000026794897}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"ProtRamp/1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.9999999732051, 1.000000241154073}], 
                    
                    Offset[{0, -13.5}, {-8.9999999732051, 
                    1.000000241154073}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"1792\"", TraditionalForm], 
                    
                    Offset[{1.473719336601483*^-7, 
                    5.499999999999997}, {-11.449999999999996`, 
                    3.0680157098339927`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117876`*^-8}], 
                    InsetBox[
                    FormBox["\"1792\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-11.449999985262803`, 
                    0.5500003068015709}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-7.4499999732051005`, 
                    1.0000001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-9.449999999999996, 
                    2.532117769251636*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"768\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-10.449999999999996`, 
                    2.8000667395428143`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{-3.8890871923183177`, 
                    3.889087400733702}, {-8.449999985262803, 
                    0.5500002264168798}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.7071067622396942}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999973205099, 
                    1.0000002532117764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"1024\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-10.449999973205099`, 
                    1.0000002800066736`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-8.4499999732051, 
                    1.0000002264168797`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-9.999999999999996, 
                    2.679489702911784*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 
                    1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.9999999732051, 
                    1.000000294743867}, {-9.9999999732051, 
                    1.00000026794897}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.9999999732051, 
                    1.000000241154073}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999999999996`, 
                    3.0680157098339927`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489702911789*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999985262803`, 
                    0.5500003068015709}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1792\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999732051005`, 
                    1.0000001996219825`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999999999996, 
                    2.532117769251636*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999999999996`, 
                    2.8000667395428143`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 768\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 768\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999985262803, 
                    0.5500002264168798}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999973205099, 
                    1.0000002532117764`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999973205099`, 
                    1.0000002800066736`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.4499999732051, 
                    1.0000002264168797`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.999999999999996`, 2.9474386732029625`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    GrayLevel[0.33], 13, Bold, StripOnInput -> False], 
                    TraditionalForm]], {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MolOnly/Slice\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolOnly/Slice", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.9999999732051, 1.000000294743867}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    GrayLevel[0.33], 13, Bold, StripOnInput -> False], 
                    TraditionalForm]], {-10.9999999732051, 
                    1.000000294743867}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"ProtOnly/Slice\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtOnly/Slice", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.9999999732051, 1.000000214359176}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-7.9999999732051, 
                    1.000000214359176}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Combined/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Combined/1", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{-10.5, -10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{10.5, 10.5}, {-6.9999999732051, 
                    1.0000001875642788`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"BN\"", Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Normalize/BatchNorm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "BatchNormalizationLayer", FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Normalize/BatchNorm", Bold], 
                    Style[
                    BatchNormalizationLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"D\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Dropout1/Dropout\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "DropoutLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Dropout1/Dropout", Bold], 
                    Style[
                    DropoutLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999973205102, 1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Linear2/Gemm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Linear2/Gemm", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"FinalLinear/Gemm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["FinalLinear/Gemm", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{-10.5, -10.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{10.5, 10.5}, {-5.999999973205101, 
                    1.0000001607693818`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-5.999999973205101, 1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Linear1/Gemm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Linear1/Gemm", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ramp1/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ramp1/1", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Ramp2/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Ramp2/1", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-9.999999999999996, 2.679489702911784*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MolLinear/Gemm\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolLinear/Gemm", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.999999999999996, 
                    2.411540732620606*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"MolRamp/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MolRamp/1", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{-10.5, -10.5}, {-9.9999999732051, 
                    1.00000026794897}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{10.5, 10.5}, {-9.9999999732051, 
                    1.00000026794897}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-9.9999999732051, 1.00000026794897}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"ProtLinear/Gemm\"", Bold, StripOnInput -> False]}, {
                    StyleBox["LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtLinear/Gemm", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.9999999732051, 1.000000241154073}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztmr9PFEEUxzdKQWFBYWFhoQmFhYXxSKCg0MQfmFxBQBJjc3LOzCExpzkQ
NTGBhMLCwsKCwuIK4s16FFdQWFhYWFD4B1D4B1hYWFBYYKLvLZy5251j927n
x7u7/SQDOQrm8cnszncec7H4ZE6c8jxvZRS+zC0+v16pLL6cH4MPC+WVR6Uy
Z3fKq7zEK1PF0/DDHIxZGCMeefKuC1DBmD/luoaEkPMnxIdLnMkfrutICCl/
y8v1c4L5+4L7f13XkhAy/sDdGcHlHrrL/HXH+vqXEXC223SX+esO8FVtdZf5
Sw7ncjPsTjD51XVdCXHqT7CPS1F3/j7uIy7r6gJn/oTwZyGnHIbc/cT84qqm
HnDiT4jaBLg7CK2930LUp13UkwLr/koleQHzcas7XIclVrtruxYNWPXXmo/b
/HH52GYdGrHmL8jHsK8q9ovXtmowgBV/QT5msqFYd9s25jeIFX/gaSvijvmf
0KuN+Q1i3B+421C4+4bPs+m5LWDUH2Q8Fnnfcfm9j/JxHMb8MSbz4Xwc5Jb+
ysdxGPGHOTicj/FzH/WVk6LdX7N/HM7HuB51z0UArX9TkI/h/RZ558F7UOc8
hNDmD/dT3FcV+fiVrjkIosXfcT7+rMjHWzp+P2G0+MNzhKIH2hiAfBxHan94
flX1jwckH8eRyh+4e6rqH8MefFZXgcTp2R/261T5GPt7GuujTk/+MB8H/eJI
Pq5f0V0gcbr2h/kYMt6vSP/4obxmoD7qdOUP83H4bIEDzhYPDNVHncT+jvrH
yt77pskCiZPI33E+jvbeuV81XSBxYv2hO879HYW73SHIx3HE+oPn862iB7o3
JPk4jhP9gbvVPr9fYZqO/uCZvRf9v8XA9Y/TovQH7m4ozhYHeO/CdoHEifjD
M4Si934I7mZcFEicNn+quylDno/j+O+v090UIeQLlwUSJ/BXKFRHO9xNeee6
QOIE/sCdjJ7L/J0sH8eShzX2Zoj7x6mYyC28V+XjQqEx5rq2Jnh/huLAdXfr
5rM/4XzM2PZ5185aUZy7yYyZ22tt+Xip6F927SsM1kh15K7OB99xHY6PT695
R/sJlRHgeo0lWX+U7267fs+dNCYn79ewT+DaUUYGVf4BvABrDg==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.9999999732051, 
                    1.000000241154073}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"ProtRamp/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ProtRamp/1", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-10.9999999732051, 
                    1.000000294743867}, {-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}, {-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}, {-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 1.000000241154073}},
                     NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 21, 21, 21, 21, 21, 8, 21, 21, 21, 21, 
                    21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {711.5000014737192, 97.50000294743867}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{25., 26.5}, {27.5, 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1792\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "ProtOnly/Slice" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, 1024, 1]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1792}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "MolOnly/Slice" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1025, 1792, 1]}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1792}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ProtLinear/Gemm" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    1024}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "MolLinear/Gemm" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "ProtRamp/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "MolRamp/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Combined/1" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input1" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Input2" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Normalize/BatchNorm" -> <|
                    "Type" -> "BatchNormalization", 
                    "Arrays" -> <|
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Momentum" -> 0.8999999761581421, "Epsilon" -> 
                    0.0010000000474974513`, "Interleaving" -> False, 
                    "$Channels" -> 512, "$SpatialDimensions" -> {}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Linear1/Gemm" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 
                    512}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Ramp1/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Dropout1/Dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.20000000298023224`, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Linear2/Gemm" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 512}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {64}, "$OutputSize" -> 64, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Ramp2/1" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "FinalLinear/Gemm" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1792}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtOnly/Slice", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolOnly/Slice", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtLinear/Gemm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtOnly/Slice", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolLinear/Gemm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolOnly/Slice", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtRamp/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtLinear/Gemm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolRamp/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolLinear/Gemm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined/1", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ProtRamp/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined/1", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "MolRamp/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Normalize/BatchNorm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Combined/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear1/Gemm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Normalize/BatchNorm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp1/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear1/Gemm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout1/Dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp1/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear2/Gemm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dropout1/Dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp2/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Linear2/Gemm", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FinalLinear/Gemm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Ramp2/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FinalLinear/Gemm", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MolOnly/Slice"], 
                    NeuralNetworks`NetPath["Nodes", "ProtOnly/Slice"], 
                    NeuralNetworks`NetPath["Nodes", "Combined/1"], 
                    NeuralNetworks`NetPath["Nodes", "Normalize/BatchNorm"], 
                    NeuralNetworks`NetPath["Nodes", "Dropout1/Dropout"], 
                    NeuralNetworks`NetPath["Nodes", "Linear2/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "FinalLinear/Gemm"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Linear1/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp1/1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp2/1"], 
                    NeuralNetworks`NetPath["Nodes", "MolLinear/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "MolRamp/1"], 
                    NeuralNetworks`NetPath["Nodes", "ProtLinear/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "ProtRamp/1"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "MolOnly/Slice"], 
                    NeuralNetworks`NetPath["Nodes", "ProtOnly/Slice"], 
                    NeuralNetworks`NetPath["Nodes", "Combined/1"], 
                    NeuralNetworks`NetPath["Nodes", "Normalize/BatchNorm"], 
                    NeuralNetworks`NetPath["Nodes", "Dropout1/Dropout"], 
                    NeuralNetworks`NetPath["Nodes", "Linear2/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "FinalLinear/Gemm"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Linear1/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp1/1"], 
                    NeuralNetworks`NetPath["Nodes", "Ramp2/1"], 
                    NeuralNetworks`NetPath["Nodes", "MolLinear/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "MolRamp/1"], 
                    NeuralNetworks`NetPath["Nodes", "ProtLinear/Gemm"], 
                    NeuralNetworks`NetPath["Nodes", "ProtRamp/1"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.911669698199505*^9, 3.9116699703864317`*^9, 
  3.911670331415756*^9, 3.911670419156855*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"3884b820-1cfd-4274-b21f-ada8be77a841"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Model Inference", "Section",
 CellChangeTimes->{{3.9101123130053844`*^9, 3.910112319285836*^9}, {
  3.910651505907963*^9, 
  3.910651507862955*^9}},ExpressionUUID->"35b8a063-177f-4809-8629-\
50fd7c151dd9"],

Cell[CellGroupData[{

Cell["Inverse Normalization", "Subsection",
 CellChangeTimes->{{3.9116723118474884`*^9, 
  3.9116723411235046`*^9}},ExpressionUUID->"949dd6b0-e9e6-42fe-89e9-\
f10ca7ffd4b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scalingParams", " ", "=", "\n", "  ", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<mean\>\"", " ", "->", " ", "6.51286529169358"}], ",", "\n", 
     "   ", 
     RowBox[{"\"\<var\>\"", " ", "->", " ", "2.4379994951935378"}], ",", "\n",
      "   ", 
     RowBox[{"\"\<scale\>\"", " ", "->", " ", "1.5614094578916633"}]}], 
    "|>"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.911569385078105*^9, 3.911569555897908*^9}, {
  3.9115702943696585`*^9, 3.911570295228792*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"7de967bc-dd1a-4702-9263-e34c9d75bb05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Denormalize", "[", 
   RowBox[{"normalizedAffinity_", ",", " ", "params_Association"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"normalizedAffinity", "*", 
     RowBox[{"params", "[", "\"\<scale\>\"", "]"}]}], " ", "+", " ", 
    RowBox[{"params", "[", "\"\<mean\>\"", "]"}]}], ")"}]}]], "Code",
 CellChangeTimes->{{3.911569699314461*^9, 3.9115697149181566`*^9}, {
  3.91156977310889*^9, 3.9115699142282996`*^9}, {3.911670591455162*^9, 
  3.911670597182742*^9}},ExpressionUUID->"29337755-288d-4a0b-9732-\
fc3184fe9d93"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Inference", "Subsection",
 CellChangeTimes->{{3.9116723118474884`*^9, 
  3.911672361519595*^9}},ExpressionUUID->"6308a1cd-b67d-426f-8cd6-\
45ce2941b736"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictAffinityNormalized", "[", 
   RowBox[{"nnet_", ",", " ", "molecule_String", ",", " ", "protein_String"}],
    "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "molTokens", ",", " ", "protTokens", ",", " ", "molEmbeddings", ",", " ",
       "protEmbeddings", ",", " ", "affinity"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"molTokens", " ", "=", " ", 
      RowBox[{"MoleculeTokenizer", "[", 
       RowBox[{
        RowBox[{"{", "molecule", "}"}], ",", " ", "278"}], "]"}]}], ";", "\n",
      "  ", 
     RowBox[{"protTokens", " ", "=", " ", 
      RowBox[{"ProteinTokenizer", "[", 
       RowBox[{
        RowBox[{"{", "protein", "}"}], ",", " ", "3200"}], "]"}]}], ";", "\n",
      "  ", 
     RowBox[{"molEmbeddings", " ", "=", " ", 
      RowBox[{
       RowBox[{"molEncoder", "[", "molTokens", "]"}], "[", 
       RowBox[{"[", "\"\<909\>\"", "]"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"protEmbeddings", " ", "=", " ", 
      RowBox[{
       RowBox[{"protEncoder", "[", "protTokens", "]"}], "[", 
       RowBox[{"[", "\"\<4195\>\"", "]"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"nnet", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"protEmbeddings", ",", " ", "molEmbeddings"}], "]"}], "]"}], 
      "]"}]}]}], "\n", "  ", "]"}]}]], "Code",
 CellChangeTimes->{{3.9101125433479033`*^9, 3.910112551592903*^9}, {
   3.9101126300636024`*^9, 3.910112761093526*^9}, {3.9101128889293313`*^9, 
   3.9101129017519445`*^9}, 3.910112971566725*^9, {3.910113054638953*^9, 
   3.910113060158891*^9}, {3.9101208258633184`*^9, 3.91012092735616*^9}, {
   3.9101209737209625`*^9, 3.910121003684415*^9}, {3.910650072357242*^9, 
   3.9106500814563713`*^9}, {3.910650228010232*^9, 3.9106502386168814`*^9}, {
   3.9106672948677607`*^9, 3.910667297087383*^9}, {3.911569567078017*^9, 
   3.9115695682177334`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e4111f5b-94df-45a9-9d72-458e38eabcc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictAffinity", "[", 
   RowBox[{"nnet_", ",", " ", "molecule_String", ",", " ", "protein_String"}],
    "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "molTokens", ",", " ", "protTokens", ",", " ", "molEmbeddings", ",", " ",
       "protEmbeddings", ",", " ", "affinityNormalized", ",", " ", 
      "affinity"}], "}"}], ",", "\n", "    ", 
    RowBox[{
     RowBox[{"molTokens", " ", "=", " ", 
      RowBox[{"MoleculeTokenizer", "[", 
       RowBox[{
        RowBox[{"{", "molecule", "}"}], ",", " ", "278"}], "]"}]}], ";", "\n",
      "    ", 
     RowBox[{"protTokens", " ", "=", " ", 
      RowBox[{"ProteinTokenizer", "[", 
       RowBox[{
        RowBox[{"{", "protein", "}"}], ",", " ", "3200"}], "]"}]}], ";", "\n",
      "    ", 
     RowBox[{"molEmbeddings", " ", "=", " ", 
      RowBox[{
       RowBox[{"molEncoder", "[", "molTokens", "]"}], "[", 
       RowBox[{"[", "\"\<909\>\"", "]"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"protEmbeddings", " ", "=", " ", 
      RowBox[{
       RowBox[{"protEncoder", "[", "protTokens", "]"}], "[", 
       RowBox[{"[", "\"\<4195\>\"", "]"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"affinityNormalized", " ", "=", " ", 
      RowBox[{"nnet", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"protEmbeddings", ",", " ", "molEmbeddings"}], "]"}], "]"}], 
       "]"}]}], ";", "\n", "    ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<neg_log10_affinity_M\>\"", "->", 
        RowBox[{"Denormalize", "[", 
         RowBox[{"affinityNormalized", ",", "scalingParams"}], "]"}]}], ",", 
       "\n", "    ", 
       RowBox[{"\"\<affinity_uM\>\"", "->", 
        RowBox[{
         RowBox[{"10", "^", "6"}], "*", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"Denormalize", "[", 
             RowBox[{"affinityNormalized", ",", "scalingParams"}], "]"}]}], 
           ")"}]}]}]}]}], "|>"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.91156937150492*^9, 3.9115693726980867`*^9}, {
   3.9115695718226557`*^9, 3.9115696864178767`*^9}, {3.9115699191921415`*^9, 
   3.911569929938377*^9}, {3.9115699749383535`*^9, 3.9115699821584606`*^9}, {
   3.9115700279832263`*^9, 3.911570034214198*^9}, 3.911570234683523*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"d1ae32e1-bdee-4a32-9596-d451f02cac8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PredictAffinityNormalized", "[", 
   RowBox[{"nnet_", ",", "molecule_", ",", "protein_"}], "]"}], ":=", 
  RowBox[{"PredictAffinityNormalized", "[", 
   RowBox[{"nnet", ",", 
    RowBox[{"molecule", "[", "\"\<SMILES\>\"", "]"}], ",", 
    RowBox[{"protein", "[", "\"\<Sequence\>\"", "]"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.910112321127864*^9, 3.9101123896116343`*^9}, {
  3.910112458866358*^9, 3.910112480969761*^9}, {3.9101125258743243`*^9, 
  3.9101125503851514`*^9}, {3.9101125814859495`*^9, 3.910112619067731*^9}, {
  3.9101208181038675`*^9, 3.9101208237760906`*^9}, {3.9101209389272175`*^9, 
  3.9101209397255526`*^9}, {3.910650244507069*^9, 3.9106502453313456`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"d78e9f44-f3ed-45b0-95d1-8062243abdd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PredictAffinity", "[", 
  RowBox[{"plapt", ",", "\"\<ABC\>\"", ",", "\"\<DEF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9101209421166735`*^9, 3.9101209644389815`*^9}, 
   3.9106502466183815`*^9, {3.911670423942233*^9, 3.911670424306366*^9}, 
   3.9116704625335083`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"1f8e5e78-f0d2-481e-859d-696ebe4eb23f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"neg_log10_affinity_M\"\>", "\[Rule]", 
    RowBox[{"{", "4.635409111126565`", "}"}]}], ",", 
   RowBox[{"\<\"affinity_uM\"\>", "\[Rule]", 
    RowBox[{"{", "23.152126615539675`", "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.910120965570498*^9, 3.910120990536152*^9}, {
  3.9116704497522497`*^9, 3.911670476701187*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"2e1b7c91-25cc-4405-8ba0-00606f57293d"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.9106515118244805`*^9, 
  3.910651521583429*^9}},ExpressionUUID->"c6155c94-022a-44e5-bf4d-\
2cb44d077569"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xValuesUnseen", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Denormalize", "[", 
       RowBox[{"#", ",", "scalingParams"}], "]"}], "&"}], "/@", 
     RowBox[{"plapt", "[", "testInputs", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yValuesUnseen", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Denormalize", "[", 
      RowBox[{"#", ",", "scalingParams"}], "]"}], "&"}], "/@", 
    "testOutputs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.91167219212113*^9, 3.911672249419297*^9}, {
  3.911672407375517*^9, 3.9116724115625763`*^9}, {3.9116728101796055`*^9, 
  3.911672814003886*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a1fa4b68-14c3-4676-8c5e-11b867d838c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"xValues", ",", "yValues"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"{", "1", "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"{", "1", "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Correlation", "[", 
  RowBox[{"xValues", ",", "yValues"}], "]"}]}], "Input",
 CellChangeTimes->{{3.910650301040222*^9, 3.9106503469687147`*^9}, {
   3.9106503850370955`*^9, 3.9106503911964393`*^9}, {3.910650462998979*^9, 
   3.910650472372565*^9}, {3.910650794491328*^9, 3.910650847177783*^9}, {
   3.910650935970278*^9, 3.9106509436989555`*^9}, {3.910650991899836*^9, 
   3.9106510461513033`*^9}, 3.910651423176381*^9, 3.9106515916381245`*^9, {
   3.910651621770136*^9, 3.910651644239044*^9}, {3.9106517108194833`*^9, 
   3.910651732951946*^9}, {3.910651768188057*^9, 3.910651769374367*^9}, {
   3.9106518589838223`*^9, 3.910651917285633*^9}, {3.910651960871928*^9, 
   3.910651975157005*^9}, {3.9106520364417996`*^9, 3.910652115434935*^9}, {
   3.9106521493940053`*^9, 3.910652154847836*^9}, {3.910652196791052*^9, 
   3.910652197204461*^9}, {3.910652965434552*^9, 3.910652995839328*^9}, {
   3.910653647851202*^9, 3.9106536552648745`*^9}, {3.911670614947486*^9, 
   3.911670618466477*^9}, {3.9116721527353086`*^9, 3.9116721613345413`*^9}, {
   3.9116722319490056`*^9, 3.9116722356103463`*^9}, {3.9116722774064856`*^9, 
   3.9116722788829885`*^9}, {3.9116724964044795`*^9, 3.911672533800599*^9}, 
   3.911672779852019*^9, 3.9116735135433044`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"f0a59985-7b47-4c28-9f7c-3e15f5d587ac"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
     AbsoluteThickness[1.6], Opacity[0.3], PointBox[CompressedData["
1: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
7fbdlgHkGxpRil0kUIFdD6UukSGu/kLoFkIvmxpPwLTzoV//kKBsfUCix28a
DF2YrXJBiArLzNp6m8sZsPty8qzlVArI2WU8NV1D6NWam4LUD1FAxr659x9e
uJG1gfsiDcenp5P6/wwtZANzs631b08e9HxQTwyII8EJGosttEMKBr9E9V6z
46P+b3c2XNqvKUYC1WP9h47nS0NVb6lBji7Or5q2v22XxlkKnCow/ziT0AOi
3I7rvHvEQP5nMZm1SesSOWh/pJyNsT07nYniNbYrT/aekWSCnuXQhX1vCf36
d+fqa4m4/x6vMEhL4rUiKAb+3dUuowRfE06//OOO5X2a806XSkWsD1tXH80o
uq4MOjpyNmtVleDF6bCIeBMB6qdkkhVxb66/AJ5rn81RW6QCKstzsjddlkP1
Sb0mhXX0ziiBUlTk7aN5yqDpUbpD7zsx37szHz4IkYe2q0Hzf5TTYI7TzQ4P
Fxm4Gtr5u4bQu6b40VIJ2enKmmTUj2mi+tGGqGoBqAV57NwuqQxd0teSVFxw
PuD6v2KqJZI4v9uF6VBK/UGFmxFl5nLVNFAX+1h1tYM4nzF/ufPvkOHWM5L4
Nxau57WXuY1c94yG+g+cL7YpLhpnQIzeyI+ncmxY7JF48J0iDwzct39mh3Cg
RUpWIsBPAPaRNeNzpeUhbXr72N2TZFgQ94F1/gCV0AN/Btl00SBMWzWklMD5
hs9uaC+Kp6N8g91pq6ffdWcifWjTN//jwcR+e2IjLX3uCAluu/TqlS/B8lNv
cM/6/GtkdF1zVbJ67L865P+jF9f66/Go+P6G4Y7wP4eoiC5LCvooSfD9qX5c
ffK99hYEX4qva45gEOdI7ZxNb3YxCQo1dkJMkByM/BVPv/2dieq7+piYpeZY
USF6aN4o7RMZRq0GxlXtcf7suaJbs2TW4fzZAuHLI1f34u/TFKpxJ6eTuB63
+Oiei4R8PCJsIXlCEfEP64N58gUbuMheEe67cG7yJw4cfc/Z7ZLIgocnNe59
WsqEyuRj71etZcNnw7uWiquwvVBJS2h3pzoX0V3jynUZhTgfZKnV7+/vPjIh
WfZXWtp+DhhRTl5xzcH+uGQVp+OjfAqolK3eledJAqHcM9fDL2L+6Kp6O/eA
DeZHJcW90h/7sX/u2GG5JyOA/Zs26WeDt23C9y8y/BImy/pP/8f5p2PnjcqD
RN7lrVsJvlGr0zj3hQy+Hp1nFhJXie//UVP4Qec//cmf/DXY5SaG6VkGR62P
+Mvg+vZ5IiO/omgw1/3mHyliX/zcpiLWvZaD7G+NtxZQwuOZKF59tXHwEpdh
AbIX3D31TfkhoS9NxatJxwzWHhfmonjE2Z3V1mFSAog7oG7RvoQPM/TOXHyu
rwAiXvILYpYReMo82W0wkIr60Rx23S5akkcG0fXzNjsRcnHQyXqXykYySBZN
xFtYk6HprHfLGy0qyp9PvpIot7+Uhui0Sw/36/WSES3iMVgxKo2vfzPNVTrW
II/orQXHopilOB+/7sas1JIRfH/578qr/aIU/D4V+z0Ff/F1KeblR094OJ92
YO+q4KS7TJQfPefGVhX9FxTIUTocc4TAcZcd3uyNVMDx8ZbT7fau9MHn1UPu
VdLnqzS0nnfFv1609WAge+DF4EjnpbPIsF7tzTC5lASPdK/bvxHCzx9d86rZ
x4UBfjIZt09OiEES89Kvka9c4AvtH41s4cGFAwKDrLN89Lz9uf1hYnQeGE/n
neiyUgbrcy9ENnxjw2+7Xu0eA0VYsUxz/+0ECjoP+UJqF+58w/HRN0zfRjmp
MlC/tnqrUyo+13nAebkKKllKsHVFx9HOM2xUf160IELcuokPyeHzizZ9J+TC
Fnpg21Fs/0lYTxfxPc5C8Xfl1ps+cf/SUPxez8ix6hwfJqrnYP77vsLaTVTw
3nfhZX+6PPTvspklJ8lH9rICDRBUD2L7Y0OM15+H//Io/uf/vnHoRVEaG8cL
R3amxwc9U0D1ddcwTk2zkWMhfTK7fsndiAsstP8dnvzcxsgn9B/BgLSGJQdc
GiXVDZ7yEb9K1dowcZPCA3r+eceGrWwo/qJcT/JQBveUCu+7dsowfnjW7cw5
fKTvd9Kj35wg3jdl783R1me0SAjQ82ofmbU0uvPAwzh7QT1DEa5VfTqv7s9A
/ZmKPWv8JcewvupVPDG7gMDbU/2/1W2nv3Nv5cGyn1YJt3UEUOlsNbOArABH
2P1pMe8E8Pt8PadNH6/vF0hY95rQd6f6qwd09QvN3C6L4gO6ZFcvOxhMRv7f
bUdLt5jGyoOu49ctKwzlgEmfJtlXzUfxFWIXPmYp/GCg/IS8yyKLY06zgFvJ
CvpCUgDTYuV0tSg2yt/e2nmj61wHE+XPV5qVBJCJvyMnlH2dfnNBVS5ajP4G
xzPUZl+567eHAW27WzeIXFGGlTdqKgb/4bj/1de/UpNQf245GVjfhj/3bqeB
ls5sXbH1HNQfYOYJFXXFaTwI1+Dv2h0vAHOWt6uLKQ35h/aRQh+2tOL6jnqO
ucdOE/jzm+OzffZLqXAh6Gp5j7MCkufSBxOPD+TRUT6f1sjSY5W+HLgrnTP0
rw+aZaff6dCzJEjXmzX3xx55WK55+BpfmQYQd9JKdpc83M1wPjR4g4fy+bxP
c5uPn2fAStvpRsNSTIic3jWnaREV6VMhzeOZitoc1G9efuJFO6OOhurxzJzL
3+lUSQdwHBz7oyAPu5YOqtkR90+Nb4XIuSzlfjqol5Q3iPzgQe+ukbR2Aj9M
1WOUNx+NSNbH+TEiDsAzJfDIVL0ZnrVb7IlvLBTv3fPjSupLdwUYNugZuhTF
g2d9x1KcEjhIn+fkVNRmV/FQPnHND5uZR0MUUL6i4bl1Cj1jLCTvA3X2ugu5
EnzsgdKXOdu5cP9tcvTVg1RUX9zaurpS1VAR9b94nqy0Uf6BIkjVG1CPkJXg
5ofQB5f20mHYT/LcAMFHmFYnB/J7mNDQGVVkSuhZ7TpefmWFdDRfVcuWXesJ
/DMVT92johsUX0JD/YSNaeK55h4E7vIqUh6IJcP7NT9naXhhvGPy2ELX31sG
CEWXl3FsGoy9ELohFkxC+IglRC2Pnq+A7JsdK48YxYcw4LnP+zhyOgMKB1qu
90dJovzuzQeiYyde05G9u+Fsd4aLIa7/U94Xqen9nAHfPrl8DK5hA2PHx7cN
DbjfyOGGwYWv9VkgPN5zbuMoD27HmwWpneEhfTru8Ouslsu4/i3vV3L4Zjdc
j2lQ8nVDVi0DLk3LljklwQJ1g3shBsR5c6uc+8HhAwXm/Mq+ZETsvyn/5FmN
vhfbdlKgf/XcQtuv8qAm+b0jRYeG6lMcdDU8/eUXBeLMs5Py/xL6zpskpQP5
8vBydpMwq0MU7s8v+t69hof284qqtMYadzrKVz1dLrtO0hznY7+q1A3r9OBD
0pt4OytLAdiA3qN2FxrKd7HfVDvPz4qG4v+v2JUsemaH1zMxOP3hDHk6PBHL
eT4+RIKD9hsfNitS4JNcOG9dqhikx14T/9iE63WOFnd16yozYFha6cI0D4KP
ZXdZOTcS63Fs44W9FA5MK2995PqOiezVFvUpleOE/vJKUlvZ3oH4O+g2L34t
C9Wr0VgSrh7qifvT3d57db5YFh2krjf3rA+UgaiI8Nz9q0kwnLfg9ftxMuxR
X7wwNI+F/DOzvxzjvHhE6J2r3v/h6/zLJ4j8q0yco3zGCs96MyXQORPr9q+u
8tR6Ve4OHilzwvYA3UR7ePCcjuKJX51mnvXbSwMKpamhcxkDErZn9ogTeF54
QW/xrmouGCs33bI6jfs7zBB+oxLcRQfrSTdfOiE/ns9eceTdYxbUeffETASz
gEWdpCglcZF8mvJ/zeGU7VlZyoFvmq/qXi6gwyFy7y8jdQ7cC9SP5gvzcT2h
Q0/EVoTwkP1dPTnGcywMj/f7inRvAx4H5beoRXqbZcdwYaNmpAbVlQMxv1MK
JoJ5oGDW8/z+KQF0h39ssFghQLRhrnXq3R9MGLa7HyVtyQanMKeMJxIKiB+6
Ftaf/WHORPL8+tmvIIhh/Z98TJrPh9CYSRYs0dI2be2kwtJlQ78WP5SH7ZWV
7EBXnE9KH+mZLyDO7TdRNW/PXhbYKv1ptiXwC396X+z+RQRfqDhOc5ZiwM2f
XI4miQFrzVddmunBRPrHfv/PzQIWA7Kr//bOJXDoBr+h41c2KiD9+//v17zz
cJVT0j0mqp8eTGlYH0FloXyC7zzhquL9GL/ruK8Lu/kH9/OZt0SzocKJwElC
dfKLVrHAxnV2wkJdKqikx60KIctDsE/DmHEers+05YTuhYNPcT2lMTcvRiab
juIBVtsda9MewvVSdSWs9n7MZqJ8x449rKjCPhac8lwQ/bCCA71kZQk7RewP
0Eo7K/8rQYD01YDUALHjrzHegSts/2luAhBO/VQ4limAUtaCgwpbCHnjxOR9
kVCEvCL6/mcpCjCP8uHTit18WPb4aOq/+T8o+9zyI4gHZyw7PPJNsb4YXLlm
z+JiOqp/yss1fmOqzEf8/MT38sxWLSbyl6H4Sa3X0dPXcEDPZ1nXhqc89Pso
7pCU3yxMT/3+/HvPeVeoON5ir2LEk92DbOgfEDpyfg0TbrJdim7UsaDDqTzB
05MKEaUFRrezmLDyIdW6NJoK5Qep9hEWBJ+vCpnO2cKG5V6s7QYMJjSbvDVc
vpABh08/tH9O4JwP3gpfheYzgLEi82/qTpzv03lo5R3rTCYIyk1SL9bTUfxd
tdidnIROXA9vrouP1/0CvB7SK0sSa99T0Hmsy1Wo+vES+/NDtFvPa3ZQIL9R
6zRlHYGDKnaTVmnieskijYpHzVRnQhQph51jqwLRFYtiNfMEyH+WMMPEIovH
hMvT4xlH0gj9SS05c81/4mkGQpVkegj8NWUPU9si8fr2pALCaxJ7BvT0iH24
+4ZMnq+eAErEU3Zn/6Qif5nlvtJ9hdsYyP81Pima9/k0G/lvP0QNfHL1o6H8
xIJB8ah5DArYFpbo+52hglpm/aVrpyhwLvTx7MQRCrw4GzktbUwKaE5L9zlf
o4HeyIEfUQoU0J0Y81rziwFm08IZOt9p8Hi0uot0ngoLz7pkKhB48/mNtcur
6QT+zJSj+hLrJNji9vTYbxo8PXJqZp8kCUbv/Tm3ph7Xx5+qR57Q+Cf5lQSu
11cj/ynoBfEeNe79p1evk2EzY+nwrXs43lQx2VHK9DUFgkeT9twvIvQeZvxJ
xRnYHlZ9/110aggNLPRDCnwSKXBR4ZwWKYqG+g1+6dcQnBanQkLEQFikJx3m
7qPnrNCjovVS5fs/jrxCgZPO2We/zKLD85ftIRYvyDCj5rWTtxOBm70HIyUG
qTC/xEpRWZ0Gt5befjN/gIrWN6JkZtU2UwZcXMz2jrQnzsfhfQr1dixQY+qV
qDOoQBoD0tlUMig9nL/IrZ0O8p1/oz/MUIQ14ozWm7NoUBFw+OzGJgZYh9is
91alw4cUERP6LSpsdwwf1/elgHbnx4eLhmjo+Zp7uhae+kEFuSNKmVbTGOD8
8fyuc1I0ELca8dl2kwqrZ5TRjR5QYYPu4BfrPApUr7XgbyLk/9fbmfFqhJ64
rmfkTEEXDa7fKJof9IUYz6LkOYUEHpuqf1+XuF3WTY0GfzLql2R30qHMvD5c
/SYFTtndaWf2EfvG0mvrhAYD1WuP1Ym5EixEh01vM8pE+ilwfe7OgGvr6Ege
ayu/3Lk3mgZhN233PPSjw03daS8cTxDfY1pbal0eDU6qT/x2dKRCaJj0t/gm
GhxjnfPYSexTe3XhFvc9dODTQ63Yz6mwwnahpyCMBqsXr7hX7ERG+dcKy3Ji
+TT8fZJeTaa+P0GHhvJvMfCNDOOGSrSbrjTo/PFpdDNx7h0+srfuN6dC9IPS
eTLE/yfXe24aq6BCYWLfUk4VgZseiuzOI+hdGVy/4mIauJ9edXZUjI7Wz9rZ
JOXEEmI9wsPyFJfS4AuvXHjVEjY6D2F0ebt3aVRIrEpcVHKDDn7RAWfddhL4
Ra3Uxu4LFRTtTCteixLyRU8QUkvoo8UaMbvlR2mw6JIHd1ciDexYRwv8dBgQ
GpEi87iG2Kctutp7if2mnX/UofkdjdArDt0/mElB50N1/POqTwRe3PJsW8DR
w2Toy4/kvFhNg/0RX+evDSf09y6jV4xMBhrf/Bl6FSZ3SPDGOUrrsBEF8q7Z
PY/yokKXmHnf4t/EfhG3GEoMJ0Oia4U3ewsZzj/63LX1OxXd3xTywCuxkQzn
xDa4SPjSYat327lECTJsN2kS9+4jvhcnWj7yGCFnvgQIPV5MyO/kWSr5KTQ4
NMs8wi2UCko9JL0UFxLElf09axzHgD/Xn3cpNVJhmuiSbaoXie8Smliqp0yF
4P1PC77kkYG8NlA4jJBnK/RVF0mWMiBz5Xj923AqdEsnPVrvTAUvhyKSjx4T
jY8s8vzTc+L7dc/of/HAkwJ+xZs0AwPp8OznkfSAKjKoaWYvMiT2BarHeTLs
qsF5zM/+lnoo/2qRRvSSWc9/tBvRUD7h4uSc7/u3U4Ee7bC2kJhnaHHHajMT
MmyVOLBsaQwFXmVbZQ8WMOHjtYFPHfF0WLumy8VkIRlyjvxJCF1CBo2bEcky
hDye0geoRqK2B125qD6AuMiX3/nAR/6RHZPOyjM5bNSvwKM62vGFLY436d3f
fCIzGOfDn6jmd/4icVH99uKYmPvCBN6Z0ndqy7nTti3G9eAdim3Mqm/i/Gzt
/bNOfHjOQfYu87l6NfFpXBSv96kvZ8NFOWwPajZYq1ihy0P+BsHA5OCdUxyk
D39NLvyoehDbN4cLNtmFbebB6DLzw8OBPHgaGHzvcrYA6fd/DbbcmLMF53dv
GrpmEdnBQ+N1vyj2dJY3D8VrSN1eGDtkgusRMXZmCP+Ux9drGTM+lcxUQPF2
bhYrR/7+Jx6T3sC8P2cxrl9w3LaqOkGDj+LDGHZV9b/e4Pg8bb/XL0JL6ch/
Vit2Z3PYQwbSV1v69r7XLhEg+4B5sLTmSwL/TuE580KelbO2AsIHwQyZK1pX
cf2Qy02BT2tkWEj/XOcvnqK2DffXIVs+Yv7dTHwfM9969f0E/nfqYzu4cVC9
wDuOu09d7MX27bjBN3G7vRjIfruhY06/+jQOsl+29jILv77ionjQ1v6P5+J3
sJF954lLTfOOl2xUD+PkEf3CuxFchK/spScKaos4ENilTSkrYQHjxMWDZwoZ
KF5q2uKf1im7aEj/UZHdqrE/AMcLdz4hzdFXFUb1mb8K7U9M2cVG+nbw34Fa
049M1O9vSp+Y0rcmA9UHA/z4oB0zfkg1XhkqtFVFZ0/nwa+9WnnLRnD8r5TZ
6TH7aj4EUb6S/TuwvzLkmwepvJCG9kvEfVL+fIKvTfVTWE72Lb3US0X9wMJn
Zawtd6Sh7z85sWuxiyjBfx5FZp+5xobmFrfUUQInTdk77wgKWQd3csHZ54JZ
aA4fDs6uaW83YUDrBdfTL8/RIf+Ip2IMoRdP5cuPXr3IqPnCQvYcrVcXs0Ql
2Sj+6ZVw9op/6zFFu7k9fPe5iYvsU+OSv5Ucmwg9+jHtYfU3Bhhul1nUQJz/
qfnsMI8yvnldHqRPh826d1YGCrrHT3QTfDAs5CRJ3JENidLLQs7p0lB9kum6
3qz4fBbCl+8yzLecXM9D/vjyLcdZIRU0ZF9Me33pqkygMGzcrdO2Tkce1rv/
vvrlHa5vqXPDeOOpeOJ8rFhpKb1WEVjR9leG53DR+V8jaZW7t44KgclzbYrs
SdDv57k3ZhTHP8a5+9rcc+SieierhY7e1VejQrOaV8K+aHloOen7JqaAheoJ
xUMNfdVnfH7WXLsd2anDhNARj6J5VgpA/jjmNf0GwZ+uJIrp3ydB3Rb4pqFH
QvFnycy4ZMkyedhxr2jbiWczoCYganN3EwfZS07Fda0bjcP9MjRlDS1zsuRR
/9h0g8vOy++KwLy+odJXokLQTAmO2abLhcKitNJ7s7jgkzn7iqUSC+W779/x
J6G4H/tfKm0MWvba4Hy3s+YaPFtCD5iyf59503n3QCYd9d+cmZkobHQd86cR
PbXKfkMmeP+p7DV5yYTB5z8am+awET5veFTJPXOfieyvS1UaUp5GstF56ylP
Wcb6js+j5BXdncObmMj/FsHpPDfDlQkBCevmRR1hgtYeE37jQWyvM//b39Xc
JgCT9Hk2LblcuLP67IatBH6einfP/5s+MPOtANnb/I4wHOziqQg/ex96KiWe
yUf5/SMLX/c9kGWifmur9Dy+fyP0SKWqaHF3Yw5U/dLbHJjBgGHVMn0rGzoc
Gmo3PC+H+/fsX/fBW/QYDxgdCcLvoxkQqPnq1OubNJjpm/7Url8etvCPVq9+
zYLAy5xyiZcEbprc+bkgTAnJAweDv+/3uikheaOxLSJow0fMv1enU+ZlHMX+
BGrtwu40Ql5OxdPP9n8cnVGE6/F9s3+20CIcx+ezF814mn6Qj+yhJ/LNFpiF
8pA82etU5WKrhP1B/rE7VVgBbHT+fbfK+6c7sJA+8DJ4SZ5EqQLqJ9rKXbA8
wF8B+TfYBU/yxUwVkX2uVbXh6aYyJpIvgxu0Hf7ZX6bwznGT92LBLGxvaHF1
iY/+Q0f9aqb47ZQ9ljuNcWCjChPh7+JvES+b85nInjB7t/u+ikom2P5pFacJ
aOC9w+LdL1ncT3Bt6Y+9lgQOmIqHdOfv7r1iiONxy2VbY9aOcREdu6ViU5Qo
D9GD5jmb536iof5YR+rddowVK6D6l0aTj7znpxF8zZFf/ViKARFONSsTxQTI
nhPX+1Mu9zUdAnzldHInCdyTpH6owpCG7MlT852Kf3Bqz1JeS6MB+4fpIu5G
MrS+mt7uT+Dl1sbDmzIukYD66XjevHEahFDX2rff5cLSQ9deqG/E8vJmDosZ
xZGHstg0JTcLOUi5bynUel4a5QPdVL3/ykYR83uJ2eXdG0XZyB+rkjh0Z7M6
B+k7/VKNJYuYbLR/Az7K1PnuxvURdL0WZRyKoqN+dslnRj73VdDhhs/fXRN+
ZOj5nrwg2J+P4vVlW1pFf0oTeo1ztZqGKR8clmf+bHVVAOMz1zek0gSQWX8y
L2oJF6zNf+3Wec4Ao1M/1jdPpyF79bKDPqTTvXi+U+snW5U+SyuKAdQrA2vl
2tmQb7l1Ges8DbIKbLf0ltHQ/kgekHaa+QHbg9U7yam/0hnI/v7qfvP8J/rY
HxKukL1zUx8NLr3+XGk/SYYa7WWisXM4cG/s0taDZSy4/ja+7qAPH42/eufK
N3KEnjIV77vbvVD7sg3uByYi1O5k9JOD4qGOHF5h8jOaCdxQfv/KbzSYv/BZ
xdE2NsLXA3kxCzMe4/rvZqntCQ/mCWBVQlJKd5AiRItdOz1/kgX7UknRSZ4C
8M2L1V1D8PWpeBHmEuat7y9pCM+v8+5RfPmNDceZR4Sfd7BBWLxDK6mETejN
zU4FXAGUmczvPL6QkI+1a+r2igvgjPvkyaEUCuIvO1L9Ivw/UGHUwT6j35ME
QQl7f+RF4PpfFqTHxmZMBpIvYrRN8rYCCvjcaPE4mC0PXx8MkKh8EuT4XK97
uInAjcIXbqoS8mZKvq66q9bv7YTzYYT69Y9/JuTcFJ4JrZXWD3zKRvJDxNyn
bZEUxgs5VWecvhH7eipe6meBsejcWD7yz72qomcY7aYAdcXCT7seysDTLXvn
VRWS4GvFpqNJW+Wgc5x17uZ1BpKHNt456a4XOEjfNtnfolH3gI3WQ7vnWLvW
QQV0PiY/3nvj7E5H8ixzzckEn2ac33g3Pdm6hEOGp9vFL9dsk4YTGcp5Dzbg
eILKP342/p8oiH/N+LJv/E2nIoo/t+7S2G+VgPtd33As/CXSx0X+7Wfy03em
a5EhayAg+uh9ITi3xnG7WRYL9UMeSt02x4pCQ/k39qa39H++ESB90PzqG9eD
x8jI/7nQJTZfUomG6sVvdXNqSyqig3x15fYFK2mwIyaje0hUgOZ/M+HH+lWz
FKHD/hC3PFcBlopqZ2+rwfwGwl2FqnIJfK2aG1PYwYSvn4Z3DS9gIXm08pJp
08yjOF+PNK+P1+6mCG+7lmZvDBfA5hjbW7foTOSv9rUfLHD9QIOg+94OauEy
YGASIXp5AxNqustyW2TIoKhMdUlci/PHXEzrVPblcZB+sdBKzzxkCxP1U1/6
e2vPvZ9UmGFkZqqXSoELLufjFIlzN5VPckpYsk52CwV29Q9+tHpPgQm72qYb
mRTYvVrCuzaZBHvTeF/XPKGCqJrj+v1faPDisuwDP+J33Qw9zqZHxDpWnx2O
oNHh98LPi9yX/LMz14A9sR/5q+6tyQ6mQgVNTb2RkBfypfHLlJeSwa088s3m
2XT0/obVJ54nrOCi/TzQ3rbX4wQDPrN65X9qsUDhUeFk7R4aKIvn/PxSR4Gt
IxcCuW0432HezEDmkrsc5D+syNt+T/CKh/S5Xxku57kHlVA/Bp6nzPbSbYog
6xMu+vixMoh8Kpyh/pUGOrXO9AstApAZz97SRcjlqXgOgXxP90xiHhP7NLbY
SP0/pq48HKv3eSslyfbu+2pJiqRCVCZJKSVkXxMqJGuppIiSpYQkayLRQqVV
C9lShMiSUgopshVFwu98ruvnOd8/z/Vu533O88zcM3PPPTxIYP2TdNuC4+0f
T3beSVrOQvW5wyedr/Q9ZCO8NnfU20J7BQWWfep7e6uLAOaTmc9HNenQxB2q
ScDWeVZakNp//RvD+aKH1p5mgvUJ9Rc9mzjInrctbRuXMcLxxcsLXrPiL5GR
PuLI8vQyzjgd9Ve1LhfNeILFy3O/tx25/Z+u2Iq0tyUuNMg6ujs+E4vzfIzO
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
LAkuHbCjIvsxc+0etFb3lggVXc/kF2euZ/KXM9cz37dbS3yZ3HIa2i/2pQt1
r5lzkN6z2Bx43xDGRPvbsCnO8JgzBe1fu01X1+m3Y7+TRvn214kE3Q2NGT0s
Ghy6dcIrWocPW7cSBSalLLj3M9OrWoYB646aqX18iPlZ7gLSegwn0vc87hlr
JUHw92bKNg9ZYL2luMaWk9F1llt9ptQgEV23y7StdtlNQ3qo40d8Rnv8OJC0
dvb+iW0YTiYvLOyisxAf1pLwhSpZwUT+2+70aPotPhX8f+QxomNlgTERHS8b
REf9M4nDysyf2hzkD9jT1WJrXvARPnJ33WBAfEZG9vhQ6iKxOeq4PvvT5n39
L+fRoWncVzZgnApxI+pppx6Qkb5JovmJAW8sDlb+1jnrUi4FCsYO3mSnMqF6
/mDGx+90UH93ulRyJxXt577ykBrrIg7yR4UFs8q22lPhSJGmhNlfFuR3D/19
2Ibr653PlhubPY7zdejtrs1r35NRPOzBvzX+cA4NrU+O6y3bpMMElK/69kCh
c9FvXF8/0EZJ6a05FTad0Ht6Yy0F5owJj87T4MGl8TvHS45T4aTJ2FepVC7K
Z90OFV1Y7s5F9RvFq385pXYcNP/Qs2tPfBeGJ2biEz0ZxtycDpyfrHwwOutg
PBWd11fOn6dkTrPgTuzuers4Cpj8WCYU9eQhff6+v972Dj443+Xwjz2Vr7A4
6t6tDU+GzUjwwWf/p7JYFuLHTp2ITU46zUP9bjmMiG7jLVS4eVi9d8U5BhSu
W6px6jAJTpT+SpbeIg0LqC2uvckySA8vYKnaOpmFFLg/UKH+aA0VpHiZHU6t
WDz/4WrCY1MKrLIu9bbvxfv/FpifnT7xiwhWazhtNtYkaFlGv3j8CAmClpo/
k8DiUJm05Mg3t/D5t5VGeZVqKUKk79ZgX3FbsY6E8iEMg95CU+w8vYncX2ar
wwaDJ3e+DDgzkN7+qbe+4V7xDHR+b3XS50dcoyL+UeTqz7ZbNuH4m+HaZM7T
wN5vxnsTdYoNaxbkLTLzkkb9nsvcCqV3XsLjrWd8m5frFrNwvjPTOsScxUTr
qfd8oW19EAuMk14ab+PQoeOGYNrBDp8PUWpn1b/hPQXZ85CkMq1HTAaqHysm
yaZs/kpD/QXsw806/lgcOsP3nzLoezL/Bl4ffC52PZ7XSEb+hUboW29RQEH9
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
2vorTneuyoPmn6mVkQ5k6F+Vtk07SxYM+EKPEE0Omqf5oMniTvUyEuqnWlZb
vad3pQSqT+/ymghvL2Yg/BXpJ0J9d4qE/FuoyBe//z4/sz/Cn3bN2/MV53/X
z7nf2OXPRPWhuO3HR+dqkZG919g2WN8TTUH5I2+KRMSGHjryH5cWnItNv0qH
YaPzlKL7snDryraPdnwh8h9tLZ6KxQNcFK8IS066ZYvTUH69Ouv0MbMRLiiZ
b+F9UeWAtUq93uI8nH9YQ6nWP9mGz884ub+k50YIGbo/O1B9nehQWnq1sqqJ
BGnTnisoa0mQPSo/fS8f/3xBnmkAuZgCuZI54iKYn/O9ejGPswDnS1jo/Fy8
YhYF+Z/e4TamzyZcLy12hb7nWzUyLCgw9unVxfBqbu+x7lYykAwNgr3jCBDp
c/ai2DgJ1j4IH/r1WRa2u8ybOojFiTP6GLX/2l+FE3kwlRbnpNzMBQ97++nN
GSR4RunctSCZCLfLIjwNHtPgNGXfAdIRBuyzbtFWCyWCt7LB+J7VmH8VyXzi
rkSCYdbK+o++JGjq5CRJ2hDBXWZiddwUCXIOm+4MwXBG1IK319tuYf9rIPZ7
pRcJ4XuNdivi+wf4/72s8634piIZ6Uk4H+3YoNWC84cOzNr+9Xwv/n75DdGc
SxJEKNnOSD+5QRZUphfalp4gwYbuiaK57lickJbXc8WXCOzVxzVdvbDvG5KV
N/1LhJeZhHhWjyy8M5ycnkjH7gd6K0atSTBvkW6HigcJ8fX0Hi3uuXeRiPwb
8dHw+ikBEc0niTGRiSjcTEbX3sdiEuqqCLDtwf03B6ZlQWi49nW6FhFMOAVF
DnpYfHROwOh7is9viTjVKSHdSwAJC4ot6wwBpk1DZRySqBCa+1zupz0RLBxl
eTum8f2ikyO/kehJQ/s5e0loyYteKszpkqm9IEMBzsR0UQCHj+y3fsGS53tX
MRG+SAxSLHs2F+dnbNr1ao68NAUy20vWVK6YA58tZivN38NE+IRbtG/F1xA6
ilec9/eml//joPm60YwRN5tYJtRnccX/mLPglvzUrBWVHGQPzhZdTVe5jvcb
NX6RKeqi8pE9sp0Iu/fFH59nmeTzsIZ3lIvyW2dt0rZ6fsHzg5vrqj5vFfAR
P/fZtosylbEcVA9tHr+9RfIHDeKKLEorttKh5OSHy31rmEgPKWmDi1Er4PWK
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
      "]]}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1:eJxF1OlPEnAcgHEkNc95RUGekGEyOYSl82hpxnAr0TCo5TJDac4oTJ3pUMuJ
mtaWFzpRXnhEOla2ttRcTQvTTYtcTdTosEy8WqXIJKdRbfH9vXj2+Q8eolDC
E2ExGEzC3/5ZvJCwZrGwhqwapLtN+i0k1/3TRt8vZEBE9rbEiHxeXecwa0A6
0Kb8hl4hG/LSjl1vQaptcjsx4Ug7EYdJOMsEvaZfiNtrQ0GeRpEePMYApT8O
iWvm6GD/VUVWTyIN5NbxA343h4Ac5VNu/DcKqBot1OWmBIOpsgbc664gsCRt
x31nLzKIofoPxpUHgu9uNleqJ0mgj1Nm9/oRInjxIMVO7+MPpod/7NJovEFK
QaTlcicebPuQPFwYiwMXSnHRHLwnOCA/wF4UuIKMpZl1utIePDqgd9wWYMDs
7h6zh5dx0Krgwr62N0Uz4OjLmWpW8vRhq5HUZw+TmowgNh/3PoOAibG60yWp
VPjdHiyb1cXldLiCD1oqkkrWPEBJe4b7VwEOTM1S+FaW4sGqE/kRrFZv0HaX
3HBt0w+cGi//KXMjgnypMEyhIYFi5xWS9kwg6K8eabRf3g9K++OS3VqCwGyV
uDeMHgy6YMOFtHkKyL50Uk6pDwHxj30l7EAaWJdzo5YxRQd5FYlUZS8DpKTI
+J3FoaDO4Nhez2eCWuF8rKc/C/xse9csJyHXVZk9BDKSsLLiQ6QiM3LXNuhR
yM0yy72EU0jyHcLeqtvICI5+wqUeeXyptbKmEXmFGmBqUiKfPCJPqNRI3gir
YngUKco0RcePIwuc+ozjWqSSG3n+7SRyURcT/WUOuVmANYoWkK7ew91Ly0jm
Oc6e1VUk28ZRm2dCnu4Yk5nNyCz2raiiLeT/b4F/ANl2M2k=
        "]]},
      Annotation[#, "Charting`Private`Tag$1068456#1"]& ]}, {}}},
  AspectRatio->{1},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.8452585552195968, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.8452585552195968, 12.954190803136143`}, {
    0, 13.663620160086781`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.910650476242692*^9, 3.9106505710421515`*^9, 3.9106508306321306`*^9, 
   3.9106509449029417`*^9, {3.910650997437701*^9, 3.9106510162222223`*^9}, 
   3.910651046942413*^9, 3.910651424296958*^9, 3.910651561879133*^9, 
   3.9106516458926134`*^9, {3.910651722958989*^9, 3.9106517341367397`*^9}, 
   3.910651770468119*^9, {3.91065186771506*^9, 3.9106519181413293`*^9}, {
   3.910651964024206*^9, 3.9106519759752254`*^9}, {3.9106520654693065`*^9, 
   3.910652116325671*^9}, {3.910652150640276*^9, 3.910652155803503*^9}, 
   3.910652198143028*^9, 3.9106526493783884`*^9, 3.9106531061411943`*^9, 
   3.910653669333827*^9, 3.9116721773453035`*^9, {3.911672259275118*^9, 
   3.9116722836064987`*^9}, 3.9116724176674066`*^9, {3.9116724974743614`*^9, 
   3.9116725341543355`*^9}, 3.911672780319398*^9, 3.91167281836861*^9, 
   3.9116735143626738`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"9c0834d6-916b-41ae-a710-4bf2f90e9df3"],

Cell[BoxData["0.7956202202578561`"], "Output",
 CellChangeTimes->{
  3.910650476242692*^9, 3.9106505710421515`*^9, 3.9106508306321306`*^9, 
   3.9106509449029417`*^9, {3.910650997437701*^9, 3.9106510162222223`*^9}, 
   3.910651046942413*^9, 3.910651424296958*^9, 3.910651561879133*^9, 
   3.9106516458926134`*^9, {3.910651722958989*^9, 3.9106517341367397`*^9}, 
   3.910651770468119*^9, {3.91065186771506*^9, 3.9106519181413293`*^9}, {
   3.910651964024206*^9, 3.9106519759752254`*^9}, {3.9106520654693065`*^9, 
   3.910652116325671*^9}, {3.910652150640276*^9, 3.910652155803503*^9}, 
   3.910652198143028*^9, 3.9106526493783884`*^9, 3.9106531061411943`*^9, 
   3.910653669333827*^9, 3.9116721773453035`*^9, {3.911672259275118*^9, 
   3.9116722836064987`*^9}, 3.9116724176674066`*^9, {3.9116724974743614`*^9, 
   3.9116725341543355`*^9}, 3.911672780319398*^9, 3.91167281836861*^9, 
   3.9116735145333014`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"8d58ffe4-788f-4178-aa26-7d000cae4b08"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xValuesTrain", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Denormalize", "[", 
       RowBox[{"#", ",", "scalingParams"}], "]"}], "&"}], "/@", 
     RowBox[{"plapt", "[", "trainInputs", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yValuesTrain", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Denormalize", "[", 
      RowBox[{"#", ",", "scalingParams"}], "]"}], "&"}], "/@", 
    "trainOutputs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9116728002632627`*^9, 3.9116728626920614`*^9}, {
  3.911673400841716*^9, 3.911673402136798*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e96acd2d-0da4-429b-bbdf-3e386113cf1e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"xValuesTrain", ",", "yValuesTrain"}], "}"}], "]"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"AspectRatio", "->", 
       RowBox[{"{", "1", "}"}]}], ",", 
      RowBox[{"Frame", "->", "True"}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<y=x\>\"", ",", "\"\<Best Fit Line\>\""}], "}"}]}]}], 
     "]"}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"{", "1", "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Correlation", "[", 
  RowBox[{"xValuesTrain", ",", "yValuesTrain"}], "]"}]}], "Input",
 CellChangeTimes->{{3.910652217197712*^9, 3.9106522248602304`*^9}, {
   3.9106529581265154`*^9, 3.910652961165916*^9}, {3.9106530106028037`*^9, 
   3.9106530127477317`*^9}, {3.910653684191922*^9, 3.910653685667101*^9}, {
   3.9116706221945624`*^9, 3.91167062692247*^9}, {3.911672878686653*^9, 
   3.911672898335322*^9}, 3.9116733186914787`*^9, {3.911673503548456*^9, 
   3.9116735074426136`*^9}, {3.9116735652914047`*^9, 3.9116735673929105`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"4924282e-8b1a-461e-a6d5-71e7eceb3945"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          PointSize[Medium], 
          Opacity[0.3]], 
         PointBox[CompressedData["
1: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
Pqko6KDAGHIWf3OPCBoskt59AQper8rKrJ6ZLOHA7dNLXYT1UEiS1U3XWkKB
5WdzpDvDaHBpcOW6SjG+n7/by4hYYcvXLx/+W6Z4tYkIs2J5yh6hmN709wgX
L2KC/fNvtRdW8vVoFC2moIjOAgTV/TzUx8P9wc86UxeNFzPw+Ffr8fQsDaZD
jt6PKkvsPXTOiVg5oyR4XPvtJHwjwaOJFT/C5DiQP3dvcvMWCnyo+/Fh8VE6
JOcmmrpu5IK7SM/E4lwS6J0K6xntoEBnllzqpwYarKiufSz0SwZUM2fTbCoR
cO+Nl6TfxPZv77dPzt/IkLlVcqklkwDCX8jD7tj6eE+09+RZIkCQkHeN3cPE
+ZLeyJMphQYqrFX+ZdC7VRoO6G1ccsxDAsKTnRM/3l4KJyLFf3fr8Pnf5aQ2
1383WfDQ/HDZhQA2bMvuqLex5vtBVvbL72n8pUI9bWDYmE6GylXOU6XA91NM
RTVEhsVQoN7u7DiyggQ7VBoUFm9gwfle4YvGBTTQEqMdvdSE1dG3lFUemE4U
GFnWY7oPq8NCZtpxf4ngfxh90h5EAd8II+My7NyV4ueNZyP4/JxCF4vqXE4F
JVO0c6cxpje5yctldbn4+Wlra8la21KhY+QYK1aFAbaLBJp8zUnAHl5ixH4j
AZbB1yv2f+XrddG80crGMXEwir2Z+PENCUT/u1iptZyJx3Oo07M5OVEi9Gbq
lrhQMN1t+cEmI5SP57ndNp0uzxF8v85L9a41SuLi9aw/p1i54RYJ5qtXN3Zp
Y7zgb933vkR+P+f8Ljr983s6OBzwW+NsRYdU56N3GrE6tOBvGg78mvDZyvfb
zY+tXb29jQq2K+sXRXwnQ3Cr3UTOdSpk3vj6lRCMQG1sTqKdFQFeSPcl/1gs
AMMJMtWdLTRc/5RVc/YZ66O433w6xDBO/hUNJHdqcETPIBCme/YGswLF/dKU
mHXdxw8jYPZXVFQvmQRPBHm+fyxlYPOZRFuGrAy4IB81Fp0m4fkgFnT9Wjim
zztjtILzMD2wWPmF7c0CFNdLZ76aHGS/49djtPVy04wCn5/ksnK3r7Eh4P0g
oScrrKXX8vD9vO5tLXJTh89nC6YJ85EYv15Yn8DsRkUHjOffP0pPbg6mgZxW
V+HsCB0eJU2mz9RwgVuDPCnCcKhgJVL0KoYMjZ3OiAyGNwvxfLWoII7EQAH+
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
nmz6/9GPLPQ7wn+e+ajeRELzczkHPvOo9eH5scI+qsu2nQwtVw7YgisNtNtb
JK7ScL13ITwR3NKqCIcELpXef7sEGOFlpoFWdNDija+fE2KA76nYyT4HfJ5E
8gp9YOtxBjr/eeM5XpEbZJCe0TF6+lFlER3trykPjdFzVKeDWM2foSdvmSCQ
323+ThnHd3YraNWLTHH80HfH4ZmNHT5/0XjYftmmMSI4Xcrl5AtJw9rNQpWc
STkYeyH7TZ/Bhc+ab9WI39novEmEbLV7McqAtk9BrFBVJgjuSPPVbMT1ISW7
3kmXpBAhafFg3kosTm7a7bbEs5mN6vGCG4ZrDR7RkF+u8t6MhHplfJ/6WfOp
nLpPVEgPejgYYUoHf8OYBroxhmfW3Nk/gOH35FnXlzapdHR+bvit+C2zG6+f
5vwaI61yZSF9+WrhO0uoDrj/V3+yrxzjDAXUVqevPs1LhnsrHJb3PKOi+FAu
ZB3gCyzkB3A84bA7ZwcVeo8mi4010mDVpcmGX5cJCC9VrbUKtCaSYembrRQL
YRrsKS/ZO3SQiPROMTHCLUFYfEv6YahjxZGCFfczahJ/4vgppEbroWEFXm86
rLDDf2w9HdY70+JUr9FhWHngviGGNxfu86ENzilHE2lo3+P1D3XmG94ToT/f
xG1mFw3sXra+76vgoPM2kS616lSNDJqvLLr2cvrmcjLsf65aU3dOFsxoA7r3
19NgfufJdIN2Bizek11zVpsG0/eX5WZg8ZhOoh0bxvDRQn+E8JoyK6RKQ/zC
9fPbsEVEJqoHxyXcXsP7joXqFQv3aUHv0BlWn2YsJQ/lKvYiRS8VYTZVT/xm
Ah35+9otyjs4foWA6rHHO/slR6yYqF698HkL+xpUBAIbNbsJcFBgxZnkHhIs
WSRP+hmG++2ss9GYXvOWgfBeq8fW2bNz+Pyg5UXuacYLJrqvM5JT+c8GqMif
ssOwb/TgJ3Eo3xBj2/yaCKF9fCWHCBQUD+rb9vRe5SrA4yrRgE9kedi39UFF
2k46hDwQzXcxpUK1Tf7BG4lEkJkmnZ9OJ0BB5l6nstsUkIxtSP8uQobDQZVi
317Qwad9udTlO1SQzn3foZFGhAmLWEpZsTSkffi+c1MiCeq5qoI/jKTh72rD
cYNREvwNsHZOlCYBn5/19Fc/GjjUHSnOEGTDgx/Mvp95RLDefvnubjkSvHHn
eT5ozAajrb5vtVjyYNorw9elx4SJctPnroDx/ZLC+SfhJNgqRGstXEKBW5zg
OAMjSTh/k68yhiYAB1hyW4W6GIhPiZZa0qdekVG9Qn5jsmaOpRzQt9yYWnRD
Hi4GRrDexTDQ/Vl4X4KLyI5GGC6eTeh0atEhws22D+ucK4VAmXdV5DNREszY
p8uYBhDgdVVh8J9ELkRJBsZ775aDxxUrOkYWEdG+N9dGSlzhgCz6fcqeIk5C
HiRg6Z/VOeBJhh//rqjVeRFRfSxHY6g9fTkFnnM0HzFnsDz17mrkqt84f9pA
9eubjaLB8P4f76fyaKC29xm/A/a8b4wYXhhZJQUORx4Xjr8no33jfneSfUML
mJCXfmM3SV0O+nZWnvxTIgf+/d33TTbIw3G55iSFDDKoZju0rWeSISQ0+QS9
Ap9nnOPNUQz7QEX3YTfNjttfh/uHaiqfrLUtpIDgiFM24aQ0mDtq+92cYiE/
GeadzWKFhbh+MNj0d/SpGgLSk2pMjryeHifBsVql49MYf2aPPSgxiCCBJEt2
sGwxCcJduiftOByofJBc0pvBgYvJgUP72sjgLZJ99dppSZBqmudKtOL9ygzP
ZqW+21i+K1btdj1HAIsffwt2WTFgZnvO0Z92MiDOzkpYu0cG7ccevXIyb1Sd
CrJPnP4cvo3xjL2RVk43ZRC+XzgPC/E2suTVEnF3FpqXGB5c35fuSEN4f8Fv
e8FfW5pDM3qDxW+LRb0pMdspQL2amPHMgor2h24zGT2WgvH2hX1h3Y8O5hVO
cdH5L400G9r7EZ9/CX4f+8NBAfdXL3z/6pWnJAPhCbsGlXIffSryg//V8fRB
3TgV1cd9VJK7fDOk4HpFoDMv9r6zs85krtxCgqTQHuszVhh/te25nsxioc/D
DoCe7DkFaLqVZxR2QxGyb2y+dalHBhLIZke4zxiQYyeyc3cu3k9MD+q59j5H
CHJfc6Uy34hAeYfAb6oQxucfb5O/vIQAqlfyehXeklG/6s3K+m9hwiRUz3Vs
yur/uJIDzyRllPfzc+GE+L8ehhwNzUuViVjzH+sSQ/Ou1YVpencu0uGiQEXg
jTMywEeaeP9CiAZnK3ofFPtheXPq8nnLMCro3JHUqjYRh5N7XzH9P7NRvYJS
ZJA0J0uH3KMtwZqaNAj3Cm7fIEpE+DBjZ5J6rpks8i+N+Owl6XSIifwav6YP
fvFqxOszh7hW1clPCejvzxZ1CztYg+GWVqs1nVtYEKLR/UlVDN+fJ0f0Tl/x
nIr0IIEisTNeLXQQnZ5J9F6PneOLTZlb3UgQk7TMOl1aAPZpw9na31RQfl71
9msCBS41Ptt2vR7fvxggcTJLsIWI5h9/sIaeixJpELfrRMeGSDKcp+Uc5Ndl
oHm5MKJHHm0pGdIaTWwMflJgVQQ49MrQ0HxjltLLHcQ7BDhCuHpOYAkVtK3f
tMf9pCL8qy378Cf9Of77yeU5PYNnpNH7GQlL/5nvg8X1oDfjxEdE+MAznHnE
l4TqVwVpadL5cSzIfXvNPvYUdr+GNrYEReL7J3coeYtPRFIRP/mxl5fD7cX3
mY65P81puSaC9MwC6y3XtOcQwHY5b8v+0xi/7jwVC+44filOTJ2Sf0ICzVvd
Lz4eIYCnQief8wcC+O5tWfmymQJPl4QfdVpPAYdYg9sJaQxwhpunVmHn4Lph
kKpeCxmoUq9qbhqS0TxxRqF1u1oMBemtnWoxNntWBp2XE3s5j/yOUZD/8osq
ne28K4mgRfZbIV4oBUUCfWOzXFkoH7yaLPyLA7255zx37qSi82T5YHf6aj8O
ii/rV3muU/qM+zMtxKc5D+YZt6Ms+Nysn/X7pQzyYxFO2KcTYiuN9BsL/36h
3tcbuKnjCcaHXyVP3QrG8O/w8cOmgkeJsDU7qHxkgAjm2xocZZVJSP/1eErz
6kUmF80z1H3rHN19F5/vX+xzjF2PxT3e7JrJUSwPKRxybUihySM8qFMd+wl0
uXC95i4phcAGq8dnx/Owe7+A37jf/vVan8fn85z3/2jtxvjlFSmN586iZOx8
az+8SCfA5bjgTepbCPDYYrB3nENEfspXr59fzSkngkJH0qj6Mgr23hSOKEpw
4ID38dF8C1n40MFcH7KbDG2L1Oytr5HBUsHJysWRDmq/q2z4O7C8XPX8fX8I
E5r1muV6NbG4FfeocT4Pj28PexUKqSwy6o/ZSWYd5f2J+4NUG+fnX+iQhsy5
p5PbbKkwdW68fvMUG/EP81JxPZ4uvJ/jcia/KqhQBvWfdL4m1ix1wP0p39wU
0rZNpqPnfedPo1uPNwksI4tXub+Ugl61DOVQbRKa72ncrENZ54n3/39WNpjs
DiRCu5WYWBr2XNNvS+sF9EjCjcIa54cVRJgKkDWdLZRGz0/uxSvegpM0SDmh
Zx/XTAX7eMO2qgsyKF7sy7i4+pYrzqeTFRtv5nySQ/PmD85Mtq87QoJvfy4L
Dp0hQm595bWuFgrsgt6Mf9g93HmgsFoc4/VIT/I91OL5RgJs8tr5IsOWCFe3
RPpvwXjTgn6jXfjESp5DuH/R+zByyrsifL7I6ELYCHWlIJovPkVSf+/7QB5S
VDbxa7cpgmTB74Nv9+D9DPmQ2bwEawKI2ZD3KuaTwW2FdPd9CQokyEttK2VQ
4W31+8W9xXTk93FCOux9nwUdJpNFJNwxnJzAqzw43U5A/jzTH/XGQ9fRQGjP
v7aZ7wzQFdeIDcQ+b0Ev6Kli5fBpOQMOrtJNvPiVBu4FlY88uiVA95BDJM1a
Gm6WhFfTjPB9Ll9/uDGXeCjAXbd/PFSNxTDPvua2ZQXOp2+E5p45eQbLm07i
A5dWUODi3/3tcxn4+ZQ+KVqlMElEfl6pcTZWNgfwetyTPYx4tzi8v6Cpz2OV
OojHx7Ove/y/r/6f+WdhmxctU8Ionl/SGmsnk/H5RoPXewpaVtGQ/muGtrhV
1ksKxZvN25OPrjxIRfxvlRC35qA2A9W/tr60qM0foIPn+mPHaiZkYIkcAbxe
klF+4Dz+UTHTJw+h6RV7Cl5wQXHJk4Nf39NRfzR92+qokxlU0DPt+PjiCQ3D
heuGq3kYqL9iKkXQmjkvDZ8DpCqVzDA8tiwx2P8DB+kDN9pAP6GWgfTOI5Tz
S2544/7dz+lrk/W78eczuLO4nY7xyAU/4acNoqGml9no/YRHbdKM3CmL+m2e
S+33DfHQ0b6Am2Wl9BxvIjzvfrY7g0YG83lHpTQfFrqvsR6dOvkjDLTv7cPo
et1bcng92cKXednwv70V/69+MPVEYSqYQcHyctn2nJsYH2OEHd1sRoAXsrVm
n3IJMGd6LObHaRlUD6x0mX3W/0gWgp2P++wDFkwsevIy8xcDvD9qqGoqyICy
9Gw2w1EaHt22ejfpQoHECWm9C0xczyLGd+h275AswpP0Y5+y986SQfSexdYd
42QQCLawUCnGeMR0+bfXtmTwnb+XwS9GRv2c4Y9R05bYOZCu+xb+SZYKMwYD
Qlk1FPT3Z7SyuQY/yAjf7koi6JtewfdBtT+LKpU0ZwDZqFfoWzAJ1kktv+Iv
zET1TH97yo7Q+3RwmNv40SCODm3r52Xa42lA7KItjh9ig0v3kTvEOhrCVzzb
QzwUosiwvNjxgOBPIsiTeIq9RRnIn+QpVURsOIgMas0aUg7tWP5/t7WgNJ2B
9IRupy0Vf03g5+PFItNTAXux73urZuB1Kw2CxXTHLAxoEHSy7LXRBirM5TBG
RbVpcG/nZwPzxzT4fGOkIuM0E/o37y13kJQB5z6ep2RdGhQyHR/mY+fSZfy8
duY7Fpo3aaJ+bDTOxPji5fXmi5IoAEmjS+6LEJB/cULoD8OD/rg+Y/zXIYvb
GI/rubdpay6Wjz7G/qqOVsX7W1oT1C3CSkwcz9nIfvcSZCC+9mrw61IxjLcE
T5SJ68Ai6N9VP8Z5RQF5qsWm3jVSULfo1WT/XxLaL6JXnX1U11kG6F/XS4WF
kWC/6bZZfpCFIYvo+apSFswunTev9VVA/eEritraXhguXdBfehbN07sW4c9T
/83vho4YAlha+tqcCyeCyj0DA0VHEnhnR9qHOpPgYX1JjNcwEbZdFop+LE6G
BmX2gRQvPD9VWhboRy8hQZByi31NiBREuVZVuFni83cVeyc6Cv7Q0TyHfIJY
dymXieYzYs/Pa+SPcBB+LzdPWBHQjucfvrSkph5VeTR/UHZJdUDwszTqb+vU
dWYIYXkkL5JrLfSECnvab9sHaJAw3Csv1xFPgaL6sPuXeZioPuN1+8mO+C1k
6NBWXfTqOPZcrZSEyo1IaH6iMkJskO8/3XsS56kexqtyDnc/4pEmo/jlemzZ
oal3+L7BhypnJqp6KAivPOzu5k7vIYGCGlPw9DcSrD9RlvPLSxxq7aoV3Yx4
gTjuIMvmZ6N+k1vF9SnTYALUZNgKssyk4eWvvlrCBzFQ71vm+tFleN0Cnlzg
c5sOfFa1OEaGYYUO3sTLJFCS55iL0qTQPqNbyYt/Drbzo3zy4gO3dvYgDeGn
Of+AzUP+JHQ+br8b9nq/Ed+30cXQSn+jhtfbPiQ3vhkLYCE8vt/0ouAroMOR
oKI/99bKADNj/fRwIu5PyP5Rbng0D9eHFu14WekkQvk/9b8iscO3JzkYbyz8
Nes8SEH9k96q5ePLrJlovjXW9vGYo6sMyheTbV68EX5kaK8f+nQN47lmFq8G
hq046H1sFnI/k+2I5Suvx8sFnAmgLagf/5mXAVJzfLEF16hwwm+D2E1bMWhZ
s6654J4o5Jw6fDgglwZly32YJTtloN7N/vyrIQL6/s0H0pxOLsPrWZ6dBRsP
r8Tvj0LX1XyaGxf5V8hbhmvFfaeg839K3PTQ4QAC8NGr2nMPY3G5Ujm7ftF/
/kYjOar7ML7y60rch00KYCrw3vyRjxKEZKxtOXFJGtW/r7e49fgX4Pr1+iO2
rlPKVFR/Oj/ttHWNnTSKpwvPd6F+ek3v99oqBXwer711w/hHe1xvNWeocHhN
Lhl2epw/5asuCXMHhi5EtOPzUV6pl6M2LGcDZ+aKymMn3A/+on9/xfhPaQjX
8ndmvmIjfZ+pRVyPXTQNjl3drhZ2ng51EZNXHibi8zP0rLyL79bi/UjRPkJc
7ygV4i65OrcEkOHGr3Rjfxqur3EcXzursBzv76VmflLtIWDnz2xl9sm9FHjy
6/2lU6+YqJ6r+ZxYW+e6CJ3/TT4Jfx/ex+v9rZZVXNdCKqoPKAhI7WjHzt9C
fyXkadumczvI6OdpYu/e3m7A9/c2hBK/+j3G78tzo93tvjkkSIP7HoIkMsKH
fo61GX1WJIhXb9j9EsPbPj9jTr98SIU2l/ZHezPwfWUX5M8qMlXp4BHftcVG
ThCOnJN4o4rxcwIr4e3NrRiunK1dG1Ylh+qLxfPElguK+D458lLJj62ncD+R
apXEbywsL7T2LhbOkiXDjOR9y0PR+L6Bl9JMn2cZuB/jzvH1UcF38P7EhQdS
ndoYb1QyG7u79CELRr9sNNwyjsXVmRHyYS4bmkJ7NlTn4/vaK/zCpq6rCqB5
7Oy2XLmLR7D7Z6vfeFtECu4Vql2Lbsby59mVTtfiheGz52a/ZRi+XsDLxVfa
5rJ3kmCrf/zXN9lYvIw94Bl7j4LyqyFvqFH0JRqqd4ZlKQ2Wb6Gj+sW7+Gi9
z3tkkB7wtIjqFstwEjrfQeWZ7n1yTEja9OSF4E0u2PzSWmf2Gp9PmJ6S/vKm
kYXuix/zrI0H4Hp1/dN23qV0CrzT/vfl2RYqTGyLPyuA3W/S3ggCDTs3u57k
vQv9ju+jIIn7r7i9mQXvlNM2Zt1mQ1pCSH8hH76vTlPuSfexCHy/3zzdq+Va
AhPNk+xy7Pl+5SIVhAivsuZ3k2B1WKK+JxnfN+NRGzylKEdC/F53l1ayhhau
17ibcUuEPo/v/103qC39WYsGZi3L135wJ8GWD41R3o9xPsM0bjIIfIH7VWed
XVmlOo/htNQBKe/NRJh/eNGv5ykV8WueUVr1/Ekq2j8KK0S2NdWy0PnyddTd
/mOxHBwwztSoo8nBWkX+G6su4n6Uvucm22uxuOpw/19yvwkNLH5GTQ4vxuf1
jkl9j6SuIiA9tdO3e96+GA94M+SUw7+eAt/u38+OoLHg7yY3JVt7BuxmO6Rc
EFGEsKdAqRFUgttqyhvb1EhAMrm+v0GWBJXPP8Wk3CIj/Yx236LtFsdkIdY0
Jj74FB2M5d5d3dOF72OPffxZ8M+7//FP1pR8ERZMBP9C69NNHlTwHv/L8ujh
IL/iZZuWGTKw+OTlRLQiDRLhmKd2wG5DGaRv6Uyp7ryK5b2Vi7cFXmymAw+7
hTbxBd/PMxe0Wt5Nj4r8qtWdX3eG9snC7eela3OOKMJokIpRhRsb9bsEbK64
R3iTQL5phfa+LirwymuM7HCgIr68mp1jaOKK++HKurWfqe3A57GIq2tNPAkk
+P/IevNwKvfvfdycmT2P2MbSIMkQhUWJyNBEklIZUppQmYdIaTCVsUglSaRM
qaSISMkUUSIZkwxFxvR7znW99+v5XN/fX+c61znt9n6e12ut+17rXvfyEX61
wXyUAILrlMhUDQbCU0r6NkcoqzHeu762SPmMNIToqN549JcKW08U/SggUGGZ
VmrCph9kmNzfylOBff6xS92lB1bIQmVTMPWvkAIsTg4J0JPnQL7NRW0/Gw4Y
py1huR2mIr5aXmEV4RfDQPdXYP8BOdkPSkhPJzerq1+2IIv4hh6tO+aqFQf5
ozgtHYfgZLzeImxR+kgci+PcfV1vNjPdEydZaJ7v+GeLt/ensfhSeGrzmAwZ
9JyS9rhgPJo7f2FufXx6tArjmc5XheqbSXCyL47wWoSO/D+2vrRpfMvB8sfv
t26O7hjevF54r/6JDFhHbvba7ykLp8511dbL0ZD+ePs8PfefKwnNq7OWuB+t
0FRE9WeDAufo9hgKfDEVMPlEYoD+XhX/NxifOrOgebeYVwY+rRcdmLehA/nA
tqDFPDJASb3Y0DdORnpN8YbFhvHGZNiT9qZH0okEwYEnlftaZVC93CJo/my/
PhnVV27kPi7N1pQH1h5zFVknRXC++Z6vHMNnT1sfvSw5ToUTnnXh/dUyKD/b
Kf15SEgmw/K3/XN/MHxW8ufizDtjHO+sfPLiy/kCSeC/3pfRKyAGXXsqzlzG
8DJxkf4916t0yN0kMDlVg88z+byX9FON5qD9UE6vAjWuK+D1R9vCT22N5hT4
axlzYvtj7HOS54aUs5hovlbjWMqJiTc0lO+GtrTGZKwjwR5aYOZUBj4Pz90P
zv13bnw0jGq7OoOdA65+JdvM1OvIZ1x/JhjiPFszS0Pfx3P/cY9fwyQ4xhO7
LOAuBZyyr8/7vqSi+xR1uHaHdjoTLi626/ziQgHjkPCtYk+k4WXuun0TzgS4
tzZsaU8TXm86FT7MW2nMggP7KXOflWiw9um/0rgMOozZtwTa6mK81zAlv/Ms
G9VvrxxKtxWvpKL8aNqVnZx/i4rm9WWWt5l6LqWBvhBxqcEGGvTL88RLrMDx
b8+xzpuiQSRwOxy2SD2XCjWBcfLKNFm0bzHpgeCboQlcX3Bso1NFrBED9ctm
dxYYJjZTkf4wQ2xqxZJiKjz2ZidV85OAapIjHdVIQXjhZPTmwYFENuIzAsmn
IxvK8PwdzZhdc9WdhuotfH8ExM9iOJTr76nvrVEztwbXtzomSaU33hdF+KtB
7y09J00BPqT9WmKZoAA7Kga+ROswQbLTyWj9JzJ43L58nxhGQ/yEvsJid4At
9h5nS2wKVhPAsaUk5h32vK9/r7g5VkgDhUHKykl33O+h+MB72gZjfH5BL/vb
Ul0pOYQXj2qz+b5bUkEyqG1Y5BoDbHf8qzTaxED7Gc58SB1uycT98ssv1EY/
caOAV7H8IsN70hCxhj886SQb9XvtOMI7nRLl0X7ucnMP42XYc+b6+3l+W50j
lEGDPUbPcwWdqVDIt/XzqXS8vroh9cqNOn8mVKnQRHcAEzyu9H1wxfIil5/a
5jxYkdPORPEk2Vc7fP1DvB+6YTQ9r2KEjvo5dY7xsiP28ih/G/iuEv/99z/d
8KBALcYzmXfZEdfCiWjf6fzDbfK3EjgIj+VnV+o7dDGR/rVUycmkZjUL+Rmc
SeulxTT9n3wKPh/5a9joPMbd8GvdjeV38fIvDu4OVDA8fUbjH1MYevh32AeP
ScKviLuleeH45yceKDkh+YUCJoS32cLLyTAju8J2ajNeb0lyD4oNESJBUF3A
lWoNCqSnHxmRXEqBCs0gkDpPgctWnH/PMP7Gvc/maued2rB8EHKyS+f0Kjb0
5piuuXGagN5XTiDBvxPjM5uP/H5S+pgMji7LPATNZCDj/bWq8RtscGKtzDZf
S0LfbyhEa25zJcbbYs3lWnVJ8EFY1dQqjYb0H1fvhZ1eX4H7ASL/Gnr4nbsM
Nqg0u5oMdsug8wEx22u8Lsmh5zmesbWD40WBPMd4euIyOqixjPMruzHcYv7m
cVQsGQ7tMR67k0pD9SW+sPSD7kP4fCrib0fME8/2sJGeilvPziaF+N2Sp0CA
V6zTm48EGL4T/M4Yw63x48EevB9JsK5DcJkTgQZqTXnKAZ/xfR0Zyu1xG/gY
0DPiRr1iRkb9baHVOrXv60mw8HNps1stHp+5/X+NjwpXxPbLg7tl3b0jZxQh
8Fa4i/NtIsLD5734w6qXKsCk05R974w8qOwpiurbTQaLEfekvz7S0PlKuuUH
g4Lwa+9LYpzwRjy/CD7xW924mYbi53e53KNRGM78tiGrTbGZDCsDQ0JdH1Dh
wrjaH8oQEaT2kD1tRfH90DQpTrs4Ca/Hx99QercqjQS1h2O8N+rRwPf1hbQE
7HwgP8mpIwp2+bjeJcd+6wX/F/if37Wq2SxjJwGCzMOHpK5hn2O4QvKcIAFi
XuR6dheRgQoBp54dw/1Csx3V+SVy8PsTRrY35kwSYccbgm1unQiUaW3jVMdy
EB4Nlw9Wk/2PV/5vvjnEQDAvawcN6TFYFImPdAyf+ueWuy31YsJYga4uDDFh
W/1YafJyNoRM7qQ3KlGAszvX4nI1hq/EiM6rnpBR/PkROyLo2I/3R1XG3o8L
uuL86V9Blo3xcQraj6s1fqEt7IQ8Og//VmvpfblHBvHIxlVSqWSgV4pNTYVS
4IjMIcWCbxQY7D1myJtDQfMWD1Zpeyh/piF9H6fCJ+tiAhlORy44ugmLwh/z
iX20SFnUn324K9du3SgJqq329Y4bk0DsXXKjgDr2uflfVSYfEsBon/+binyM
F6/5KJH3igKhFJOmIWkS7FvwNpzTIwBdx0+BQyLCI50Pr89j5yB0/7+M4+uJ
yN80iiwy6xNJRXrJGZdlU3Jt+DzKmm4b3YZQFvInvlzic1Q0jAIyfM/jX2Dv
t7yvOq9uTBb1J18IlwhEOTPhVua2tuEFBsx1OY0oruageYw6ysTq5sc0qNrR
kPO+nQFg7JFXcAv3WzCUFn6l6I19flipXGYfxi8Nzx9rvUMDhytubQ8e0KCy
6HzPLIUEH3f5ztfMY/zrl4QZmBLRfK52ivnKVYdk0fzrV2GPxsKnHKQXde8j
aTcNM+G9VvL0+iYV+By9kHLOE9dbPpowPDksRYJd7znO++hk4Js4klOdLQ0l
tLrXFiOy4Ocmzthcjvuf6NRGLrNhENC+gYe2HjbVo7jfg/d0ftuUIY43H7ee
05IepqL4NBc3urGyQQrp4VQ9qWemsXzJxRvZG5PuXeqkonmBwa3ZMcYkJsJj
614Y2b41IiM/7uuVmrM/rzPQ/cx+KP0x7hMTBh1YhvRnDJjZFN1DOMwGIavV
LuItshArufbFhTJ8Pur0cWfFHdi55sZb+5jyj5kM/L7eSv7tPi6HzzNbukZt
8q3B57M/WL+Xq0+mIH/dyTc58ts4VBT/upqXmA5jOEdy5dr0mgAi+Co8NxJY
TUT1njVVR9Mo55koX3l2nTY5h30O97x8S/yd4naICRXpy2456FAgsd9OoGwC
r2frbstV+MGmoXm47UZENwkMP3D1oA6E0ZolF0ng/MepQdEde77eS6Qfb2Aj
Pw/1wILNK3IISO/gvPhgSUshvl9SJqiUx3BeDunFP04zF18boAOtTKjo+iY6
nFs+KZm5nYLmzf2HrcweerFBIWGlzGZxjAe5GOzbqCQDrjXj3ZdH5GDqsr50
njYV7Zvi3/LsvBN2r3KvsQ0r8ihQe1Xqdr0lG9UbDK6nv70wKYX80TJEpz3T
NcnwTbYmWqgEy88/PN9v5JARH+S51K61PpAOStPKvHfodKB/Jb8jRzPQ+dQb
rdte508BcxFbVlwi9ntzcjfGl5JQ/TU/cI/4ylYSOk81e1OtW9zI+H6IlBzL
nyVYXlMy15Rvws6vhuDdpFOy6D7Wrwsf8/zIRvy3mx6t/9uHCjzrXXPeYfcu
//GV/AO3WQjvNmW7+YkkUoFdHrlxzxqMT9LoKrwYTuf66593/RwetBfnR7IG
3zVGmphovmOM4PdvXkEWZuYP3b79RxbklzbIZTfhft+XFGriCWn4/++v3rBz
bp8cFJvMvTwyRYdoBdenZ/7g/USyGuHt8nI8/75NuNaiguEJdYJsdOxqCoyJ
7wwtuUdEfgw6+j38tgdJSE+cTmsvq+NRgOlzSg++HloMFewLGXGAzzuK/xTO
iSynQs5Xx+LKAjKI/oz12e3IQfOg3bFEnt1y0vDA8vYo8Y84LLUxTmx0kUH1
2tnnb3/uFsL9PXw+nu28TaEg/UHu+i25sW8YsD5YJX6HHROybbbe6/nDgmF3
ZpbUBzmItEw3s9CkgtE3jbdh2H2JGLulvw7DddNl5KPFOgTwXV0hvh+Lg5ee
8yVelCbDv+B4t5k7orCVsP/idCs/FP2Y4ndxYKH9EGP+zcyMGgIsaTt7itFF
gkNCasa6JjRYVgB5MTsooCx44vGoP+5HUaQcVrSmhwFS7etu8PgwwO6R3dWD
P2jo/a7cP3tv9DL+e9WXPZFqeEsFD6jaFVtIhj+BkomUBhKkiOeE58eSQGJI
7ssdFu73/1P8sfboFjpEmWVczf1HgO4Zo4OeF7DfI/X3TjF2T49P57rRi0Vx
/m7vGzyJnX+j4/yex/aSIVXQZlHQUSyuG2/R23uNBmVmhULGp9hwIPMnYYMp
xv9Kez6fUMf1iYJH3y//vh731724w7VIOBDnV/PaTaGnvpFQvO4jDFOlqCQ4
OfW66PVyCjyZb237Uk4ChcdEO2FeMnhfqLJJkKDDKYG7/csksLwYIvXg2X58
/8zsotZjX7B8Qj6lO9CB3c8hDZ5mBU28n9s66RhIlKJCiNL2WcE///X111eP
L8L7kd/ur5+d+SeN/OADnlu/FFGWQfXn89lDL8WPcUCzOebY+rUceFQW8KIk
TApS765PT7kuArln8ipo28nwS0zhNr8LAzJtXJI2rJRG+eptXvdkoAoVbrGd
qpx7KfBw2/3p1514vkh9RT7oKkpC+MjzuidlIh27H4uzswIDOaAY32EdKo3r
s40MPtxf3U1E+oC5sPxbQm54fTI4Tn2N/1kaPOWY3XqBxVsJ+e4tfzD8wtXj
lqafOvjoNs6v9Aod39jM4Poc42NnJx8o4X66t48bSPlb4PtjbytF2G22JSE/
7Ye6Lydy9uF6o1/3CnPP9ZIQ3t3yayjmnRauT7qst11QopKF4ufqewafPqpK
QuezJ+9iVaUhf4uzXfIIAb0/bRd+ccXnEmB6p3Pm0gcx6J5qMN5yUA75I7kX
bHh8VQLff5X1Wz8k0omJ/Kj+8RGG0j4x0H201to4vj6FiL6P6yqtEGUCBTZ/
6tlTV0aEjAfCVy2MZFB9j6f3Qbs8mQCakjlT8mcIsHbG/+ZROzy+X7AVOdyJ
vWfbt0U1ImuwzzPe7GOJvVfu++fyI279ZVFuZaZRHgv1Rz0KZd1Yh/H4ap9v
uld9hRykS0iQOnjl4eSPd2aDWXR8nl89pKD4mjyaN+QdkTsygPGLS1KVTwW/
EaGHztq8OY4Cmz7ExSsUUGB1kI3Pmoz/w6evnbrbN8qGt7bCy5YvyIOpn4qt
1iwLWC9fFYiasSGbULL5AMarD22nWbAwPnqlb+Sv5nIi/Pt1Pv/aQSlQiz40
Lu6N739bOJtQpqlEhiCtiY3rnxLAVsCkV3svvj9xUGPpPiMrfL7qU7n8o2EC
CwasH6s47aPBoDD/bg2MX3Dr53G687tOllFBzG2fWuh+7DzeVSCR7KioH1NI
CNZ9gsVzK7/c41vSJKDMNOFfTzd+XtQT9r5JGcP7remGc0yjBCpoXoTVlFTs
nuySENbpo6P9lT8mPIsFFnC/A+77ur3+mnNYKt5/5dZXNpYOHT11UxbV91T5
u8Unx/D+C7tuuCJ5iIP8vqI+FlDL1WSgXXrc5Kk6C1a6T5/fcoSK8r3phnXJ
p2eY0OjVen6lAg1W3GK6z2+kI7ywzrzMK8wCx5vZRv96jxPoqN+q27InYBrD
BzxbhSeTCJLApny++Hq5IjwQEX+xwVYZAhWfbRT2JiP+Kvj7xOZpYzI8mKc+
uPaMCO6V655/dmGifs3jDX6JEEpH8wudlw/blFWQoVTW3VDCigJZLrNPRO7I
Ib+aesdqdX06Fel1ww0aCwbG6SBqS3FgRRFgx06HTS+eUtF52WPae9g1nACK
UyfFRTwkobrqlnmfCK4HcP3FWTXsLYv3B0IKgsbEpZH+N+O326Hjkfi+0bRs
P0tFRTLqj0Wm3Kj7qMVA/ZUXrzTNXkmxEN7wIVz1+dRKAyeZsz4MDNcUe9x8
4+eC3w/lrVc++Erg/YgXx6MroQjvX+wujXikHUsGmy0zd8wxnh9bcbasYxyP
n2qZxQYrnKSRn+ULvQfTdD/881S3RWULJXPgZFly365aedi03Yz+ikyC6dWF
vl5x/PCaPrJ6z0983+TaRTA6X4/nK+nvVSqeXdLg+nVG176RCNeqBZbNY3mB
LZm+10lKDuzqCkSKsyiwYtw0iRSNvT+2U9aNGDb4EClChWIsmE+5kuojhvvl
N/Ct22R8nITwk6RdVO7fFhq8bjznetmVBI2uom7UJzTYG3FSJNOcDlkS/YU/
usjoeT43M+qrbOLAC74Xev88OSB/d3suLRzfd5dmTj/8EOPbXDxwrsxcQdqD
BPsv/mOvxM7fTNsAYYpFR/xmq3DvR+v//J7+18+H2o4z1Wdwf/M7vdZ85BUM
sE56Y20lQ4ey0rORQXnY+1yiJfbekAYie9kNvq5yqN5WmvQ3V/4SG+0n2fX5
bJXHByqQqMJGRUl0mPReb/ReBsNBVs0Birdp8LDwFuH5LRra38O9/1y/U9Ft
F4kZL3F/6t0iU603T3DQvOolt3UFJl4UqFPn/dp/jAIHH4zL88ySYKN010rH
YRIUO6wNaMHwPne/Br345/dadzKI/e04PGhFALnTdjQrAw7Cb5szDLUuLsL1
p2/OS5+0wvgcd784kPgTJ3nlQCnw4+SuTBpMTyrk+xRQUf0H7cfeucxB+YYc
qP99eMeqjIL8Eka3yg2+62ag+7+z5FkOawsVGBPFi3sf0ME+z6P+xhJ8foBM
Xjl89TmuF+vfoicp1U9CertfCTFThzLpULy92q7tIfbn72lY5xnh++mt0iyF
e/1wvr1cImz4EC8ReDaqfY/A7lXpiU0yp8vl0PN80d/XMqjKgQ7avqIGZw50
jr9QX6tCh16TL7kD/ygg9vrtjtvxJHj4LVkzWBTLV9ady85j/yyRK48uEmZC
4LXiKK1eOqpPhK7PWiCHMZH+GqI0OVpfZdC+Cnl9yVXs5xj/21za5naMDgqT
DoukNNgIv3pL3n+Sg/Efrh8wWWSCfdZIGoTL3vf6YHw5Itss8B2Gl7n+n+mK
rG0V5/hhfkmLeZnOX8PMsoAepQRp8P4a89XttDhsOp9qvR7jP1y9SqJWlLuf
FQfpbWMWi8T4LJDRPDd1tIO+w4yD++39P37yyP/9f/6Kd8abtoliOHAucPm+
LaJyMPvn784/HHx/s9Hu9u4MAdxvk/F6RUX4QRn4o2d29pe3DFSyG4RmMX58
4wqpz+QZBRi0ZUk8whxU//uuFiz/qR7fl5jxIfqulSOuD5g77ULzwuLXhU2v
QvskSTBhv8/o6yMMByqVCq32oIDn35zQ+xkU5H9o+0MnpSeCjs7Lb7Pmpc9j
iKh/tvLa+qrj3dj99RaK6AylQXIfx6yNH99vzTPIf4PISwLxVkGmfwkBFjRH
bx4yYsCEyq3sGgzvBe1d0h5Pxv3OCN0+mxdfwPEqz2DQnfkRCtJT24t5W5vt
ZoGBqZB6URsbbvPWTOdgeZrbjxZKE5B/qUqBLQ3zITMCBBD5JvpL5gMBjj96
vKRslATLRB/mzUYxUD8tInpsd+tyKqqfaGXWnQrrZaH4U2NeVZ1RQYKCoEoC
rz4ZNiy/FtsfI470nsdvvs1vxM6zd6c26WkJA2jZpOR+DA9w41OO78iuPkV8
/2zZqU80yJWGlvr3wUxNKWAd0RO/N0KG3luFZiaX6LDvocONOlk2uHZvvdwQ
LAt7eBN7s4IUQPZj7Td11cXw1NxSMHGQAkvieC//EaHAuq6A7p1nFdB+0yAP
d8XfiRRQqLN7GneaCubnDO6l2HBgONLxj1UjByaws/aumIHm1Zwz5a3P+TLh
lNHXU+n5LAjUrQ8gfSQi/sP3ZZ7zms6B1gNFwe+xv2dgi/2b0noG0o9RVPdZ
XMDOTdv8+nMzj6nwLfepaRwvA81frVjPN1GURAPzZRaHDPPIULex3fy+He7H
53mq1LusGMOzrCVXBxTwfgfXf6DL8MCHvGYGmo8nw8Im3zMk8A21bJncTIMl
d/mTlJvpEFgqxclJoMFduyLmjkw20pfnS1hUGZDkwHbnhG9ULAduEEvvh/wf
v5AQ+wc9q3pk4daxXSf3a7Nh74o9W0OzcT9y/Y0NaZ8vSsP+n1UrStkUiN1q
MyLGoAL/4ZnvWSVkUAu9YBhKw/0RzGJ/04yU2WByvfHp2n4Mlx3ht9t0jQ6v
Nfzn0+rJ8CIzO+X9oCIwf0w9T6tUhpHL334eP4vdo7pFUx9GqVBOiLdfuxXP
L533c7frN5LA9dr0UhMCEy6pyg4tTEug+KVpW7JCdbss0ue99JaLTihjIb3B
D9Hm6WPGLFSvaMi69X5IDMfHQQYHlwamE0FfVX1sKIwIZtntBr0/ZZD/yKCg
hkUXlYTqe+aWBo57ruD145/KrLiVIRgfihS+e+seAzYUgcfWy7j+beP3rTpd
jiy0P1DG/fT7R09ZqB/HJ1e1ihCE7/MLSqT87QmSQ/MI5UePn60c4aD++1Vz
y8p6LF5w5+mOCjezvrEVkF/3GxPLEp1CMlxUEK3iwd6PaeWvhKeL6YgfZJU0
3gqn4nhm/yamy9N4Crzk5ZxydaTAm9oWqiKHDNfynoUTr5Bgr7Kttk07Gf6x
Db9scqVC/9cY+ztVZBT/9qym7PSsoQD1gt3WfIyn9T/Uz7y3URQ8JFKLY+cE
QVQ409NLRg7lh6OST72SvlJgj9XrxlEWdj+FBz5GHsH1p7V3fuYamcii+9Wr
PRQW3EhA+HXgdXH72CoFcDn9Z1p0TBG0JegjBlvYwJ/rWqFiIAusdL33y+Qw
nNljUUpn0+DcgOtik3m83iDT3ExYNc0BS+MGU9kUDvxZubwlYzXuz/PgxfOf
hTuo4Bl0fSh/ERVObdGJlk8no36qeqzkUSEMH3Lzn79qC+nrLAXmqq7xGVaT
oPtewZWbDAZc/SF791MvCYLSRgPvVcrD0NB+V5fLHKiV+h52H+ObZLcrQSof
6LBMK0Q8MJKDzu+Y4pfez8uIMPZ4oZ6kRoZnumMTyRh+4P4+V2mrW5vaaGh+
g/opwK/FlIr2+9YGPYR7FDbqR5QkDEe8NaOj/pGVAOvQiRO4HzJds+uhVYwc
0ktleQ06GPrj+MOLZ4vl3mdksPLZstNdhQqrq1Iq5kfYaL9Q6rrlzBV5uJ9J
fVfvbxkhBRTvn21RO9kfyEJ+VFr5/ElPCmVQP9tGJOWMZBMdPX/tpPAktXAy
8mM9FJOzMlBQHuk7RB19NXU1cLzHb5vbonSPjPb7dMuP1ChcI0JuTem1xb3S
oPpJ7+3Fchbqvw9i4VWnmAB/xfy/1pVjfLqm9em1f3JI/9r/4cwe1VppYCns
T/ltLQ2/fO93LIzg+zXrFwn3vookwk4T1oNEEhGultvrFb6XQnxynwR1mveN
FNqHbXqC02ceRUP9bjP7M4fNO8ng+fB3QqMVHT5onKCXGeD9z8Zf5dFyi5iw
qGNwIucNhpPkHcuXZ5LASfqde9FNEtiLG96xMsH3QUWxB4PO2FBgeZ/3iiAG
9p42ss5sZWG47YfLRjMzORg/2SN+RRfDY1LJpXbWdAjpdNlmv1cGxtb+UB6c
Z8KuS/66tnKKyL8y9pJh8bdhfP9UlczW7F4sL3D76Y6hbzra7uPzTj3/7jCf
BFBQf/uChhnh9ggdrsdJHzKvpEBE8HoHjVoysPsG1sJuaeCI8H5JxvgS7x9h
oyQ1Cmz07mjoypGBAQ+1NYmHFUAvnvz2apYsmp+Mm5fc+zedhvh0jYP1aMdn
Kvj9UF7y+joNZIvTBuvdmLA15oI1U0EGyOEe55Z3ElG8XjX3pCX7Bz6fsmb2
EdOCifdPRW5tmtjlQ4W4ayklU8tIkPnX/uZMLBX5XekZHvT2ccH3p6Rc+pK1
mQ/PH7UP352+oUaDssd+ATMnsTz6iVc1tYCI+tOGgbEVfBp0uGuf4debKgT7
b1RWDHvzAllo3Lfr5rShcHJ9d1AwCUxeBi30Yc9LTmhyZ5ApEeF5FysDWa8C
JqyxnEvxf8UAd0n2Vf0reL4Q0ZSX7inF9xlU+ho+v76bhvzAzbs+FNpms1E/
lYsvuP16K+kLuc8v4fWGzkgFAXFbGvJjTajcSjrhSYJv1yNfbK3E5yu4+e2G
7gadm7UMKIptaXuYSAKDbZ+OzbZRofTKzs9LnuLzzdx+BKU2MG5dPgPNV9Km
rGdJGI7h6n3vRMpyjBP+29fQ1BiMxcEF2D7b95CN6kuapuu+w0G83vTtbO7x
3DeycG5zwJ5dAXKwOFO8T245E9UrsnxzmtqjaRBeWT6x7jUdeAwbAmjncb92
XgdvG8sRBlilpvoEUBhwiL86TrlBDi79cl1qeZYDGsHsGfktMhDkLtVD38GG
eKKqTUw7Cc07d+wVkfK5T4IHqzeW6LtifFr/bliQPj7P/IbUUn1ThQRT3nE7
j1Zg+Sv9ZdTANyrah623YWBiLJKM4sPhsbaF4HhFyC9j/Rs5owyaX9/3pXBo
iN/crD54tJBHHrQP5/MrX5IFldzFvUMr5CGv6FfERroiCLpSPiQFsJBeo1Ou
yyD2MQ3xqWC99DZDSwYoadBPunyVgFf/Wh03WjGRfqs480ye3v+Zf6XzCkmt
Saajegz/JVde9pAc0oMqWS3a8ZFJQnrP4FRX+oXVKig/b7ybOnX/FxmkOAIB
gkVk0FXUoX7Zh+Mn3W+r5/WnSMA5n6JHMZAAGc/hnplEGYRXPzWohVhj+TVk
sPem/1cmlIlR+xswHjQRDWXnvfB6CBePbBCZznnnToB+/+fD/l0EsBRqEKB3
4/nTQlPlqfRDEro/0nM/33lLEZGfED3xe88NeyrQ7V9fO7USez8/bvdffkRF
fqSPLxvqm/gpQFP32tS6HAWodDyyelcQEe0vlFOO+C45ietxdpd8C6YuwvMj
8YKB/dcvNLAwH9moqs2Ag0YVFySPkVA9Q01ya0J6jjzydx3ifPCMp1LQPgqC
098cdy0yiOvfaqi4IA4Tuf8EW8/RkV81tXq7wvYI/Ptw/S5Rf3qgYyLuDq7f
PnNp9fSBvdLIv8Sk/MTE8loKtK+5aCCggMVxgUk/dUk62l9w+s0COZZPFn4o
XenyNWHDOYfSA02jdChL9jaKWEEDKXWNrt1LMD4eSr+VkSAPdT5P639GS+H7
isnJ8/X2uN9L3Ji5drcZ3m8IKVj5V/M4Xg/Pn3tsp0angOKUwpJxLF+M9PBa
2GynIn/6PlYYLcNCCMRvWaalRf019A+deCOThs9/HAv6+0NYlQpCAVkqEwJE
4E1JOHkB4+Pc31vclVPWi+EBbn7gd/2afEKFgvjyGt/NhjL6DAh6Uf+I8IQI
Dw/c+aXQS0H96u1CF+xOv6aBYNZbt1O/WbDB7szT19pUKDT5/XynLwW+m/Z0
pGzC9UV7Mlf1ex3F9RW7artOGRvh58Vii0LVARE20u+uW5mcF6BOA9HPM2Ic
cWnwm1384KSYHOKPEX8Ij78W0kFdqvNwei0Wf6t2rc56KwN6N5IdMg/KgeiV
P8cG5mTg/PnR4LB7WNzppTB/3cHn3bn3h4u/OY6+Srnr5YAnRiBnD48c6Hw+
5PZkD4ZT5EclczsU4efALAZn6Gj/y3D0+M6vP/B4WH7a8+WKPByfueTWz3eO
klH8nM/q+zUsRkW/n/v3c/0Rk5TFyU++MRE/XRwwd2mknIn6VSuy9y6IrJRG
/b5kbxHWwetslF/uiNi/ctsii/odNpZmixqPY++5u83r6jwZXsbuJwpify4/
xq1hdxwF4swaj0l/xvh9vsm2kCAlkGR6SIWlsUH99p/VJbuYoCGbt3tvPA0u
uZNnpLdKw8ERQdodLB/K31h7OhHDcdL3LrWblJHhiuPpSpoiFT4Mdg2sC6Aj
/7M4+90nJQ6SQDibLyZmH8aP9rU1fx3C8K2TY7kFgYLha1WBrytwf+YCirxF
/Si+P1i2KTbXvIsFrM+WUMZQACGP6IHs/3DC7S0d275i9y6f0/Rskon47eAr
xXHXSTK6P2VtK4Nvm1FAIGqFTTWTCKeFLXQqhahQ+dQjpxi7H1mij0M5rmQU
DwQG7w4fvUGGA7c33H2Axevq4ZW3c+1VkH+QrZZ7VaodC8XLotet8qU1TNCf
mz5oM0MDk4I74Sqp+Ly5UX5s04ZBPN6Kz+eNnThAAY3oq585t0jQEh34tfCd
CLTm9lbOHuGDsNX+PKOqMmi+aftlUc89rzEcUHLzTH+iJHjvdY6KisH3i2U0
/Zgfe0DH511mpMPHU3E/n/NiWdceRuD7E7oJUxOy8Tje8X37Tqd+BQnU1yhV
9ihi+PUT7zVfRxqqzxL/ZD1XY+DP537/Lt1E7O/h8ukqpj1b5ToB0niKb5QO
ECGZv6DH3UsWllFURzXOsiAhs/9jeLEM8j8KgNHeHe/w/smp1YaOfFokuG4Y
6Zloit8Hrj9BRT/xbRNRHvk5rL4Y3d/nJYn4iMRfNZ6bD3A92IVyt57ZRHx/
SYTtmu3tZnh99M3UhgIHMgnOs7a+e7OJAkeNq05OVNMgZXBtvSlRFrJnhYc3
UWig1RNO88onQaykVdGACJ6vrxaJaacHyqD3aazj8d7WkIT0VqbH+JkJyUyk
pyqIh/XXDjBQfWm3o8EtzmpZpMcyY9k0ttymIT+Pwy21kWbncD8sk4/qe1Iu
cZA/bbPjHYurv4kQezjd2XuaAk5EV066Ld6PKZysWlTRxEL4T0M+Sz0L403c
+K7jJfZ50xpJ9HuK0g9r3VeRQf0hv1+vTn69TUb6smT+DY1Z2HPmxtvh+B9q
f4/g72/voTe6NX1U9L4uneQrMrcmov0Tv14VKQkzZNH7mG356R5QQoa121yb
ZB2poL7NuDeeF78vS1IXYku9yfBNK34DHXueVzZmxLOOkeGQ2t0x/zgSqKbd
atSlS4LPnW+XNOJ4waLso9ErNzLSOzRZffYrP4X7W18JGFlSg+Ul7vnTa6vw
I/1lwddO3YzdoRy4d/BMaMwsE+FhhybPNl1FMlz2iKXoBpFgnT2zh/esHPwS
UZ6wkWXD9vSzShGvZYGurEkqs1GBb1RLI81GnA/dz7mbVondC26+szi9Tk0U
48tc/dAS5h5tv+24vkT8XHKYyij+/IIkntUPO5NBK82/7kIyFU6H+MkOvWVD
8FPPlF2jbNBvYF8RxfBp7j9RPukcLH5aLQsX9mXj/ie+R4c7/SgwwJ5qOITF
GU9L2ZXeLRzIiLqR8c5cAcRvFMjU7aBAftLHcW0s/iZJLedXz8P9npwfNGbt
scXnIaSelerNW4tB1tm1kifmBKCmdvb3i3UMEOJZqmO9jAI3xGZOd/ZiuOD5
hfu5bdKQQj7KaD6O37eVh9terj6Bz79WhmfkuJ0hwWqtp5eNesiQcSJPuduV
ier/an4BpQu76EA6Z6XT9g+Lly2PjHZ8pKB5Z2584J5vYbWZMya7cX+RTwN2
si+3UtA83C1LlTMuNwnQfklLY+gvhp8OnLcjYjyFm/+0wxYrnGOx0fu/vrD9
ygUM73O/z0NPscoMDH9FFi98stXDvq/e/MoeUTKqP0QXP3nuqY37k/AfsUjN
rMb4Ns8S17dkGiTen1egyFORflF7hm878RjuvxrUe/xyLgvvv21+/lfLe46O
9KFHZfbELQkjw8GTaULCU1RI2+qzM+6qLPC4jW9tteXA202tL3cOsBH/v3tZ
hE3/TIENDi1ntu2iwKM1R/cGeslBybWM3aPOclBaHqKqqsRG/W6kp/iff0RU
3fvdE43ScI+w3ST5qjj08ZfsFrhAghF1KWkJLF6+eNrn0mwthep9sS9FJQ8f
o6P+cc/vPadTHcho369d5dTabZ5s1L/ZKOGrIpvNQfVaZ9MjbqdciWBLO6UQ
IUKE4e1FXwpWKMBH23B2aZYcjEX+zVGgEiDTfPOOBAxHeQbOvgowwONxQytT
0N2HgfpFL22qNeyoArg/w/69fIIEPD8orCp0N9yE50vZ8Sc5de9FYeyi7r2a
t3ywcVFmzTcMX54STvLWwvJWXdcnl/ZMGpp3uzt1fSDgkRwkhK4scJzAvn9V
w6b25/j34T7PrO0rLYQ2MCDV0jhIAcMxZRrFbnGLsHvXc36eF+P53PcflvMl
u3eUCBkT5uGZq6Uh7OqlxH9baZDLK2cR7bwINMfF/zSL4Po53Ul2Rut+Dpo/
XJNCNoxopkH10YXWteepcKBstsW0jAQZ808SejCcnazEu/4xHx3VF5QdX+Uf
MiYjv+01xL6t1e0E4D9oU96A4dGmIC/zxQJ0hAfG5qSFvFrwfVhrJJZ0jBfI
oX79gXB5Is9bfP4/QWBxHcORBNPVXoefEKQgaVXX3WAhMvq9ER2B/n0muD58
ne/n18GxUnBBsvbdGQ8SnCujhEhsxfXmFzbOcQ59l0b6dLe8cHf5nThenNvx
SHxHLBtUr6RLNflhfM1krf3gYgZ6f/EHPwYOrmEj/+bWyqzBnkKcb2Q8ue1V
/hefN84dXXM+eAf+/pdcKpMQxz7/h78XVbePBfaHend3GeD+XzZXS/jb4lkw
PunQNL+MCYy84/dKsDw7cfrwfQs2GbxmHC+HLGWj57fTzmRZaziGg3dMLL4e
S4SX9c95xD4poP6Awpc5WtsZJpzh0bB1N2OCZkPfESUPGpqvFnXUbu7FcFnD
YVe9m9ZUIIS0pHnTOAgPbvipkX1CDp9HTj2scaZ4iATGyd5J7qVkEP58Z/dQ
GMYfSwO7275Q4ZfUjj3fEvF+qJO1ubb8X9y/Ynqb3qUOCQ7UhP34LDPOAe3c
UJ/+RgL8ULzKf19bDGZ7Tsp6qRDhuobNGScKBRipJxg12nR0/gflH72+/IGM
9iOnVZPNzj2VBv7W3xrafkRYoto3f++hDHg+mXAdi2KCW/7Se5vdmai+2mgo
+nRaRQwKOV0rPdOJMH+jfdFIMgn+HH/U5m6E9wsVI8Ktjw7Kwg3Wk+JAhiTc
/PJS/7WmACgaSJQZ6tBR/dyjNqLzIfa99/M8OSgaRYEO0Z5oU208Ptwkpbv/
zGHBDoorbbaIA7G92ZRSazLw3sz48zuNDGSXSsVRAzbiv56uny2TlIggqKUV
VtVDhL/Nk8kVchykB9lJ2TppQsf13Vcn/jhQQtgQkX1naPokBfhXVYzq7sfz
CbFqZ2nYJF4P6FoT7HXQngmBoT99PYzpcHKsW7TPC+eDy1q1S744k9D92JXp
bDSqxkLnN1JZKHydvjTC7yZmA+6LMDw4kuRyuT5QHBT91rdohDGgc62ja5wq
A3yeC1YOFuH4dHLgnfoe7PvrrzANrj9Ig5f0jkW/pbDnZWN15NVqURjZcLj2
FQ8bGm7LCk/tYIGs2Vczx6/4fslfyQbn+9tJsCrD2jBTmQQ7197tzIvF53e5
7w88Wn8l/JWAyYkWYncdC92X45e1RBYCOXC1K3qHhTkHHtQG6O6aYaL9zJUH
Fz0h/x98nn6PcdXUiITqiYbBZf2RirgfnpLIrQS93QSIjKYu2iVIgd6Twlv/
0EnIL3yc76ZPtwIL3lBeDwhvosJz/+sn+WUUUL68t+Yv5ccSNuqfpXlIPb65
nIH0hMPxXffur8H3zTD1Ay6FyMnD9Her1NYqBUhsbS2I6Gei/QyDdudJPs5U
9Hs+tO/x2X2EBC6r/B/wTOD7XbjzkLsrvb4HUWVQ/Nv/avwyv4EsOg+v775u
+GpER/2Y+f461XZfHJ9SFXeezc1mof5ip5u9FIuHgPwXNwRdGTuoQ4bHqhdm
9mG4/K2L79s57B4HTR7lNBxhwrqPutcCN8pAfkHKkzeL2XBRaolgOxPDoSzy
oQUPKohpR16/MkwFw163y5uWMaBidlH36z58HxH397wc1OibcKDAm/yta0PN
aaAET8a/f6EAXT8hVOY+DQbXfZyKdafDEWsRq7P/9ZF07cIfnpeGo/kHzr2U
wvkH04l1/ESTAuJHy5ZM1vphuHa5V7DTbVcq9J4VzTKKxvWdjtJJURe2y6B4
IKP482LSdXw/hMaf6T8DC/h5Osjw+Xh+gY3wWEXnLreZCjIsfev7bdSLAe9m
pd9TXXC++XZof6CtHIbTzTeLNu9lg1Fcutu9BXx/58Kx7yLXaER4MXPTsTqO
DK2z9LeSv1ggtGhSXcJUHrLdNPMXHrCRHvrc5QmP9v94tORMSkoQC6yrTE8P
G7CQ31DRhyFVBQxvcf34CpM/C1eb4/xemt0xHDbGRP1NrbKHVdZsFsR1NJcv
9qSC+5zwX6NwDA/xh1/xVqfD3iv9wy2uHNR/t6s4upVhh+HjjG9jSu9osOt0
qeztd/h+iGOCnr37Mb788xot+Fk9BdQWBb1xVaWA5PLvPFuSyKBssHz/Whk5
OEt994NIk4PexZxZ889SyA9pY0ikaOQbMsLPkm/vnPJ6h8dj9pj3hMI7OtJn
+/vx034VCkDv/gumL7wFwLtRRt+TRUTf54dvEanuMRXWL/yxOCBBBb0VsclD
+zioPiZGijK/GYDP8w8J5GRtO4DvM3PYlbEwvUsO1csrs2Rd9LLx78O76Ibq
2z7cH3/zoaRvVl/xfQZXJc9qKWzD9wlpx640/mhLgoH0A1dL5sUhyXhw+cF2
/HxJl569dnJOGq7WyJnNWBLgUKd2eQgZv4/uF0/Wzsjj93dweGnTlkf4fM27
YGr3p5MkuJC37/7qKwRY7xLWExpKhA7NfSqrOgkQxczi/TRORnquyGSBvI5P
RDRPUGHJX+QwR4bZjjtOX8vpcMHq3xnpOjJU/jQvHsJ4j8KTyswDkrief3NC
wpZjRWSEh4M6L5rnb8DjNVuRtyHVGdfjw9W4lUyMny9ULnhdXCsJLz0DGmIa
aVDZf27QfzULAt3fLZN6gvuri7W//janS0P7RCYGz/Ke/EFH+bO5cG9zaBMZ
4ZX9r9X95LH8w/Ub0BrJTZR+zED7IbnxhlsvWtAgZ3z8IYfmO+8mp6wibWcC
6arYKKGcAV+KW6ajByhIH/Vurav6/X4OqMQbvbsnxcHy+e2W4TwCHAjtNeo9
SoC6kz/I5VIM2NOfEFFxkgqD2kMCv0RkwMoxrVzkAxPOyhSYsILxfdOerWtL
SzIl0b6rFNFVdYO+Eug+iPhYpZeMyIGR2ZIrw50MUMjfmNv4f/jjlYod501q
ybDvz7XRgVEaMG+9GRh4iuWhI4pv+k9wIMhBI6bNF4+PL8NnT8i18iG+/Ged
qOKz1UTwiev62v/fPh+RDWFqNTSEH7h+tVy+NhFNNnEiYXE3imGxRU8E8uTG
V7yaw+Jq4N6aI8eoECSo/Ngb45lFBJH38VkkkFYTCj9oqACNSYlvn0orQtMB
ewXJ3Rjf283f0m+sDI8CFXIlz+P1Hr1L15amWJAQv32z7tNxcX08/vRaF97T
zcPrYUvdNLTHl1EgbP7BEysRFnQk6JFEOykIr7a0gXDeA1lU75HJ4lHScWai
fR3c88DFA541iWeCNemQbs8vy/6K5Z2i9avMsO/D9Su2mP5lpVgij35PRFy4
X+smGUj2Cd13z1YW5FPJVh2eFGhYVl5dWEyAjkICVcCFjOoHu7+kR1X5y6L5
EFPzg4+q2/H9LLtknGb3v8b9PHqOW0U7mjCgtPLYw0TsHEmPwM+9VDz+HBhp
v/cJyz9cfDX42byus5eB/Alciw6++6hARf0r73FX3zIsvqemBym9TJSBhj2U
pkO7qTD0Z6JC/qE0qOfSrLWxvKsYtLBZ/xIJZsW/kaYccP6sviF+VQ6Wf7n6
hqWnY16+vkVFfO+DvmmfZ64sqndFePjYhB3G42n6B7qmpxvuD+igNbo+o44A
NZ21/mlB0mC83S7y60U6Om/9vvmb9KuJIGVQoJmoTIdO+laRFUdYIPywSf/F
IBWs0wt2kwXxeQ7R0JPP8mtx/rmvx8ZLeZE87tedIvAy25SI+l2bUwbfF9sQ
UfzUHP31LOEBvl9IjaZ4QNgV1/vXurxvjtGjIv8m7vnh9n/WHm3rj6bj8bkj
0fj6fg+8/9Mzd4JCTaUj/ZantIb3WUsKrMyaWpWvQoA9UQ7M6GR+uCTzoPrw
c+z+JegOdZ/H/bKHwzoCQ/nJwOTVuyuoheWHLmml0J9UNM/Zc2guhj6I5fvJ
zds9b2H8/kF6e0s8vp9pcuPxJ1ZXWEhfPXtULD0Sy9/bWq0dNi9iAsvswKlW
JXx/6HXZpe+uPsX3ydvv2Hv210oKxEx2Xn4iRoHA+oEAi/0kNA+9JDHPbboT
1+PceHnewC8FxxveW7a92/KYhfRO6heKtPdSpZA+5M41nZ/aFxhIf/tO8cA1
mcsYfld80FVBo4CP8fDJDDMOwlM3jWy6pkNp6O+v32ZiETQiheY9FKgO5GYV
DtLzl2lUnB9NoKF6RVHq7FPTQYz36Rzj+V4nDScUfFX2LibBg2azt20+VAgv
f5FZgOEqbv/U8qTEiPpxMjo/C62bYqcZWPy537Uwb0CFdezX0QEDkkgv5Hyu
3vBxBwXVFwfOU0gUEgP8n+qIbptlgfyW9Kyj92TR+fJpHHxGoCmi/ShBu5ra
4v5QoeiGU62aBQHENSLHm2zxfPXo/nld4WIS4tfEQK3YbXxyyN8stHtL1b8l
HOQ3rZ84wMv4TYLvJnNFDs1EaHydsSQBy9+G626cOXuZDcKBj6qbMH7V8cwx
tsBEGWp17qQ+OERF+puOn8c+73QjovuB/C//V+8jOnbIGyzD9c7c/87lO7t4
/BraMdzGjWcf1qz7kvaQBMMjxvxKeUT4FvL2+roi3F8vSuPfYckOvD9eHKLX
o36UA4SqUaUdEhxYuezaku26dLCNjy/PmcLi50OdDwFbSMC8evpC018yTO3c
YL14AxlYPTt9QwJIcG+1vO4mKn6+wiu1PTsbCCifmhyxGpKsJMKK7NSHGrdJ
cJRyQodlgvsbzhX4ENfWs5B+xrhj00XWEtwPUqvgacQkmwqepAXxI/YMCLZa
mhWTzUTzMzFdtg9OYs+Xyw82avgfbD7ERnqU+ODBxuLn+LzPSePmdcWFNFSP
XrFMXxM4+LwZn5PGb18DIpq3+jK4OfrQehKUag7q2gYSIfKHxscNahS4WBGj
XZNJgp+9tSnGBUzQyuncI1lPguqpZheVKDyf0A6f2H1kTB7pVRyE3nH+qOL5
KsDOkk8ggoL8rn9dLvy0OEkG6XfVdTzuu2H5hauncnGcv334MR4PSfFn7M+e
Z0P+Ygcl2m02HNrYoymP4TDuPOKrUkndAC8SrLvR6Pwdy5uDd1+HKyyhoXrF
Ns9AiLrCROcH6a/+p88/a+8g5rmeiu6bc8SbvdoHmJChW+NnsQ2fF+Tqg6LW
V2380E5HeF2u3lgn3xjfD9G5a6akvwmvn63N30lLmCWjfvSAy4FWvt9UVP/i
2NZV6dwgIX/C8N6MUjlHfH/82rU/D7NPEiFD5lWy0UsyJJDD+yTW4Pudo1Tl
RUo+sf5//r3c51ns7GI4w2YgvqJu46Dioon3j3zydi235aGi/b0H8+5KaKTi
+n3RtB3CBz6QQRoGv4aFS4OkMlF/O8Y/swZ4m69QRWCvYu20PcaXuH5st0nP
u+ZEaEjf254kcfgwmQWlpu+20SxZ8DVwnf9uSyrcsdJl7y1mgOgKv4vr/Mlg
R39xeUUBATgz+lu+YPx8iL12jacLAX4c+0bsUML17MXObqeKwsmwf//3o1HJ
ZBDxTkkS8yBBxBuJU1doBNB9mb5851Ym8tMPU4K/Nm54PbA23fVsNXZ+0l+m
nZoUo4LQjw+rNs+Q4S7xRvol7Dlg9Eql2hzXi0e2Hvb9IERB/ujx2XLL+k4Q
oUziSvMm7L118w48vKfPRPfTeuBQeieJCM/nhjbLV0qAyaNe2YwIGdhBeF7I
wHDWSxfh97KKgjA94aNhem3OkLE8a7m6MRVc70xJe7tKwv60n8PCI0TwPv2N
1ricCo8HiK+owzQ038VWd08Z8KCiel7Hrk1u93XYaL/ynYq6kQvxVBi1Sk4/
S6NC1tK65TJRNPDuzVUpFKaDJzWAtfwnDfHZLCE9gXayLMILQ5/jHtkcpEF5
8xlRnzQMTzXz/tI8T4EM5b+vf3jSoEb9y9nsUox/DQrtsDtLBPLOcFtiJgXt
Wz2wzaj+aDceH5p+Jyy9juEp7vMZmGqqtYglIv9yl4YWabouXu/YPXvJqfop
Ec3rOfi20Q8BFeGxNfc3bujNwb4/cccthToiJLpvoK1U4KD5QLpzwuV/KyiQ
11cor/7f3ARR9H7aFXx+hvxzCXFVGh3pkzpT65RNbcj/v/luvgXzA/YLVGBa
VWbf2EBD+Gb7VfcxIw0y4pP52zdklN0hwzc+q8qN+4gw+067WWkXGfVrSmcK
lC0/y8HfaMrD6Rk2aC6SqL4aroD2PxzrVWsZ+ySP9Ovjq37FSUlSwMx6vmGv
Fh3Ur+dZMkso8HqbtY4PFt/GDEuU9Ulk8EyzPX116X/73nn5Vb8SgTH2a7jv
KPa7rU+cVXhAQftAfu3LLtzkKY/0Lff1MjyWPqLBjtMfZXpFyKAyv1fguTAN
6UVfLhLrWZ6K43f5wLstm++IQcjxZvE3WrwQ6/pl1tWXCn+t1jf9EiXCwrGA
+zbJJOR/e0Tw2uNQb3nEd3fINmWlieH1irg+9WS9cwyk5wtSmr1/AHte3Ped
5y6zxXw/7kdA53M42RlJQ/Urg6/X85utaCj+WUr4ekhMUJFffeLE+k1qWLza
pf3ZtvIEFQR7yofClViQFB5EBUs6ZFH45LXU8Hjyqnnbr7cxeL+3apub262f
OJ/accns6cFKvL8RENt3TK5UBn1fo91RA5Pmcuh8FRzwb/6cjvNnC7dhiw+h
FIQfnEb2XKw9hM+bqzWaP36DPTcuXvr96vwf5n/+Bv/z+7l9Py+V9wqux5He
tnZdgSqOB9Ly0pasuCIDI36PXlxNooFhcxYzYx7X3x72WgyrMllIn77a9uXr
sBB8XrnvhrxHPVkeLOOuJvWclIfVPpd406IZ0Ho/4q3GJiooHPhkP/SGAlqj
vt/966hQJWIRNnWPBJ/6W+4qb5KG7Xe+LGrD8OAyUYmmRwfpoNQ+ZdRXQkLz
362GDMZPDSby/zpM0F1/2RHnSzUqt68en2chfNsSsZnNOEZB9Za9X3RvjBXS
IWfto7tWQxTwLF72ckkp3q+SX3Bbr+NMgRzmiAs0EeBqwJKaPaoMNM+Q/5pU
cz6EjfQTZiX7Yqh6eL32RIbypn3aVNTP5d7/+A/3vUScGWA8f1Yox0IY1PrH
n3Rg92HJ2s9hBmtJkET58ffzlv/2lH++zTfDAaO6wKnmFg4MybucpGG4Xzl+
sWbhPyrM3y6JeUjB9TLZZ0x10pXx/Vb0Lsv2ARUSgJgOJYUhDkJxweoJKWRI
j7p8UWUBy7/m9/bZNtGQn87QJo0ECob7ufsT+0fGjhzWxffn9cu6gG8xft+W
xrjUmGH35P/Vr3fa7K66vA2LY613bs/5y6N9yjSFTTL98RQQSjq43rSfBtsW
xVsY7CUhv7HQo+dAeCPeH9o9Qs05FonhBrbUoYFHeP+ayx9/sojHThPJaF7g
yMfmzJeNTNTv8LguXarquwhCfp5w2c0/bVjFlGuAW7g/7QJv0LM8Ou4vdFzx
w9tORQ7ir+d8BbSbU6hoPvXszVcPVm3C/Z8C6HsZc3eY6LwN7ttTqMNmIf90
v8PpqctLqCjekpPXLqI8lQPnpOfur3YowoOt16+l0amIb+1pL58cZeD5IK1b
e2R5M16P2ch375byWlxP1fIofJOvHwvF4y2yf4bEF+N8SKOzuUDTgB/hwdT+
YzGmC9JQdXnhc1y0FJQpZmQGabKgwjZB/+JPFjS8Vw4m32UhfWucA2Pg8gcq
bJV95ZoVQYRV2x/uWjFNRPHVgFk0K6dKg/vjIsMaryhgsN/5Qv9aObA7TJmb
X8ECjixhhfIwBdf7C9PPbygiwN0vw2W2f4kQqKbyLGKEhPpLIbnjh4VXUtG8
bML0hfzYYzRU717n8Ljnd6MQtA/nsIUWFkGPO9+GuMcUVH9xFs64rDKA8WPV
EZeGPXSwe95ZFlcig+5ff15S00whGS7vvJR3yJIEsgfPqP+3n8+p7fuC920M
D0lEvs/G+B3XX+zOr1Vy03W43/zAflmGXJk0mJyuWLVzTgRGLDVPr06jof05
6j7Nv54ZkNHvsZnPbTuExQeufr9L/Oqj1nO43hAkZJ4axlDBz9MmurGeCdce
+40+kSXCDVX9S44XsDyzf07P9D7G7/dX+aYdocPRghNBzFEy7LgpF7uhigy1
+3R5hauJSP/dvP1zWRcWV+cEbp0JPScONfucSRu/86F9YeRZO86RbThe2bLy
8l/n3QSkhwtVtUvrfY3zOe4+Xa7f5lWXVrrNTQq4v1bd4KtBgyeLpjhGbgSY
Sn9e78ZPgrRiwqr0NTTkj/i2jhUxYC8Dq6IGGDeDySDWzjM22SUDy0pKX/NN
ysC1HoPBGEU55Iev8uWewO8H+P6MunORRw7eIcCdVkGeTXwkSIjsema0mwOd
HTdlUhxUoOHC/VIpqizYvQh/mzGA76fg7utW71px4M1uGeQP1llwbHOEDv4+
L7q8NNmeivPBDWVRbU4h2H0z3qwc+40GYXldxz+2SqH7JvWEc/piOAX9vksm
+uflKDTo1amiZ2zH8L65uVZbOw3df/Lf8gjecRric0p/inzT3+D9nYf1b6Qq
52RAtMqIHEFUgCbOsHeaIO4fZy3G+9boiCyar3Ji1NutwXDZ5Ej9n9L1AtBT
v91KnIeB+Pi7GBmnvDIZ5A9bGFhv7/zfPj6Va1+DbGjQve3DibK2//Yklbn5
3qDAt7ii7ZNu+L4Y3hWEcwOpuB431VL8jHMqHc3rHihXFSGtwfVg9ZF3Fz9Z
hesZU9cMXpCalAYV0xATsg8ZLq47tjMuVAbt9+a+H26/MVV86PZ0HI7fPdQW
vhZq4fjkrNnPYDUNMeTf4SywbP5sNRPpM21Tv/yo2yiD+sWb5LMjJ/ZQQUmT
1LjGH+ONKtU3Iq1x/PujtVyaHagI/cSq99YRShA3/tDzEwc71zpa39UECLBx
6a93NHGcX7cubjq1n81E+w9eLf3w6jiG07jzmrphzReb//NjoLUvl3alwCLf
n9bjjRRYmBe4d0qLABp3RZLasHjDrQemfrvRndksi/yWj7uUP3l9B//+rfIp
ukZbSSieC0/vfJbzmASVldlMzg9pMLSUzw6+RYIzbRW/DToYGC6v7NiDxW1u
v++y14ldo3b4/KyLvH9JZo888r/K7Zg0uXxNGtY/jzS/YkgBFQ9zhe+ryIiP
34k9qPbJTgHU3l75Yh3JgZ3H2m9Gm+L+26FtFRvrt+D9Noe8HX9dsff4VDnz
XEEvEb6aUw85ONNhzvKZWJs2ln9elz125KNAygDs71eiwhH+bTeDvuN+PeML
bPYyCxlIMuA7NmfFhOuXLvr9/SmN9BbyxH1HaT/oaP+VzYhwsY8u7g/eIjkx
ESBOR/sdLXf91D/ujdd7n4QIXnyJ3UeuX8ac3glGtScJZs+ctHfSJsJS55Vm
eWpKsPycUIT/YWVYa7AzWt2VjPZ9FfM071p3BcNxwn7i5AAxdH65822zISbf
VlCxfByldc43kwBfs6SW/1CWg1sxp9fu3CkLrC8jphKZTGC0Hs8jb6ZBhFiA
eHw4dr/pgpaniqhQpBTPaIrB8Dw8cnx2SBwuRQh/OuCK+59ZGNeBmxgV8V8n
W/VCNUEiDNTddV+cLwwCJ/c7h2I8letXbDJyuLtWhob818I/l06a1Mig+dBa
X6L3rk7svDrQZX4Ky4PBKu9pl034vh/9nnjltkZ83tlv9f75uY8U5J83ua/6
1KGf8iAtEnjbzl4eou4Lxtp0U0G715enO4QG6+pGVp8YYqH3++USD/G5jgT8
Yspsza4hg5d1ouNnKSI4TYlsOJwpDcsescuLJXB9kVF5b7OnEwPpGQiN9m2/
IklwuuVH6FIFITA+8ZW1I0cWxc82L2H/7d34fc20m4l3mSejfYjDpQRXpQty
qD8vLvb+tuhOORRv/vKyhM9h+J+rv/DwVvZbIy6J4pnrKJ+M8VIGOj/DBs3h
iUeJ8DhN6fufYiLk8uTr9jXh9dIcHnnxuxZ0VC8rP7SuLB3Ld9zz8sg/UOzp
m/+PrC8PpzLq3jZmHs48HwcZkhCipKwmScbMkqFBgwyVlEoqNBFKCg2UFJJM
SUiKpFCUREKhUqnQQITv6fpee7/X7/2zqzqO/exnrXutda/7xv2MN6ae4x90
+WBRde3h0c18iNftP3poER+aGitU/zrywW1Z96ZyQzYsCFp+UZ6Iw4tCn/xx
3U/U/RcyFVMsqNBFU1z93YCO5lfzQ1vdjsng+nBz2K5TRuWKcGrFn2lP9aUg
MG8gvPoQntdqnxyoS0vA/pEmGrlV251kkN/E/rXhOSePUhAenNAx6Cu0xfuz
0x/ee9vdqoTwuHrX5o1+QhQI9hz9GJlKhRLZ7btd/vGN1fvF1D/Lwy5n+y9f
11Pg697LzpvCZODOiS8zNP5SoDao+KSLJQ3ipNsS4mYoof5HxeReo0uqqqhf
L6X/5NuG10zEJ7rQrtpJi5aCWzJzdIsUJGAhWbjhUSQHNsjuv7F/IQ14RTM/
fN6H+/dJz7liPs5keLW+1XckgQrt4ztiNzdToMNWom9nFYFz01Q0zZYw4cRp
LRc/Jhmub5cNoF3hIP72SNRd0bb4aSDsnF5o7SYHZZVW0+jLaCj/Lt9TE24e
QoMe9czogldM6DxWptTSgftLU/GDrfG3P+oIA7jPx7wKI3hIv2DTjb7c67XE
750ZvebXSSask7yw7xyXwENcnaGSLCZUfMx3XLWQCY1DthrOBJ56OL0l+luy
Ehiwi3o3vZoO7HqmOF+A+XmoX/sfvkBDm+qgYgH245P3t/T+HCgAvnzAQh1N
VZhmeunVsrVUxEf9WbGv+TiVjt6HWGuBRKE+D933uPXfr8vp4vtuMTEYKMUg
w55DbhSDYlloXmTAf7KDhPRu37P22l4h7usUf79E6Gq72mmsb3lkteYhFzoX
4TOVM0J+XwooiM89dP7TirI9LDS/jk134kVoMWDnC+88niMV/Gy+O38ncPKU
Hmjcj1Xhk8Rzn9rn3TI0FAi55P85n2HvM8bzbjCAv7qA8/g+D/ELteePyPT9
4aD6VL9JhvGXwIVT+fZ4uLH8nFwV8OnIHfL/rg5bVatGh27RoG1rQueepVS4
oWIemOxJBVPxhp4tuxjQtHRkWYIC5nfl7x+9ls3B88Jbjs9nvIhjA/Pawiwq
k4gLer+MYjvJSN9+6vtO6bH8XLDZQ9aXC6sunDrGJOKmt1ez4wwmPs/RjyUN
K5uZqH/VzxbhuJpS4Ll4RtvoIAmkbGw9U6s4EFt9oO+QMQfOGdYL5mZh/S6d
jSJzSvl81M/Zse7A7SFZZYjamaJwvl0AUULZ9WQif07t542VfKb75bIRvj+q
dYw2WEaBJAOPdUyijqk6EX3HaRsXFr6qdXK8x4ZdrEdfyp+w0X2bLZFI2kHU
U1P8tXENkQvLD+D63HilyQ0FAk9P6V0WFZIyX+zAflSPbq1+UfYV1w+X9w86
piQpIr5l9OplTWnHZNDz125avVqIgudZ9AdrbhlVMJH+4dzbq+y3H8Xvv11X
Im08gob0HQ2MBx1rifPcdPpOC/uLLFDij7TP9MX8uMSrPslj6XIIr6ywuuH+
5j7un2zXXRfV2oP5kY/0xS3bgvDz/njM7L2NDZ6nfHC8OP7cAe+Ddl7aktMr
wQGWhvsNXzUu7Dyofal0ER20ux7Pc7zOAZ3GN6AfSgXnI+4cGWEKLNLMCohr
JSG/Iu9bNR+6HmP94AsnQ2qbdrOR/u2DYz7nzTZSYe/dhWaDy0hQorYjID8I
69e1Da2SP29Lx/PQrTVLHLypcHGIbMEk7vuEzPFfm0YFSK/H6sm1hq7L2M9I
n1/uOfsWGfUHblxTa7lM5D8l/rKHcjMFEOwY4OqwnARf+++7vVhDhlnPLs45
Vc1Ez69Y633gVzsCL+ifGl5rTIcQqQi33Z00tD8w89rATOlUBuq3L6qedfQ8
DevRZ5l+Yfk5E/G56sCw10tJeBRuceboB8w/C7wQk7GmlI36/4tFhM8tvEkG
r7hdm1U3UGG0Lf/zPjauHw/IPnAUmcVE/ZtHR77fGruF+TIqqwxlKo3osHc4
7vdRYxpQJIZelbxXhp5A5ZRFdpgPNrXff21S32TrbjqKdzbWl4U+1tNguTRz
u1EvA44yZ+5/FsuAj4zBrKxRLrgl3WFUfuKg+LXjx6nmAn863O2MjnbvY0D+
0zUi4vl0tA9oOba0yOAS/n0n0h3rDMI5qP81MnKjWEqWOP95F2xM0hVBa4fE
xn03GbDWLPnLMXUKcX94/JZcKuRXntXyXEiF7/nklK3WfJS/hU2OHP9D5OH4
OX5X5YoZkBX0btuPWApcPjt9f+UPOTh+/KhemD4NbKxIhVpiNHjr76rTWYb7
43LjH5tzraVhOc36T0W1DDzQUZ5LEuYDu3A+J71QCRTl1j/8TKFB9nzyN5VG
Ohy/99g3tYkOZUHLmr0+K0HL7H02ZgsF6PztPoTFKoXIoXhRniC1nvmVCV9L
7zHbz3LgwIqKx//e+6l62/xKorTzIhIE/9zB8fygCEXUO2fZy6mQ94H6MIks
B1qBe80m4xhQNPLapKAZz0en7uc0f0dfb30lpJd/63Rr349lPHB+s6ZiN4FD
jcc1d11UoSM9AF16vtihPUpg96y6rOQjD/5ojZL9iTg6pS/2f+/Hb36r0BsC
f07N20s+6d3uNCSBU5qRco0cCXZe/qGa/hX7o6k4GjJlv+J9FbnDk9HyGgpo
HmJfrHyPZo71iywiHD3ySVyE50f8A3qcrpPh6cKkoafWVCjczvec929f7z98
6wMNh+t8w/hQNvzz58UIIo74r+2ySyWBWJ/lpPE3EvycKTl8W1YJ+f+oabFM
D88hcFq6f+aLazRgvY7+KBEnBSO0p/qZdcIEvvfSvk/UvVP34athgGlONAXW
ZjX7SOYSuESJ9DeS+PwTR417D5r98x94IKj6SOA5WkpGD/F+Wb3QvN3wZMjM
Pevy3OFaMfi+uDyw9DUb+ZXQ9iaSrRgCWHl19TvjeSqQe9Pv0aNQFupvTb1v
U/rYayZnJxy6g/W/RXfae5Av04Gv7a3dp8AAbZ0xtU+1OL4r/3pjPS8Y94+e
L7gTcMuGi/x0pJkt4o+t2Ii/J8o77UV2xP1mRbXFDUkn5FH+2GQ84cxch/V5
DWtFS1RdcPyZuh9TfjQ++hNdDd64Xzx3cO1g+QsiTj2KGKI0Y77YVD0wf9Ou
q4VLGDD9Sl6nwJMEBcF634XKCNzvaHqx4CwVNj+W5wBRbxZcps3SPiwPjamz
7TYR32fKj2Pu2K57z8Tx/EPa0GzY0xb7rdZ2NW99LiQAnWmXyJ2mSvCQNu33
Ji8S9Eu1L+3SIMPepStoC5fheiK2TS38y34GuPLWWYca0WDtl0WlM2z46H3o
ic0K8DcjI3+fM6tSq8eIPD6a9h3io7C+Zc6Au9pfcQKXL/P+EptIg9MigVHm
XxjAmD15IS2RCo6J+yI/AhUU7pQesyLwthnfcdP1MTKMkfPklxQqwvdO5x6J
AAUIP9Rzi2qC+S3ZJ60Th4fxPPqYUNAzA/v/3R+p01qYslidDgdHblvmEXX3
lF7nk/dhH+xnkcG4fCdPbRsZ/HuCX8Z24ud/RNfs7bNMDnrfA+qEVRj/5tYB
r048JvJabnVfNzOQgvSOgyMffio4yEX4oLk+e//XJ0ScWWrPmamoAuKu6xsj
5QVIL+DsRR1q+xIK4gvHpSWcplqz4UrIwuRJFxZUX6xPb55PhkzLSMtZMhTg
nnqgdaMe+xHMfbVOp1BEESQvfCJlSyjA+/mnitzCFWB/gd3W7LVCcIW11Xfu
BBv5vVHchzjrZSkQ8uQufbiaAabqr/NUcphw6tCXfREbibxkvva82Qw24s9M
nd+QuzzJ7TMPYms5t/+EUaF6K882cR8FLBpE/1S95qP6Oi/5wJ+zPhSYJpX9
ztyYCkMXy64nS1CQvuFhapqwsQ8Z+bvm3rlDo01nY39td/7sI9+xH2m7+cM3
8jVYj3i9kfXCOwq4Xk4rGHnyLJkKjELpTaQ7VIivvPbN0wDzSb9ZSTU9kqFD
16HLZ69XsEBMX2isja4IL0p9JWlEXnuTeMWPVY31cPm6IHFbRx7F4wTVZx+o
Nmw0X1NtWfDd4y7GP/EWCUryARz0vlw8bZG6QwzPN6fOb6p/GV48y8vkPgM+
rP/19gdR7+y8s9W5u5GF5lPBxo9W8+JZqB/i3P8h9sA8LtK3d5AdWbqU+D2m
8PnP9rHqv41MOL9jo2SAJQvkD3bdFMmgwop4U8lPpQzoO7R4a5kTE3a9rb63
7QUTrlBPJLrrUYH3ICDHQI0Ojf3OFz8tZoAvb77iF1saDE+z+L53BgVGP1ft
Umgjwbm8kMvO36ioX3w+pG2B7grMdzAWPxC6s5iIo0mn5wu/pEBq9eN7G+7R
wOSc8P1LxHt+t/2r1oNwHtJ/9PKRt8ou48ODE+mf3lrw4eZ3IwFHEec357er
HdhkRaR3kfunj5qzC/MFeH9zJCZHmKi/X3WanLQlAOsXDAftGUku5cC1OyvM
+Wu44Prk4Qr787i/tZYbKvRwE+YHbAx6qDrIYKH5dWld7geTQJzvmOSS5Pcs
DqrXN4Ok44xbdMS/2r+qPuHCIibSEzNm3Vzn+hvvB2zcvNxo+1s64mMW7Nlg
HspQRXwN6XTDHx+uCOBh7NDZ0VICbxsG5L+fpCN/NJXuBdESJyko33hzomty
m3ioP7ix+fD0eTOwn6F1crnaIgJn6Iq/PZN+kwpz4z136D0lwetXqyuFfOVg
x7uAKpYjC9wffBn5QiPO5XAUpZGI01P46PBqWbEiXRosGJZ96jKfChaNoQ3D
WQyIXvjjV7MCnp9P8XXr+A4bO6bREL+sb4D98/pBefB0uNoV0yAJUQfyjxjP
x/v+WSHmOW6ldFil5Ndb4awO0hY2h21EeIh/IVlfHbnfhwonAn2mZUfSocCc
/nxmPBfdnx5nJ4HXF7zvrP633HyAi/nU8cvPM8/pcdG8PiGf4ePewUb9fI2n
BkKZsrg+v/+0oe7jfOr/6O1M7XssrNN0df2D+QyN7NsvElRJ8DfbZbqEMQUC
rxZZ7HrGQfMExxUjS6inWUjvJ4mxgdLvQwP1K3Ze0s4UyOtz7TbSVYSS7ptr
F28i4qB0Zp5WDhf5Oe5/c8Jdm0uBJ33u904bEPHZID8ZVpJA5avEjwXzSfB2
W5PMyT9MuGg8fHVRLQM4GgdORS5WQu/Py+prf6N/cGHPjw2FOiuVIKJmeeAO
C8yXfee2sYMjyQSxM9c3+b4nw7WSJXHRbZiP+tth8M4pPTrSC/CztO1ya2Kg
+nCHwdXA80W4vzW82y0s/SAbZmj0WRZoMuGBXV2adrsiihfvs372FhtS4W/0
1TmzVlEhqVy/bmUvGcLyvK5XNxP5fkHa0Fo9zL8PZztp7vtEA8vcBcrfLzLB
5uWeDxJ9KmAoYrEqNXM6JM04c+TeRTIU3f5lpU5igvxE/Tvdj1RYqOlXc34/
DUJznO9R/vl4+6f35kUQ9XVu1JIN8zkoXh69IL7n3Xs6VFmpPVh+hwwjOZ/d
izNYKD9mq89Z9Xk2B81nv7+V35VB5HvadLl3/3zn1qvLf5LI5KF+TnToFfeG
YD70WsVP3r/DBXL25VBaAg3NL75/fby7sZgLrz5Wclefo8HHrJWxtTXYHyR7
VeUeCzIFsmv3vcp9Sgbf2NaHN7xlEd4MmhPEHTqD9/V+36+nagloQE0Ra79H
1GnXYsLoWmoMNK9hvtc6yVGiIb2Qh5cn/X4n85Be2vMXL++kDWB9nuOSG3s3
ryGh/YpnjpGDS+/j/ZonH3OerCXy+A6P1AuPiHwvbWz6pucWE7LDKZ+jsjhw
LHTtIxUizp2c8+gcs0IRfLdWjZcHc6F/9mpJq3VsmO40tjJnOgPt03DFku8d
ustG/coHIVfP/Aqgof7SN6PVIv/0MqbmcToL9MU6RFlw9qv2VpuvLPgc8+hJ
RCkNzQ883qV7dSri/jvl3MG7nrZY7/iyXe3BfZ+pyB9IXufWBxc2fv89bmh0
9xHPZSq/PJXod5Mj6qQpfQvf1wmFy+fz0ff3Vs9svXoS+/fenfvMdMkoH/HP
/RSPGRp2M4DbcdZwySEatCbarhQOlEP91tb9c8v/+c5MzQNf7fSjKS6lwjyh
akVDaxYIndv6yOYAGfEX/x7d9LP7NBX05pFX8KTo4BlOCp5UwPtRhz3yTpTt
pEBVlMXz4LskmD9j0uq4IgeC38+epa/KAauN+zLe5mP81Ojk2KYgykf9kd2b
c4wjjvFRP3EweGOE6Tw6mlcNtdV5a0xThKVKCXHjPgyI+Zr6geyI8barsv37
5eXKYPGIofuUTvx/amL0RAEF7ReHnpicH7abAbvy5bL8FgqAVchNFXJko308
5rszt46VkdA82X3ZQtVGBRrSl1JghHuXEflxSh945PzZk2Z2PDR/ijdZYjn9
v/xe1rLHxs508UBpeW9bXaIArnSFR5ZWktDzddlXJ+9bgee1WdOlzegsAt9k
3hFv8CPeF9neogUfsD7mRHTLOlcqC+nzfq+xsNOspUM242ypIZ0OqgqCUmoS
D8Xvp+/uqrfWYb/sgrPC0ofDcD9Fdpbs+UI5PN/r3+uXUtfHRHy2hW2ubV9f
yyF9j47qSj8bSbyfmvxXJe0FEV82HdE/pk6hwx5y+bLgf3zidyPWX8/IwZtH
PxZObMV6sNTnNTN0N1MR/3BZm5/B23Q83+ytPDP8ZTPuP0V8q674aEFF+2Fi
p5NjplvQ4eq5+ERfdyaMe8w3UfihhPg+O15XhF3YjvHDpvEtjj9LMP/tYv0y
U5oNFbZYHr3QWUSGJwrS5/lDfBBOZqVciuTDwgOG3Jc5SogfMkG+ftEwigrT
SC8zJj0oEL9F5eDeJXyk5zmSO8JyW4v9SMqu7T1m/m+/5D/PRz+RSrUh6oep
+KB94f6X7+Vk9Pz1l+76ttEff7/tyanX2u0E8PZwZdPSE+pwb1vel4Dz2N9I
reX1o1+SfMjd+KeffIIG0a/mux44hfXzqt1k9wDxfaf8YvZLvFP7Ioz1yRNz
Dl1u5+D7GnF2i9ynr0zk/9jRUlljT8Z8jMupSpJ1rxlonyBu9NXZyV4lqG+0
n99sy4XUd/rpoeVKkKb3QqBO5MUYlYp4y//aL1OS/DvryAEawPD+u6ZyeL9h
qr9+5/L2jqoK7GdwRWR+xPG5dLD76t08lkNDfr5T/e5dDwWK32LJUGtEY9d5
KELasdzwbSkCOGDQPycjVhlmzxN+u5ephO5b8+w5baUuGI+lhaa/WHmFDKcN
atfUfCdDf26H46aTNMTHHtly5+s7OgU234p4E9VAhe2pQq+nt2L8/U3+68W7
S8VA30Kf/GuVGJBjqpO1+cpIf7v0xtvzXccECE9XPpEOWjxIAed7Fys+DVBB
aKVnq7UIFSJjm6+pV5Fhg2e0+ro2Lsov3Xmt+4XFGWg/uZbklu9zl4Pus/7p
oOq7G8jo+4pPpvh5/GBD/7aIb//0Mtf3x/wdM+Wgftbetzt0b4SSYdavonFz
4jncfVfnFbKWC636Y1qpgyqQ927eTJ9WHG/vajFsbtipwInr/YLFTsrwOzP3
6IAXB/l5FAd5FmePsBEfc33T0Gl/IzqkZvmS381gwp1vHxzc2BwQ25rlZv6A
BSrjATNJRJ26ftamPXWJZDA/9X7p+0kyaHM/HzTkM4D9+JFZej4LTOWeHfm8
jQYvXx/Re91F4LLevaIZRD5Ql29RGnlIRvkqsbCvKM6ZhurxKzaL+E4zMR9a
BU5p+CpTYbD3ZJQRDevNxtxf+c2qiKgjOV9H/JzIsHpPhfj+bVR4nfYyYIMi
9vuMs9qj/Sebje67h/f84jAJfJ8jQ3kfPnhNQ/o/jz1qfzwdxn//QMdzMZ2o
v0SGfzycwSBB77OZafpDTORnv/gxlM+UZcHf2RfsXoTTgbV9e8QBMXnEP12e
YTpa9J0NnTY+FWvkOeBo8uWR0XGcX01nSYhF/Zd/TtfHaGd7SzqaD5GXDR5U
bmKh5wkZBWRrKyW0rx6s/uzUySdkWOD23cd0sQLIZLa5yN/D+6ivawbC2roo
CL+0/LrtFbKRg+ZRy6fHOOkR92Gq/vHMu/ftRSUf4c9fHg8nxxbRYMmPuo1r
NlOAdopjKp/OQXp042GmZ8RP0v+nnyNaY67gvYUB0r/Vxu75k9A86NkX1g1x
4v3tWfBlz64MOow8oa11yFBE+aHGbs5btj8DLhpY1v9wYRC4cLhQYQGe5zLM
+osX13NQfNHZ458+eEsR9fsHSo++jMgkQ/6HP5rq3izg/dIrElpJR36nQT1z
hhcdxHy0OLMVkaZbaVDuNlFVn0KFxy9FFiZoUyFBJGeNXAsZooPY90t3seHx
BvXrfh/ZwJQU1N/Nxt/na0fU+IKneH4TUrx4l6ykMubLn2p9NGHPR/qRn3pG
a+aE0OHMjuoQZU/iXnh4PAiVJaN63uzwTfVOMTaKxzBNUr783z6y3sXgDFcS
+Jx4+vDdLw7aH9jJ1F3yjMALU/mylOq+R7KdifyJzNaWOYTm/df5sQcrHRop
yJ+nXN8mcl4f7jezS9tl/twgzuOVverL6zTw/NPDVbo/HSaKH4w2PlWDOyZh
7/2IfDOF7/PFHz3oXE7ch0W9g9eO8SDmlzKck6YgfCNvKtly+BYfnf/M1pnj
LvOYoNKga7iuhcBjIiH1nwaw/u8z44Dm0td0uCXkdaHTAO97TsXrgKceeoX1
Eih+XKo4eCsinAuPTt4v3iNKh1zNrMuiFiykX/Dz+BppgaoKNPWPNZ73UgbF
BP58a00qmo9XP0pZOZyJ9ZkvFc+eXiKM+aSXE9oqtnxhwzhnCzf9GwvOnHY0
kKimgdt78cmxc1RwEv2VPHsaB6643fIcOiuA7s75jnukqbDf773ZZwkSeHUF
SN6i4H2NRHXVsjklZLB8Qdkpak38fJvm6p0O2P+6M/tw76rPKsDxtFTne6tC
2m5XsPvFR/oyWmuME59dxPkix6Nog8V+NnyIuX7pFIUJnC1Pmm06yXD+pKVS
yzwKnFa4bZU8RkPzQaEjKlfsBQIUb8k7o9IV1LmI/1Uh5egtvYgMinvN2/LT
SDCq5v3p9zUamJqlfR0JpcDBFuc5P4n4P4VP/gReuj8gw0V4N03bwt1Qhof6
MRvuvmMp/hVAl8UTk7vE86+dpeZl9pqM6k/DE3cCya3493maH5j70YkF7u/T
bVXqKBAzoMD3X0+FzdvD7RKcWTDGX6awbZiJ9lV8jY67u+Xz0PkE5ywP0nen
In5AQVV8hJKyEurnaegZP+ktZyN826BQtOxdOAP1P3/Q+/czYqnoPkhf93dt
nonr4ycltvlbB5lo/8+3LChSpkkR6WfsF3LNJmVgPcgdGjk55Hq8P9g3rSMm
/o8sBFpuu0gj4r7etorDxl0cNE+45tvgNznBgaYKv0T7bAa4f39KL9mJ+cJ7
n87I1ZZTQvPObbNzhi5fUkL9/gRm/lx9fS7in49ntZabHcB6vStzrxkOk+nw
cfHvfqm9dJhwXDTb2lEARtGjkepxqtC9iBp1tpMEQm4/SsSFFMFHdMykVYQE
J80CSSI5JLCj/Dy37oA0ym+hQSN/gzdg/u0Vp5V+zqYMyNhys7phDRWaYweF
Y4SIPFy+YD39FhW6N7/Iqa9nofqt8rp1/elueZTPz6r0yA/YURCef2pN0t5E
4MOj+zrvDfxWBPNHi0xn6uP8bN5x9HTuJNavOpE18nx1Hdbrn4ofU34p9XU6
gSPf+MC0Tf0hkaoCi3T8yu2ysT/OXqG+Ng8pDto/zhJ78uejMh35DZ/5dIoS
Q+C4KX6EP+tJQpMvxttjhS+9DyaR0Tys9+bdjtFWBgQVz3q18RAJSgXbD3uS
+AiPHK6nbK1IpoJ6cZpqHxF37ZoGl2nYYz2E9/vPe6w7j+vhLL2aAAkVNlAX
G5XM7mSDc0uYRsJeKjRa7lwXMi4L25eujr7/FN/XhDfpat2ZbLAu35jv7479
/6b0I0pX5dVXsHlI/9fOc0vDKg0G6p+sc2qXKe5SQue1r8u/YECZg/QIN34K
E3kxToILZZVfbq+kwrus1t+PFDmI31kfHV6sBiTkN31uN9u3PJmN9BfFxDqe
77Zio59v3dP/Yk8XF+W/OMvKMFkuBexiro/3/FKAI4OdX+jEe9A865Z2+AMq
mCu0L2o7RkN6ZyXh+a710WzwCG5OPsqhQEr/UtY+dSb0a64ajB6gA+N+jpUK
iQkty71vJS4kzjfyip/FbQbCOyxlPy+lSjF0fsrSVy/KOGD/ul5p2c+1uWRQ
nugq+vOSCv7StreNR5Xhmp6ZSNdPFVgqKdUV0csDbgVr51eSEsSZ1lsqmjKh
0dXeaucQHQJqhX8GS7ERfvn2oLwx6iWep2YPhHn/0KHBOqUk8eENNBALufc8
K4mG9ktGyfv2fMqhoPgWfmTTmBmXj/Qji9ebH4kj4sJUfTH1vL2bVhnGaXKA
v9hp5zc3BbTfLpx4aduy93h+bKVl7+GuToUlLxbWDecTeD3FoizOXwnpKbWa
SiebsDBe9flVd5pyhoT2P3+XLkm2q6Ki/nRHSqqVsSQT/XnD4YDD7aPYD2Z8
3mtDp1dKKH/YzREvXLCcBZp3uDILd3Dh/sR3oWdE3TbFXyopfrrg4nIByqeN
059sVs9TQfoVpi22BkwJok7YVnlpVgQF7mUPRM4WZgK3/MNKTX8mnBjfcLMt
mAmln8PXnk3mQMWNvbMvHKYgfvXrV13n3Ozx8zCcn1FndYaH8PbWh/5ibT/w
eRlIJTYknubALdNxrzji320XzjgjLkcCBw2z2lBrOtT8Kd3wkMoAbenvH8/G
0EHzpYndP97ElD7I393neC/DsV5PzISPHTeHiuZz892j/EuI+nlKD0JS0oJz
rhvrFcORPJ+BORQ40MiZJ7ecCnPtHdpp8/F+z9Ln5fYtx7F+nMK1rvFV7/B8
Krt0H52SS4V+/SUb1abTQcTLXsLiPRvaKG1nO61V4Od3OFRD4SK+X87trMNZ
MoqoPqnWOh5xQ4WK9gVKgtu5YI7jlcIz3WS7WgokFJ39qK1MAZLEefW1lwh8
OW+8Yx6B8+Ytu7BtJVH/TemNzTHeNufgCeyHZ75SgUYTZqD5b9HrzOFnYzzY
Z6S++841DgxGiU63L2TCcvHPn36nsyBuX/Lyc0NUyIndfmNsggTk+3dvvu/l
QMLIq0A/TQG4zU1QO3OQg/g3S3aTyPHXGPCj61hFoykLflff0hX0UmBEJOHk
QxcK6F8xG4nfhp/3stygFjku3qftMvaur1bGfsnIf/M/fPL83sQrZmN0tB9D
H8toqxQmcGzdeg9VLwrMcN1WNqKD9YTMS3wq9hD11pTeYj3ptejfLFzPPS+K
9nx/Fvv/BM3SdP7qTYdTP2SU7qqSwbnppEVjK9aX0K97utiWeG4/O0Z3RBYK
INdzMPN1K9YnOhlTEnLnIwPVgyFNcm+WXqXAgBWlkKdEBamqv+ozr+HzD4r5
VnhmgoL47UZxrq0P/+13Wl2baDEm6u/Ewfj7Ehz0fLY5Bm8um6UA6kc/RZ64
IQM/bL7zXtkJEP93dGdmfOWwMrzY1egucl0V8jaPtGzbSEb92WQY84mOYYIG
51DkrQs8SPQs/BMTgf3ofcniV2t/0MFb6MTGGSsYkPaYUt3rykJ8UwM/33bN
+0zUn7KYd6GveiUP1V8jnj2a0zOooHZitZOkKxVONa98K0ycx1S8WjU42lMg
zUT6dYO7PFQjCfyxrmLWR5ePFEgz3lNy8zsNqJU6yupXOHAppcyBlsRH8y37
bzmBefVU1E+06tvvI+JA4OkFrSwHMRr4DEmzbeop8FTJpCHhHgtqKOecA0co
UGgSfmLuCjo4bwwWmjtKQf7B87rKej8bqMBJe+uwu4V8sFizW7XLFtd3e/S5
pfmiAsSf1XorbS38AfvL6FRQfl7o5qJ+2qeZhr9/riBDcEpsg8khOsRFrP5r
epEKsHT21XOxDDCsKvGYtRbf91OLfB2yLuB9jMgg5sbm/cqIP/3rzsAahygG
3ApcVreSwL3rAv1+74wmg5F/7d5MOhkenSDLxi5kw0PNgDFpEeK9rW+Yvj+A
BRrBV/a/53Eg8libQdA0Ghwx81HpIPDe88yR5u3TmXAuVnJH4XsaNPUZHhxN
YaD5cK0DuzzoGZ4Xigm0qtTWY71jCcUHWttPy0P2pZOBlQNE3eVy+LdxFQnx
u7gf+tSqbmM+V5htUFPapABe7ioa3xIugIfHGO2n/Fkw4pAZ9NuVAyLnr64P
2cAAi03SV0NmU+BUX9/iL/4kmN0bKCtjwoDzxuHc65uYcCBs5NkAUTcpz3AM
slxChrkmP8/8e87flu4RmPooQ85F8sx+PRXg3xAN3RJBhxE7l+X5imSIOtf1
Jv2aEmy2bsjyP6QKb15zFYX6xEBm7prHz2aLwVHG+VYygXPFR4rzuvbRwXp5
UJThZwrSB5t9rNFHq5CE3s+STMMzjg543namhVx20IcDmspREW166rBMZEJ4
6wW8P1UppPNm4RwxrM8Tf77sRSLWI/Y7K1i//KUA2lyK5bzdlWHa1pGH70j4
ftmEXntLLiGheK9fVaAYto6G8J3czT6d+p5pULlloKy5ocVMM+nQ4vkXsV/n
yXkfy8CTAdMXSHs/3cyEpZxPDWG5HDT/OJm3z892SBrNq/UedPRQ/lJAadrB
7eKiNMjQ8CLRMijQ9yOk/+sbRTB22GPRkMAEIelnahUE7jt3Y2yfsj8b6ZUY
2hSk0g4IkJ7ta3femOM3EohbHD17SowKbbmelz2EBah/Gis1WyMvHuvFhWp/
ydM7zUL1wOA7WX1Gryq89UveZztPFZZNji++5MQGlV1jup8sGTBS9GdB+SIG
NJowWGtVyDARUNDZQby/f5XfvArVpMG4e+6b5tU0EJWQ9DccoMLnO+YqcURd
pmVxls/fpgYRO6VqKpk0YC73ezhzPwuizVp63y7A/jvdcrZSwTzst6i26L7k
szYu4jOJrmWZzezhoHy+2+v55Ph5Oni6pLz9tpnIn60lLkF+DJRvRldXbB4+
gvmyKxxdHBO3U1A/ME2jnBdM4BNBJiVM34MEi536lXrLSGASZZRWJ0Tgkh/P
3zP0GRD5/PfDSEcGJF83sXluSkL8soVKaR5r3+F9W1leUbNiOQfkO70XLXlN
Be4S2gujTjxfMa2P7gscpqP55ZYfEdsfhGO8oSM6tymoiobmHYYOSV376yhI
n33al4YPK7azIIlyILCqmwZb4t9m6UmxEL9i1amPRmlr8Oc1bYgbvefCQHop
Jo21pYH//DT/ozf2J6suo3OSgvrHN81Hx9a2YD2k/ervm9dn4M9LbtlSMWEt
QPt5Xu+bu7276aCT4XHq+F8qvNJeo3mvi4r6mdGjtYNbV+F6N4ryi1TlwEF4
POV517IAQx6Kn1m1zBxLoi5SDj5eHDSPAc3ftPbO76DB3+2dQdVqVEgyr3nt
9paM+LfxZ5cuUCF+jlFq4qXbugxQnL8R/Bywft3rRS8EO8Yw3hd5sVSLMZeL
9mPbdMe9Bs+y0Xws3mkijPIB7/dUG+9wkEmgwQQrLbyHiLPThe9Ybd5NR/Xl
5CRdfaJdAbJmZ5Ccg6UhbqHaWzEW7o9HvP9+84sOBXRqpPZNcyUBe6YiqXYW
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
rpmihAxF7QwlJBWaI6QyR6aSIUSIFGUIGSpKiYqSIUNSIpUGSSpShgrJEOV3
3mv9POez1vfPuy73nnvO8+zntV/7tV/7qZ2+4RcKF+UnhUNpet9laSBlJemq
KMCAwTPF1zeUkcC4We0teQcV5DCW7A5jacRXHjKJ7jiI74e5eR/vHkV4rsfP
hy+/+PmC8HOWm7JBfrE39n+e/9y8pt/iPrH914j9tha7LFQxjedxmsvMTmnR
oU07M0XgCA3xX5PLHs9/i8khfrLp0XBmEo4P5/oxU9mXrTZgMkgPNTokqiRl
Q0X+CCVvzjDMbOUgMTfWaPcGHrg42YxfwuPuHD8dImP8W60IP+ebNr0+V4vn
21phCcV7qXAis3DW4DgNfilteCOzDH+OFq5KdjuZIJVv07w7nIvq2+RC+/ZL
vUQ/RYTTjVdiSySQvujIVssr7d85SL+63/jKzwNLCP3rgpk/Dku7ZCDnmsC0
otZ/8x/+dV5bQgPtiAxddVkShJTlZv+NpUNXD61NyAmDB0OvaicNGdCUpea4
15gO/tSYj+XDhJ444N+yy8LLZJFeLHuZ0z/eRTLqf4k+EjPgvYTwjzBIHQm0
zyHDle35R3ozhUCnssrSByPDlpzLpdX1ZDC/RXpfz+Kg+BSfOPjEvwiDesOH
d1pT6HBBOs3erVsMKPr2nnqHxcB3bfzT888oIHu1z0EujgXjj+PvPzAh9DQ9
x4NeDNQT9dMlVz4LduH7fw7fZn7/gjVIYuDm2q2opMkC1dHDm6w+0NHv076l
0iY/zgIbxvxrpSVMWCT34sCrlyzkn2BbpThTF0XM66j6tWrVFQ6hl/Npzlz+
6goNxb/7juFrLzFZSD/0lkzlVzeiID33ff8p0wOFJKTXpCyBNlsOHc0rbOO7
pnP9rhDyh52+lSJuf5Hwa7fBQnMfSFNgrIj/7MF7DJjN1Mrn72OB0+XvJBM8
rs3j/hH9MERD+gGT41Zkbzy+Xn+kdZ6yhQo71F7UiAuTwKDm0o55eJ4aZnfl
NW8VB8X/G8L7UwRGaUi/u5/vtIrzSQbi98X2+qm5fSfm7ykMvFXKTJJCeI6y
g2+bjisRr5f1W9kHb6UhPq/sMne7z0EW4q+s3izYFVJMhXni0yvOpWF4HtZ0
dW80hvzhy55a3qnolkJ6jaxp+f2aJWTUX51+aZ7hPTUKqnf2Vt/zj01gQPRn
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
N0+yvvhwDOb7BceMatj2Uv5nv8ss+ujxZyw26NTxb2xyxPsFEgMPE2b9IEFe
1xGqvwORp9MS/YR5+PvbHz6RsL3hP/yS8obUg8YU+FZ41U0viA5VvueszS8x
Ef/g8NajQzWaGN+f1TNVN7L4j36/dq/N6jw20t+cnPPJ/5U/HbT9cjcn0Bjw
9OKXt101FDh84VPbV+L39Yk/iD7cwkX8uKCuGqtnnjLIL7PAnqfr+YcKEVz7
WIdhGnQ3p5Vts8Cf/+Gr+hEpLR7aZ1d1YR/71+/bMnemJ49NAfKTNn0DEo43
ujJapzVP8RF//uigcW76JwoQSLUt5AQJvh1nbc++h/36zjwUMplrJoHi75Kj
IgXGSjzE73247GXQVAkd7b8KrH3zSdIX499Y7ydfr2rJIv2eA+kfAipMOUjv
PurEKXcNHxlU7+ZxTD+HEnF8Wn/zhoLjcc8qHJ9SNZl/1x3D/rlLPjhPFLvS
YGPtz8J4VR4sdyaH14pR0Hxoo4cAbei1DOjOKCdprWPD/ezUbTpfOEB+1q9o
IykHs79Wz9slS0F8jQdPmJc4e7AesUeWWsq9LBoM+btojzylwbZFWkXAZiM8
KzLqF2p6hAqNJ8wfWxD1XP/9ljQlIwb0PNp/7QpDBr6bVsfZEe99Gu9ZdToU
HZbD/Ym0xKrFOj/xfK27XOGi3gGsnzsSc3/d8SE62s+fm1XNlUtngs2ecJ+c
FuLzWacYXTakIj2FrRcKX52RxP7tp0J3vz09xkD9tCYdavfBS3R0P85s6lZK
aqeCdkbrVqlaKjx7dXyl4GYGpAkWXl5jSIfye0XHWp8x0X7lN7djbz3C6NCw
peRo4AfiuVRK3btcTIaxZ5cFDJ5TYf46r4x76Xh+cmKAXmO4CvdjPbcUe3iR
iTo6nfuz+iwNKg5qjDd+JYP7VPuYbBQNYk7tOzFBpqB+xezVhTbCeXj/wKa7
7/uNESYYpj0MlPVgQqdhxfp6OSZcfZLsOyjOANtf/ms9iHxhuSDT3X0zcQ8W
XFPY+5f2P/q1035QP34FuX/J+A9fUHfDd7dfbLTvbZ/eK+p7ggEjLtXtPvtE
IVf0S73jW6z/dLuoZ4HsCRwvnZ7oNySWcyFp7FM7fZccuCuTApqJz8eTP16f
lMWEB4UBHqUesuj7hJ3RkrdIIiF8b/j4x7n5l3D/U1kpsn6cyO+u56oaFiqS
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
VnDbj5//XY/6rW/huG/99ieODD0u8pNI3vClRtiehvysrOQUh44USKHzvu7+
3mdlHBbomW0SadnDgeOMdOoDQ2Kfa6kAZ8OkPhnNMzcYz76KwmTg/J6od6L4
cxmL9AxteC0FvUmD6/LfSkHknwbzncMy6PwvIUsoJx8m/LfzeSdUZW8xUX31
pB1D7kCmNDR/f/+vSpMJ7PoWndAvdFj0mFYUOsWAMGofXGLSYcr75LTZcirs
swlftWQDExZ965mXkUOF1LufDautMTSvMzA1HnhrQg7l20rn48yx88R8TW3m
xP7CcFlUr37ucXP31V1U1F80V857jw1IQqp8Z7cZzteCm6wY+l5SqJ4y8PPx
GVsbCohtmaeVMigJ/lf1ZB+uJ/yj/6lbnvhvf7jaKkUv5icbep+1/TY6yEP9
lHWy0Zuq8fe8ZMZgr1k5DZY/j937PZMC2T4yX290UKC10D99+X38fJMOnglp
ZAFLryx+ZA2hh2r/ldepnasIt4XFHhpZKcKMPSmqw4+Cfv+J0OCYD/t5yG/7
iNwz65CzRHysCZiXt2kdD+2HilYI3Hk4IIf025/mucdwcTwf0aM45L0Ugw9a
3u6BbTRoSLdWNH1Bg741riUuuUS/bvGJQss7IXSkhzFZleCtSpNC/Hx2d8C6
kDcYZKz6VWYqQAPrrpN2wudZaJ5uXF/9ft8soZfr/M/U75QRGfK3RLYuA5wf
dg+3rZ4g6tdBSsZfrEI5aD91/Obju5Z0ot+YUn8j/XsmFz2P+Y3HrJ/JEPo3
N897yPwsJuYjSk9IFoaVEfoeK3wbtmi85MCemSW/X71mwcjHyQO2BjgOkkhm
XbVkAn/usHyUDob4CWNGxWVBCLGPUFIf1v17TBrp4zjy2iKbvDloX28ilyv/
LRKDkwa9IvEWJBhbvD04R4uC/B2vg9qBgUskuLUmb1/6BxLcbI0ebxQm/OKS
SMEaSw1JIDBo+GLiKAY+5zurbcpYMDX0i3LSgw20ztcz0kcpaL9th7NLmAKO
p+f4l3lqdvdMHvH7XfxGM1o7GdC5t1z9hAwduqSW6vyopKF+ic+b3ed/bWZC
1tOiCN/TTJhSFrlyNhoD+JYy7GyF38cbOYp1r9iIH5ueGKUVJRH7HadD+hT8
ukjQdLh52TfZ//YiXokI6zBQvLZXC739Go/Pc37EloqlsQcvEXr516pW26RW
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
v8fbMULT3IOF5o3aXQY2v55iwRJh2VOhjWLwMLOr/DuNjfaPOUYH7y8oIPSW
dBK+rGj/Rpz3pc0DF8I5kuAnvWpLwyYp0H8gu3vRGxbqJ5jNi9M87MBF+O7D
AkOH4xlM8J4Yzv4Sw4a3hdEjpSwu8gu7P0pPceZwkL+2SOENlub/6FG3rdde
5sSTQ/WC7bmDI5eCKeBRvyV3vwwZOp6XnRjfT0Pz3W8Gf6Xr4LghSDaiOWCQ
BTeLV6webeaiei+26l938jgd7f/rDBRsrA6lgpbO9KKnv3C+tOhx8CCXg+Yd
F8SvU6k+R4VNTQakp3IU4HnvXi4kRUJ4cL7aSkfLEAzVZ4zO7dsmno4hfQPv
756frw8RfPCdtLbvc1MW4vsKK0iHPwsT5/GfjlN1mhoGTqK7bYvwuDHmZbgv
352O9n0W6W4LKcbxbWGL3p6uUAqssF3hMn9ACtWv79FD7+RxifqvYcjx0IfA
htoin1m33Sz45F26o5ghh+bn+jUWO7xJYsG+EbNNCquYsCB8heHXHA7Si1+z
teRoszoGYfPbhXSaKTCmsLIgMQWDpyV+zy6Q8Lh0QzHU8wMxLyTd+Ph5JR+h
19R66M+yhyV01K/cu2Gf/s+1xDzKWkZ256tKDDitLlUvxv+bQ1eqOIyfdzQf
8HLtC/vVxL5vVfFRO4/PVLT/2pmipPFsJTGfe2mzd2U1Hw3puaz2dQyjdtMh
tS/x+8rPZDAKf6dcc5aL/n+MfuHm+6fEfGDT9cSIag1pcNd2OJaCf97bwpR8
sgqBp7Z+jvZLBgbSi/92OnxS9IYs9GGxpfNxHriT6rsspIgGC4KSau++xvFk
fbJWyGMayDktkTTCecy8zJsz29YSesuc95bVO1vIEHFhpqvsNR7/r4nLfb5M
6G2yROYpv5OTRf7lWfLf1DSDiPpUYICAgVgjC2pdvsRM+zPB+PJkWDOPiKdU
5YnxsTwGmr87wPwrnOnIhaOaYRYD4bJQTz++w1iPCsoH6B/Tl+G4KFl75WoJ
Yv7uxUehtXltNDhVXk21xPOGWWvsmpZuDurnngybcszplkH8J3X3bOvW3XSk
J/JpN3nPyFoy0jdmVH7+dMWXgebjvnJLT76+IYP4nEVE1au1ugzk3+grc3Oz
f74UHH8uZp80JATHJR5rdkxKwlSWvc2GXClQ/qVR01K/EHJXiO9vXCkMJmfT
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
6Of98fb6WptMg/NOu5IW78a/B/9D6VPeDHRepNU+PNiYiiE9yFYWrTkf538K
zyx+156jQPwN6rCoBQWdn2l77kUrnMe/E06+PO5Nh9g1M1rJxlJA0d3joeMn
BsvOfNZ4qchE3zfT08W4FX8Oc/ocGmGBP1vGOQgPxavYWM3bRZy/oJmjz5+Z
kFC+0b1v4f0nURKOGFH0tn8QAA0/HTOruzTkZ2cRKi7xsozQFy3PSar+RsLQ
7yv1Lv/ZYUb+f+bn5/i8m1GRjvk9SZS/Lc3lD662EEH6AbXRApYfpxkQ8ODG
bgk2BloeW1xiSsSRHnuugDqfdwoxn+PR6Kw1VCUF7xvZxoENZKj/Mvi6MoiM
9BRUAiaa98pRwd1KNt2ljg1x/Dv+3RoiQ8ubHy9+eFFgScnvTsMQBvLrIUvX
1Tb/wYBCEzIoTWVAeFRdKGcrHl/ns5yksmkgMCvYel+JAszh0YFePG76yVJk
nriw0PxS0kbq1MI8LtLnOTL8vWmXEBvh7yev71kVV5Gh4ztzaP5zPF5/dOaM
2pCAHbdd2OcMCWKdus1sgIL0Jh5953s/Ek/o2YNyKt1Rjw6jl4TF3XYyYHLl
03kH7PD71KI9/3kpMX+dV5q0Jv49zgNF/rX/8Sfm7+zejJFHVonC1c5Hek+0
+EGL/NuIe4QMp01rwnslKFDOr1Ec+EsG7VuXdaYfaXKSAom+5xx3Myk4NPp2
qUAzCfHTCTHjlucgjfTs5zlp+cFVCtoH2qt8fnyeIwvtbw5G2+92ViXqy6Pr
zkSAG7GvQdvIKByw40JW/JWsBjM5mB+U4tK/gYP4aiy9LbzgMZ4/aHvWBm+l
AF1UW928CEP1vStVcdljW1hgpXIm/Y0UA4Q3N9RUThL8VeBrRYi1KRPpk8ZU
uA9qUSlgMZz00vayBCQP3j5fif+9ufoIr/3i22Gc58zVGz4NvcjTyiL64bTY
QMejEhyEPzLbStu+FVDhiUbQTPorPP7sWk698J3wv2XuTWnpE8NxbGeeZGsJ
DdxuRSUxfGkg2PHkyn78c47Wi0Ym3uCi+1p5x8KlcjMJzcN8f7VpMNCcjvxz
0r1eYkM435nrH3+9piO33IHAywnzBz43hRD3PeNfnn32KTF4Y/I3Q+CtJCRw
t8TRZYn7HSDgmbbeUhIGp+IWfsFxpdnzxevHV/KgIjGtWDmNC++KG5Ms8HM3
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
A9VLHmpbNEpk85Cea0xWwummFg29v6Pterfu6uHnhdzxmsUSwPlNs62Izf0a
MtLbG297NXRiCxmytl1YQN7HgI1kQlD/Brwecnl2/WXyHwZsDzr8ZEmuDFQx
ndcby7MhaEb39ByTjuXxQrDC+Nl8fcpL5HiU/UkW6qeprRK9U7KHDo8VqzVH
jtLAeJG8YuInOvJzWK6wRSr3FwHFj8GbIw2Oo3Q0fxXwzCzmOZcI3dz6GCEM
9x2a9JFa00iCB7WG7uxrJIjuumi6PYoE3yrkbcmKRKgJ/azS7MBB/huL5/af
SqnioP1rtF6X4ZU7GWh/i3vb10jPeirKny4LNH1s0znIf9JxYepcB4uN/jvR
2erRuDcP1YfrjlDtTDt4qD67Opn3ehTj7/P1dG+H9JGkW7i/4qmzi3fv2EBE
8c7mvNyrwGIK8ps6ZXODZm/LQ/3SCwcP5zoK0sE4uvnb4UkmPPRuTL+rJQ5n
PLrunjGmgNqcqQrjNhfI8WK/iNVM6D016RJtQoAa/bexVF3suVeOOZwg0oAs
Qur5ieHJqjzrBG05IvSuesbIsaQBj/BvfSj2d+fvt2VEIOn9anzeSbYm5c8i
jMcF/kx0fdhJhicCUMHhYyA9Xtjxd7Wn5eSQ3lby5cSbdWJy6PkvcHlfFq3L
hJzZR3+2W9Pgk/353yNmknDlVyvtsy0B9kyVK/dMsdC+cvEju3cmBhORP/Tu
dbU5i2xxP823pXdSP57D932wlZc+yxBlw9dDy3SS3OVgR9wtO8dkGuKPVRoT
DwM2Y+fu72X94dtksLxO9MsVZKF5IiO7Dqke7FzpqVrWv4iggS2DfsFumA5Z
nx4b1GoJ4vMEe0LbxcrZsMbPk99HggZUt69+5/4xoV7ye+uTTtz/ei1XImu7
qDR03uy88GCcAxuWj66M7iSh/Fc5rrFEBIsv8/h6mf8jb/EQfL7LaEa7zcGA
jPJxsr3thcp/2P1OWVCdlUCFsg2DVlVfGLB2kdxbuEmFLOZr1bzLPMi2z9Y4
/4AJY3q0735yFHCtVTY5uYIOK3RX+nzuwfVhkqZOUsNfcX/L+e83r5//mF5s
IoS9p3l8t/RVD1MlRRbta+Y7xlhu84cC1tzGvYkF2Oc039b2252K/LW+71US
n3LF60kmkjLWIkLS4PPlaZVXKwPaYwu2PWTREN+dJpmI3nOhQe9Wpaf9fRQY
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
3nR0X+bf5/y+5y2v9U+df4fxmiW3U+5cJYLyD5F/C3S5oBkFK6kpbGj0Iore
wXjRfH88MlGq8D8/1vl9nOGawzlnVrLh8rCah9kwE/IT0r5pk3A8GkN33/dW
nobyT9hWx4o57JyWZbaOFPrTYdMw0fbUJQ7qB85/vnl/z3OBq9dvwPKhVle5
/G8yGVzkViRm52H4ceJd1RV1FjTW6C9p9+GgemidgzPHOxGvP57XOP7I246C
+P3NlfEODBMKbJHUXJB1GMOrT4QOkL1xPb2GXc36Mh9ZpHcyELl/J/8/P5X/
0ZN+VDjne7aEiPwVPCINnllVkJB/mPvLuNihNhnkb0icOHqieDUT9dc7esw/
pMdTkf/Cl4cutw7+ZKL6bidJ3TFwkAta7vmCSudlgOUQlOTvQkJ6BpfQtH/u
FVTUj/2UnTxZZYzj8TBm6OB4mTTyn67dSYz/WMBEevPUuzb/VmTIIT181o3B
0xW1dNS/iFi8VPeMPwOciY4xwW9Y0PMqvKfEmA7npF7XhXmQ4eWrtybXMPz0
/+/LmJ+XsLr+xi4klg36DasnrbBzf2dpUXKFjzTyu1borNn3xIqJ6k/Bu6s6
HdLxelqf1bHxmVEKkIJ9DL2xvNNFD5ruDaOCmci2A//GKVAiYN6qr0FF/lk2
e8i9c0NkkPxuPHxqLV7/mX++qSf9NZ7TqCCfMPn+tTsJul337XheRIbgtYdn
6mgUWLfHRWa2mAohZytyHmLxI+QTPdBq9n/1H5ivWF5l+LwZTNjROBcJCM/x
JQYLr5HgoH0LVSMRi0n8+OdbEG/CVTalov0tUWtVqO1PyHBul0aLeDgWVyId
n98rI8OezfwSC5gUaN9ZpTkaT4Ezu+M/t0dS4GLpW4J2IQf5f9Udup7bPSoD
wr8/HvcgccGEX9S22BWvHxOWUv7J/GUBbdPy8B9uXJDsNjjuqkeEbY26Q86X
BID/aFRaSjLu92Px6YPskAgFxCb+XDm2HoufJdvenOyUR/3m1pvf3mgvw/iX
j/aG84EUUJaXu64+xoLE0OUF1hM8UK9OrWzG4v+8H5zy9wfy769Q4OB1zfxP
B8lwQF6MNTPKRX4Jf96FKZvakWGGyqf7vgX7nleSfIa9cb/xZt0RvXun8Hjq
dnfd1dp6Knq+p1sjOFtX0UC/dsEN441siGs8aWHfhc/Lzr//efzPND+28nAv
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
+zlMaJf5IpHfIwebqgudLLrpqN5xz/hG3micGPp5/AXpXVGVZLB/qU7fj/Gm
sdsBW2VkiMDMHNHzj6WAz5980chC3H/77/vov1eyxUFxVvS6nZw4NKoefTTm
gOtLD98Oi7w5zkT4oNTxZfTzP7hfYdOjOmr5eTrSd+n0HTK9huXhcNHVoYsw
3P34UZ7JQAPGL2IGQyNrpMCvaa9vwTUJeM+/6fF6F3yf25ye/kpjSKWtAwny
n2olk7BzvcNm47GkKAL43/MuzaBKgdoL4bLzLmzkz64laBDMzqRCyYOZ+m37
CHBsn7BZjhdeX5E9KpT2y5OB8Pm8cfo02R7HM19uHxJQvcxC+iAdjZ39X03x
fcXRD2JnV8WKoPv7IHbAzjRIDOWjR++HsstVcb465mP0e9c3nL8IX9q/PVsH
zzdr3PJ+RX0mwsKohy/le8mwwtQp41kRFfkRfDSM+hFhII7wz+DhifbxPCJw
H54IbD5PgNNf4N3nESokju6d17KMCu7+vy//TmCAfqftkBSWJ3Ztkd7hfB3L
S+tTKsT5aaAeWbl0vbcMHHiY8tGuXgYub9g0rw7Ds3PPe/WFj83Gxfj857bO
BIUTFvh8xYrKoWl2KBX5f2dlh1iPvqNC+KPvqRKmEiDZeXOpiDa+r27kifxt
+g4emqfkNt01Dkwkof4Q60Bck28ZA7yYGR7TIxxwOtu7SF6KDqqFH37tdJKH
BcHJ90T1aahf4qhy1Hj+LXz+e2+mMFf1J35+V/W1CNE+0NE8gXLGj7WSP6RA
6Qxf3E8RCpiOe4anDkiieamffuemXLbj+/F6dx5T/5VChD237yk9/ILd+6rS
k5pSOB5K0kt2v3aUjP6eNR15pVyXiZ6f7Ufz/nO5DBRvHkVzSfv+MuDuaM1X
j1IyHBtPYQ1l0iHLgX/N8RgyvP1p7uB4DOf7jlTN+FJLCnRs4SY/qMf7R9ue
WG9tlaCCK3zSWo/lj7nz9X5h8JvAMby/eeulo3bMP/pwu5E9rYWfSVCr6LLC
BsNFBS1LyjV1mOg8dq548y1xNwWWpR95Hp1CBf8Fel0NwzQ4+NrPrOYthisr
fjd5ussjfYikRF92fgcXHMpWr8q8qAiZ1PDZpWwaOG160vKFRYW8+XvIPQdp
qD7ipnPsmy92TjlhF7JWa5PA1LS6npBFgN53oNLymAymOnwfelxEYOxvnGB/
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
5POR0xx8H8PApqU5OgcYUHEpWyrVmAxHipfxBcZKIb6rZ5xyLl+NiPCrxW0n
8t0YOpz93bXbVwnLZ+/TyRviOCi/bFvdqLKnlArd853fdTHpsPlq3V+lHhZM
3Q9Xs9/AhhYjfi2LooXw7HJM7I994sAu0bZb5EEBwa0R/ZxzNBCzEHqy3RPH
Tw/Wr7si8xnf5/SkeVng+jBcv5dqHkdkhOHzmfKvRr1IwwSIDO6rHP8pBXeX
7vmi1oz3S+xUH/f+fEUG3rtHjT8PkiFUdtOaVQdZqH+WbbHEeKuTNOovJc72
8bRpLHgrfP/5BrY0aOX7hcam4/6Sgk+uf+J3ZiF8xv35fZSqSkF6lDMyNV4f
MfwzV6/8kr2Cd+gGEdxC+/X/m1OKr1NZyLCiwLMGt5bRt1Iw7+4BvoxZItoH
uUfhyPKeQjJ0GuVcCZKnwEn7Qj0+IYyXynuc8TDH84d1YobTDh4RrtuPBVkV
UlH9d3nPStPgWBLSwwSVv7x1VI+I5k2YHMOjUxs4SP/gv6XnxQ0pGqo31B92
+qY7KAWhVvOnr5uIwUXP5u3l27iofrjn8PaorxZkOPSmjJhtS4GPn1LJohuo
aN/nl21Xey2FZdF53Fn/cuJTDRft/01WW/go5RsdrppVdHvupkN1u0y13E0G
9MW+5L8zjwGKItE+6zPw99v5zbHjTz0NZJN+ttf7YnHy7XHbk3EseNq2nL++
hA0HrddxmSN4v9/z5tStD0JkqL7qfuu3KBlqVdnpwX5kOBy8cDzhGQVMPH+f
PKvxz377w94/ZE5SEZ9Pf1LxsPEyC8KLZ4rbj7Dh4at3swL+VDC7/flX4j1h
2LW8u4uvlAzyEb/o03Qq5Ky1Gmn8bw/6/83L7YwvVozUIIK4cFXpugsU6Lya
4XPAlQzZ1EVqsblkaDG0aljfTAAj9l+NSxVkeJzmekG8Bv++yrqTxyu2cODS
5Jv3FF8efF8xTFk4Q0X1zE+XBc35PMkgFJytOIHF3W1bLm3KniLCBcGsxlGM
d5y5p+vVHMYG0Vp98kmiLPjFSacbUBko/8jolRL2WeD+BRdlmXIbHvGQvtJg
JphVw2UjPuR5SPKPbicV5Dg2K6qIJNCsz992oZ4L3ubPb+4Kk4NY9XFDfaY0
wn+iJnKT1ftkUL2Fla8edTOXhOr9JV0RljtusND+vG+T4W2a//HD/9M37+Qn
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
qFrCAM3Rodi/2RheD7W2sMnC59/Py57e6f0I97daQthfsOgmHfkhKs7qfN90
hwadvyVOrp+P4dprL7ZkXyNBKRucUveRQTxso7ABlv+3+PFdUvJIcMxkRC1E
F/eb7jKKumD9Txbp4V6ZPt2iiuEiQf3/RkfM1JJiBqonXjrwozPKAsczgnwq
2D//aFmjjIUI7o+z8s+HBYeqeOj9nZ7/JMnOjw8uxtlfPQ6pgNUm44P7szlQ
qU6X3gIs+HTsckXCOR6q90Vnla33byTDio35aj0hGB73UGyvI+J+0BPSXl4n
pHmoHxM949tpO8IEbW3eI/tgNkjcPvpgYRcD6MbuRgf18P60wL/lXP7OpL40
HM/UqT/bEH0S3+c+8YCjMGmE55MIGb2flivp4L1MLy16gA6XCjcvi9PmIn16
+Ku3jzVUCGCravilO48AL6eLd0mfoMDUTXtVCYxHfEnq9tSK50HGLdFJtcV8
MB8J2P7tOL7vZd7k1lFjLQa6r+GWQe9yHsgjvGNZ05vY+YIB/kIJ845ex3hX
reqNCxvxz7965ufi8zG4P/Tvmo/lnXHykHvCQH7f5BzIP+vh+uUPA3S0JRyv
32JAnG+VdVMyC/lL1q88Q7p8mAYvnKL3b8Xi1itCX9tzSzw/Reb9zF9nR4WW
8ahL+8pJkK0Q+VJcmg9t5LbU7g3K8EjEbOubWib6/YNB1xvGwrD4dq9gZ0Az
B+Djj7t3K3D+Uk5lPjsbyIBv7c4mZlheX+Nz3an6NR0u/1bMNy1Rgg9t55cM
H8X1673pxNGd75jQvtpivtL/5szO+y9QvkGGzekfVw9yyPB+3RyRhd1kONf5
9pnGfuw8PryzL8GdhPLVCp9O+q3nbHT+dbM79FadYyP91D3JHM2iKQWwCty0
dZc6DXS5tdJP5ZSQPvfS83OLPpRTse91rzzpPB0Ou2hvzuXg52O9a8ODik8c
1L8h3LHfuAfLS1sPjr83d6LCKrMlbYE0Fvr/Pf9UdDr9p35atPhL3gZN/M/S
7nmjOxLJYNQJO68+owLpa/6ixglFpPdR9TpI3c6iwvBFKbndDgwQf/E3ZIhH
AYPNnk08ZxosavWbc6UI37drfuDN7lvdPLhNN/SqNFMGfcL0xYV5DBi6I3rE
6BQLWA0TZb6muN/aBKWGcauEifxdMoILeocnqSi+2i9MeUjQ5EHixDv/3Zp8
mDIz7LGfwT+/3NXvD9xGSZA5wflSqUeDX8FJToVlLLif4HP3TB4LFg4Hrlla
I4/2rfS891/iI4TXa7YYTYr6ySmi9/VPdGPvgmoy3EpNTX20iwJN1L89947Q
UH2IOGhg2M2gwS3WKanh3XQ4Or+1NPE+Fe07jbxDCa98w0TP73Xn19HhSyz4
6x+0SHmGAjnGzrdklJmQ9vdIzeMmKtw0NZ5QbKah/K3Gcmkyrsf1E+HLPKaX
vaMgfcBbo2sO+SJUiB7Umv8igQbBNjGNrCEm0lNxDbIUDB/QgFNx88roPw5E
Ou54rtNGAvdfK06a1pLA+KKCemY8De2nm4yt9LenkaCmuzb4cigBdDaPXnoW
TEfnb8UW9p3KKg6cyCh3Kajlw/2HRJadFR193nnqFf79Zhy0/+noHtq8dAoX
1Uduf9N9u2UPD2TWbzGRnFZD8VGg/6j4ZLuJP477kaRokFf86MD17oeH6y75
/8PPv8apGfUjRSx8H1b2wyl3CQosjnPT1j+J5aUUylTsCiWQONYxeeKnEixr
0Iv8PshE+oPOCaHE1V8oiM/HPfef+VWEnydW1eWVvDE22KvtlN80yIXZBI0l
dzG81v+5QHUnlwgpMrOXpgZYaP7LM6xb8pULHh+5lztueixXQXoCndvWqlVZ
OJ/+rdlLqpvlo/pJ84Dbig/n8X0vHOm2N/p3yIhPGmV8iWdX8ODR9zD31DQ2
ZCV9yo7GcKPArytK5qtHHYZvF+mS6vWPMSCdvuL1Oux53HkiknFWlQhuz0m9
2+aRIMBCunXhATJYOxLOj9FE4U9Fv96qoxJg+XX7khZgoHrTEH2/0v9awDri
/svKnOXArbbg/ql0Mtq/pRo0R7XAko3y4dE62a7Y3/g+0q9u7rPfF2HnsTS1
fHyKAgPU5Tm6GL537kl/JPKNDDfF2QRNDJd6VKg11AcSQGqpuIdIlyKaf8dy
fKewFT5/m2IYc+dWMBcuLx+/ZlyD3bf3K8vLf2D4Jc9nUDKIC3uv2r0zPo3j
qZN/j9tKYfHGQsqOfS6VDE9CRUfLYqnI750TXlEidwKv/wQmryueIHJR/D0q
tENU9i4N4f3+RXPdjK3IcOq91VFNHwYW/z81Sf8jILw+kaks25DLRP3sInG1
hhtBNMiUeH/EiMeAvKzolngPClwL6N0oHE0E66qPDTXjeP8uNcS+qD2FjeZR
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
wkesqGD+l/dU7DEKSG/nOebaTIG7un9ifM3oCC/Jh1XWN17G/G/P4WN2ZR0U
eGNioy0VTINTOTwpbSkMWHIic172LzaU2V5fb2aO/TEev3qaG5jMRPNJRaTT
DxzllJG/VfgitsFzOxKcIqWt1+CnQPXY0xNOZlJoHlQV8h9OGtMhr0v2nMEM
FYT5ytKnfIQRn+/qffW27ky8HyHh4NUQFu4nVYlfPPNssTTi5wlwB29u0qVA
sPWSF7tTqbDoyvTEW302ys8bC4bPr2djvw+PtJj5767ToTR5R5tLCg0+W8z2
F9QR+Ufj7CXregocKri0fA2ZjvRKLc6Iac6/wkB6yXP395yeNGfPsY/vhrGf
6426rBWzRP46p+c30zjyR9tBFumr8V3oHinjl0TxkXMwmv5sEs+ndoxtif7P
r29uPkXwj1OxVigHLuotYVllc+Dxo2IJp3EmnBmJuTr1hApdi0uSxTS5YHGQ
enddLREnH23+65+E+zMn4v942HLF0H6ciHLSCoukQfKGnBsx0RQg3fLaahtM
5G2Bgou3nCKBQ07ErVP3MD/JfKOMvvs6WTRPxJ9awz+lykL56dz7mNNz3D1u
Jt/8Whb1R+m3Pv5O9ZdE8zBV29lHfwjieUS9ABPJ854Yr76SZ+6oBAaap1l9
3l/urxQJ8ZPPqp1UMqKx0Pt131S7riIN6wcc3yq6rCYBz3+//ua92YUmByuP
TcUqnZSHyYqvojrlVDhdfVqrvISIN60yI2PEfTg3T260/3Po33IG+vzIG83b
jYn70WNS0GhXngRkmk7tG5liQrG1imHdEjrQvjw0Ns3C88x99t/s+bWI/Ly4
Xbd6hA6UTaVeqS9x/SMdjp3q+kZF9YjxTY+Kbc5jP72h2gulGRuxH6didYRy
wxomWK756+qQJg57N/sU96zBePNynPRW0etc5L+1NU55ZeZ2ClxyWiDFHWDA
gB5FoLuXgX5f9ku5J84OuP4muiE9dPdNnE8dpxltVLjJQfXn099CNjZTWEh/
ot3Gla0pQuRnt/znaaay4berqd2T+dIo/7zQr6pvtwrX13yDvm87VojrpwHz
TsiG3ZaBW9N/hF8SuOHMmp/dqisxnmPn9UfwpklA+GO+bTUhNOgJTRIsjmSi
eJjnZT6z0kQK/d6HzlEGj1Xx9+lnvHwYRuQrc/HmVWV3iI0gDekn005nFvB8
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
6av7N8lF/ezx/W6/rvnR0fkSe20Ye3QI/30FFYa1Hr5UOPXlV23mIew5/Ljs
szIX5xdELnr53XRaFdWXj2+vfhj5FPfvLPluXGAdgtURhUvoJ1KpkLl1t4/7
eibCkxeUr3YMraGi95ncz1mvPEAFvaecGxLdbDBYkjG5oJoE99pVKObriZCT
oS3BUWLD7wPzry6aYMEcUy3x/YF0hB9EF6yWWb6XhvRxDvWm/D11TAnUnpom
nZ2rBJaP3Nsd/yohf4rD10VLncxxf9l7kjD7rQP3oxO8P0F/xWJ26IDVcR7a
V/S8kDHFyaeh+BMQNtEi/JmH8EtWd0XG7QIClA/3XdkmSgTNz4/zF/2ige/X
Zasd7HA/KUG+F/y7io+eos1WCrzoNvqy2AmPZ4drZMoHSkkofgeLLVq//B0V
8YesUx4fn+XgeIFmyiu291FC979ibdhWky4atFhXzjVQY0DBxoS5dyqpaF8h
1ET42y51vP+0RySia8n/1K82N1/u05iL81+slTvP6LzG9QUsyzg+x9aQoNdo
yxyDPgyfVdZvq1xMRPml/HZA2eVe3H/tUVqDZnskF+mVPhhf3/nsHa7vURBT
Wj/0mIHwjcL3YWXiYvz3aSbOuXG5gY3i+zlL5d0jqhyIvvnvZucBDhCOBJ/e
kIXvV8/WPpm/IJkLQQs2qW8u4sBPZan9V7bz0b5P2V1fs1elQpBmGW8paisP
cweLw6MGcT3UrV4BW24osdC+iP/bzltcrN4UPB8Og6vWm0AE/8PbJ9zuzVr2
Cq1ooOjSEH+Q6GenKXWLCRzzQwu891AgpG12n2Emrh+gn9y3iL4U7/eE9JVZ
52VzQE8ih9RnzoNIU5txk3sMpP9VO3BGVjEAw8373l8I9MPi9UImUVxGEerX
Hw9wkyODc7bcl4UFdFgyv3RH3BYGLLpr3rdykAjkq5re8+wooGbT2XnFnwoy
S9f3S7VRQHqb9qcgLO78czbPupFOgdG4qex9hzhwwqXTKvQBVldEaj9YwGUg
f7TRydcJTXZcePKQtqz/CA9y7j27mUHD9Ww25i5tsCbh7+viRp1LjQeYiD+o
H2i69zr2ucV+9MkoLyIEWi66cDaHBLWdXTfL1yhCnrFb412sDmL9XGbE8STB
fTltsTxzVWD3rIZqpgpwU+s9lmN4WXDfnJtH5v38R4NLLtktSbtJkL5szNXR
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
G4/QQdcvbLfjCBP23N17ormJ2A/LlNXsEd5FhdqTbOomGwzmR2UGCGZTgb7G
0zBEB39fIULfGgMosDlNn/pUhQGH755x/HmcAscKFdbwa+PxSCrKNB5/Ph8o
a8POOCvAloHIt7fxeHskaOPE1QdU0GoV3W0NGJzJ6/um9IwO7GVZLZ3G/9Wj
CbuVitngHfs6a68nFRgUp+JneJ4ZHcnW2vGEwE8Zlw/s967hgLc3P2f3MSYY
8ad+0X9DQfel0uqA4NbVbKSHNUs1PcsqoEKH7Ldn6bkU2LVtg2HCOzr6PuMZ
AVeK3Ij88k3/2XL+AILv0bDXnTuI/3ve/Cj3SeOTjUMM2O9HknPSZUBwf1S7
zV4OjDXJjuszubB111Hhmm8MMFnzO23wDR3CfIN10v0IvfuVyR3sLe9xfF5V
m1hSh8G8ArcPm05TgEP5bD8XSYIr7h6vjfBzrfAoQcjLlA1LT4/aCeTjddCI
SVKuIhOO/lsvqSkmj/gQ2+Ua2xPP0ZC/wuYdZ6/qfKKgfbfN5az7P8rwetPz
hYn0fnn47S+xazia8BNaLIx10DbIAZ/PhF2nIxeOiO7SPiVFgeR8w7GhKyRo
W8thLPPjIL+LetWDRYGF0siv/oAo62ohfm94fKhlbLkvnnh9xcM38FzuTeQ+
DNrUssPvHmdAy+TJC1s3Y2hfo+5pZMJLKoFfVZXaLdf/Iua9rIdr/KK+UmHt
P+W3t5vIkCAXkjuxE8dHahouj+4wYO0Turt1Ko6Pb+eeUv1DhQfPuoe2sRmI
f6ug/+xtwwQT8fe79R2kXhRTgf1kt0f1G1Ewk0rTo+H/nYePpbPz5q5sJfpJ
W8qn7pLXUqDjVo31O088/v62VrGQkoYtSt67Qs6R8O83OVRnGM9nZY1JG0LI
YLqqrO7tJaJf4q7v5/cFrxdNxhtF3KUZkKMpya1gS8CZVReTYteQYZvg7esu
x8mQOm8euew80Y8fOWrYY/qICUppfL804tloPyN8ifaM0ow00qcQCKz7Hb2R
2L+UD7M1fTQqgeqjPY+X5Z87SOgJrvRQaZhrkUH8s8KT/t8FzAj/0YqgKLF6
XxmwavH+417MgvVT/FLVIA1jX6qdXrqSwUWkV0r2DwfpGaw1cfHQjCb0Q899
W61h5ILBdZNv/J8TKTDzpms6HI8T1mYeV7jJBB+DN09jPhuSTjOkQ+WutYmK
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
1dPMOKLeX/e30XhXMgvh1WtxqQGjKnSw67DearmIBSvzzne20jGkH7zd4Pg9
LISJ4quIafr70d9s5CdptV2XG4zHm/l+z4GNFiNC2Ri8S/ybfyqHASFGSZE+
AVTkdzqyVeMJ9ojY/zbZCSO8/ATft1xfLbC2jugflpODUx2jcL52xrNHpZ8G
G8L5h/TuyCB+LZR909KpiAFt4paPrttLQQ7t3y7zlwzkv9i92zzw5C0yykci
1a4ynjgen5/fvGYjzDLE7/P8vpStlz60Y8E0ONz7tObAawY4hR9jH/mH45U/
irzZDAbwaatOGQuT4Dl2kiw9IgiMomglHwrhv+lk+rN1M85/5uOvVPsFLU13
GTiRxCf/WZoLRcIh390DqSi+nhNzsLf+S3y/0sHTBfmlRL2sxGBv8VE7NoqH
Hzg8jrpDhP+GXHjKAH8EG+mLn5RyT9zE8cfoxDhfmykZDup+KXyfSfhnzT1d
f2bxABUudi9MNcpmwLc1hcWztRx0vrVtrh3eZPzfvCbNyFcNA72weAObT2zk
P5XorLA5MYEKhmNbNp89jkH2jboa5XYGwhNPvPu2O5Ck4MBm/ReWKlKwuMGp
uiaCuO8e7t0Ol+wx0C/7axzdS4Z6C80Yqzd0Aj9VxA4ZfCLi8ftQcgWJnwr1
TZwFJxRpsG4p3eu4HxnhK/PyGwvKqYSf2wnzqXpaHA0Sr6Tc/72EAua5mr0S
XTR49fxbuIkbA3Y7nP/xbR/+/VdbOcFaCujFJIuS9Yj6ZdZnc75NP1iofz46
9jhCVoOB5qPTDZKbFepkUbzo9U3quh9MgYI6zWSKHX7OJRLKGzNx/CukLW/v
gOPnjaaJnUkM5BcUfyvydkwJBbLTNKlGnWRYz/sufhaP+/P9/ZwjP6oiHQg/
6pp9ybS6xRiI00TXKTWQ4Vjq0YJlE3Q0z6a61m7XfzjS6rltx8VHZOClzvU9
0eKieqHEksELce+IeNM4l/+T9ztx3pL0Hp+katERvrHM/jd8EsfZ8+cpODe7
9lIiDfWr5WlaNxn4+Z4/j0oH1ylfzaLA17hjEjnKVHDVeCj6h4eO6gvrdJpM
mDju3uW+XznGhwrNB3TkyvHfP48PVG/ymWz9QAE7/t97PvthsG7dUqGC53Jo
X8w8/p3PB6E8V0pLaynga6hssvkiBXqXr2o4VEb8vWcNoR2P3hB8/yYHXt/D
z9c83hkS/ssoT5aAcVurqJ9ak0aPBDucP76kATlhMkUnXxLWnpsdp19no35f
6/dTh7fOUmBo69SmmoUYuPLV/TrDL4XmG3fdO3HsRA8HxL+80Vu2jQHHQ+zG
h48yQOGC95ntOC4uyha8toZJA7HSBRPqnVQw9nKdMSnGoFbZd1qYjwE0+jbu
hgOywBUwnTukR/RX5v2Nhz4r/EyUkYJTh1IkUt/LwO7HbbSVLmSo8r536ORp
BrwLiFsQacSA4J2HTxyn0eDX6dnZ8CYm3NzxY5ZaxYBGpYVfv6/FED8sfUcd
Yl8gwYxw+5ZXWmQ4PxdO8+4j8ODeMgpnDw8Dzq+7XCWG84mOIo2vKxhUcBbz
2T21WRSaxWZIe2apqN96PfT38oCHZHh/h+YcHU6GB9ed3qs706D6y0reIpwH
LHR+/OpHDxXtGxvJMbtVt43wd97LsZC3mWEgv2RTulvaOgk8fsJA36MHVHhs
UTiUwqWCjEuBRWwdCQL1bTNsxllo3mFk6EFCcTIV6YUEJ8sGwnZwUD1WMJyS
6ZhN1AfeOf5aVLuBjuoLaVmB1iHuGKzZ/WP6lRAZtNMYpxdcIfYLcRn6nv/O
yiA9Sl3W9QTDNgrafzAjsqdfWISO6u+mT7Lkx75iUBVGtQ9fz4TSL28upHnj
+a1pZ9CLSUngrtol7JEoCgcEQ0SpR0WgKVjvVnmuIMInp3ueMvym2Gjee2/t
mqYgeTLstBY5/OOjCNh/4n7ZpoTBPuu4e/4+NOjlGe29/puB6r8rIpzYNgVU
8AimpZ1Uo4CBb9PkvnIyPPO19k8xIcEft0ebpmVJaH9tvlk/H6mF0GuMi9xe
OrQAxxsfGnSXJmPw+MgO/oK1LIQ3S/a3+2wWk0TzMdVtap95/Qh8IXh04Zr8
L2w0H614o3r0L1UO6Vf6tW8GdJ+iwbHfG/QKh0nQsyD46dGDxPvRaPzjlKGH
gePkGkt3GhUGFtoveupA+BFFZfKd9BAg9PaM9xUV7TQGqrcM77PVowmxUH0v
NLu6d66ZS/ipWvOZRErJov1C394UaJ/R54C7mcrKJTM4Hj6yTzMAz8fz+tOI
XY7c9iPSCL9FBi3/rpNGzJO3tvQXLeNiyM/s/+XrIUr8nTYRhP6cb4l+yJU0
KnyeOb7mjAMFAgZ8r/zEz7lNzbupsEIKvKSdMU68T4d/rPIPp95IQWzm7pOp
frLofvZUSBYarOOg/oUMK0m67ACBTz0kjVieeHwovion+xp/fzr2SUlCjUS/
Z3P8++0juziI/3qIrJ5NU1+E8FZt9XN3uzgyKBml9By9hUH48Dvbhi4OVMj3
LbyYgYHq6umwKluCn6YNJah710nD09bjtH8CcrA3c9jiR5Ec0BkzycJXF0Nz
jzjLhkrgufytrw70VxB6cpFtx0lkPF6899Tr5hyThPHYJR4/7eQQvgt6H2qc
M8VC+adXKjL93xkaqh+l+TV5XtuugPyDPsUuPuleiscb/fBqaVsq6D9/9vQT
m9i3KfJK9FZqGRnlT+8Eq398ZlyUr0wY16karWKo36WheW65sgwT1VuP5h74
eHoFHdJ57mZU4TjM5aaI/cN/ZNjOVDuZpILzm7oGuQkfBqy1L+qV/MOEtttW
VZu/s5FeQktK2cDuN+EfOJKawRuN89Gvk+OPZe8Qfh7z/RD7PWdd3uUxQGvq
1+8qdSZ4Pwit8NJgo3j0sejHG9cPhP7b33byXngeB82f9F06utNCioX8sV9f
CZa4voQOdGN3w0M6eN70qdnpF8BA8zrOvlR60yJx1D8dMf51JD6GDDe6R6rt
8d+Jdcsu31fOBpsVdvkaujhOfPElNSWJuL/pK6QH/f8Q+sNLnnImrpe5wFpX
t9IySgZa96gktoVwkP+g6uq4hoe7qPDzSneY1CsMblAyfO3cpOH+5l+2urVU
qNZQ3pxxgQaWohofnU/h+VxILIbeRALF1le/AxkUEGg6dGbRdxJInWz72LWf
Cg/uGU1WVlIh2t9hZi2ZBswX4mdVhYl9T+PMCoWZLiaa53TVmTjsE8xG+uXH
wle7nt0g9r2wftP4ahpxPMN5rntYggG5o+ede/DnO79PoOrZoW++b8jwfcOK
JYcpJHj413LJO/x727W9+NWjQgXrs84fpfOJeRYzieKokWdsxK80901sURnE
47nUXvmSPgz2i6y45q+Pgdds9ae17xmgLvslfm4dwY/y3gnUl+5TgNMPAHuy
cDGcXTG5p7uUgvReRTMkiY4KDNUTlx9rZn47ROjTtSOtVjoHyyI/JIW+onMP
jIj5fM7elduv0VgI340eFhm+V0f0w+gRdo7qLv/tSaaUezFxnij6WFfKjYPi
cUxbQ5HVLWmUfyO71CXu5jLR++yKYiUzfhLzLlEKbxW72AR/5ew+cfMnjlfn
9T1BuyDvahjh/x9r17MvNUwC/BR/5Xm1ikKF/yEHbI0U6keZrKPRWpUIf6k1
KjxZtH3EfuucJdX7vG5QQPglppQWToHcipdHmsqpYLq1PdzOGYODB7/8Tcb5
p8Xp9znP8O9rVBCmo32E2OczQ71rzZylI78dwVVhnzkrKai/WhbQ7/DOipiP
FGYvPhO6kwZaNzw5AecxyLovsVMsmQK7XCYPNAfi98YzeME5JQ7qr9Au/glK
PMgEgwgjThn++Y1vXtmm4+dwft6cnSqgttFNCsVP0YilYS/HKHD5TvbN2kES
BD3fJfl+TAqy4jKyGjfIwfLPJ5oOLWOi58NT5ltpnUHsIx5sTOgsr8Mg79Qe
288XqcDJY14NW8hG+R42Oh7baSqL+llPJb/qv7lO9DuaNW/ZPzUgQ0j+codl
Wosgr2ixU+klKuyN/iT1B8dBmT3D1i91GUh/OxSgYKjTTkP5Q3OiQy9KhYi/
xo01OTEvCHy455Hen8fhTJSvI8uNnOoOcJG/HicrcytmQ4PyaqVokhsdBPhi
eHY/oEP7X3/JQ39xnLFfyqZNnuCfMev/ftJ0oSJ9T+bv4PCpeiqMr/XpT9pN
Acv3t/cHZ9FB4p988F49GuwPpdnsrqXBpw9ZN7JrqFAi+6iDcpIGs7nVu4Px
fOj0fVHi92ME3xgOuHb84m7i8wQaCmOO4vlz3h+NMV228Z8hMV/coHWve70r
4ffkO+HSVpQrA79y7OuOnmLBXrc3BcM4Xi4IWfFVK4EJGbfuPY3/QkH+VU6n
Fh0L78L5ft5wf/9dFpj6Nwv15UjDcJBmqksU/u/lHi6txOP7vD7JSXulvguH
eH+mb+80X6/B4Dff7R/Uj8Q8/4/8jpTCeg58VVU9fvsKBbj33nZxwshQwqfb
8nolBm0aC01qK2lw3CE3c+slOpqXzbvek71mBv98hfMfgtdyoFqtj6kXSEG/
9wosnel/wIaWau8Ltnl04G2qNrPC+f38/CeT/zy9oEIQes1rh1wNRECgb/ek
7CgD6ceGHyh7PltB+D1Kt+5+zbxB9NsuPP1UunicCgtFttfNuomAztlLF/Ye
woClNDNyKooOGzqyxkyDZRC//Cu59JHvD6IeGJ0dwfkSgEF8bzmPMB4PxlwX
VZqxGMCnHBX5C8OgesYtgybCAV+TAweejLGhOK2uQqaZCoH7v1grb8BA06yi
TSKSjfy+MCZ/jNksBn+yLfp1jrOgll+iZ70OE/xu7NI9skQYjrj7XKnHcafb
8EmD5M8YbKzdnXa8SBL5NQZ/2CDouIwC+xPOYv8+0aExVGz2WRnRX8nQSivR
jCH8MK7WtpJs7WnQl3fz35p1dDifl1DzzA0/p0cmTZTweH1XwmlkQlwOwjRH
VmbHyYLCZ60PCxbSEF6+sCl0/VM8jkc8uqxgdVgcqFOdbf1viX6Ly68Dab/E
MMR//B+cXVQ2SUf7kPXbzk46tXFQvlVQU6a99MfjpvB1VfcgMnzKkW/b+Z7I
Z5m+R3s91biI3yZ+XH/wnaA84t8bsxy3+w8RfkdRa3dF3j5K1ONa6St71t3A
71PP3mCXMgxW7NIln7ehwtRW3SRRHFfemOYbtYvEkL7jc3x3OiOc8INMWzTF
7d5HR/4WWkpZl75q0YB/cH/4tRmcxxrwqT9zk0P1mITj/OtdEwi8cyHQ8bn/
bTG4EmLbZfxUHNJvaZpFbeWi83w9eJn+jlEM3D3GW2VxPKeQlRd5YICC8KMe
1h7Og/PTZa6vfl6xxnGlTvxavxnifpZdUX1svAjnv06JUkd5meC863ZC1Dky
er6/Z26/rTnJRfrM6C2NEZdf4Xw8dNW/UnU8Dq0K1OymMJC/1c2QnLmsRsKf
tn1FbObBTvz8llqX71lHAccvt+McmcTn79yu4eHISwOV81clWkMYsNFycFUX
Lx4vUlXPLPjPH3RX/6x1Og1uvfaTmoplgkh8RoLlamIeJOHNxkBBCxq6v1Ub
DYYN1OXBnbrJyvs7ju9NJwJZ/lJgkghWW2plgBJYmzB7iwxvJ75O7uijwM1j
t1aGbCH0ZT9F6GnrQiTB8GG4hcsWEvisOLLjKFcW4Z2FJN0s8ws4nvyhp6iA
vz8W5d5ioSQuyjeqC/IyXuyXRPqKxJotv3tO47xmUdRabjQJ9Fss/Xn/8+X/
v3j2Kz6rnWc9A3r0tu1KVMHx99XaAA2cv87rhQPJYzIhrmQ0P3BU1UZDLJWL
+Jr66uBahZtEPtDneaE2p0/s431e7vjuYhUD1NSkKxyOsKGcz7HBNR5D9axU
Q1+5OREM1Sf9wz/b3zXFQPa10IaD6YS+2k9s+ynNQ5Ig/Z5d8qOLAufXXrl6
zgkD3bxz5b2NdDRvvTBxw5oT7hRI4F+pd9iUAY1qTnZld1iw6UDZcAmJBmW8
6j4Zuwk/g6n29/9SnhLzsIo8m+6W+lKQHiL1/VZX13sUYNPyDcV/YzBX07DZ
XkQC1Wfb+MqaMYyK/Dd+rIl02XCGDU8Hoz4f0WTD1pZNpRgvHfHR48NjVyM2
0SCrrWQNvxsZfvp+iItaQoUvd7Zt3/uWBhoPtjQZR5ER3vyatcw9fIh4n22L
IhJGl1Lg9o31+X8NqXg8OdhbdZGC/HpV7rxqnzSRQf6nx3dGXrunjOe9K2sk
usYpUPgzZvtWnK9aHi08uYifAs3ewpJ7Zmng41P6Pn+KBo9NHp+N/Ujoa3a+
nntz+KEUVGi4O2Vs4MDlOgE7t2f4ebD+ZXbziiT8abP8mv5LBm45Bw6oDTIg
lR0QvPV/5m2ZGR/fu5oz4dhlUkzSbhnYlivJtiwg9smVKEpQzezZ6PydS7xW
3b1TCt1fGd2EW92+JCha1fYsWpgGyuuGi19ZEvMT9NXW9w5FyiG+FUjzuVSg
iMHtLKfYuSIMIlefGZLNJfJfW9zHmcUpxP2P7HoHl3BeNZ9fHKrP0LxFGAiv
keyaDl0v4KL63cvDZYrWIRQ4vPAFT+BREnRyM03X7CH+XgxjU9WXHgaKJzGH
Cq0StkoiPb3Nmwql8jFif8d6Jb1CwysM9Hv6krr3aHvTkF+Cq1r/TJclBflT
mi6K91F3pCN+JeuSe+7YYQzx//n7krhc7WuJJgvUuSb77gqII39iE7mWOV4W
4Uc9s3Q0fmcqDZ1X252et/282Wh+Nu5VgpJmF5HP3Hj7vvvzykCzXY9fiiQT
ZPVdmN4fCb15aGDKOhcLDNTXDm3pZGMgado1sPUR/vyXnG6VwnGWGe/nKS1v
/P4bTz2ZeY3z6QPkHWtwXsjKy5EubWZB+CaFEQs+GsI7MjU906aCRH4S5183
qFDGBoPpP3ts/uK8z16NybqMof7UfZmAzYJVJHBoz9Q5dYICm4pbvxVGEH4h
889nXp8p/YYVTJ0mfl/Y4OHegbsMtH/+qVdgLyOdmJ9r/1ikEfaVDIvjA1cn
JpLBvotaN/aA8PP7nRjtnb2E0Nsv80vaZrmKjvjnbqGIEIH7VNT/Ft0s9jmv
hoPmz37auPYbHiOh/tecjcj5b8ocxMecrtMLlv9jID9IxmKm4yUzBuKfz+5m
CYYa0VG/eEogj+eDLQX6O1OebvxDAa2h+FVBeWTUT+rpEy6JGSaDzN9vr4KS
RGCFdZg89z4drt1aMK2oKQO9VoXn865TkJ9UXKXJm4FXbOQ/o31RMI63mdj/
6XY66MEQnm/n49X8857PX8HsU+M7FQh/2LM65hvkAoh4fNdSh33amwyzBSeS
78lSQYS1oeH+eTLYhptsM8DPw+P7AnFJRwi9SEjZ8biIGik46R4QuBM4sDlA
78C/69Jovtn8LLPYuZ+L/CZoIfRqThRRvxTIZwi4LSD67WEhpobX/1Lhx6v6
y539NEj9Mbo3VIDQA/7b+m6Mjj9n5aWatDkcH8ryUWjWUeIofxV/Wppu/4AE
mmfd1FZHEb9/fl7rjvu5qBIVNqzNXtAbieNp2tDCN4L2GKpX3STJndqC46ET
QamtWwtIsGwwRLlllgKi5YVXNc6RwLGmIbT5LqE/KX+UfDbmLQvV09Dz/j/9
1KlvyvtDZWmoH+P269PajwVstO+68e07Id+tVBTvByq/Mm9fkkb67aNWM47D
5wj+ccnI6/jT23RU/xqorp1+/4TQf1yL77hsrkcGy2ZjUp0cBb4Lc3QTJuXA
8eTSNw/cFODAAcWkd/54Pj9f3LFqIwc6Xk+w4+Olkf/9uxwtL/WfkiDw9uEV
rc9kEOYuU9h8hNinWDg96ng2ioi3p+2Te5U8pNF+WEotv3jecibSR7HUny5Y
8Y8Dy15upp5bIgcbdTr1c6vpkHfpRcuKMia8fNg8lr8Wg56F5oMrZyhAMVC+
K6hJgS9LNv6q3EKFgEMdr4U1iP2RtjT94sN2NJS/yhv+mb8ZlYPUp/pRDB8F
OHXqiERkPxVyt4uzc7Wp0PS6oUMV5+vz/SW1thMnjb4RfsZ5O6KXPbVlIH8k
ayX55mZ3Eoong/z18G0TE1wHL0Y+PkSDxe3tHhPBXMJPPz6ts1GCCntL2ft5
blPghFrugg9fMMhOu/37SCANjAdWSl3cRgbln0NZdBzXuFlM7lQaFUa/x7HU
ckpHWQqdh3LlT91nFtOQ3ulQFfX8pljCn/8vW/as7QQLZn1Yx/b6caD8t7xf
Os6LtuSfnmOK0eGsrL9lX70kUJPecjqSJMG0/fBbSTyvz/vtimnsGrmB8wHB
Nffs38lToECyUCyqnJh3s5wyVHs7haH7+W3F+nV3FrDQfEf/YdvCgh8CyE/C
/EjOHl9hnKcJO9Yq9/+n11vbwdChQ1Wyh3nKcipcV3C9x3Yh+MxAygkOnwYX
Ns2dVivjKMCTW9fkWThemddfOpmfGtslRQV9OkV6FY5zikMFaBs2Ev6xYOLm
eRDnA/Px0DCyY/eHlRLo77tzA71f38Tx+X6P4J9OeHy3DGrVD6ED9aG67OIs
Nnh4Xb+dfkoK9Wvu9LRJpzXQQPVFhpkUjiuMN/z4nfZBEvjuHKpRsiPBbIPR
pD/Om+ffx1+nFoFJnG8/fiKDOT1nArn3LEX8vRTS230cU3L6voIMHF3spuUc
BqKH/5W3O8iCQNdZv4tDspCtIv5+4hrxPL6djBUowZ+jnvd9UcFpKpjc3XLg
1w4mmhfdqK35/sUQDXxX93GTcRx3a+6Ivfl7CrxY/zL7In4vxTT0R4tKKbA8
boh57TgVHHpLldr/2+fzf/jPRXOr3tBOEuxz6eVdE0uBvfpDJRW/KciPCO1v
+T/8Y3ns4bp+eyo4P/zikG9Ah9jZzJDSFgacsqRHNIZhMB1tn3h/FdFvuRxf
9XjVDQkUvw6r+97WnSHqxYuM392620fg0SODXhZG4hjia5XkXaKlLrKwIrJT
OGJaDlxmSEuL8fc+6WCf9mU3oU+d1x8Wk9YeZC5kIbyxXYB/4+kGMlz374qg
PSfD83sJym/FaOCt/jKEPUqBf//MJsNliHnobVrv7vY/JPBo3w6tVfVdVFQf
U3y689DTVhqqX85//rwekJd3xDe2h47qJ7tvrbigbEND+7ZcVDWnE/wIf3Hf
SfILPj4K7OCJ3a2yHr8XNmYbzhgT799Y/kzWf/vy5v1qex8/k7vZTUN6NYuR
92PleL6c169sc+V6x74m5u9VDtp+MNOQRvjldcO9cHU9ws/swK2gKq9EDvx8
CheUXrJhyTKnfFdRDPkh6fj2UKRT6Kg+rLY01XlagITwOOfPn2VTdlSI/3aA
p2UlDe5G30uy72Yg/VBf1PFnQdfw+O8oZrzNQhY9r/l5+wcGp9aI4fEhZ1rZ
c+UYGZI+1b5oMcHQebjx2PyTW5oo8j96atX29BAe3+ffR0XYwI0CCgvxwXzy
pWpHPI+b/2GnXL3AgPajfTVDPjT4Y3AxxRW/7wuLP35PeCQKHk8UXzYGScKR
pNdvW/H8+tFJ+mGLMB2uh8gWi8oT+2MfHgteUkuWg82p99bSWrmgt3h1fUIX
DfaMxWd6vWGAlJ7peUFPKti9Hn9uoEmGgVbxjUqeBP45sneLnEMAUZ/Vr/X0
6paSQnjnUuRdgfMzXNQfO9geNvRAmJjHM82/MPL5lySk3Hx8f5MAcd5fyAs7
X9XDIFj26PH+LcT+XJu8O9OGR6Thsf1FgzPf2HAn+1FNpzMZUg6OXYg8RgXh
huQfCoVEvaCx2GEqLUgM+XdrLO9i2mgT/7ubXNWdDroU8o8TC/vTtFaGA1mv
rtSOZXAg+PSpRXYfmOAk6THOg+Ns69duNgxTKfT+lXn4X/E2ScGq2CdK95fK
QOX2x7W9CjTI9/X5HF1Bh4f0+oKaQimE77rnGJ7SBQzkP/CyykrIF8c1d2Te
JV2vwMD/+/h5xnMRGPykePmKEy94iDXrPztGxJvHX5ddiRMhwa/awA0sEWHg
aJ0V+PWbCuEHHl5bepICH9T/bn3bTYZzv3lui+WzwWrpmVF2NRXifBxdK89R
QfX+2Ez3UjKMeiSVdK+nwFXV3WvEpvH3s0LNyjJfBlgXqIkGVnTkD8s9YZmR
YUXUD3b+zd+zLRXHBYsiVGu34fmiNuo2+xwxvz75atEn/zQWuq/nrh+QvTNM
+Cn2iI9ej99K+IG92OxsLLlEGqbzGSKrlblArqyfyMySQ/vHOMtaBoYbqOi8
bI05aCR4AUP4UKLl/XDhQg7iyw3HlT3tFRkovy0ZUbM7bscAIUo8jX6JASuH
vHZ03qegeRD/S23WW5poiB84rn8i7ahA4Lu5Q3Gl2/Dvv7Fqd9E+Zw40RfXd
mXqIEXr19D1GUb+okMW1KvcvoYD7rD7loqEkur99SX7pgpgM2DuOB8cl4OdL
w+Nc320cn0l871qYjkGOdsD4OnUO+vxjS0Wav+nLonrt/H2Yv0+13+6TRq5i
4AkjRYPbGbDT01O1eorYx5j8NW2mxJkKI+uezzXKS8LW0h+XqiMJfZpWAvvk
EB8xH/PRWyv9DovYn263Tm3MIJsOnyYouyv+0ECOEi1dhOfP+X14899nHi+L
Ovsf37hDEgb3r9Y0xPG2fGjH3utGEjD39ZbuRgWCD8zrIRPFQ8/dlSPif3kv
OQMLw89nRIKHsbsk1O8/qCbtJYn8eO1C2ms+kTAcX/gp/jcHLPv2wNkNBmSw
unvl06kmSXDnT665ZoqhfUqKl2pcQzeIQ6JL9tI97VQQpY17hi9go31gpjMp
Ez+nuAiv5Bho7fpwi9CDN/SLFUQ3Ev6pvVOey0fVZdB5FoQ1vFULGCgfmhsn
bFPTJH7PuHL0TjMVSdgU0XZoAsfxCn4JRrqFJFSvSxg2PdGzTwr5fVy2iLs8
V07oift7Vp7/1cmEZ7+EzQstWDDFjVEBRybq7yUdH/mbxSb8BvN6hVQA//2S
NfQcHT4aDFxaIdqBn4Pi5xnyh3qo0J4uXXkFv7/z9ZmcqF6tGnMGiGyhuikU
UWG9L7eMTKJD6WBvRVUyExhvXf2a3Mio/rPZ6+82Cw0CfzJWhcjJUMhg6CHj
b2BJBdfLD/2kycR+uIotk9ddGcR5jnr2zjn7NDE/yYw9Ld3qgyE9TcTYtx0j
ON+fnzccWXvXxWI94Rfv+2RY94Q6A+mxRH58snyZzkH4nxxnu06ym/D3fpyn
flmfSYVdJkGjV5bi5/H+y6NLGCx0/uQqrmzqr8ZQfs/4bL3DypCoV2ykHN2d
P8pG328XbUrcOBxD9dyc7PpqQ1Pi/rgpBa1Y+UwGiq9sGctKlYcKuTz/ewMU
uBc0std7IwW07B3+haZTYNsdPoXCrxToalZ9cV+EmN9bY/NvAZ1GR/6jzlc8
xirG8XP1hzc3Zw0GBtZ6AuI2xOdNBxmvkwykws2f4cPvrfA8L5Jif0KLwHPJ
4VWHV3/D/476SPSXdTSokDcBHhyvf+ncZmqGx+mAenbPjDAGbb+CTct8qMDi
xm3LvYah+b30+vrku2FEvH1/6Jreuf/2gf+fX+vn6G3DAR/x55+WuEO1Qxqa
t8s9qwgk+iNvP7nxX334P/tHeqIkhHC8sf+B9okOHSrEPHyhsJxBgVKZdSz9
x2QwWi7xktXIhtzNGhYCpkzY3Me5FlhN4Dd+uTfpDGM2TATGml76xoDNV95b
uhyXhuC4EpapPxEf5/fjcMu0L33oZYDlWpNhxSkSYEqje75M0lH9w4g0swn7
Scxf6pgXv+pIlkLz73eV9+6pd8OQv0WQW/653ef/21PHKvcSw4A/GLP82onz
x+ax+504Lwp65z+RGEYBFxv5Sxn3qSBtrhIVg+en+X2boWNOD5sKmLCzpu01
nxIT5Ofeuyx7Jg0Oip7itt+l4GspX2x7BIfQI48fDb2B55vxQtWbmVEYsDK7
CyefEvHl8MnvEk0viHnQLa0y5WqXqah+VRX0ea16ojTisycHJWq6P8lBjcZn
3a56eUg9giXXpxL7i3lUBl+c+cFA/GK+PzerUTK4bRiDvq+HbhZ9owKfq9S2
Y/ws8IgrWRy9nAxbFAyxzEMUaOlVGCv5zoVzOQLV+3FemTswmF7nTUP+Touu
dIea6nHRfXpd+DpgZh0x/yhfvcN9zoeYN3baoZm+TI+Ovm9+rIiXEn7ePlDW
Bic7ywH/sKJA73vieQzeD0ornSYBv+x2oQU7yZBvtKHvezcL+TcUvDJY0LmC
Du3SPxqT8Hu48W9LZVwGC8UnPsNGZa0Awr/uR+GYwAb83szPpzmeF8jX30Ts
i1wWYci3yIyO9CG1X/c9MXYno3ieSGWn0e7S4KPQWGL0ajJ0x63ftx6Pf/Px
2080quTWRaJfdb2ktZvFZKDnkxB+PWG8iPBPLInfumb7ORaMOKQxhzU5kL7S
0bTtEAPhYcp9eZlaUSacuM5bHYbHSX3Fn59ONDIh+dHQEeUnHJhcdXiTaiIV
qjCLStWfZJgWynlTkUVDeivP0uvSG8xYcDQogSTgxIJ7oRWZ4eLE800dixUV
7yD++12LBSu9lxH6M8tjRW6PPaVh4AQjM+uiLFBfvyGdWErUs/eE7Cy6N0v0
jxRmnNV88bw7/75pBnsNqXVMNB+zKDs62m43hvD6Qq5QQ9NXOtqvOf41J+Qa
g4HmSeS7urVPHiOD6ud+3qu5GFDv9HX0XCOer+x9n5aLHXRIfZJPSSNJwb7J
Sl8zDymkn8oUWLagrJ4C+XZU4e3HSaDc8HrvdyBD8ImN7ROWdBjjSd71apCB
8C8tkJl3KYuO7lve5jPbBduocEz50g7XNhrk5KxutJwj+hHG2ZEb1McJPHr+
lZZAZrcs8uPLl23h3XeYBYfN8hWXheH5Oeaei3skMb+yZ/mxuq34eZrP1w/9
OQcZAVQ45C+SEneeAsHBpK7imxRYXq0t31pDhwOFc0GjimSkB7dyNorZh/OY
eXzOcr2eXHuJ8G85veCfmX6WJEiavJW9IiMGM+6XqUnbJdH5u52l0cLznDj/
hkuc/MVx/Fn8vfDwxwA6VBbpS/mSqUiPdTdg4MGNlVRoWiaqe76KArktETcK
DxL405JP03/3QQZcVFxVFJJB1Bfm9Ryg4+J4q4iFnm/ogF9sAZsKzpO3GyKW
0SCOrDdoTJaFTUbndiXLy4JD/5Tb6kAm4isdcUfNNpGocLbr59/GPib8GQqy
7Qok8NKz7cvF6jYQftbuOgNLtt6kQVnGjnp1CxIwEjStOQcYABbmXsGvaZBI
99v4dJQEo9r2iZpqGAh/COhXbJWEnScGjAd8SbDj6wb+3mZi3v+79lY+f5yH
zO/DmfR/LmKmROip1w/bevexpJCfxfzvn8+//LFN+8MCCb9WztOlzAO6bLhU
bx62abEUGGosWrc8DoPO0fNK912oMKfD/3ZMiI3Op+M/3suOOA6/kFHQvxDH
BR4kwZdsPB7O10cSvBb8S31Kg59CiuM20hzwDs2Kt7kujfbR3VGq9Yuo5MDq
xTkxOv/oYOg0t5of/5zwR32Rr55IwtDND/tN8PdfmjwoarQIjysrsp7d3yIP
bZ5HYwuVFWGRqqsfN4MKHjR6kvFRCkSdLcg4EiwFvT0/U96VcYF26ZnMIIWO
no+lbXIYaTtxXxs27s7eW07Em6fOdk03+GUhBQRv71rLBfoPR5W/OxgQIx+Z
qbUcg8imwKciJlSwNA1LXkHDwKMnflYHkwaeER6nDfs5sJU7LDDMJvSVmnfP
Ly28TgVHoyfWpccpsJCe7/x7IQ3ti937Of7VYzFinvF4qecrbQEqkG7IPv3y
n3+/7pC92AixH60vu31z1BcM8e9qr6jlxpIYmmdKvPZpYOkyIh6a9Jdwd6rJ
gjtvRuRmY5xvMq/LH2hmoP01Zqs39nVSKAAXdndL+ZAg28LtWbwiHe2Dp5ZF
RmVLE/WMcV21G3kiLFhoHJOygE8akpiLlty5RPhLlZ26k/5bD0PzJAYjmcef
9lKBVj2b2PKWDkJ2XxRrt1AhYbPT/gTAwOhumpOgDP6+J7pbhyWI/VPzeKzF
YNijI46YT1SRidrWas2B4pKU8hdKHCjyOxD76Rkx39NQLS/rdI8Nn7eyjRiV
TGjxuuieLovn6Qm1EgkLPjjbNHWrfSEGSifDHR2ThOHj9/bLOj1EPjYVj7Nq
E2MhfYnw2rqXA4sxtI+Ld/f3rd7DJAjckcA3fBmD2baUOroUzleabfXa8O91
Q6jlkvMYfo8Wf33tRWLC5yc/wz2/09G+sfnf1+SxUpXmLIM/39O/ox4S7+uu
+hXWV/z5CT5xGko9LwlvdJdMxCwg+lXn6a6D4T+4MC7+oiT1GhePAy+b7Ncw
EB5Y0BvyU82CmB9Ul1nzMYOXguIlH7/Ck86rImj+xG+lR/JVHH/O+yM0jHwR
ajCRRv7fK248045QwvOcD9nyX8EiOOlYIjrJYiI95/56+YVn3SgwaCDq41uN
4yuJfx1BNmQ4+8jiu2UpBXS/mUf37ceAs/X9syX4c4zJWFYV6yOJ/BOUf9NO
TuJ8dx4fGXarVo4qEvdz4kjxz5DfNFjXEnP60z4MXlQXZqr1E/H9/OpYxVF5
Yh7SJy4/RzeB8LcSGBA5EiiOIb3iWaXl1CMhhL9Tp5mRlwybmJdJWqR1eQuF
hPa98o/0rK7E422d72yHXjQNaMXNijojJFRPDcDSn6rslUbnUeOKHf9GfhIo
HbhwFQukwPp7YnYn0wh+orzMYrHkKBXIxvbNm9MwOJK+ahFfIAvhDTv1pemm
+YQ+I4Rl6iRJJfRyqQNxgyddpZAe855b+Q4FnI9KC3n+dYqkwQ/mAn5B/N8v
nMw/LbuXCen8n47WVUgh/+/BiRHRNa3/vd+bz6NvScP1qxrHC71IcCV3YKN7
gxiELT2SLgcUdN/33aPN9k2wEZ+12HwKAr2pkFhh/7h2IwO+/m1tDctmw2Lz
b/kqJRyQ3/PvSSQ/B+UToW9fDo1ZMNE8NN+SOjNvWRnUr2bw6wfaXcRQv2TB
o/PCw0/xexvQEa0hR4ePp9Tv6OB43/jlsd+v22Vgp8fRLKkdMqg+tfiH9M/d
Y/j7c5FPHNhOhimdo9kHl3HQfYxKuyxw5LE04ov3rDXPXnxD1FuUKzLXtgdQ
CP+d5cetN41g0Lxn/4lkDSrsEBIfW/9BAemT5+9vjgufQdgZKjwrfqMpP8lF
fiutqxdElE8R83HsWYG3phcF4f564ycTvJIwHi1/OWg50d+jDco8+ZzOQHr+
fRs+tqu64XzNnPVoNIABpiKU1m9c4ryPVCvLOwaTQUWY1+o+jhsFPbDnD3Gc
MJ+PLXMSU4/N0NF9p50U3Wh7XAb1e5R1njiI4njX7lpOcfUTMtxVOVnpLscC
pYNZoZ+k2GBgcpbxvQmD6H3Vyok4D/lQvLyqGedNy0KuhyaZ4fGOcr9xGufn
He3arhr4+xIN2Xuul8KCG8urxy44SMHf3J7um/xUeOS3MS9QgQqqhzprbC1J
ELzmEa9HPw0Upq0in12VRX58iyX4jw2EEftBx+YU1tTcI/SGt5Yn+4oniSN8
KJuHKXdvpCD8M2sniN3eR9RLydvnKg7iOLCnsrwxQUUSul1iy+Kj/mc/m1z+
ApMwDCKKtj/otMFxRWyMAReP59V3pDY7GJGhV9dp56YrVNDSFDJ8p8uAvoez
O43ZGPDtWFoSWMKAGRUF99QEBmyp9NM6i583ga+tc2vus4H7YCqqDM+Htwsq
oige0mi/4v6G5J1XXhH7YeqC5U/eYRPft0rUuuvuNAfpEydf15+syeSieoA7
+ZGtDM6njjJ0298IY7Axk7l80JuD/n2p6Qv9gIM04B5teLiiE4NnR8fydglK
I33YPqEk0TERDtqnQ1s1fqPlHY6DVNYYfM9iQLg4LSHlAw3MhBn+2gN0KNe5
2URbwkb3S4QeQpX1IfoBFVKHnqbvpKL6rJ9GdeX+R1S0f36gN7hfaz2BzyV/
051klYj+Vpynslb8NwyKfgh4Ja/EwGRK2alrkgJWb07K/V1JgzZJpbfqEkT8
r3x1buanOgbnXyooD5ynQf35xuJHQ2RovLTxWGMsBizzQ1O2bUwo/VtuP6VG
BzXGcj4Dfw7ii1SFN+9+4nF1Xs9bH+yh/Ywli+pnns36ExuLOEjvt9eNsx5U
mLCk/+PBdR0MMFHikoNXEXpXl8PU+JMqiih/HLlc1B76P/4+jRSPH0YxDFTv
v2YrpHZ4Gxeszly6ULKSDRlfq6toXvh78HnldEWaBjZLklNPOEgjP6zF7Ek5
4WnCD9/45BzNMprwT2GtKo41vCeF/HMMm6udej/T0fteBY05WzJkYIh6toxv
Wga0m4pa5frFoPmozApNf35Q1Kw69/Aksd9t6Kx6i/ApFtKjWesKLW08RkH+
vR9jP7D+lXLR/E3PG6+qpxto6P+/WbnirtJ+Nvr8/XOVL7ZsIuI/M+frnCWO
t+bzB1+Py1IDPyqKdzFzwscTdTF46+pkewK/J923DXyu4jxqvj7xrYGTt+2g
NOJP8qHc8v5Ooh/2JuScaoIfhurdQWdeDO5wJJ6H6LvmqJ+pMqh/rTYtt3tr
KQbSajvUPkvQwePTqx7uM2mkT7nvkNazX04O6QfGF4m/XOBNzHf0HZSTko7E
0HzpWWMfo6fWxD7KjrhdKQfxvF686rliVR4NThrknk3MZaJ4l5epJJRVQeA9
JT5/haOuxH6rLg+eP2eWy6F9IK02LrGyF+gw6DHR+6uADm9T+lKOvsTQ/oep
XzmnpvB8n77qd44xzpuV95sUsTUpkFVS1SeTTgJtvsRrX424KN9smLZZfaqD
qI+onfl4+2AEHewvdVk5TNCgz7I0yK4Cj9tpD26r6GPwurtt8PNONkjHpQoF
nZaFBpZqbLMqwZeqyqobVmpKoXw+6s90Hd9LgrDCX96bramQml+/5O8kGe1P
Y4xVhokJ0dF+sYdn+R8V1eFxQPP2ntNuDNAqk2oYqmcivaR9sLFCgjoL1Qv3
FDoHGXKYcOqzs8paNhtObiKHP1NjQfGZgIw5dS6c6Zq0ahBkQc/cNzFBKgOC
6M+3js1yYHNQyei6ei4YqGSOZtWJgKS2bvGuTdNGKwVe2+j64HGwX3H0AJ7v
Q5wqBlODCb9HR5XyrQfsiP6ziLxWRLQLA2jdQVmUFjZ8oa88LGRJQf4kZtQE
MbVuYn5zjdmFp1Vf5JG+57YXdm/JHwY6n0w+8a3tSfh5HBQwlH4nCjJfe06c
Y1EQfm4svSzksVAe7T89tEBtZDJAFvknhtr/MjZYKguMG4Y3qQxpyKaeeHGx
hQkWqzKXh75mgqr5D9tzERjMLehwmsX/U904MeTbK+L86Z7xC2LzE/PWoV+u
KoXh9z/K4mqlHR6fexZPDmBbMOTvIrWxI2cb/j72C1s9y2WwYXlYTeZADAvV
e5StK78adbIhXuxE6nNRKXjSKbavSQqDiucltB9DdJD5+KB4rQGBh92kE/ku
DRD7Z9O6qhMLcpho/+2y+kuBHrxUOPY0gjm0hwTO316d7Bsg9q8KMMIi7HOJ
+WWbwR+Ul9Vk4L+VwjtYj8Er997NGf/wfH4Zc8b+UeCSnnHwFxUOhLqGsgYO
soG/6+/I4mDCL6v5QpjTPhUJ4JMZoL0M5AWcjTy6cRWDu/FaQkaLqZBz4da1
yjuE3zE35zvjL85rVxg3nnm5iQkH58av3DVhof1F0v3Nj8UWy8GTuZRT0zZy
EN+uExPdIIn0APFKE0Y7ThD5dWHERMZokDh4v8vgaf4oDKZOoWLRc1RwXKUG
ok8xuP9N4XrHW/zexgdeajGlw8NZbzXqawzubAi86lRLAgPvpAt8h6URXm1+
WsGXoUHs9/K6d1jyQxIXzcd27ihQyWUR/n725se1P5jR4Go3fZvqcxKMqtw5
LqfFRPuK1/7ljN9QxsAjMGBO6hwGvcXs0PoDFKCsdvHbYE8BLr/sv/RP0mif
U8Zho5Ffk7Igyc9UYT9SAFM1tXM6F8jQtdbHfAn++9t2egZPn5aBn3S52W9b
F8O44uWrbx0IvBu7fder3CL8+20PMXv3DIMb3P4DV7dxUH31hWZv0A5bGejP
GbTYhr//GZ6yRaeWy4PI7duHZL/KwCnFc3c+TNNh6tb5hUYNJKhf/a9MbhuG
/Gt/lVGPxHySQnqaqqXeAWabMFSfkxN2zHpgS4UnAmZKpyOp0OK2wC+URgET
1Qn9bgcJeLCbco4WjoFUnNGpCGkKaP1y6i/6Q4NnnmLXX2uzoL7s1PftOH+a
15+P/j3SfQCPhxo/I8lUnIdcnDZcswrnE/BeqOsMfm7+Wh1bunSTLNI7skbf
RorEUaBCjKwhNEWBdBPvpnL8Phm+eb5lcw0LuFnccQVrKRRPcY7dbHeV6D8W
z2wLnXrAgWP2zxuU3aTgz6NYzqqHLLQ/k9q4Q6flIgf5U7yn8h9se0ZH8+xt
WfGeq4S5iJ/3RY++trSgQNI9vspFLRRI6TYXCLSgEv6euqds9Y6zYFHX5/H8
FwzY1O/lNnxOGvlHqAyUiPaUSoJgfkGzyAFR2L6Zr97xIxPV1+nLh8QO2rDB
t781Y50aF2JClVUWHKLA0N6pyiR5CgzOGPO04zxnjU1ItyZHDup43yQn53DR
PCk1VpbhV8xF9Uc+vcymVXi83vrLy4VaQYOa+KdsUw8ZtC/5y2H3TsN6EuK7
h/dFrOAxEoTwmL37DbzEYSbZmDd6P+Gv9LstirTFHedTjirp44EKUH2Q+va7
Jgn137baLt5wv+f/7/c438/fYPbo648JCpgHjnRU5orBsEnn1YPuhF//WGNx
lJwE4f8nXs9weLGRjfZZu+/5unZnIBX5ES4LDR1d6s1E/HNnd1T+xlAplF9e
vUjLKv9OgrzKgdaZYWGQ4fnu1X2N8D+QWZvLd8uKBR3rutcFR1PA0vlDl+8Z
UfCnVJwNiFkEoEtfuruaiuorNs4WH51fcsBJzzKIcZEJYSpYy2MlDPUf9mrM
eu+akkF4I3rzqSuYkjia11PQkhCQ0ib8vZ83PxfdVkZD//+hWyVimQsWI3zu
TXrkPu1L5KusCU29aFEq6vfxOmhrLD9FQ/XWmI5VT1RuE/n6+nGHZ79iMFiw
Z4mjwziOZwqtxZnyVCB99AmDLGGIXtkXIzRNA3qJ8B5SORXudNk/edBOhQVC
3mUakXSouXb/ZucgsW/rm7zUksOChB5cX0m7JXNKEuHP2bTRXwmHOKj/+9vt
UJplAQO+6892eL5hwS53vS9DG0mwS9r9jLOmJMipR8cs68CAsj2hM+cdC36S
NRTjq2TQeVaoMa/R78Lv28rHZ7Su4LjLtJhsIkLgi9tOwf6NzkzkDxXb8zIm
6A8bzROlB51ZfWSKjual4lUq/yrJ0CGU5d+gHkUBvez4wG2+hN6iYN/iTSut
mWgeQPnl5hFFbSJfZ7y+H/xZDMdJGsXF9veokJveMP5HiAYO+13vNc8wQOiO
8OqGa1Kwhu9SYo28HJw3MlDJ52OgefVgzu5/n34ReuBLRhsMY78Sf19U7vIS
2loW4mOcqosv+O7hvNOMVO3pIAk3ut67GF6hIX9YsYKkhidO8jAhGHtGTkQa
PPx6wuyukZCebt09+9BrMfj3LKpz582SAJPjv5tSGXi+dCjp4aGKQbLka6nC
OCaMeLFyJdq4kOru9ybkLLHvUO5UyJhqKxmY0100pxwM7oW++plyhuhnZYUf
OXw4idh/wu/zZaGAvwJ8GCxWsKQsBnOF8vdrDkgjP6EtVy7+Y7ZKIz9GDT+l
X98XcKGArr+71kwO1h1/SDLHz8k8vhkQ7EjKjyPDxYur042yxFA8adWxmLmw
mwEJt0f77+C4bq953eLvv0kQGLo76JgR4Y+QHkGSTb3MgMYJy83+mWTYHaAa
aHSRwO/V/5b7KK1kQN2N48vELaThbczfeK/TXNQvWuvvovHtCZEfitdYXJUp
pMLoyo6E19M4Lot/Z+qO85z5+mLev4Ynbe1kOOtF/Su5SRK+mBh/CvnHRfMK
CztPbA7J5aD6hkAtY1gqhYPwW+vGfZVbdQg/YZ+I5PQ7mYR+QMjs0WYhOQb0
GV7I7N8mB38eZI9F5cggvukxx/SNkSD8Jwr3fadwNjKQHv2iSPKhB+swpN95
MeCc2i6CgY1awy7rJPxcP3nbGXuHiDef3q3Oib6GgX+6/eEkVSqU/tDN0HTg
oPk413qnkW9GCmj++saniwUyQ2SoGt24ZLsfHW4k/qHKPCf8jnwv7NM+oUgB
3jR9ySAbcfi0f0nno9McVC8QPWWPRd7igMzfIYf1nhw4UtJ5IRT/XvPzL/q7
du9K53LQ37uQFdEybUxD96s162rrYS062jepvMLMr5hXBvkLfag8ru1vTcSX
4Zqrm7LeUMDrxAu/ZSQq+O+4NaF5lIbu5566Id5JYSKfsRRFL+eaYVBI72Ad
t6BBR7LavnQnGrimv+gX30EBH7PERfvGaBDt38A1xHHQmtORJz/+f2S9eTSW
3/c+bibzM0+ex0yDDFEo1U7JEMpUokyJSkk0yVAUMmRW5lQiEiWKMpMkSZKi
KBJCmUqk9Ltfa32c+71+378sy3Cf59zn7H1de7j2HinUP6Ky26d5Syo+/9bt
1wNn03a8Xn1Zx6kzNctxe3A/e1WVzTEcHyccF7MSHaXj/VNFR5u6/qd/uzfl
+tqwNDrST128L4v9h54PLsw1P6HCpcNxFN1A7D34vzz18xMV9RPJRmR/lz/B
ghjviBemy6Tht8pvIUGMv3v5E5f4vcJ4/sV9CdwTuL89aRnaENSO54/UWc+y
GpSkUH0/PXW/W0c/Hl9Ipalx+ROpYL43s3ZJB2afB2oH809y0PwdrgPGR1qr
qdD2RuKGGIUGNs9XMXI/UEBp1r32jjcFDqR2bXjgiPl/a8HNU8J0uHCLqzFk
kgS3+CrSTDZRQKEyP3paE39fcWs89a6yqHC1Y9kzjw4apFaEZH0oxOu3aBuX
81msZcGJZPaWaTKud7XYP6nzOSVmeB0bbChutN+lMvA27NYczzY51O/9hzvN
51MQvv9ccoYRclIslF8Ocv7I7eIqDK6tTv46t/nBwvySMf9ZElyXcnriOkCB
LWWFlr/tmWj+9NZ2wW9Na3D7cCKjopTLmgqDjPkxqi8dLl56t1fsJL5+mR5O
AbuTiviGcmDo62+v6Wj+wsUOpeEvF8mQUHJlSEWWBCuyxR3tdDioHm7x8546
v0fvQ7ks+HZ5Oex8wUb3RdetXenuWynEvyXebuNPpZLR/KIzFsoZzzF++vCw
QZT8PhLccOc5K/aeCTy8r/hsZSlQF9TYa0vG30fvl9Z1wSZspCdgGx3yb+d6
PP9l/a9eRHKQDCkaK7ImT5PhxULGlrvuLITHS44bny6IFIerfJbyJ1QFIGr8
ylljNQqaz7pjQu3jmz4qfJ8R8trvy4CiFQExsxh/XcRLRJXVq4uAAywHEyWO
kzy4WxudDTxJR/UMMXdfFvw3vzZxjm/U/y4Z/HNLjqRi92Gxnt5ul/jWkpN4
PaGjX9qhh69lkT22OHf3y/QsEcw2RoqpOFBATv9l4H/1fUmqFsMOZ4lA9eAx
LMNwvumR6fIKDD9ECd6rLfkjA1liYqQP3LIQXZmWnGstifypv8WPovsY/0tI
diqwsyXD5r6ydTFcZFAncGLiNPF638V+6viruu0v7Mnw7dcn/ezfRIilllwo
VyAge1FlHm+4RJyC+kXKHgq3t/MwkL+9YGI33nCFhuq59BW2HKproiD+JpEQ
u0FgnAwL1nqZ/+kUemZfPh/2gww/fj6cE3pMgX1K7w1vnhND+XxXx9rLMoOK
EKH2zqzOShnubCDFLQ3D/NqVzu02svyQM+R5eZUzrj+3uYvmbovxph+KPILK
xXT4U6H5NecnGdwrdi7hukKFyLaG00bbqVDRcPTulSXYORqwrRPoUoZ0v/nL
dk+XQsCa5eyV7TTkL/cs+XVvjwwVzVP72Z159TqGPxf1RqzMzoaJYLzIsX1i
VSl2rn+/PKrqT6Qg/dMBNlFK1Z+Efn/4bNrPFOzrIl+ayj3hM3wfn88xzy11
3yOHBA7heXHb/xFBWPxAlNE6FqRFC/nc/0IBvqKQuC5dXL/bwjl17IQLEfGL
J3FcZcPJGD7rXx9FbWBA4oOBnSIxRPDiWt38aBsFjPXFv7W1YnxuxFDC05wG
/Q3JO+X3EcHx8+3rZbo0+Pw85sx4uBAQ+1LvR70VgRWSS9m+yXh+yn31F7fz
VuJo/Sa97U1vu8mwVuO9eng4DQyXbn30UBv3R2M79DK5REnQ4PrthOwyMiTf
ufR5qS52jh02inkOkCHww8Kz4h80pGc34FZRfeMnrje36cm+j8qhFFS/MPbg
j9M5Pgbaj2syyUHq6vj83/jexIQrHyXhd/CJ3U5riLBvj4zAL10y+rnmOgdX
+79SSA/d65VXrJQhEcU3dt5t9JR1xvm6KLfYxse9FNAk+6mJlkhAU+WSkfo7
eH3qJnZRi70tfr9/SdbdO5PEQHzhk39/q9UcPu8kQf/8Pkk5PN7fK9jQVjZH
QHr/hWHHhfU8pcCYI0LavBr3v7vo1ZdW3idA8r/ZDZ81WAhfq0tIz+q34Pak
nnC7dJyfDZfNn564eosFEaUbn8kYyELT+dH37EkZGAtd0xr6WRrxPebm9Csn
dtFge/Kz7eZsOlybaBOf4mGDtlvQlTHsXB9p271D8CUL+DUSEiW0aWC7yTj2
cikez+S7d+5aXAeOL/7svbP6VQWOPypsjul9SaIg/BBV0Fp+wkcGtu0xbh75
y4EpV5UfS4/j58VwgJ3UFYfre2xV7tnl5oTXNw84UGMvYvxj8T51PWRVDLFw
/1lodNRJwU4SIta3bA40FALPV6fEDbcoQ2SE4tuH7KUg3b2jpbaZ8f/oHyzy
Pasj8X5h5TRYuqczhVuACjEHbZqUMTu72L9enarjV2GFz7fpfKWV8voZGfXX
UZUOM5kmVFQ/4vPup6jNbQasqdz3a3yKCqcemVl4lOLzE7yHO9/a6OJ6p/f0
sjSqVy1B/fxitbeWlGL4bXF+3NbS+cKCoyQYlH/NnXKJBJcPGcSYVnLAS5qV
cH2lNPydPfmN4k+AfVUrh3YN4fVAi/U9D+2fjyW8xethD+5Lc7BPZ6D8zsEL
y4K9DzHg49Isk5v5bNiSuGuQmCMJJ6OjZtYoY7jL2IDbtpaE6gkFROoMZGk0
ZA+GqPVvJeKYKN+nykO8/KeCg/IHxbz813ZskUSff3F9moZpms4/6EB3/n4y
mYsOf+PPNWh+pIBrzQYxP2EcH96Njjs5pMaGu3KyDJdENtSQVa9rxrOgJPiR
kUQNBTJ55ezfbsbxzaWAX8Yzt0mQ5muawS1LhuAu7z5da2kUz6vuXlZ7T4cF
o7n6Anq5bLSexXhg1WnVk8uKSTAcKFGjZESC74SiQYoRDaxPqWQ8OIzhhOO3
U8mCVLw/rGm6/OUGJTg5a/3+j4cy9N68FvmiCdeXzlyuUGBrxYQ3aS9Nc/Mo
cNCId3ghkoPwoXfbq/BVGA8NuZpTm47hsjGJiVuzYnSkpzdkkSnmpEpGeqzK
B446vTvCApUwgVA/D0WYvpfrOIDhxsXzJ9SRJpdmIAxedj9vSTN4QFR8/fLZ
Z0QYr9wblugmAQErzJrX9suCKP/PkP368tB/0zemo5qC+Lm+levKaxguSi0c
H5c8TgbbzUZOziMcoM0Zji8ZV4bf8geq5NdLITyXnH3sbOcQnl9MpuaVl2H3
ODaP2KZ5kgt7nlLKrwtEOCh3e4nkpASsmi64qYnx4B4JtXHKwH/1RzoZRwDj
tb2jRer8mN3M2KBw6Cg+33EJSWOmXQDzr+4L/olnMN6edNdkuyoDzavnCr24
7WcrBS5XwOV/0kToGRyVSz+Iz++e3mNpw/0E1zMJKznt1y2M90NqGvjXbHxN
BLl904rnRwhw9/lnTcNIKrgT9scEtjLhvPXIpGI1G73v7/XZsndjSNDt8HWE
w8Ls1u1tdwQ76ei++VOeZmtVsiDJXSPiBfbVs29acRrDl4t6ltM9F3iygxng
Xf7DbSKaCSeL1e5cq8XxrN8/Pmu77fj3XA/ipAIbKGj+gGPgc14LLRmQNhzo
ep4kA8eXjihF7CIj/uTLvUrb8xg+H6ChfG7V9Uy8nwbqfS97GNJR/DDV5SSn
SFIO1d9syXT96hCLxwN9vk+MJVbLIf3W7x8P2J9+hdtfjU+TDarWuD8aZq0e
tsT4OpP7O9F1K/Y+Um8dKw/iwK4EPcpTJToYlXDsS+7h+P6pqLGSVzMRsvzf
plJEJUH82T6RHjMiiAcYfVyajvGPzzwLnpj/WHz+D+Ms8kF5GcRfNvk40s4Y
UNG8jz9ZiqY7h/B89cglm9w7URQY+OG6lZWIPbehsveGN96/EtrJTmq4jut3
ruCqvvwlkoD6myf0hj1vjlJQf29WHN8vrZn/6toP3Vv5jwYZxUTrcDMS+J96
1BsfR4VdJA95kRQSZGqatExjfvbHu3D1HgyfLuIB61y+068HOCheV5W8+63o
BgoQEj6sG1EnwyFts7HE/Sy4eD5EWtZVBsKM3maYpeD9Wp3cB9wt75IgtDQq
p0iZDIItlYkXo0VA4IOQfaIyAZadkFF758lGeoiGmz5H+hmSET+to2Z9mOum
ofqu3Ki/tcH2UpAU5J8nq0uBW490Aqw34fmk/d7uesv+R19+U+1011JjYUh5
MNTcaEOC6VWCh0y7ScCw8Fl48UIYFHv++I+ISyA9yieVtEh3YXwecJ6l/8r0
ejp4qcg1BqmQoZEiHlY2woLAgxKf6TZSQBYovVb1XRay1F/LKA3Lwd95LYOn
UgwoCBF9YLCGAxMNRENOIwvV96ayXjNHkknw8FdmIlNPAnTaXSt2YXx4EX9I
nj63WzODg/ZfTcuqrnQPrl/1ZnSF3EZ/KjwaOetyJQXzK7NPuS7ZcmDn89Km
JTo0eCPD9dk1hYn0RRqT3hfuPkUGs7/VB42KiFBqeGHfyqd0hB/W8H2/4/SB
AAK6PVk9RCIE7VlpWs0jBSXnzvpVbeTA8EXdoxpkcajfHXOLvokAJQ+Ksz/9
kkb+4HRw/LyzOh7f8z+xt2BZixSKf57Jdk7ZiPG0cd0g37IAOvjbfV+QFJZG
9VBbSnhHDE7ToPkV5UXNBOang2qn92Hnc9F+bHF3VHZ5j+e7Qq3DpLME6ejz
jcc56n06QIcZTt7qJUVUKF39dWWqHRXVc1wsYmjGPmKBxVys088YWch7d7v7
+qg83Pk2O3jilBIEafoykrfIoPXsKN0n/RLjtXUsuQSXI5LAM/ktSh87/4vP
2+NjE1OA2c2NplPVm/gVYPz9lIU6ZtcuB6nd3/tDBmKsvxX4KEojf0Nu9Xjq
itnVJ9FTV34/koHgWZYJt4Us6nc7dk1cRleZCG6xzzpUFSRh29WhyLsdVKDu
zI1MGSJDunG/q3mCJH6e95/IMwjG5ykRNQRNDJxYcO7ER+1TGlLwLpA+dDWE
Duczrqr90KHA2bnde02xc7qo11TVc3j46Aph1A/7+s+Ma5kaE+nR3xzq0U5/
TUf4InD7R3cPeZwf/mYdNlliRwLJmipPDVMKLL+kugNsaCjf3G4vYFmmLwmN
bl9O36CS4OK/kze9u3D8HGcjahNZj9vrkSd993gN8P4X417VPZ41dPgq/nHy
qgqGeyL+pW+RpSJ79m4+o/s9G8O7hgVdM8ex/e1732Puw0R6He+WBVtmH6SC
feesoDubAhttTo/ZXJVC8ap1uUK997B70pSp4uK8GcNJssd8N1yVQfPQYqvs
+57soMDax3a1p+LpsOHw0lkrPly/K1rQzO+FJBEoGo+LNyzDcK4mWbwymY7q
UbwUbdpuYzhxsd5HR8y86bYJ3t+b883u6iE5PJ9QX73+sOE3EiimJxBWXiCB
/f6kXs/zJIgwrg/6Ik6CocAvSw4sJaL4kJHWhdM7jBio3lFRYJPzum802C8U
0rWrQhKeXhlqERphI73sDwdmKfw7CHDzUFHDi71kEJse0740yUT3P+ViUMC4
GT5/t3U1Zfo+hmsX38dE67ZAqSX4fFDxFRtXf+WlovoV60/L7hSuIKH58f/y
S1XcKmiI/6Y1jRewp/B+kq0OKauGsPe4WM+UmH91PngOr8/IOfLm7HA4A+VD
P/rwi25OoyJ/b8ky2b2qEo/3Kr0KuW9SwIbjXzRWrpJnwUSUZr/sSwJan8Oz
wr1Vj6VBZPmdg6fKZYCHE9EzOclB83SVRNx4EmMY8Gpsvi3dURb+HT0103qI
D2TOKx/QeyQM72L0db4y8f2w6AnbNZUrh/Trbw6Tv/afoIC+qBfzmbskrD27
bn+0IQV2f+H/N59GhrbamTbb9ZJQ/C/norSeMHhWckVcEMD1xg7HfrYhfqag
9e70jb5z7De230m+0aGracAbOKaqd4sDHMlNga2XFaDkLZ+OWirerxfF4Sqr
q5dE+qSZFqLD4ktJsPLiZF4Yrzj4HKqTnKsShRyj6tyvIAk/P2y/R+2UQf1i
T7he+z8cosGHekeX82qY377jRnXjkBG++Pk6XJPzHZ9Xscg/Fuuv/7ImrBSO
0lE8ly6qUMkspUJqysJ2/yo23Kq8F3zWAcdPmqHmPwbzZJF/UL9dO6JjLo3q
HY0k612v6pFQvQC3yFpS9nqcX8SFJSfptuL6BM/v30rvDCPDuGTsu3NuRDgm
7+3zZRdej7pBW9wo5zKu5yBubdLmcIeI/GVy3syRHXvx+vM+C43Y6VVMlH9s
KZgITJ4kgtfh/Dx7HyIcNurxiF1Fh9KF6Ek1TxJo7SfEnJjF532PXhzTHykm
w4P88OLsfDK4GG3J5gAd8cmTPA49488oqJ5O88naZ0bFbAjVdZLJwXjqrE9t
sXe9LHTIjovf+SAPXqXlxPT7Ukjvz5kpSCRs4KB5Nrem6VqUIzRUf7/y6wDJ
T5IKo+9tHwwb8cMJ/uQWXy8c/9abJt1Je4/Zm4S5t81yGF/eTbM/34Lnw4aL
mJvaeORQ//IF4c8vj2M4NHzzEen4aswutZ27SVSSRv1vvUmBby9w4frzHtMX
f348gesPx724ezFMEMdTVzrm3vtkUkExozbyM5sGftHXle4HkSHtVG1A20oK
zBzvqXOLwtd74OOXt54MBmQ5p58uPonhFDuuyE55IhBrzWjrGATojy+1/unO
C1HyCrzL6/H86SLfB0X7tVG8TKRfXSPFxzjymYjwZaqaV2X7RVw/JXokLMr/
NBWOc9aat5hKwj3bN5fvp+N6+Dr31u87J4DHe4rqTIpfNuL1o4Iapw3TImgw
vWv6vpsiEQJkstmfXCXh+LW/Qs38kjC84OeyUlkCzXPx4I9MPinChE7TUr/8
G0zQKZA/GUknQYGr1pXZWSoskb3xd5SLjPpNOgNuaSSWi8IGk8kbAZ8kIWdn
eaf5AL7fZjZB963TiKDgEhe5/RwB9C52Gx8Qp6P4D8G+pFBHmwysl9QQ7zEi
6LyMDPD1IUH+b/M3nHVEsKwRYzQqkZH9Xum6/Fu7B+YPtxcpfgogQ+lyr+MQ
T0X9YAuv7rRc+oDn6+5WHczl4ZVBfDh4WTy7RogGBoTn+UIYfjbszUrvZ7DQ
+aUW5F674YfdMw+JR1FJDGDdtM72XILrjYb4D5gla5NQ/UXaZJBQ++claP6G
Vqay/o//6pP/rx4/88ovXtkYXH9hj8BFm9cXxCD15yZtC2kJ6LxQ8Lcvh4zq
Wd59nXTkTJPg7uv1jr1nSfCP/2m/FHYujnwQWWqQTQKX0xM2ut14/3R+k8nn
3lck8DRoEjg4SAXWyVZh3kq8v3Rz6m66dAqOX43syxOTMfwlPRun8thJBpb9
dFtLKcLrIZuNOuuealNQfrmV+eaDkxCupzl5MisnMoSG8EtepS/RhE4F2cqe
Z1u1qTAtWifvsZeN8iP8io5uVy9T4fd9hbPjt8mYX38X124pD95C58rsuJVg
5XvtCZMZKaiciA5tGOGAUBkru79OHC5qSiSKzGD4/hXX1pRoEsjYREws8cXu
g9ZSn61VFOjSidzAJ0eHNU9DPjlg/FKVe7BCACiwsydfy4MljfLzimp2pis0
mWA8lnpN6A32XrRVQ5ab4Hxb5+kzX7YtBegBzhqyP8gQcybPd4UjGcbSppZ9
7yLAOvEQGL9MgA1mk74aTBHQmDUvvozxB7ugQ1dIJzB8NRoQ9f0uE/iCzG/Q
KqXghLdX8cIEbi9WSG44oaiDP6/ZwXLz2zkC6p/s1W0RN+KhoXy1c+GSdV++
E1F/3Oc1328fUaPB9ZCwUO9XNOhQcBrJuERBessvXtAGgjvJMDx3tOzOQRKo
Ds3ttkjH4xUZUvsLwjCev/bXtvgH2DoGeWRszX0x/Ms1cFAujQJtpY0VH7Vk
UD9Zh2tK09Rb7P8cPmY6/IUIQiwX+euCeLzzvVuf7SsnDsJnTqFfIp7TySj/
HywwGvKIgMcT045oR8rtZCF916T8HnlTKg1MNdf5jVyjwKUVr5Vseulwbnjg
mt8nDO85DKguWUeCSsdfMVHKNMg7Wzi3VYsCD4xDBo98JUCkVM7rexjeO+6x
TjdcH/MXAafVxdL4YVbqiK/IdnEo8La2DFPG+18ErwQ+39CCx9edfpzjpg+x
kX/02pJ3Lk1HAk4sV4i+uY0Aji16ip8n8f78plsNWRcwnL2oN+Gt/0RxoycF
5e9jddv57X7j/cxZmv3DrH4OcK1Omc3YyIaroy92/q6VQv0tvN7cv2W34PGA
Rf+wWN/r3qqoG72Ug/zZpi5GTOVN7N4eEM45qUGCy0Z1VZvbSUjfUdXLVab8
DwG+XTeWDT2A4YQ1Y9fEnXG9Th6rJcLH4ikw1WJGemBMhT3Tk5YR5vMbr48e
iwh7zgXkzXrlVDt8f9Ir7V4YULHzFBFANaukwPYHXmaXV1NBv9m+f7SRCk30
lrN7c/B6qoQ2Mcf9GD6xejlRkaIiBUGCZyquUqiI/2w9e21n6jcySNVeCF/6
iwaK3R7h+nIsFD/Tia99ffw4rh92V2JpqlgIA248PiKUmioNTz7mQdwgvr6W
99XObZtocKGh9odeIx0Cy/eJ373KQngvIvO6V1Q9EQ4Vn5jLCSPBzajbJ0LU
SZBbTG+Tf4HxHkM5hro5Pk/8zJOPy8Qk6Mh/5sbWeFq4kVD/Umq+kLZ9IgFe
JFe5rfOmQ9GJ27yrsH1c/H2NKaWrR6txPbXboa0bdd7i8fe3E5dcAhqIaJ76
95ivQ1US+PyEd8+ZLfP6JGhXqfEdyyBDSqnISx0ZKSit+ndt1y45oC07erXC
gIHidRsfP/p2aIcwrJ0o6L/K4EfnZ7HfgX+1ut2fR1TIGy46k1JHBTbXP4f1
2DptyuXX/VGjQGrc6TQbWzaqJ2LuWTrt9hzDpfwjfnZqRDhzcUiceIOO8gWC
T6Ut613wesXAD9VyX63xftGxXhHv/ZhfZPx4oDxQSAdz4T6maAPu/wXXn5IZ
XS6D5n/+SZhe/7yWCKH5N0dmMZ6SfvGh1pVoFsqfxJ9xFUp2lIR5vuvBQWGi
EHS9bmc+DxXh/w/XggLZCTSUTzquzPONcI2G+Jg9lVnsO06FfS6U+fcKNFDJ
HT1z8Ro+/7TbYsErPwOfF6DgaO0t/IOF8jvM+tzQtFNEqFnCV0w4TAKx0+m+
y/gwvzu+NmxrMxH4vlrdJWPfL56fN3kFj/my/9MV2JdpZcEEH6lOpT+fxeDI
TtnMg09YcECsseyYOh1KerIniuKJQGPXr3CxZ8IKyrLxVSEs2CUUtftOERP5
19ZL5hFtSyjg5F2yLEkc8z+/fsadYeP8K/yPkEjPUjwf+sw6LPPNWzL8+Gbl
1WFAgsTkgRQFAyYeP7g1NkwIl0T52LTksC8jF6gI7zk9Djuv9Rfns3ZB/XLh
GlQoNc7ZsGUbXu9wZVmKhWahDExQ819v3UQBYkLJals7KoBLetNDYxHoL5so
X5UhBsk5nm+unaAivf6SgIy4XMxOje3Nd+q9SQRenmfebfoUZC/3bH4grlcs
ifxdb5nRxYxmcWjc/CtwswUJolbvz1jJJQUzm3xMm6rJQFQM3FhTg/vTXK1w
4e2fJOD1IzchipkwlG+ZydLC/MX3t5U/MxLJ0CzBO5eD/f4OrdgrG59Kgd79
dztqLHC9z91cF+Sa8/B8osuvdQeCnivDzHuTnVc0lCEj+MrTa94MOMR1+pHQ
FBPKpgbce/5geEWY0JAkxoZOft6S8WUU1K/QRuDee24tbh8zC7O3qGfietiS
raWiG33IqB46q/PSlkZrIkS9L4w+dQHf78X7U3Nzi25sNRPl8we0rx7OLaKi
+t3aJ5ceu6USkT+JYBl7/VfvsRiPMJ8P91oerIDigzvCRF7GNcmh+IbkXLha
0RAZxUN22tnVvQvG9eaeZ447+f9kof3r1nRbmSVDhQff6ifdyshQcfl8/E6M
Ty+eb3C7EvRJkI3i7Rwbwl+VDhwP2P55wD7fg3+//EDHK2FLEpTeNaiYtCJB
inhXRYIcnl++tVJEd2YzGfW/Us9pv80WZcHLivCVrTqycDYs8StNRR4Kl4hW
b9mpCDs4zh0eW/B6BBv+FHfrI0TEJ2KeXbqTfROPD8aqrJ3uOUCFhkZbR3sR
jL/tny21/86EIo7abZosAwLKdHw+20uj+2Zz96z7XRID3Z+tUqefO+6RgtaM
NX+b3Dmg7l72dVcFroeXultLINUUswPf/sk/CsNw/ue26WATHB+yJnyirb8w
ET95uMUzgS9GAvHzFpXAuv/mvy/uR9XHYnZ2AAnF+55YJ6rvecRG+taRLxrv
B37A7Ay3dO/kETLs2DFNLlOTQvPar718svO8Nxn1o8/wqztXaeHzq2VCuuPL
MfylMZ3wsmKUCOl3bzzJ7iVB29OQvRm5BFA19CeoqlJRvcE6rtiVhfkYXzhm
MXkLwwt2Gw0O3VdhoH4jPk0HiTYNKYRv1qYPzoZrSqJ42g+7JEtbNVwfcHe0
QPhx7DxqnDfU7bOnweG8uXg/Bl7/d9fq660UT1wf+JTL+60S5zho/gUUqHYF
0PH7vCDwrsp+MxX0Jh3N7bT/i8MeHAlvpCA97hjBXtUkbxLoWRVH/fTE7MXR
17csHhNhqGao7kgvBRaiho7dd8f71ZqEd0SoLaciPevs0hmb1d4TG7kMtAdg
/8zGYMJdF6VqPD9meV78k9cnMWiairxl5c0P0x6uaZ7fKfCheNaG9ycNsj7p
n78YLo7qd+zuvc84z8VGeJyPv+v1upeSiJ9Fme96efsdHQgVHXVpspg929ri
8LSehvoBXRy5Tjvr4/3ui/Zk0b+KqiidmtnMgcZ34fe3uuL1l4v1gcldkkHV
a/F4eMbD3/RND+lIL+yM16+A4/14fh7ppzzMdeefpwC/hLLyMk9cvzz0UVzJ
2RssNJ/mZHVlkeBOJgTkD/YLyEvBpk76IYVTFFhRJ7DF7BPGV+pEP4r5k1G9
dHHV4JfDGH9c7IdQv/qpJ38pGX7vpavuxnCmOvWgzhpnCnCf/tq/c54E58TC
nd9ckYfOYgOrc4EKMLM8nsypxvc3WiJAWw27H6eOdn6nYrxaUtv5BS83ji8D
tHLy//7C9VxWnxQObMPsxrnLH3XO7iLDu++Syv2b2bBH/bwK2YUFXpPtL3hW
UGA+QMXZQlgatCbzqinN2P6VnzAJCaEA5Vat1LtTeP0ZWa1q+BL2fxbnX2nc
tFib6U5A8ROxZSqHH1bh+vdewdWBLA+MX/V+qFkrIgKFn/v6p1pkIVd9I8/H
H3JQx/lZ1SiMz4vfVVtPE4zHP49AwkOFwUNU6CmblK0PYsJWaZGtoUtlkN7K
R4exTq0WDvTX9JVHHJWGWsdTrILvJFj17lTGV8z+SFyrzbY+ToX3joLJpYY0
sLwndcymDNd3djkcqqTZS4BDpYq7/y2hQv6bOxMJylSkL7LtM0Hc+hh+Xur8
Ol7zdFNBzl1VYss+MsQG7PjjmEmBi9+XrWyIw3D1uMOk0yc2RE25LTcLkYHY
oaQTFllsVM+coF30M0tfBsULRJXMxc4pk1E+IjWz4tDTYdy/NWU/Di16LQcv
C4OJY58UodNsCfeaP1RQaRhn6rAwPNlmZ9xfJon0yOOHRztzevD57UyTUZ+y
QFzPWY04kHzSnggmTBEueQ9JGPku8WIHmYX0jnpLP0eO3SDBt0ir5JtTRHie
+23Z/nYqDM2Lap7BeA3h2cM8Llkyisc8cJ51uPqVg/xVpcRcce4mvP++79oV
V5ID/vxEUb+1tUwMl1K7f4SMkkCl3mCmIxyPf44Vss7e24rXg6/98fS9WjQF
jsVbqYaH0mFDo9ZrkpMs4l9Vv5RSC/XweTfa/KbW06FkiJhUnaGM/DdnYqHu
0Dkaqm9unohKYgcSwP7wn5/B1P/6XkdfvMTweoqaqqZ8LRlC1xhsGLxHQPvj
cW/A4MQ5OgRFZOyT7ZcGCZb/zw18GG5oTZPldJJB8MiPFpVNeLxq8Dbd+STG
uxb97bnuALdlVDaql9XzT83o6yGgelrmyduQQsDzpUFqXN0DcgQg//tQnlKK
vc/0ytOD2nSw3lWUSc6jwyO9Rqv8jUTUD7BovxbjrUMayx7uwvbvSt2OBj8B
GRArP3jc4BAN6f03nfKUyrkog9YneVGg6m4zHeXfb17Z0PeFwAFJ6b2+K9yk
YW1e7tKHebj9bupscX7Yj+MThectNrd1cb6U7GawnJpCR/FClzUc+z4BXB9V
6ZKSfdkmMppXpE7e0KFzkYbyu24KRx8sxfjQ4n1b0nMgZG04A+H7a6tcn2yx
xeshovS6PDULaeh8WESeHRkdwPU0dmXfT+nkwfOtoSL+okkX8Hiir7ik00YZ
jA9t57J98I8EIqZSCnrWVBR/mTc5X/hdBPfvfd4Hbyp7MeBpjMVqizwiJIc2
yMl+IaF5OToHvu+/tJOB5mPeWi5Cc+8mwp/8oz1UDwJYbte++2WMBFo5K2AK
26cTngabSp2Z6Pza3uozK97EAcUDHcvCNrHg/fq/BdIk3N726bgkFDbhei1X
9aVUT5JkER9foxWWx06UQvic+5b7XKcZGUQN65o85oiwPeaGn2UYnp8wau4K
voT9/8X8558t7dR/G8hovwjOesQnmJ0ZvLd8QUMdW38oRcZOgQrD32dKxrFz
r6V2ZszhBRk8P8TtV71EAR0/olR+Im6/L3sM3NmD8dFflrxfvl0kgfm5F4qq
b0jQfwvupwQRof+Uif51ESlUn/lS+nwhOYeF5j+sqVrPT+MhwkUFEy3ZdkmY
7Pt52ZnKgF5yA5WM+c1KDnXdXgwP+s0k8G7H7OjifVjsD/nKTr94G+Pbi/hA
QCF0r904GekVvxT44th2m436teK1Sk1WfaKiei7mdYO3qz3ocFl8LjU1ELOT
zQ1T37H3EtA71FHbxoYDPdeXvcR4NuXfDu3fGC8k9ir4V+1hQMrpIOe8nRzQ
UOPa9tIRjx9qjYfIv/HhIPt29OXAVpIXE9UHKAqYhFa6cXB7sOoC91tXBgRG
qOSJn+IAh8YdUPuOg/qXdFWTpsbmRYAjc7ZEOVoMBpa/3mY/heuXBWn+iNwv
zEL1PqkvSg6oh+D5CZ3THkJmKgR4tdElmNFOAOpDkhgDs2MdXze77cA+x07b
wXfrnjOQPf9O+btVvAPvr/q25/wmqZVk4Dj80v9v7pHgbi+LITsyrBLKLF1f
SIZKnpEHsa+osF/Dr5DrB4YX4qNEm9Rx/nTgdc4/BjARv3SvKhKYustAfIBz
76XyjDkL9e8sL+6tc5EgoXrI3u8qR2bW4vNjU1dTNhr9IiP++ChpbLNCNAn1
U3v8btsyOSqOnt/dIOv1EOO9i/Gtiv2jLEI0fj9UBmXu0rtxfRUB58tfKjB8
37oheaoVu1cfxesse/fherXi4q2mV3hwfTTVsR8WsgP4PIdzNS/rnxhwUL6a
vm+TX+NrKsoP6blkD+cG0yCQfuFmLkMKw1V2ln13SejvW/ex967+RoUnb9TP
VI9R4e3nA5frMbyy2N8tZ+PTQQcM/xWOjryNocJs+EJHJx/eH9p456hoX4Yk
8n96IYZfh7YwkP6B3Rk6cZaM87sguWta7ERp9P7ldw1Jxzvj9t7mud7jPGCg
811iv/Zb+f/kiz3l1l4b7CKBZeTYv9idFIjI8doxeo6B+FvRmiBelpA4vHvm
FbBkJREmZ/bO3VcVRXyl9fKe9kRvCqwpWTZM/EuFObUxoXP+JLDjVxWMZWM4
WrlnU8s7NtLveXvt5L7158jIfsfcPKo138JCenBrVyZKky7g/UwLdqq/+LB1
LM6ziRmVcXu3Fa8PCymIMlg6QET6PSczrI7zf8H1ajU35x86Pk9E9cabap8u
7OLg/ZSV9JXviVEs9P6yk5udTL5Jo3594TJWfPZOGjr/p+0vZ3qYUtB8G734
luv6BzGcbv7aX/4GDa7usy66tJSO+OfQU7HSdjtsX1zPZxkHMUBrT/cyrts4
/vP9EPv+XT0T9Vv4PE/wlwEy7NdsbrWIpoP9OSOb5ZYyiF85715wz7kmh+oJ
Cg4IvC5lyCP/8s+vdWMkNw3Z1x1Gh4T/0/FexHerzj2/U51KgbxjvR5P+UjA
cDc5+HCOBQPua2fmMV6049f3I9LRVCCnNg301VBhn1Th964sKtLTvtFzcPZH
BhXE5FcIn79JBoscQoPnGgbCy3vkzR/xj5AgwlqLQ76M+Zczl49HhVMQ/qkc
ey1fc4qJ5tn9EQjNMcH4weL6RFcJfbqtKwWlnEeXumOZIPZnPNWgiQgFPkse
v9ekwfWYNQO1FXQUXynzblUfWkqBg95ndyRgfj1CW7DutCUeH/ea3zlsNk9H
+joCmrSfrmwKuHeJGayKxeNhi/W/b8pfC5CukdD9iH88yJl+xYDhsfYzTzAc
XrS/sboilwJHvm5btyOCCiv5DPf8jcV4m5HtH4Yotl+/jJ5fOY7PWysJEnk8
U4DHIxVGa7UMr+LzvYdzMkqn7lEhT2J/7Q0Mx0blnJBmJUmheTI15S3d0wmS
aP6YUFr8oe1tktAbbZf8GuOv17lL9Z4m4PfB7fTgr28sJvTwXkg4ro6dn1C5
4jskEXhjFHPNzUkUw9kJOSdWkFG+55aLhfGQAa6v5vfJR+2OL8ZH21i6YoZk
zL+Jr9ZTZIBJ4XrZ8Uw6mGsOzY49oqF+XhVj9XMBPjTULxNKdtq17w8ZJNc0
5EqpS8KF4/SJBAxHLerVRlX0h7KLCWCVp8EXZUkG06ZMlbXpFDhn/JmZuQzj
WZUCFQGqFMTvfOeTHC5UUZC+8WXX95DljetlKNIa9/p9ZqH5gRVxtRpXx0XQ
+1/6jc2j1sNG/UDtF7g3npkio/M4w9YX68LuQ7nog4d9nUSYCrdbd8CIBOJS
nM+PFElwcTJ8krxXDqx76x7/eaAA22Ummvqj8XnQCUGxkT9yGUD/91Vt71cW
lIq7yd3A/t+ingH/fI5U1kqMvwt1slruYfYwY5nAjUocf/HVnj9fUkNH/YIe
VkJm37YxoMnrQdwuE+y+NXcNXsmhovj1/JLHy3sG8fPNH6wrSJlnALnn0If8
BRbUlN17U/KRjvD6CfBXNg3D+WTr5O1nW2/g+aXeeB/Jr0dYEGol/SoyTAoS
K48su2zLhuMTpiUdQlRwmBe6KXiXjubtbckdvTn0Bvc/I63mKTVlRDTvat2e
ar6D5TKglDJ1I6KIDsWi+x5lNuP73f60SHW2iI38VU2us+uTfwTkr3MtospD
vrMwv+9LlG9iQ7tnS5fxbRLS97LiXqrx8ZwM0me64W/m/66fBM66WdLNKZJw
S7ug43s1Hfrmlb31D0uCZ93H8LX6+H6f7p1xixKhI/6+VsWyIESICJ83KO6a
zSSBQXtHH08bBW7715bJmdPgVUCNzjrs77WilxjH2fzPfKX/6+cYa9Af7gij
I/30sfIAI4UjdNCp23P7WjwdYvovn//FTQLO2dssrR0UICQOU2l/cX1bs8vu
AhXDbKTvctCquTmwnoTqPTrf3uKdy8Dv50PnDHXSHTw/8WLOSXrDagyfXqt2
KG7G+PnQrmwfNTKMKaa8cfAhYviF6tfIxuv/DG2MZm/eISE99ObnC61Z8RQU
37skSu96cUsakkyePYyOw/G63As1rX3/9SVrO+5ewRGDKqEHwaU7JOEU98Hy
53sJqF5tS631t5+b6YgP7j8+JkSuJcFk/d/u65KYvQqcKrTBzsOaS2ffKkeT
QdHts/vsTiastaezvwnJwirXWnu5G/j7enlb61n6dxI88Lru23SeAIftFwau
H8HsZ+6pWfMiCmwVyz/a7YjHE41v7Zb2KxSAzjsDDb+P8IDkocPsvp0YPqs1
nIpTwOzTmXucDioJihMGdVnVZJDq5gzu9COAeuTagMvSmB2/tJ7r5ia8XvF4
1PVXv4ax82nUkFX0gwDXrhr8k6/B/Odb8klfLgoMkvw76AfxevxvO/6ufzMl
CiZFtzLdkpfAsS9PwwVtSfB7Kopy35wM5celDZU/kFB8v6zn1RKZ/5m/7XJB
q98KO0+L8yxeanziWXmTCNq0vrYvGmTghT9v3oaQEZ9tFV3PHAzA+42fnx8I
d8dw42K9bSLTwIzHggo35UIiQ7G/uxWxPDlEhQJO774uHMfsQMzEFr/dPiTU
r/WNNaIhspaG5rEf0/C6fasSu381X7ti39DBz7UjPrURj0dQLv5UpthKoPv9
6c0pLvcr+H6YOKpPTPjgn8+2Zty3/CQb8enhpKfzbdh+LNabTe3adfzzOSLY
6vLOb2MLwlyWB+0mnYPuu55ns8+OejLSH1rgaMfFW1FQf8lr5cFp5j4ZpCen
yn/qx94JnC+MWP8Nf3UFX4//swLNJgy/3rWUMtoeRgbjJZ2XCi7ieiNKr0Pr
s5SJcNZUNarivz6mx6eCNqXLoPhzdBTf6I8oSYg68fitrZ4kzJkJyRpgdmEy
fexP3jUZeM5DH5hLpYNlbMR2phwbHp7/kf2Jxkb9bhPLzgoE9+LzOu9K++Z2
nlZAekEnxKoech1iwyZXzzHmaRYkpS9pLB9movoYH0Wzlv/Od/dsbkCKPxEM
5fIFSJgf4zH+dejHKgqIdsXdqNwkDZbpeQF3/kmDxWd+ka/dJKg4fXLHI8wv
KSUKMJTbqSg/TU7Yl3h2SBbVp4Yeq/nY2CILG8/cUHkVLgdXk2TO702kI3tB
/DB+8PYhDqrHRfMO/0/vy7I9w+bjazrqb5Xk50kO8MfnX3yQCb0TsJKK8P9h
HofbVRfowJ8vXvFMkAGaA7SC+mJcb8R1zajzA24plK+62LdmoayWiPRM4stu
vXEIZ6H63SePVV6tv0xC/bSL6+s61B9NTKcB41CL1X5lCuhIW97dqUMGgbXv
cv7w4noPse+nJS4xqWAi/jIq3JQEVPEttbJeZKD36vH/aadAQ7pWX9QABdb/
Em3dtQ6zl6uYy/ZrUFD/gffO7X6MHBLwepiItySSwMiSckYZw59L9SntThvp
sO7GP2O3QDmkx8Dc0C6WS8Xx+g5n754jcSTIXlWWtGVaAh6vNy90TaAjPvuk
KKDGdi8LxWeZYbbvww+SUH7slOpn1b+q0qi+43z56oAJe3HoWSDOPh8TARc+
wbSfqhx0nkv+eayPMGKD4+ilZzuwc8rbevhQgxYD5feq/CZM8u/g+uoXuycL
Gn+TkD7glsPdPXoqEnA9PShaeKskTBhMKN4wYaB4iNC2tOChX3i9X9ucYN6n
ZDmUTyJdE4wvl8X1tiqrNxoqGRBh7K7Kl/7DBHi+y0d/uALnd4Wco1G2XbKw
J8pswLNKCpZvu7M9ZJqO7Mv7XyHMrlYmdD1VH5EWZsLO7iXFHRV4/eZc0lz3
QRYVzUfqmLhgpTuMzzOTtfr7dKU5A4IXtHIfcLMhsGdtRjuvDPQUHFiZ5CMF
l2Y756/0M9H9HjgoE1z9AOczY2b7Nv+5w4vyhTV0SVmXCLy+cfDAVofOaFxP
nPa886fTrCLQ6H+uCGcpofO6uP+CqU/173ynwu8vffnL+WhwajBmk8IlDlrv
zpoMqrARZn+tRQQNDlJh4LPRK90DkqhffazSmdvqBgP5y1umrWvjK3E8qRUv
OpewBuOPjwUaPTH8V3DC/ZDPByrip4VuhuTIs2zQ8ST2gxwdah7ezBygY/u9
U7FwkxAdBMcfMT5wqJC6S0zQmIXh/7ipXZK8uP3dE7JS7LgrARqt+E3ecMhw
2rGQYRuL//y93IzS1l8seMA9HvLViwEW+hSd4Z0UhN/5PmrY5bzF/UvYmYsj
XqpUhL9r39edt+elo3l1Wm4lVbWiuL1vbh3rplXi90VyYCFM0o+D+KF5Q3ux
+CgV8X2bJWvTD2L3a5F/ZG7/JzNvLwPCSz8ttCnKALdR87nOpfg82r8XjsUd
1MDnvV/VWThsdh6ffzZb/2jf+UMkND9o4nyOuPFNOuo3Cfa+GPoL2+8VDxz3
888Q4XXWxQaBPFxvr9biVKh8PAn1G93i+Rnwn34xv9WFAXYSDbIfenTxW+D7
o1Hh486bj8fzegsp9GABDsKL228czftWQEf1Xa6Sf7UJlrJg9JSm1kqVgfiS
eGsfJj7vuneZaEkw5lduxHuSLx2igFlXxMdtvFIonrNN/jCr9SqGX0umWMcm
SXCdR3fSFfOf7wO1/5aokuBqFLOoUEASxctl5gi/ZLH9W3y+b4G77e0OMpi0
CHxS2kIFM0KH+FshFooPc57Lh2jcxPU67tAWQvmrKcif3KYfkwqWZyL9z87x
ok6mMq7/L/tV4VGQNhnhIQGzS2WP27DPz2Pc3S9Fg3tTjKu3/egwnbPzqX8I
E8YvWXw9u08K6Wme5ZhHBraywPD9Di2hFgYIEfeGfp1ioZ9vW7FkzZmv+H5P
BT8OumhOhA/hX5TlKUQYCb87K0qXQva4Z195Cv8fWfjkkeK/XVceptcrz5kJ
SMDAF8tHKzG+IyQRthBpS4Fx/6cF6i50cN9VYG0qjL9feOA29iFTEkSUxviU
RsShzfrUjofL6UC9639U5QMR0nmcA0N3E1C8Y8uap9I/+qionnBaPPBErjUZ
ZsrIxzM8iND7rMw1AeMLi/lelz/31OzNqSie5SWq84K/gwIRLeWqYi4UWKju
21Yli39ek0tqjXQNSWTvrD4wou/ZskCn0aOA7/5/9dPSDv590hAuEMwflC8L
mVlszfo8FryKOFpvv04KmnM02jR6SbDStWRBmEwCnhbd83Y/pRGe21rzoHEH
FwPxocf3xj6IcnC8+/gro+7TBAvxkcT89vDedbhe9LakmtjXjpj9zWIEFS6V
gYIV/u9u8InArGaJr088L7Bt/1XEfSKh/jGliS5N8yMUsJfkS5N+R4EfA838
p8xZSP9uk+MxcefPUvDt7okivWg2aO20ySrPxfunxvwyb8Ztl4biHZFrzuyQ
geWUxlDeQhbydx95U8uXp+N62aHKkw8OeOHz3uqE/nARptlw1CVxj9ZHDsRW
3RR+68RG/u+9+ZWTs17Y85Tjk1KW06Cqu+8fnydeH7fgcU3+4f/oiaVXrlpJ
kSLB8mmR/i/rJODlSJ7ekUgWqld28G1SIl/H19/0cfs1mRkZZC9Vgi+cE96N
96OdVqBflz2Fz2+aeSa0s0eGDAx+g0OEKAp0HPix8I4sA+Fxxntf/5UCl5bW
a+v34Hgg3yB4yOMhAZQr80NuqQjAUxFvEcZm3B80Nvn+yniM559tvxc4eeoT
obuVZeDbQoRIRXNVbT48Po/mkf+fP5T3TiZvHiZD9Eh8uNMbIiimcRPVMTu/
WJ/arN+yk61EhKY1FObzPZLgtP9NmsVdImh8HO24O0CAzZ6O+co6+Hz4HanV
p3kwfPakZTCjLpwCs9GGMy2PiaBFkGfVvyHD3+Cpw79W0dG8zjNerd268nSU
z3xeVHUwYRsFrJP8LwwBGVrowcd/F0iBrfmOU/9UOOAXmfzhShcR7NZ//2aO
8UKvrMBT3mFU1I/bYfh7qcws3o+D6mv+r75ZrvdyOb2fhOJHugbzI8c/4/Oy
PIyfOUhjOG+xvsnr0Wu5nXZUVA+x98yT7SeJZPQ+V1x6amSgwEH6SW8NTbN/
xkoife/I7136Tw/SwHPzsWP1kyyg57X9GHmG83F5hyyBfVz4/5P+VR2qtBk/
j3pi5+1mfdiovyYyeNDLJYuE+oOFdz90L9LkoH7B6+Yrg5fHMhC+P2w32sVz
lIDiDcxT5FlWJQ0CneRup7gx4cUTGeevu/F6eIsnjpXRfRJo/zZKtBvEHGci
fqK/2w7IMfh5vx0uKJ/CIwMRrB71X9ek0X4v6n0lb3vQbNuDvYffxl/O9hBh
w0+vqKjHFODesFvzPebHVc8KfxD7h5/39hN3a5hceH4mTeWqt5APPr/x96Nj
P4QSSCDabv7WRJCGnjd7K1rvG8ZThRJud/zYzkHxAdVNSl1y2SwojnVv2xNP
gZpjx2IfMmlonpa6XJ+xVTgJMuJdnI9yiUHGK0uTvx1EVN9wbW/jasVGInju
z48tDZcEav2/b5F1RPS+dgr9ESnRoqH4wI4/Ei3S2HNWR/nK3Uiiwvzu7XcK
CVKQMPv2qAdmT8mXLB8+q5bB42tDEp41R2lgdNgtUHc7N1xvWDfvjfGctkjt
CdF+OZAG/pWlW5mIDx8w0p33fM9G+Y6GjPsDt84wUH60SmaiufEAGZ5Hdn82
c6aBsiExpJxGhcsSq/Yel8f8y+qLYIrZ6eurUl2iHhGBszHDcGA3xvtmSr9F
+2N4/6zbC+0uHM/kiLuojWL+b9F//K7a8vebFw31hyzu/+J8rZI1C/X7dmG8
+Z/wTTt5MZhVOxfobiOF6p8Wf3/RfzrUPZnv/yGC5sm3y7YbbJDE8xFXfj+m
rlyG42+PVydHxdvIIHWG89V0ggJhxg+5xizZaN5yqKdj9VwTBdb18DPtxWgg
csOwYSET979Wq9dsjQqWgFUxie9lrpNAup6pctZSGkbSVw8yK9gAJwkmdn8Y
KB/GjB8PXSDSkP2wpPnRXutSkV5RlrNh+lFZCVSfeb26vHSQj47sx+xC4uVn
+iSo/c4oeVVMginnLdeflFHR/XHq67dSXY3XK878dvjHZYnf/8SHau2fXuPf
r1pFd9quzkT5HH+1OJdT2OdfnEdj6tycJmHMQfmum0Hz+t80cPt/9Eb0Z38X
GuK/CYN1ziKRBKj4BIEWAUQgkC9Ml5rietKbtj9R8jUmI32MsZPkR+cxHrmI
/3fFXeuX5sL1tORu7+FcrGajfuLuhqvuKSq4/uqR9Xm7M0eoiC9sH43T9zCR
hd9Z4xAbwoGsrdlCNedx/8b9++fS0BWyqB/X4TafsnMZBY6vWjJjYE+DjAOb
pvO3sVH89vqVM1SDRCmkl6GdFONe5UxB8YAHlqNvGr1xfPhqs26RDZ2FzqPN
7ourNwANCvhXyZ25QIUHFse6e7bSER5UchKeeKdEQHpX349bxYw14/rMxW/D
zGe6mYivqq5mvssNIKB6p3eK599ZZOH6y1vXRke9CWVDv22U8HQMBwolKAUi
xXQUb7p6SGSPQzhez0O2ypMc2kVH8bA3DPddYWFEqI7e2yB4iQAK+Y4/Fbfj
emmP8oJYW9dQwWEw+76LBwtymnS1dUpJ8Hmp2s0nn8iw7V6P5ZYmfP7SlE6u
wccUBtIP2tYZp+u+8N98Rd3sPUEywHPscXZbhDAIj5gSVLnFQKNByqE4iYn6
Z3482qH6PFse1btrWxTurV5DQvrX6U8Ml1pZU+B5+8GxTXNk4D/YtTRbmYz6
LWtKRDc0enLgtLIT/cEgA5K1dgu62VBBu3/TwYd/xYGYPE/MDMNwevbY1W17
MZzQ/vtEbRJ+Xppj/e5GYn+3iM8UTadEY6Lwn/OeWDHT94UJz55LcXO7UuDS
h88REdxM8HTYxpDG+KmjQ8SR0Fq8XirAUWCB9g6vP9/N239ygIGfn7rNHWc/
uVPAImusRluTAitcJLdU6eL1cxKfZqhZG6lwrmi7v8Q4DfY4ZXUvcyfAR5+D
+0jpRDAMtyutz8f7E+5LXog5cp2N6rWNwl6skfGlwDNpe7OhDwSYzEyCn/cl
0HlLYHsbmSnKw0GzF3lHguVhbvOliuxGXI/kJfvJO9ljDLhhWvHO/Sgd4key
7zlTWIgPtknnfx2RJsFh3w/PJm3JYBG0RnvnGAvNmwtOn95KPUNHelszFRG9
pdlsZJ8D/XI1zjJYaL/1CN9PUA6Q4M8rH2muIwQYPsevwv5NhWDegMoP68kQ
BTLz9jwkSCRe0Dr6lgojsy8FKp8RwfTe7220w2RwvCT6tMeACrEv+fn7cqgg
7m+8dLKbDBR73QCHQgp0P3Ku6Ahko/o8zyw13dxJBsr3HM3o3W/sQEL5328K
jebmRkSkR+Gibb7wqQSvV1jYd63dVAizTzeXSFWfJUMBm8c3rZmJ7Knm1rzw
uatMlE/VgcvDVAUm8Eg2TQZkYvd8x2BwiAUNcndnnxnIEAC9/mfXfiviepu7
BS0Pt3mRQK1sm6z8Cuy89ixw9LRkUX/XF8WP7nbbOCget2/17uslH0jIXv7x
3BiZuJEDK9YT+95FsaG+csUgpxPnF+tyLdekPcB47uHOqct/xWDj9lzNEW4p
1F9TpxfX78onDdIcgydiK2Rg4xvLtg3dHJQPcTNVeSonTEL1R/z1gtdP8uH4
OWvY2bHEl4TmN0mZqtaFCclBUelU6Fa6PDwKFX4XEkCBh/mbaRGJGP+LCxK8
VYLHk4Q6DW+1y9JBpJ7z+WI2BQI/SF9XOoz3Q9G3mJWcGiTCU+rTvn+KuP7f
Yvxjf0vfuvZkBrSfMutx3o7j+VNyrLV1D+iwer/IBZ1ndOTf+LVcvNZivLtz
PamMP4oKe6XzzuiZ4vHO4t81989i/n3x/XyTfq5Zbojr4f1hRPfWy5PAmBLV
wLWLCEm5pPelG9koHjnuV5KfeBmfN7Yw7WBUwpAFy7NH6pbelIZs+h6HFVul
UXzfwFdCThPjjftyvhG2GMqArmuhZhUZnw8fM59wT9MLt7+1r8SSTbD34SI9
J3W0nQza/o4/tmA4U2Db9KEjJWSwmrs+HpCG2zeViv3ePaV4vePnka5bPGsw
nHdGvTXHiQDGze3ndneQ4MieVZnvHJlwUuh466gkDaR7+4QmqP9vv9NZr+p7
Jy/h/bv6Kn8M4m/i/e53aClhmXdxf3xFarpeXg2Pz6btMecXEhVE/0+802/7
ugkqije8uq/ZPpiL20f9QydqPTPJKJ7x/9fvbjoiOiRSIw4mS3ay4q+QwNLY
V/drGRnt/xWWilfxehkYuyqwjapLgd7XprlCYmzEtyyurtnFbYvrhXBmf2wc
u6UEdifcA9NrlaDD875CnbkURAk0hr7voGO8XOeM3TgF6Tnm0d11RbH1q+sS
jdlLqKAhmETwyaSh/fkTWetncxjnG6OGxaZGGC5dzB/3Bnqdq6VQUX3kz28E
LwseKRjTsBcy3ccEN+2ylx6dZJQ/Xm8d2TLfxkZ8yHvb6JclxSx0fmnJFgEO
S/H7ZRIWqLrMFTuvm2nuG10J2HtSLR3/iOu1ZKoRPJx4aEBYqispqECB+tXH
uyebqYi/xHBWSh5rxed55MrxjstZM8B4topX7DUL5J5cSAu0YiD8XrZL+6Cy
If78FS8J+WU1uH7319p1e5PO4fnpJrMbD/nO4/fP86zTXMQ2WbRfvDyffA8O
01B/3aY7P9s4dCrKn57u1buudIaI7FH/Uc/f1w2loM2q1ytVkgEpKrWmRGMp
sLtEOGnvSAffR2t1K2lk+Py62/ongQa8W0sXqL0sxO9d3djzVYKyaN6a/PjB
FXH7iVClFeJdRiRC4T3FG+q2+Pp35KmvuxFHhLaceJnBNEmwt1jICxsgIr4n
6mqmP3gB14tipDRW5WTJQN0qFXPTAhlQ9z5dHGBCgk9ubP+nTWLQdvpW7JdP
bKSnMsXatHubKhvNA8g/UOO0blYS6fuOfvzIm/WJAqREkXFCLQMmjL7Oje7E
69Fjo70d2Zo0xP/zHznNa34lgPP1rjMrqgmgcl9jgyPm5za/HJvd2sqG3oht
u5/kkOHyq2/jBT8YcP4o4enH//KHB0aqwlQ58LVh4MVD7Nz3HwpNH7tIhCnF
yRcWg2zUH9ewnsr1JEAOwgk3mTetFUAnP0XpPGZHql7bnu+7QwbJT8ePbcX4
8CI+0LlfEHwpkwKXWV3rKsQo4OzvWeUaKonqsRquJI/6PiOgeryyqNw0q0gl
8F0evT9QUAF8HioMH0wjwwemaMDz3QTQe1CbdnIdrvejdOHG134iCYjpx0S4
mjD+uPJwlt4X7L19yE18bInhxBF5YkoaFbgvD/B0ClDA5JaJmfN1eTRvB9m/
/7tvIerPHG/z4PEHi0s/nIyaWfBXO0hh2Rtcf5dWJVCabkwHj5Gk3WKrcb2q
ru0KETFrMX+/8bbgChcyuOSY7O3D7PhUIn/s93hJMOW41/7eQ4fDKZ67D8xT
Iaa95RErWBrNp1I9xmc4VMtB9uLcNWGj5RieWNRrmrwnZySD+avFesybsu7J
lQwS5AWEmEiME8Fyq5Dun6v/0/8+83w6j5+C5geNLJ3o7cVwb7tq3aYqIRlI
2pVAdHolhPj9hXPWKxwUOOg8mnycia3AeEa0UXbinX8E0NmTZeb2XQCmavze
6+zhhnjHR2W911lguqf+eTlmXy7vv5d5Cjtfy9YLK904jvFZjV3UHism0iM/
MjRU9WCCjs9fTmeSNkqTUX3QLdXSq52Y3azRjZVqfYit0+73qIQ4Gw5prrk/
oi0L9/T3rRvTx+3PZpdV9nU3pcAg/dWjdYPS8NvqYfPWa1T4vO5ucqU+E6LX
0IZ+SxOhJpSmOYrxjpPi6rt+K+B6m5TvygrMUlmEn5P3ObkNZhHg0KEsR7mT
PJB90d6GN+r/I+vNw6lsv/dhZM6053nbpgxRKYpMi0qGSIVIJA2SIpKIVEhk
qIgkJUOJopIoERkaiKLQYEgqs0xJEu/9HMfXdX+O3/vn81Tsfd/Xtda51jrX
eZJgsWW87q1xKjTdWBkRtADLQ94b0sWtsHr/ctZNGSr+eQ6ZJ3aYJVNgzeyk
5S5JLG+Ua2YbiimAWntP41tdJbi3P/pFlwMRghsG9qrupELKX+tI6S0sxH9U
OZz119kOw8+5WxVFVpFgSZWC0fkDTPR5uTqclM9iZGj+HZHqU06E6viY+1WX
mbB1a58x7ZsodLRvG/ZLWoD7a9mJfPsqS0F8gAtPT1j9WkWDPbf1SDErmPDH
vzO9tZSN4kPFzUVZlVd4SL8y2+PsxrkEKsJ/1bojtku3kmA19Nf8ciTBzll6
ePo1/D72kr17/2H4a77fGGygE882xuLkw/a7m55SweTaq1/fTuP7A5WhQnL/
7WHM9/eoxr58+ZX4/LniqKkPgYr7J+zgTS6L0CbCCU9tvs4FRND6Lloo4S8D
1i83tSQ9I0JO0Jmqq82SOH9wmKTNLsfrv6+jYbEBWB06In/qlH8SGfKDf1vp
XpZDfLvNyjyybjIH4YXhv40/G124iM9uoVdTm06VRfyn9WMtv996s9C+4O+f
70Nua1DhOtw9IEQig7DeBqMwDdzfnu7OIO6bxPsrgvrOiTpuuP/r0jjJA8tv
UBD+3a7MPJK1H+fjo/590PkLRUQmdK/2GXY3ZKN9bH/pmqylkmTEPwmaFR6P
nZOD2NuDPBM7OZhWc5UoJ9JRv5TdoVokL8EB+fKzwrvXsqAsbNHd8AgiuPTn
Pyu8jr3n+pSz+S/JcCSsYteELQ0y751O9BZiwYvi1/v0fzNB/dIo8dVirF5h
172/c5cIhk+emmlaUWBdf/bPWiMS6HOMF8VoyqH5zfCOjcpHd9EQH6Z/bnJR
jpMUzDKun+guJsAY4b5F6yYO3H+WILVxFQ8oW2vjBKuo0KDDL86mUqHzb0Si
ykk20g9WEOoP3VPDQfWc6E/vb+kJPOSvJrd8Q6/nCRw/zXwEEiuEDiEyo1XN
WF3B/GK/+F0Z7mffWie6v/E73m+Tv1OrZNbJRf2sD9eXOx7ehOGBvnyNu+5k
0P/VInfTBsMZy6r23DzFBpW/Z5TfROP6KnJ7Pae/YPglv35tAndcBpKDkz4f
v82DldHT4YvOKcD2ZAW+f1J06B756CTUTwM9l9NZZ+24aJ9IWiSmQAmL1/P1
x2L/kfrwCyy0XzJ/Hh4o/qjPYdIgROfxyaBxCtx9/vvh56cUKBKr39wbgtej
RYG5XiaRJPiQITbyuksKvirTA6VWElF/6+nnh0DF6pOZH79+FF9mg3EJhZAq
ip+f5DRPts8KvP9BsyfIFRDYSJ9n1U1Bs54hGsI3f+0UMnJ7cH9T9VfPMjI5
eL40dZ3oV/1Ggyou56xZGxvYl9sUhw/h+MD3cnGM7v+cf1MH79EmUTJIJb5M
/4nFwbaQIbafDROi1Jc7lT+ig2LdT531p3B/g/nnc8t2qaXwWgYonsjqdBOn
IH7gzXja0+U2uF/m/N+fx/fLPUoYY3eI8G1VDT3LlgpxY/VNk7N4/zNo5o+b
0HtptI9eGCT7YsSehPpv/km1XYHhdKj7mpvzz5UOHlv2nsr8IAWOByICji2T
gs2jL56tvk6ET89VdQwTidC389qzNxlshMfCtC5stqlkoHlcaUD15TljPJ55
hal2C6TTYU2C9cokTzLYPBKsUfPH8etiZ8HzF77JQn+/2949sTzIXRDxkzNO
gpY1IV7vsDph0afJBtEVdKSnahx7c9AxHccv6++7a1Qc5aH+aPnUyOuPN+Wh
uukE9Z+wPHauj/X47JMFpXSl1O1jbOAOjqun1v7PzzP7ZOD3ENf/FKG/zDDq
xe+XZ3Fux+ULPDS/YNEyKxWDcT3RCldytGM0F+lnW6qFfTajMRG+3Ofhsa7t
LRPlzzemznEGqhjOPJX/gddHh9Erj8sOvsX9F5JbOzPynHA/DOjuyLskgfdj
CUPfPowFkyDvTcv3YndJ7JzN3Ix3IcPCf22evdYE2PpFVP6ZDl5vW5NMthWY
U8DrlPl9kxYKhHu1CQctlQMDiw3i73aw4aJjAb+sEwXIsw+1FwST4U7gjRph
Afz7HwupD6jzpoOAWsOX3WQKZDTvPqMJeP/A8YJ2qdFOvH/OlU0ui/wjB58e
qb0kX+NB8bLXThX6FDjV7/739SoKTH5q7g8OloE145f1R++QwGL90szJG1TE
33j2elra+jgVDt7/3Rqrx4TZjdGZgY0439w8RqD4/RgVdv8Z2HUYw/WnLh3V
lMDO7bze051fH6O64mmwiXO3xAXDYcrjI6P2XxmInzi9Wv3kmBEPdm9ITTRi
KsIkQUF8+DAF+RNfpgzeim36D8/kNzcbywP92vZ1vLP4flp3ZOdeCTkW0ucp
b41k2cuxUf32V9R0NUuRBz2pTTOXArnwUfv+76XNZPC0sPf1ncLiQ/Un1S1X
cL/GtUm5Q+Eb8X7JrQH/6DsduH7SwxFRU+tfdBS/smV6q/d5UMF94Xan+3Nk
+LYlq+cxkwG7IrdnBpFYsE2kyFPuMQmmm1KaxmRl4F7WrsNDLFzv3oL4R6jh
GB3x/5Rtp1M+izOAFXD2ZtqIFDwP/PLTyIILf7baWa59xQIpT+/CtVi9+2H6
mPrvGgYU7f1nIV2K43fX7RcuNezmADUv3fH5XiZsk4i5ML6chup7pthlNbvl
PCh4JeyiJScPzilbQ9qJNITXoOFk5ALscwm8ri11ymaAfYT+uO0nGtJH5GZ1
3pKckoOuX+ESKZUYrjm9ylDrIhHp174Q52UbO8lB1gDDets2JTisazEs4oLH
F+tbCR4GQnKo32z5buUxv1M8hCcjs84eySaQwHeI1mETRIYy9eY6ex0S+vMJ
g4TOaE0MJyrkd1bSKKDcHvJnSy4N6T2GSIo9iHSjIz4JMfhNXUwgAyYXPVra
v5wBFcTGZENdDNdrNz5mH6FBaaG08Uy5NNKjthG3NxLulYXSNPORjRVyQCwr
sDpeje/vcVe9cT+dSoAcgu26yxclQEdOuMD4Fh3li4njMlR1BhYfrm1VMq+j
wp9uckuGMBkm1jgXGWD1RG7xi38fXdmoHrPgbXq15jXu/1N1KtVm9TQBFkX2
hcfmLQQFP7/4lFky2u9qOtdaeHyCDJ/fZjxjvSPBt6ZMy4x2IjRdCq1+MoTV
E5sWSM7K81C/ZD4/ze8LNefK/3P7Skf98VbJqlfO//kX1HsfLd5JgOk7IYLU
Lg4M80Wt9V4iA2amTr9inynAjN33ld+M5YD2ejq/tgif3/U0ZSwIlWQj/DKo
bihqu0IOus9bDlrnKYLMcceBnjMk1D/61qGRXTXFQfXdV2lfIW8sHs/j4ciX
G/oLDkjDfaqAY7cRhpfurM8pzsH9d7Pu6cTTyXSQF7R7kynNAq7TOXVmDR2d
j+kCmt79FhLqF7sZNN882IHlozH+B/+2y8JV03TBxy24v49C0VP7plIazH5w
X7b8uyScs9m7MmABC/ltLPpnFHOdJI/qjd1tNmqd5iT0vqLsikwTNInwjqFc
K4jhO87LIt8nGrj+g8aflO6fJ0hIH4ir3ZcT1M5B89xem9Pb1stj5yK38aQl
hQKra85J5etxED9f9vcOkb7FVOCfyY3hYvjlsku8V9p5nP/RV1EXpZNAA7rj
8yv+SylQWjQuW9zBgpUr7utfO8SBNheHVTHKFIR3/DaR6l5/J8HPOv1/Qu9p
MG02YXG9nwgXosUFhG4SIP/UqoS6X0SUPxwu+F09+T98VjsF3Zl8CQbSgx3a
8P5rwTusvuSOvL54jQQ3mtJXZlWQYcSx+bi9LhlC2q+qVNJoSE8hmWT/e2oL
DRYdcAkrKaYBo6lsYnKWivgngj93uvuqk9E+fLGyuXHqMS6qB2bnoi9fXov3
s9YrlTcdGcb58DEaqkKv4omIX1u4YMZ4qxQR7ujf3nntMwEETNq7Br7QEJ/x
Y+eFFBthfJ4u63bknR8WL+f9U+bvz/z7aDMQ/7tgExkO5Ll4lirTocNOXCFT
hAQmDI1cgiYBCFUTqs5sJvIjOf3M6Fn3LAvNl48ei+14ckEO+XUJdNfwfeDh
/J66lU4CXOz3+yuPbH/XicUdt+K1DZVctO9rfi6RZleK630rvj8RpUqTRXob
B7JuN2tj92keT/xiytZXPmejfT4RRsduV2k68O8d2FUpSIUXIZdDFgVR0f5D
9xohmTM1OD5y+bXtg7AuCWS7Nvb8tsbryfn+0/x/z9dDh4Uj3s1tZ8CX7q1O
BvZUCL/9In8Dhpfm+XCljo9umGni82hakcmu4gYemjedrEtesNAPn6dm6+7q
llDjoHjGftqrO3sF759syIynqfkQ4W5ciMDlPCo0/2rUMtHF6+N66dMlSywo
QOgy3lHwlQonXqncbW1ioH0+5dW9F28ekUC/74x5ai91CxnUrpblq2I4Ka7R
I+eCJd5PfsT/1C+0lQ0F0YfT5pbIgulfEU7OYRLyE4rgV76YP4TXI9rXd8Wv
/iiFzqdEmuCjviAWqhfkU3e/S8NwyjweeGq7QnoijgJrladGxw9hcbnlQ/Pq
2xie3eWc88deFiLuDPc80Mb1Yp+N9e00wc7xoOvi67/HCRATFNK/0pMLbKnr
O1ylZUF+2zG/uSMUUKe/fTYUS4We+OVV18/LIv/K1eTTn5+2cBF/YO1Afrnl
I3n45frb8RuGG5UpmfZdXVTUT6HPzHpKxpJRffzPhfjiewauf1Kat9NXejOO
t28d5f+kHU6CtATS93VPKKBjZf12xh2vr02SrhvenlIAmJTxG1ypCItftnu+
PywLmlsi1xgqYPf9tHTG21bcT+vTB/P4dioR7ccuo05IKV0hg3eD7glnVyzO
ChwwOSNOhhrOgEPTMBG6HtyQNtagIP6itVzLIW0tOsKPEb0Dv645kOFsacQ+
qin2vAvSQ0plsPu0wFvrMYkL10Xnlqtk4ueNTeSUDBuw0ftUUtXc03SdDR6z
2Yf/46We3mQ6IXkI93fssd2d6kkjgrGs8+ofZRSwIOn25lhSUH+0fOqcvFgm
HekJXAloGpEbYqL9CPI6bbut03h/eUnRxHiyIgmdn49qzaTFofifX0wOTDP8
vBD9fuuWjUnCi1kwqGfylNNGAdkX04fysPtIXFn1Z281DXayh1zXLCLDB8PB
wz2VBKgYDci/bk5D+toubM0A1gSev6h2HpukthJQ/un41WqZ/d/e0P/hx/0v
fr/uLuQg/dz5+NBYH6LqrEUGe/bTEsJdEsKj31Vb0/8IKqL58KEdy0P3R+H1
+CS/7NZ2DD/N+1NLjDt7PQgRhg+6//7Ki4hDyJxuDL8kBUa8HrHSMTzYIE7Y
s0EVz1+8228eHvZjguFukwHdFRzYN3xjevFxFvg+0F4zkUGBUF/lvFkMB1Q1
zrBlbpIg4cLw/jeJ8pCbULghLlsOJgOn7V+V4vp0RrsPRTvNUlB+EcuIUx+Q
o6F9nzD6uru7vGmg/t1PI4RBBl/CZNPkOnyf3D6g89H79VRwWKUOEtVY/dWS
TBM7TwPXdT7PN6fQYKMpMezjMgp8mFlz5k8xFQY/FTU+xvDL29hw3bpuLsRe
ja/I6sB//0fPrs0b9pLh+Kt1QkVABbMxhsnhPywYzV8QaBjFhCxzo1shGO5z
W6+qvXiGARl/fS7ZrsDz+UOffof3MRTQqigU0XiF4eLVejeUd1KRXkpkOEvW
QJyK9FUe7U1dlVZER35HK56OXD0TSYWZ9Jf9vccIEC5IX3hRHntfu3ZLC23D
3u8ZnvW/aCbce1d/tFMD+/11aWofRHkg8qZ77tcTBVizvsp+yh/Xszy5LdyK
/ZoAK2J2quueIcJYzPG+Luzz6cZuzdA1pED8T0Xtb7MEYImsPVKcSICaYy3l
pVh+P3bSNpr+VArWLnJXMY0TR/fLk1BzeNUrGtIHKlRQ5eO7gPe3nhX+JQmP
4v3V+LZkaMHiy8srX2beHiCAc7trLORS0ftNy95SXNKH+83kfwqUnOkko/36
QUbvd4t8aXB5dnnc1pwARMqht8JDeD9cc+OLNrlXuB/K5/zblI0iDKR/G2pw
0/TEQ5y/GZP8sz+/Bffj2mK+SKN5mQLsbIpuN1+H1U/HFaRqy8lgqlKy1swX
q/MS3AVJfrgf1BMpQ3fOTjriszwzpiV5ePHATaO6ef8yHlZ/neyoiMb9eswP
Z5aoVGN430+kNuu7HKjfWXDVVoUCL4lDr/Of0kBnib9irBET+WGkNyVkmQwz
UT9moY09YWsuE3LaE5wSA5gw3vfSIaNECsWnCOad2pseJNQ/C1mpseZ0Iw3p
NcwF/PxikMUDM5sfTwdV5GGV+dzquL8K4DL79FlcrDLsTXgVt3kDB/lfWNPu
FFR3sdH7u2e1d89erN6cn1+8iH/jb3OXiPSH863NFO1vceHemRKl2HBZEDhT
xyj4ykT90gbN81smPmL1bIPIqxdCJDhdWSXClSfCwqinHxXbybD0wq1pgw9M
1G8xfhqSGGwuB3RXW+sZdw7YhiT76r+SRXjqra3s8yxNMeTforCnhRXmQQTX
P4V3mospkPzzp+jDBhYkvr99WGw3AzZP6k1sFeWg/rybk0fh5F0aPDk5lCQT
wYbSPawzom/xerrRlyCWh+Hq+fjCT7ap2v+aCk6xKpRqQwznex25aSGM8xHz
l7JZK4NZIBz0PnJpDxue51Z2rdiE5zexYRZp7L/5/hQ1K2gXAfzfHlkCAvg+
nMqQsRLc4CE/xmsbSGpGXAq4bLnZGVMvCnscjjioW5KRH17eFmP2VS/880rx
rWmWKKbjfFkxzo4vGzloXj32yc6VfzkL4bNuMed2oXgWhPqYF4hT2KBSHPdO
IxbDOR7kPzKbZeCTRXuvwgoCmi8VHvznJaNChhjpuEFxrM6PvEJpLMrkof5r
y8g/UZ+LuH7KPUNnrX0vpWBWv3/Xqz8UoGt13rPG8NE8n+vB8+KLvj/wfvL9
L4FLX2E4Y36f131qzaHXf/B9mHV2Rtp+P9kIz8TYbL4xWMREeoaiUn9DlI/j
zzs/JEfhNfb9UkA0f+86Waj8K753cDUTTiraTgtNsuCLMePJEhsq9HvwbYkI
w+oCYqpCeDET8a03N3SkEg/jfq3ThjofNx2SR/0VpAf9f3iFuPmw+GksDs3X
g8k7dkl/JdDRPl3o8kX5RXtJqN9pvu+1vdU+nL9N+XJQ1hnDW/N8hsXdTgHh
G/B+qOKKZRUhLNxPw14lUCNsNwHFY8eZPYvUTNjo/v7Q7G2O3UcCFvWOodRv
rH5dsv2XsB4B1YuxU0mh7HA55K/UK9nElogiw976RfuHK0hQquK8MOsyERJH
TxzgbyUB8Q9zszUP10P6GTJoP2fGAyuTt+u5KTxo3D+UUS3IRvUI/7iIw619
XPQ8I/Tae9cVYXFihekjA+w5bFn7McryHhnla70rmi3/+e+tsF4iGD8nCXdL
jDo59TJwViEiQ0uTAm86rnSoe+Hv94zVutNLPHC+40Tw38MbsTjBr/m9+HAF
G4LqywxyrpPQecync5n8WB1xPkx1myVgdSb/ZL7eRZzvZUi7c94cw/Hz+s3t
2b9bs4bweiB5U5CEcII8qieol6n3+ANoKN+4aw3s8pnjIb+914qv4y5heH7r
4lbfT0VUMN+my5M+i89rtjlxij844L+/NXXvtfdvSbAqgc82VZkM2hFKci8t
8H1yV5sF2e55uL7jRXtl182KsrCkLqF9YxQPBvNm/MyHaIivopZX5rDRHu+X
HJms1mj5QYW1D1TLEv8RYdfJ4cSRs3TgCeaPCu5gQU/g1Nu+LUTwfPBe7ReG
G9ZNL2RkMLH6q0dUl32aDE5rqOKHzsiBypE9vl5iCvBU68/LnwQupB52F/Wy
YICxWl+nYijuB7pS7fVjrygxhO++GC1ZZKHBQ/uDm4K8xfTu4npgXkuOTemt
lAPrVd0K74LkQPj3Je/wSTLaTxo1N6668RHLl4E77Q9dJwOsvBdr18OD9/m5
74M3KcKlQ/zPcnaTYGPEc9tvTAwPXiBsTCXJIn5nUrRK7UYJWVDUv1kgPkMH
8Xb96ZYqMpp/bhI73RAWw0D9ifAsC+XUJwQ4mbZn4baHZLgfYKNdaIrru/ju
Mv8m5Ynva6Z0zFnu4tFgyZik0PLt2Oe7VN+zkkpC9dobyXKHmBACHLTy7eJq
SMM390L9qTmcv1ZdeLhyRbY00jNd/dyD+S+bjvAiq91i/NUv3D9tg3/Md91N
XDgatl2/7bEc3Fmg8eBMP65fekAgolfNmQIpV17rBq+lgJxDRdLqQLw+XFZk
F7wvj432VzqLa6fd+KmIH/9+24pFG6pkQJRdIcYWJsL1nKeXlHkU0A586JBC
poJNboVf/DYZcGVc0QcMh1vUHFB7eU4W8VUuNLBPXLRmo3qj7nl+g54dBcYW
lRhZbqJCpc7yCBkBWXRfVn48MJrjhN/v59H+nOsbmFB69ZZMihkZHgiqpa15
hfdzg9OoK4ex9zXvB1UZnun3LwPXw3J9x7hyaxkZ7X9l+R4qkl1BRXoH5iN1
od2WckjPoCX8p55PEAsefx9I4ATKQkp4AZ+mPT4fyhZ2H3veT0X6Q3E5tUP+
37lg+vNB7GYqC7iVEt6pS8nwI9Rmk4YZBQbjJOrMpcngdTUpJuIZFboOtSmq
8KjI35FnKJlBeCwPDmEarWU7FSH5Ys7k6XwKUE9ORfsqUsHtef2Xa9cYkJtq
eOHcMAVy2302PdTF92deUrz07NlcsJFb4tq+iQHKlUn70rQ4aL/7B0PUvCub
hfo7y0w299qwcb0My0/u9mLHyPClz5OZRKeAThdv9OoUXu/6l91TWBpOQ3pq
NU1iEGVLQ99nsdOV6nNVDITvthQ3NLZi8W7ev37ZgnMGLyrp0KQeZ32yiwxb
VOeKe/M4oLdlbxPXmQr6S6/zIk0p8F7/xFAcVs+kdlKol+oEwOWh8bhwgQjc
ae2MYzjy0PnextwRQl8sg/Sh/PwzXhpZsOCD+FTgNFbnZ//orimJxs/bArOu
PdxgEpyyU/16MJsMk57CW28E4Xqt2/6VFHx8hu+nksNEdeWwet1QTOO2zikZ
2JHz7FZenBTazzExScwlaVOgPCtGryiFBBb17jJ6sUQg90489hAgwpm8CCdj
DglUfeL3xvhR4NQgwbn+HgceC9YtE98kC8PpRmHPhnE9CPvubLkoAhO9n5l7
UkGzW5jAZ3Dj6n55Lsikv15+9zKO7zjvX9em8OH5QFDGv2WuBufbe2bFDj82
YMMe48CTrEPYezbSIRffxOcVlYK1o17FIohPw/MsrfpQQQbZrFtDjjFE+DSm
CB4H2Wi/6oeMjUMDjQbJAvW3DiSRQHdby5NKoEHWg9KvvGsE+Fzur/1ADd+f
s31w7nE1mQCCDktcnU7h8/t5frtEgGOEDoaLG5Mv1ZXIKICyzatHG2zx+5Ul
FWO9PJkG7jmZtXniGK6Oy3b0xupdtlxo09X7NKDWf891+0ZH+HFy4FrnmWoG
nJyojbQKocOuP0T7VEES8k9TvfRgZ6g2C75q+5huCOXA5Yvfl3etYSO+xt1j
XkYl6jSkR1D9inSo7jkbagb4NxhMcEFX9HT2z+cM1M9eX1OYFdghAyqvnrUP
JlMg4O5Np6AUfP7P9/KGU9FhGnq+c5YjlgZieH4XWMh1T92Ix6fV5NHJuUX4
fOtQTunuG8MEpK/p/jLlxZt8HK91UV1tqh7xYKeDZ98ib3mQubjhmyU/B/Ub
T/7YqGIYhP35vj06AelMWDRoOfi8j470mqcuqRAVQ3hA0CsNp1fwQFVUR0M/
HMOTLOOO0Bg6vOHmuD3H6p/5fKPo9PDT411sNM+xeXBEqGUJB+EPxQs7x4uj
SEB6n8b2xPJ0doaRdvJRIqQJblY4skQYgvgvZqVHL4S/E8+M6qMkoWg2N6/8
KwWi586RG/6SoS0j9pqePT4PfrLh1ppdn/Dz/qAh03dOlwbWZVeXG9VTgL9g
cXjIcw5A1ddlwenY+w8qCklvx/0cV06k+nhn4vFrwWCIXsKMFNADBL8Fv5CA
Dr3EFSG3qYg//4G09ENCJB3pWzWfnLNmYjhuvn7+VaI7sDqXBqzIhHuJWJ55
yi/34VeXHJyrsbHJXiEPfLG67nNK+H3s1Ce2vzSXB260j0MD9vcyJX9puX7l
oHlE17JPqRu2sCHEJYT5zY8FhY5qFl8IRNgYmljuyE+ELO9NwTf3cyFb8+lo
4lYOKAbvP8UfywTxyp1nq5/Soe3QqPYudTbSd489eKlxOQXPB/d2Cia4RcgB
y8ViEddVAab/NPzbk8FD+NslavyyzD8q8uv6+L7wgfEwGY7uJ8g6rqaDRJqc
jfliFqpHhQ7vKlswS0F+B68Ycf77HTF8oy6yLfs2Ha5GXtlT24P7uzyvP/Vv
8wcsPih9jF8rwIDGJae32I3KgKTW1U09JxdCZPh4iIQMBVTbbCgbRGngvfDU
GfocEeGpazWvajb10FG9RVQvqew6pgAVBd94+gQl0H38WnxomgxCo82JL8oo
YN3TVdz+hwjLSuVn+s8TwXh8bmjfJwKqx1I6ioIl/4efqnL0zfJlKvh8T+Ti
khyrVjbiE3ufmzHbU4bPi5qy6DbrMDw0Xy9vcDgpsWmGAMdCHUkriiRQfJuf
hz/iEnt1vzJQv344MPkyS5aL9E9DJ/SnzaUYSF9BNET+YJcqCaRWVzHdugmQ
0V4aQ7xMRf3V3q30zz2CHHQ+r/Ev557/H79mT/G2nV6b2GjeGaAiJ6eHxa95
/d3PQiHfUrrpsOPGh76EQSbUmV04fBqrP+b10pbHehJirGnQcfaDZKgXGXoC
OvP/HKIg/83DAz6B+zbxEB/sbX3WE68pCvjdaqko4tKBctdnh/4XSeT/vfvN
RampMdw/cfLBqlOLLCnID+/+9cXDhsOSMF7jj6VwcfCH7LURQxykxxpgea/9
SAUN5RN+S8tNL2Pxeqnc6VyLfRMZ9deJ7RvW38bwfNbzfDd6gSJ8zf/6iv8B
A80DJy/OVBlo4ed/4dqwKuYUnm8kU3OfRYnw0PzZ58r28qJNJBi2WL74KIkA
7kaDC7uaGGg++knu7qGUYTbSA1Fo3+OpZUKFMTGlCRsuG0o+Hj0bJyqP4sOF
rsbzW1hMxNfZq+3m6bWei/59DzXP6awC9vlmzD5ln1OCFzL35co82Qg/F2+3
lpwLxuvbfKnUB+rY87Q72sr5JkaGGNXksrFrdDQ/5ak2Tdka4fODzl8ktz+K
XNBpypT668QC7XoxwVYR3D+i7PzfC3FXaGi/84tIIV9hHgWO7VA8fWorFQLK
sJzwmYby7/sxldmkJAq8bjhmyn5AhoiUQPM/blTkh/T0p/WvM25kUCyWYJQP
SwCHW+3WaEOFobuNO07bkWHt9Ouz4jQe6r+OJXeqbY9kw3TBnGNAIQu+dMl9
gikyyKwRL2vG6pWNvQPt0z24H5hH0KbLy7xx/QVfBtv9dRMR1D/evNOkQwap
pJiyUi8GOj9u77/tkbrKQf0N1qszu5W9yaDLVy2jZcWAyoqwdy1EMnzW4HyQ
wuo9oZvrfjfEiEFEpkDFRZogDK8XOXHtPh4/QpzTibkr6Pg+8Z3832G2eL9l
NMT25Vs/BpR1REdv66WBitST+ttiROTHpS5uXGWiT4G/lvsX2TsxoNtKVmd/
JD6PldYqzb74CM9fn75rlL02xPFFsOQ970lT7Pma3zek2tIhMHRJ8XQbF+Gh
X3ZL4qeaFkLW0bPP7u4WBeWlBkuLpIkg5jPN8ZwkwIjkwT5OGgnW8Uw5NmIU
sJK6LSZ1lARClmKuhzDc8uQG+UuDMA9MT1SJimN4UWgsPLxqPRkGgg5Tdb+z
IPfCT98TrWTgpOR9zk2gQKJjtNopDyrCH5THb5YeP4fv402qKn55OEZH/JPX
JlXbegm4fpSRi/b9u98pqF8jOmcT9rSACAoX19x7IUCFeO/H7cvrGOC4eeZG
SSMZNjxbEp5UQEL6rVv3LLEY3o3VWT5hwxOCRMg1ktzti91XudwfrvLRTEgy
C+J8xu7P/M/3ODaSO+FLRc+zK9mneeQ37h/3/J+8HMmKgvztVNgfr+/cw0L+
VwVr6AkDvylAD/rI5kQRYYcfd2P/Nqye/cp7Tpolgm/OzJqPBylQu/WU8J0R
AvQfWez6Ip4ER//whQbUkuCn7wXDCEcy/HZNWqWbR4O15sHF+lH4+88L27Up
nI8CZ69IPVyxlAQt2/qj7bH8+MnEQkPuNRkCrZ/E7thIA/1p4+ZOdxqcEIr0
57PE918NewSMZvPx+Oa017DzpDgVrA/kBsrpU+GOZdJaWQsFxJ/usqsJXZXC
RnzW19QG+/fKGC79c9V2+4uFoOVz76puOh3ld/F1X6RCxDmIX3D41982bzmc
j31Wv/Yf30oCwo+XDHpDMmbEgd714tD2EHEw/yMfs38dE/kZxP/d7JceRkT6
ay9rfkSHZLJgTdybvoN/GLDsnMMKpiiut76wzjLXCjs/Ib+8eG8PMuEVyZZh
tBjn14+ufZNdNUlD+3MvG2/5p2D3eV4fgBsQ0a2Mxa/5fCUoNKO/cxTXV//7
tE8hQZSI/DBMtnodscJ+/zwfv4ietv37AzbaTxLo69e4WUMGNd+OPEENGYhe
ItT/7gEP+Y1OZXWvJNfwkP+hZ1W9S1Y/ro+7P+t9WUQKEXRy8s1+ulPgjtPc
2QcYTlgVW6X8SIMHHSaJd7P6cT7Hea2AXpF6DuqvJcbqZF+XogI4Dk/NysrA
k1k1ir8f/v7du3acP6LERfxlqN0zM1JDgOID62IUdpHgrYBmsnw8fl8v0fg9
N0TIwsXOc3aWFjxgP85awyfKBPfBrAUXE9hgnDx3JsibgZ5f3O487asz+Pcx
JYUfisXO7c3tAgYno8lgKlV6vweL+/4JxGRtCzI88Z47aqKI7+/Pqg62HvLB
8Wus0GL/Vwfxz7/+Mr+bXwcZLtHj+AKJNHCkfPrHj9VL79Lv5NcW0uCBaUbA
hhFpmKI0LL9Vxw9Pq8KVXL/S0X7k+pzEucdZFFic+TjnpSkTUl9eTU9IIiK+
94EVj3eIySqA4Rq+xndnF4FxJFPDtpYBE5uqD5MvYXh+ONXMAnt+HU1lzX8X
YnVPVT1TwJSK9KUfxV9yoa4mgt/EYZbLDxk4Z1Jd5f6CjvDSYPWBoowVcpBB
j6XPUBTA6+KWkmYZIqxL3Kxl5UqBzXrHN3+4SIXK/Lgkr/00mCnV/PuomQwg
s+X4JyBDS1SmnjI/G9ZXrRPKvYe9h64FfoRzWPx7PLF3JI4J+kq79pUcFQdb
Gc0kB2FxeL3cY7vuqf/6L02NJxbjfKKiBcHCZe8o4Fi5eqHpf7q4JavEt0yz
YHG9+JQfEIG9/eAZMhZX//nVlr0owvPd8mM5q3y5VMTn8JCNvJlIlEV6CLfy
97lKtxORns/I4wOVV76woC5cRuiiGBdeSDxnmmF1Q5FEySMV7Ocu3HOHOj5D
RvNMX+G0/PNmJNjtf3iOc44Cq7rvvxPYRUD7J9trdcs65LB4y73pZlIjDQ3D
u5ZzYnG+yVWvsmNacWTk7z51eeNiL8D9iAKtDyquPkpF/aB9z9a2r0sgo/36
IrfFgbytuN/tpoV8fsdW89D9/lNIXTf+At+/T05PEBvawEb7zI87Kxf07GWi
/SmGeVjo+zZ8X8//5xZPfy18fnpk/TrjH1gd7fPcduaCIRku+CWsEnbA8fvb
7TrTW8lE+JvhnxE6QYb18sKva+bw+/Didoie+zoqPHg0tYR/EwcGB6yGlmF5
RVJAIFm1Uxp+/PsdabKDivsBvylVSjGSQf2rlJpfLLt4GrzN5Ir+tmPBdFvC
RfeXJGi7veGaTgMZEr1Ws84KUlE9pp3XM2m1C5/3Ns+tEYqiUuHIjEnMFgIZ
lI7Mnazo54F4jTE5gigPH0p33GyaJsBX10v1m/4RQIB/bcTLNxTUb/OvMU6q
7pRF/PGHp7xL1v/C5ytLFUIPR5OYaB7wTLE2tW0pBR59vetmso8It6f2c2uw
c7/NbXuWRDkBNp9rWvY8kgxyL1buyzTH9Qjm+zsv5Lu5imb/4xcosfxY3nMc
T7nu2eCm3II//xT79JcdehQ4d6ZNLCGaAnxZgs5eYSyErzuE8xIunZSDqjn+
QzW+8tD59nNAMVZXzdcbhs0/CKvnKGjf5rZ2RdC4FIZ7nilrnyskw/kUxzUz
73B+yOhltZua9Wykl8Z4ZDYsm8ZC581S01qnAEjwe9XVhmuvSZBt4Nkyu5iH
vp/tx7dudrZ4/L1eWpLOdxfDLy2cr7d62Vj9tFW34xsN8pbruihu5MCiS5LS
EYeZYB22JTsDw3OEQqs55nEeet7jR6JSLeLw72t6MIR1zpwLn/yZo6LrODAy
u6m5cx+u57s11jn3QQGG/6f7PGZeYrhu9a47BuV4fXPH417i3kApGFC4uOD2
yoWwmfcjRGiWifxkupP6Kran0NB9a/z1MKY9gob0G3cbDDm7j5CRv7eu23TA
9vtUiEtpjYsqwnDWAqFT972lkN7VqSJD5zE7Bpon/H10LIiqwQHnWYvvBkl0
qM6UWCMhiOXr6SvfGVH4eZnfT7tc0wjW73G/MP/mthef/GiIf5K6rFL6gKAc
6rcqP3ne/ofAwvUqwheoxRrj+D1yyFg3sYMHrIqqB+JmbDDR1IuW0sfPX9Fa
d7tGGg2+RO4R6VNiwvf97Q19UVLQq+cWtyhbEl75nS3SbZFFv2/+887j8XNK
brdkrGhwLDRZsvEZlm+rC6Lk06loPhz38mjwnWx8/mEe5zeyqJkL1PqsEuVm
Jpw1Uk2tGiUj/c3OUyd8jYR4UC5QvnrOlwcn7nWSn6yiI/7rdHyb2KtZCjqv
aV/2H/yP3/bma4N/DVbHkNc5/bnvN2d0UuCjqE4TCfT5eB2e6/F6s/djm9rm
VTi/ODKEo/NNA9dvejWp7nPPgAY3m3NTE7H/v2zCtmQIw+3zfgO/W+9mlGLn
a15vwOQ5o3L1YR68IUoVrqiTB9ZamWCpNCaq16lbwsZeRkqhn7//9icNHSEc
//vdXfhH9TFWH5+iN0bxWJBTcbN34xU60osQ2aGjHzpAR/0yF47VLYMDHChf
2ru6rVYB3BYO+z7dhz1fVY0JvfcEOLNnWJhvtyzSp3m04rKc6wlcv7g7VN1c
fIqE9I2vml7+6LOGgfg+PU9OS/4vH3LXca2f01NsqOhd/n3CiQKhZ15d0ZbG
+RqeNmYbbx3A+dmZ8SbK8p3iIOi84WNSjQwMdZ5cuaaBjfDogi+pud+xOL+r
sasb/uL4YF7/KzZT+7utPRlIjH3SNtfJMH145rirghJElQGlSmgRNG7cvNZo
mIr61b49yrsV2niIP50sU3V2D3a+5vUZ9/mbyp++gvfbbHNOZDyJYSE8EbxN
u8qQLoPuT1f3BwjXpoPK9pbL/MJUWLn1YSbBnAqKWfc6eC4EIH6yXNeahPdf
cgsrjYP+cZCed3faQeLRZlxP862+h4tygQxMmDuMSy0ShMKCn1VKuhjO8u04
VK1EBudHewgv3+H1V9XrfWsMH+P8Ysttf3KvGHGRPoGZqc/vVDEW4rsJNvRp
TOwmo/wiNbS2cfkWXE/bjBtQL1GN3/fuRtYthgkBHh7jd1P6LQWPffq/Ox5j
wt3EZsl2DlZH7xSNEt/NRvueS7Yx0t7tJ6N8rHBDXGMZC+d7tfGaFIytcb3P
U6eT/l2mceCr6vCety50kG0Lvya9B+fD/bnJtyAWq1/n5zt5STVmqdh/ry3N
33Ztggr5pnl7ve04qN6VVZOPPJSJf36r7GmRD1U4H0Vruftm0Vv4n6+RmhD7
rYnzPR5YafScEaSj+vJoybN/f8/T0fvOWLzP92Q7CTJ2O7wzwuKrxVFRV93n
HOTHqjQ9+iahjgUnk21erftFBgu9vLj48/KQlbTbvqFeDjg9hvznmETISv6j
bShLgR+LvYVOYzhvPl5sv225+8JpCtysW3Y3SpoI0XY9fRObcX5SpNCU35Kf
eD3nNu1dXf0G7zc6Z6iPSaSR0fmqfXskfLO3DJpvzpg8vmE7SEf+KiLv1N2c
FpBhA//WJ6v+isJRitISsh4LniZFfrXazIT3KlN/lmHPozR+o2LgJTqMyb37
S7HD+3279ze/FNNQQPs7TtdPZJsM0FB/6fXRV8LnefjzL/MhdmWa4vqfHcfN
lcRScD79d3FJjaY2Gvi6zczcyGNAgJtxe2oQGc03qqwPDWik4PGjUVAz5c0f
AuIz0qedq02UOMAzf50muYANLaYR484jTHT/bHwubakQ56H+TwXlkb23MN4v
X+GYY2CxUhzxCXrW3b974Awb7euvueTZ9/UhGb5N7DZlXSTBvRGX9AwxrB7Z
PSLGt54CZxbdk/D6RwZy4/G5R3x00OuZ/aL3FsfD6RltwePJZORfFVx9aRsj
iwzNbxpOMLWk4dioqP++LgqM5Wi2f50mgv/5onsi9rg+0opF+frb+wiI/+Xo
ekPmGVavvEtJ1B9fjP27m8PJYzwG6o926F2xaDiHx4domcPOfTfx/CQQvgns
vP5nH9uvSeS3FRfxb9+TSxyFjIkQU/BQqR27V4s/6V3XPIHP1//u2DrgmUKC
0Csm0m0TJNhs8v6EZweud75y44rquWIsPnrIryvAcPNUWQD9NYZX5/VJxY4O
fIIWGqyxOytApDEhV0Y1+2YeCay9AsPXrydBVDZo5eeT0T5eNM1jlWQo3l+p
8HqweWYLvn/JF22qW9HCRfONsVcW2trmPORnaRIi0PBqlozqK+uT4/suf6CC
hGPcCQVN7N/XjFif/0wHc+cWmtJ7KhiU9o/ezJIBO8Hq9W7OBHDMm+h6FobP
+9xyOo8PFOL7N/m5RbZm16kQsA3cspIYkAnZpPUUFnRY73zqLMWCXdt5zrdu
coFyZ/+w6DEOFB8PvvTVEfcn8aOrd89JyEIAebN9SxUbOlZ29xhGcUF26oL6
E1ceGKjn+l7SxeJcQDnnxyMM728efMod4EJDWPZ4yC0maPStvJ/+F8cri79p
VzfJ4X4wzztae+2fskGqPFV5RRQNXpp3vjPC8L/+21WTjqN02DmwZkm6GZ7v
5vPtfP29N7rt7clBGmxU+Zc7sAirT4MWLFt4iQ3s0h+WKgfpEHq2/07/OAn2
DnTvei1Kgm+NOyOO6uF40/TIdOamWCrSe/rBs+bLsKNDoqPQc71hMgT80NEV
puLP96xwVu2hbjxeD9tve5XiQ0bztpErT247jVDQ82tYT8hvmsXn14fPv7Hy
MOMg/yNtZpnS5idExJ+asBBRIJfg+erkIb+J5Vhdn+FdvHByig5xEZ7Db7cQ
Yd1H27ayE0T4HXR/fZIQG9Ubjr4v9wlryMLW8vC6rB4e7I3dnqjzP/6ZBxaO
bXb/QQIfT2mdW/+wPB5GtVr0WR7prXc6nFzVYkRD+DTitKPPYTce0i9fnxcc
FPyIiOpRicixV67byWBzxM/tXyeWF79I+BjH4nhA+T1NtYeJz4vteoMsqF/w
+NEmvSytMI6O/Mo/hJxYnYed87z0tO2kZXJQXaQSyFeAz0eTbRYrrKsiIP91
QdY55YZjbLSvL1368FLiXira/wv8ymLcjqJA6gUL2RZdXI9tfr5xm9QUcb2b
CN9+Mq9Me5LhUY3LzvXGNHCLnmMvxd6L1bXyhVeNKcCJMzodziUBa/WSx8/e
sWCsGhKV61nwiT6ZZrIZ39fT92rQ+HxPBr2/nqs/7lYF01F/8P/VZ0ruuvE2
S18G0l6kJ476EkFKzuFbJ3Zer5lq7pjUwXB2skBjqxrOn83XsLco/Yjz6xxV
VF4+dyDA2pJXv7+rE+FtpGBXCYOJ8KWzm7A45ToR8YWSVYIXks8SICOktmbl
TTKkL4kpVJfB84G5UVYOfz8NxEXP2Rt00sHqxAe+JAEW2s89ukT/x/EqIpqn
Lkxt/yJ5WBblcyG28Fi5AxnaI8/9aMuiwqSzztDVQDrwib9RekrA7iPf3wZx
Ot5fKglp/VVXgN0z/47Fy7C4telGPn3oN67Pdumqx2CLCd4/eRg78zN/lIXm
V1pnBaZJF9lIzytX5kfqglguihd/6346BERJQm1k5irvAgoEXrcoOJ2F90sv
OP3qfebMhd2vNKpqQrmQ4HLVZShIAuTjeh5W/pEA15Ezepu+kNC+oakguO2q
JyI+lnprjsmTY0TUH/I5wjmv9JiK6h8t5pj2o3V0pDexoso0qGYI9wsNFnZi
pDFI6PwsL1Ti1hUrIL3SnReqrmo60dH+oA5rtSRbjQ5C8W9qnpbQwdd22tBT
A9f7GXOsnnmwB/fPKmkKjrtQgdXfzav89YKZMFAY9uzZNjraz1k73e1qWcRF
96umT6dvZRuuV/E35EPq9UMMOOIQwkmtwuL1qrW8kGVEWJpzLcz7Ahn8ZAL7
xLTk8P5gs65i/AFhxFd9qPag+aIsjrc+3r68I3AG3x9pGXNu/lNLgwzbcRGi
JQmKgmk/WYdwf/Cu3tVfGtyYaL+vqeNyGiWOjfZBEtz2FxYweYhPG/O92ndd
D64vUqIx8Vv6Gwtyby8WS1TjQAGl//vsDwJErpC+uHAS51fN472H5vWRVzOJ
KF5ZPJ++CxhuzjZ6I+WHndMildMn03Zy4bea2YbhN3TIGS4XYPHTEF/h+5iS
y9hhMpgEX98h00uBlUo/+KX/Owcrc4W+FVHg18+2TynXmAiPcpUeDZj0yyC+
guW93OZZHSbCf8tenJR5cgj3n96ZMiHFPk6BhUkqP9QiMZxqctgw4h+uP9Oy
bO5Kcx8P+NxHN7fYYzhj66+Ayl4ZqFvWFKJttRAK+7Mi9xUS0T6oxE/F94X6
ZBC0iqa7iFIgvfbyfhVzGurvh8nL/72B4dl5Pf3BRz9D71yjAYkqavwwmQ5p
/0p8Q3cyYe1O3tWwa1xYebjrbMZCOtqX+D6Q7qjgQIfR4ntGX6cpoLqqSYvg
LQ7V7wcl8rE68djDHyH1WP7+9Pn+j3EHCly80rNc2+t//I6LW9xgPQ/eXxtT
sUqSh0PjdaMbDHG+nEvVzI2zgVTE1yxXz3ONwH7fPH87s9jR/aUkvh+nMPsg
u5ROQ/Xd/Ptf97fx1m2qFNwbf/atbL0i6hd5Ja0PfTPNQPPhqfNDroWhJLQv
EK0rb+GC3Ue070hcfOCsGBPxpT+EOCy5+5KA+usr4r5RQrB6VLf85w2nCTJM
egdEXJChwfMPUQ9Md9OhwuJTiSaWX68n2V3YJ02CtaoHfXQqidD929PjoQIR
zqSoLx05SIa4JJHS7wco8MBg0e8DFzH8qyQgolxABwHy59BsARpoxvUw0k+Q
wfbLjfV1Ivh5ruaFaDa0yCK+7vuPl+4rlhKRf5TWuZoXOiJk5D94/+rIcNgj
AhTk85l5rxWDdse3jeexPFtpn2QQPcQCutJIGrMZv9/trSdqxSsZoBUNKyhX
WfBxv8GaJ+sY6L5qkYJlSQtxfotWuuzKKW+8n7Q3pWTU8weOlyK7dJxC/mee
v2/CrJT2Dp9fTDiFuAoYUGBig9jZ8SGsDpkrSv6LxdX5fNUTsLG6mkbFagqe
S9IdIogrP/Jxd8bq+oZzAddsKTAnXvV7kInlY3FTq13hHOCEmmhpjnBR/zlZ
pWDLt3EqxKf/EQr+SYG7fYa1kQZkxJ9F+q5SXoZLVBRAqbJfY/EMGerEfqZ1
9NGBrL21crCVAbO3nroHplFgi6tCRKkECc3THG5HiZof51Xc+TtQKLTlt9Hi
wvtdFT/JcEyzYqzklQzsZeV4RJaTYEym7fnZGRKYrXQQZbtwcb3nCH+d011Y
vJQ6kCksToadf1udw65hOLKtP4kHBHgbtmDB+Di+X3Rt5dZbuWdlcL+uJfY0
fQwHSL0LlP+nRoC72869Cw9hIL7i9kM0nnQPru9bkRx+NXEVFbad2n+JdIQO
4x8um99zloEnfJsD7dul4HVCzI/UZQS4lb52TdlVIsD97YlHgIz0MgYPdJ3a
wZVHervhxSMfq3xw/UfUT/s/foJOvuroB1k8X/v63f+udh7nf86Kak1w11Hg
e0Cf7e4P0qAoNP3MuJeG5qs7gFC/oJqN8LaO6JPrHhjemvcbKd1WRL7VIAe5
UcS5MwvlQXpGLtmNxQT/psXSsbepcO9Nm1HyAiI6b05B1jmhw7jf35cv4fRJ
LZyvf9w483BlwH97qCPxzbMkeGjXOc7ox/CHyr7449hzv+p8wWPnF+zeJtod
t9zOgEID1reZaRl0P7sSks7VYHl7Xp+Bst/nSk+uLIgqbV2+lMuDA3r7O+ds
ZGDUf+uNy1gedrytv7PyOB2vL2qevx+ZYSB+jptBuU/Eb1w/4nggue7MgBxk
uq7vsr+D4RHfyY7yVfj9y1zF+Le7jA27ep+49R5kQEFUV1qCFxXxF6OalI33
PaaheldnX+OW4lNUeDvnHLEskgQyWVLbW11w/B96Pd7KsIsCChWeCW9SqLje
y8sJuYhcJhYXnVtIBAoYOP7cqW8iDewXAiLk1dh7nRHM8dcmQMuKnKDv30mg
+OO76XcXPhhglPOKH+P6ljpX3I+FEXD/7dBRc7ekVXJon+fa42VK587hfhI2
P9zapV6xUL1X9Xjv6Y/uTLQv1r88S/KQOBHOL5CZeBtOBK8jZXazd2jo/ROt
33mrbeYgfGndpVjRZSYPxyRDPn78SwLjgU1LiGeY6Dzz4rJbhiXxfCacKPbG
QYKA8u++gA0TYdJcxEc4ZejkwbWhoX6Q069P1nO2RIQ/WbnmdQEdRDhVLSDI
b0KA4lVMh6dbaXCn/PFHBWkaOLiecAmZJaP6IMZ722FtAR7at7sYdSZPSQ6P
16S69S1dFmTwb8mPaFShwLdiD63AkzQUry8MivQ5/Lf/9H/4Y9uQkwFvBNdX
fjgXvloxXhh8RI9JkIMXQnlBiurjdh4kjhZ/4jsuC4NCn7qH63B/GdfntvdH
XuPPU22Wo6W5FNd3Gip69i35GQ/po9l96H0e85UAgkljz2hhWB57IeVrn06E
wsGOW7sXEGCwsLm+nI3PW0Vhh+yNWDI4UZqmCip5kJDQaqT2P/4Uu/4FHi+2
pkCcU96T1o9EWPP57WCXOg82z0WpP2QrQrAV52/LCh7qjwTd+2pY5IvrgUp9
mFNcOkhF9QkpsuWQexob8bMuSqlZwjVphJdyQ3wvhWD1yXz8zAm8c5fciuM5
qUWGdzZjdcm8Xsm5HZadPBquLx3S1JCzRZgIgxFFvh4CJHg7Xf/icw7uz3rt
sseE7WacD/g2fLPIX1kGOv+PMuOjRrfIo3iSrDe5ocGWifppN9VulNhcIcM/
L/YTpiUZ2HGXP+Ts4kHgvTCvGD0eSFp3uoUKSKPndyyyljTciOtxH6xvtUiL
kkP1+t3yfF5JAwlO/t6ndr2JAs5hb3xeP+QhfpVU89Ale2855OdiM3ur8RAN
Pw9pKRskJq7g8aNBj+e2r4iI+IChN6wo9/u4UB99z0CfhN3fUy+yB9gUGApl
SXHcsPqINmUQieHi+X30cOsgcW4X3v+4OZIzbNAsCVPta0Va+/jhU79pdrE7
HWI4+S88y2SgxlZ6YMVZFsJrm2tGfgIfG+0jZHz0emU3QIY7RuOGda0YHjv6
yPFrIu6vkBFmcFCmiwpkk5WPNDuw71t9K4VVgPOhpVv4BPV+UxEf1XXAvIVh
j/slxftEiAqfZCI+r7mjQ/viahKsCqziLeihQOOoipt9Bt4/Kxl1EJBV5KHz
6WDl0vC4nAF2pOHECBcSBFzr+CTnQkH+QPRLO4Z+LaajfsC1+GWa7/xJCM98
m1J5J5KI5cvwftXfDVTY93zTgAaTBAsnb93uXkKEk4oy8k9l5FC/e0bP4kL3
CB7fGFemvytJMyAo75m72mEm+E2xPc/9z37LMfmgHJN8Mtr3u6GvdKHCQRH5
KZbsKGvptMf3bR7aHzgeXCKP8PgK6Z2ZJAa+Hzooxqg8G8lF/IEnW+vTJNKw
enxhdLC6DhX4sg55n+fg+jUuLLmEdxMy8KekLLQcww3WCl9EmyxoyJ9XQV+0
cMceNspvumtPnVJZT4PolRyR+FE5aCqvyVu2hQbd5xSsCu+SIYS51F9XGo8P
YcdczNdsIMHH2ZEO41YybM0J/+0XxILSau97l8Q4wF7KKjc5wAUj/bTQ07Fs
UK9Z25C7A5//LXVYMfJ2Bx7//O+f6hV2kAYm/+psISwfxqiSAmq9cH+HPeu9
z1Zfp6N4v6VdMMP7f96HeOwal6kzMvDFrKbHxWAhuE4s/PlIEedrfC/zXKuF
5QP6es+axRjuE4Tg/SGPmCj+JdD5SkkY3na9MCJ2v5gLbz40zTL38vD54TXv
/qXNdDSPOBYj+mrRLtzPd/9vkT4vTQb6vNfXDTHCWQywiWbIeujRwP25dbSL
Cwv1H7K831wdJAlDX6M1v/tTKajq7jlH2EpF+nZ7KwO+5jrh88L3crcubjPg
wrmMsybOVjwoa9Kd0G0no/s17Ob2+KMBHb4MZLRXYu/NaTQw8bsTrs/tvc4g
XKWZAvRrv1JbR5iw/NFMU7Y2HS538NMZHVRo7COIbznMAbODTN8/qzlYXNHx
8+skA601nv/rWRp0NJb5xjvi8eXdnb3j8jso0Ln+5qK9QXSIOrY2PZjNRHyn
p8VKs2qadMSHWCW2MkhBigkWBos6A2XY0JWRtU6iVALS+ozP9K2UBvP4XT7K
QxSUb/7Vv1M4konPD5Le5aloHaNCRs14UOVJEhw7J/dCfBKffyvsvK14b44N
c8fp20RjmVB+Zb2wuRwZ9a9uGLnwWwTj5yXRryiJL56E+G8SCossK6rw/fjq
d2WXE3/g31d9+RzVFDsfrcc1OYqiZHgzej9J4vtCNK/atfWsb1MJ7o8Ry784
IrFVBNXj/SG/r4+l0dE85cOrt9TCciEIfvJXPC6RD+K3Ni40v4rzK1/sTW5w
j6ag8xAsZKm1lSkDb2qvCMgelwbb7mVgfpuI/Ak4J/bt5BkxEZ9wHn/uKbg8
XVXDhHy/4+9zEvH68tJR8tkOJzZsTxA3YQ0yQTE+zjFPi4b4BQbGTqY/b5BQ
PihwDFnjEMtC84Z1WSI+71RxvGx8OWPXtiEimoc0O2ddv8tPh9mlD344D1Dg
1btavzkCDayHVYqGbBiwZWgkL52M+wn/v/3ifbvcVyYmycA1eqDHnUoCGDUz
LvlHy0LkQYtLp7uxey3/dLb1LBd9Pqfk8bQsrJ6ZXG12esyPAx9YNMemXfj7
O+ZJU1xwBMPPt7bzL8FwI/uGWd1dAwaKV6GnHWo17+D7+vOf57R1Ra2PGhuO
JwVJbx2RQedzkZVFi5n0/1/fe74/uOzOIYZVGRO2vBkpvayOvQ8rYi1nOw3p
9/T6OClRumQgeKO05aAiCTzYWis8tlGA/5dzs8wUDQ72nHi/HLvf8/jTdZ19
puluGpq3+YmYh5vF4t/v2oDtWRmiLIovKpJf3NM98flJ/q3swgBZHG98MGn8
YrmMgfy9h898vWr0jwYes0+/r/uM1fOv97vPjEnB1CXfFczVAnBe0667jUUA
Gbdwz0isvm0MUl8W8oEEm37HqzkfosIdq+zJPV0MpKfsESnpstcRy8vtX7S+
rJGGOz9V1D1Ciaj/oxGalR6hykH94u1dEyfCCQzkH213wWeHgC0H6aeFwsbi
/87LPH9bJFtoSM+Khvik58N3nU5UJ+H607f23DsfT0f673qX/Eq+XmKg83km
KjU20xrfj6Kq/XlKs/3Pb+cLv0ksCfR3L9noFonH15TZWveTm8iQW2DiWsrC
cDXt7YmgUDLMOR5NN2higHN5oc0bNgP324jcevHtORLcqvhaLHCSCgpmy06z
LtPhx4owtbYBMbC/kZYc8EsGpDpcjdd8IkNDfsHQnUAamodWtF7qq5bC+8M9
wzt+LsCeq2Xx6bqTJBqUeOc6E+vJKD4IF4kK+Lvj/r3/+i++1fxMgNr9fWZP
x4igWrVFq7CahuZRYfpCcddSFKCjLZ2T4rQIXCo17wm20VF//1PGp3i9UjrC
J3vrbpNkk0jIL9Fm4b20GQ4VJg/d/+BhTIbIF/bvLslxEZ5rflake/E6Gfn/
RNf0t7WckYdbf3ebH76oAPc3aN/K7aFDvdzW5dobMFw6rubQWM9F+fqbarui
xjMKqpdqH6UPNJSQ4RjhSOuN7dhzvOqQ6eEsgfsxe9fK2bPY+H1Wv626qo+C
4kNwIVtu+THy/0fWl4fVuH7vU2me9jxWu3mQlEQKrUYqUmRoQHMZimZDJQlJ
0qxZNCEpDaSBNFAhJUOJRIVEUVGa/N5zXd/9vJ/r+v15zuHsvd/3eda611r3
um+QEl2Yub6HCh/7hkL7AsTAOmT0hWvIgkFI0hJJzwO4n+rcjfuSgR64Ht+b
XVGWO9rxfFNzWCj1jTsJ8b3g+cfzvksoUFzF4RVspcGH3TRGrj4LbBc6+Ckc
CjTajfQat5FgZRrFnjKP3XfbGYt7VVJQVp5+r1WZDQ8d5g+KaJLgKtup2W0Q
ww/fO4J6HeXQ/nOth2x5hicFzBOto9aLUiHqw65Fb2ZZiK+/pHrvhl+8GC7O
4z0f+Y4AT0KX3+O5LI6ez8GNpetyJ0govosYqV3LBCbSc+ip1p8Juy8B9fT+
zwYMEjzOGDzTmc5C891LOQfax5pwfd/FZxu+siuYCO/EJRaEXx0QRfiwNiDN
ZdkhPN+MPPp8ULWQDIYbVRK/9zHA6ghvs88nNqrnvinz0m7soyC8fMR+1n/3
WgrY1S3TnsHwe8UfO6HnrzkQYzg1vxAqBz7HYj2jBVhIzy7jnmJzqq8U4l91
31/nL3Bt3oD7+6efGGvQVuP5f7fR4VELkjhofP517x3232Olrsnvc6Ai/8/5
NzZFRzspUO2dqJokIAnzU1WyI4ryYDOuaiMwKg98Z3quHLImwSd17+ex52nA
ltIldIbgfJr+duf60n4Kej9yi2b0DH/j/pa1Owg5YVScTxs/WLhHX5mI5rG3
U98N8xvSwcyvCTjZNOiwtt9a/BOLl1/9nDvL2TCasohfT4+A/F/WF+Rp9/my
ob1O6pjSHzakk30YXYexej/zemjxPxnYZb3on4qELBgngNX2Zg6YzL8c27Ed
wxcrSZ26x6lwoV718s4LUiA5SKii3ObASu9DPLuukqGc3Hxg6QVJ4AsrLW7D
njc3nh6/ZnBHsJuAfi9T0CVimRkN7YNaRCdMncRwMfe8ETi+e9cacmDkh3HO
8wEpcNvyExrf4/tvaD51TrDw6nUG1AuIDKhn8UGyoGP0uL4YOGs31PzF6vka
+n3LgQ9sKNR2slxhzUb4/UOBplZ0Lhmdd40Cn9aEckm4W9muSMmjQOqTR4w3
2DndonbLy2sXGcoELq7VxJ7LWtq/k1pRsuAtoi11ol4K8XPuE6M3/ssloXn0
4LOzu9Lccb4ivN63vgrLbzwsRdHAaALM/C5ufVtLQfzIbY2Tpu1tuP5hRWPh
1T5NCtxxe9KuLUOFx5XT1IAuJjizXmzdMUWGKxt4NbbdlsPq5IYMiWvysGrw
XYeMixSa1xLvrLWKvkBEegXfgj8Gj36nofvz2MKSFcRPgT818QKLgwkQVd29
ftXv/9H76qFnd+jj3z+csSTN6TQFaCxzI3cJGkzKiglHOtNQ/FOJ+5otScb1
lq7Vb7d70UhD5zWir2C6VxK7x+OVt2onCKCRePDavv90D//PP+YL83wZM5mJ
+LQvfrcciGrH9dvvrDq6Z783B+EV+WT9svtROJ66HvJFMhyLQ9z77a7IViyf
koTo7mP8tVRR2KuvLCJQQgJftlnB3yEylDxYe0tVi4Lw1c+yX/RHrcLQEdVw
78P5OYMf7C/qQrnYPd17fP8E9rwFh0JoHnz4vtDCax1p1iALzYt95PN/KXYS
Ifb54S9tNhRwZJfdLaDjfvBbaxcaHByl4WmHjf7LLWzwWhGYvYgpjPRIolnm
h1XO0uHMAZNH291EoOzGK38NIq4fOLaTbK94CffnqHsvWl57hwgjO+4TttQR
YWK24ZF4K66fu1ggZoc2Vtdx/TPWdl0SX1aH93/l+AvPhhaxkL5w/bVm47/9
ROTv2v25sH1CgIGer3LM0OD1CBZQ3x/JI3XifI37K+54JghQgM3qn3aMJqH5
YsVK1bu0nSSkh/ojScPw0nk8H376k8RrdVIG5X/Lu39f8jOocF83Y59+IgVW
PL4gMIrhhH/fivQ2K2A45tfmb69v4/sIRg/sGZZNLNT/sD9Km7mB4ZCbS8LL
iu6Sofhq1JmXkxTkl5HUJtEkHcBE84+fvg27n/3E46+755Y1vKEskKO2dN0p
oMHRDbPSnSlUyN2e0xrvTYTqtv47o3lSoDdlmXBHlwOur8O+fhBlIzzqYNt/
Q/6fFOKHt2sXRHf/o6P6ZEfCEUHqa7z/7R7aEsX6RYR9obm9w5mSoCir+d43
mwQtSxj6PnQa2GiaNHkGCIGO0IXjF0KEwev31Kr1TlRQYy/hOJcwII/0Yrrg
IgMSHySurLpNhddNKxmxHBaKJ1XXLun+2U9F8embScnk5isCSB+I+/64/YHG
OoFjY6M0eJy3NOd8MQX6m3YGDElT4NRv/cUfVxHgPPuN9KgNPp9nVLZe1o2Q
B6rtX1fmsDLISpLc1uzG6wUjZe13Am+x7/fIOWAcq/M/1sZd287DRnwF8atN
G558w/NrVOANx8xYMkQMKI75LieD/HR7k+EFOpoXvlSLiQreSIGXBfHlce74
fJE73+7/8MpMWh/ny+Qdhl7afzquTkQb0gAR/Noe8usupiA+rSV9b+tjU/zz
ndV4l5bvw/kCN/l+n/67RwZ4P28v2mkoDd0rfeW/2Mgj/Uju53P3X2NUy87K
yNEQPif7f5gg2EpD8o5dY1vOSUMkH3HSeD0T/rOHMcLyXi4vvb5jnAohZ/w+
MNpp0DBY9/HVKyxeeKxYOoQ9Hy0vzQ/q/9P/MdtcYP/OG+9vdX+m/ex0JcGZ
8IHA1kTsXgixnjz7woTNCUmpA4GyUHZWquKrjizSo3x491XGkW8EyNl74tgT
DAdEm7T8ym/B8RZnsdtQWSYRxUNXqx0TlbwE1C/Q95ZIPe2L16tHr5k+HdxO
AxVVCz7/UhZsbYneI3gf5+ddV+t9WTuP4cGVxl+KD+H8stOB6RKZvRwIjVb6
8RXDh7n0Y+tzU9jwV0vDjZciAIa/HeWSj4qDk4Dzhc0Xcf0A3wenZwp4ZcB5
st34o5IMCGvwT45uxeu5xj4DSjE/GdW7PB9DFFbFYHHgsfYl0jYyJFREJssW
YvF+6PH5jbX4PJXLP1bLaYxJPkTF9dlq2Adsgljo/KUwn26gWFLg9uqXj6KE
qXBJiPfdm3L8/JQuXexWnkFG76e4aKA79iCu5/z1oE/oAx0SQGy8pbi/JCRV
mcRP6UjDW5XeSWusTpPy4xXf9Qefbzz9uXvznlIOOm/xHkLb5ZzxeqMr2aAs
GKsLNHUVmgbkiUCk/ehUu43vE5ru87CN+8JGz/vchyBh+v/4ee555UDom2dA
YRm9Q/4ZHSrWGuQsG5ZFfMbsx6rj9hi+Zv42W8l2JELXP7d3UcpM5O9zTzVx
4c9JItr/Ib8Lv3PrqCBMnjzlqVS/GK7VzLQRnXG/67jFrfzqWF4usg8aVP9M
B9JJ2lVpDAfFNvw8bwdE+Nn2KOzdXRbye+G/kpF9kQf3I1P+Xr/9rCGuJxm0
rGxouRYJva8fMTrOunQy6ndRQ21L1wRIof2rEAPjI84v8X0Lj3DNmtXzTKj1
H/RTameDGSH26okaGuKH+W8qOu8mT4B4P17BPX5EWN19YOPKavy+LCziWV+b
x0T93XWlV7SaMbyO/J0zPcUWrxZF9Yl3Zv2bH1E0qPEjfOXbQoMmfSH+HiIT
ztBCD3bEM4FfYCSYOE8ARcPFKV3XiZC5Rk2XvIwCtnXVtP3HpSH3CX3TRAwV
VLpPBzE+YOfgZF757HE2wnuk+LQYSW18frvFdnrVKX46qN1/f3MRdh6nXq8P
zMvB9ZWqLiSWKA/j/SA33847537g9VTCDfnZ4jk62reunjdo1BWVRf3rstm7
OzUwfMP1c/8Ztz5DH8M3XDzx5tOW8M9/iUC/seV1928SKHVaCebY4/OOwNpY
C06qFJz48knN/zobQp4cf0GUI0Hi9JtDB1Q4QC912tdTgs87PsQJC6pXk2CD
yTqR5C4iDNl2XyAuECG6ZqvcBWUC2F76ea1IjI32Zx7LmtAexbNQ/mOVlpXv
MKKjefjljoVDGvZkVA85Xgy/V7eMDqny7z9ZhGLx+2hv4/IiKsInBzQLfgQv
4Ph43MS0Tj0Mv0+/wyyWtclLo37gnY18R28U4/1CTy/WY39TErovOQbpNff9
GEhvMMJjto0fi18vluT3zPwiAD1X9cbTGFmor/Love4pD0aucWP3RglI30Fn
s9T+HT0M9P73rao9Y+VHQ3iJZ7yotQl7rkmSBD7VBgZMV2eXS88yEH5r9Vub
NMQvi/xsp9YtWrS3AY9XSfbfzWS9Wah/5jpGyFZLpCI+l8tIyJolcbgeq8bV
T2HWvbie+q5lCu0GFSSYDxS9szcIi8NdpQrCt+nQczhD5MdTGmj7p3ZGt0kj
PGCS4j31Yy0ZZn+IlOSFUCAykX50zIoNmrl/tKvsmeB/cHX1MmMGyoch41Kb
84vJkC93+vyZ02Ro6tyU/7QNj5faqqIti2fEER6peOXT92CUBOTvg+GVz7B7
/pWU8nwrBfr2vTjS/5+u44Wsw0FP8XhuO7JHvG4HCZ2PwtL6hKPX8flwr4im
qdQ9XI+Nm080p983DSvgfnTceao+9cCFyn58H3yeeao/ZR0JGLTs2HICDQpa
zV6+dsE/XyZdo5Ifw/XnW0jnLmFxf7+FWMytnTTwTdimce4MHbwuxQrzYO+T
W29+ce7ODxmgwvjZyKhD+hQ4cEFi7konE76IVZGuWLJAdFNj5EdVKjR4lcuP
xBDh1GWv43wFLDCnfn2UVE8Dfa9OLY/lRKTnrSywJNshURIOZ62+28jhAaVh
F+Zlbwrq//oWmU3etGNB98B70V1aDOBp0acrFpCgKoEmZxwpCiEayzgnttDR
efAPmup4aUBH513ynspt1Vx8n8XxO7N07zJpxK/6+1os4oIirn+9gcR+JHia
ifwNqmQcFyoKJMH15KDhoA8BhHb+0c/rkQadreqqFiosmK0sZBASqKgfrnLl
xz6fvxQ031X7lsNRCZdBeP2J6U6KghgL5cP6rkRdT28mqi9W5dX+C95AAaOj
F1iiGlT4ev6fmPUAHfXj5pNc35SO06DKdsJGr5kMB8+4hVdKMFH9OOezcjz9
CRPdF2/nG289W3B9EE5ufedpDhH1sy99lNuR70+BtzxeFyM78X1ibn+5tlCp
RmWciOKZ08uYkNXlUki/LzHBoLvEG+eHzTgXthr6EFH8EHwjWH6WREP45t+D
lWXBFDJ8km65yF9FguHPF/h+nWEjPyY9ESHKwWP/o1+20T5k2QSuz2/9UVW6
Gssf3H007vfl5v9RKTVVtftMtB/zBo6lNd+ngdqTo5/G/BmwtmDBuKBTBvEL
cy+U1u/dLo30MLj/v+G3u002XGTBgztToUfrWGj+VfBGnWdqNx0+uF49NhVD
gXIyf5k8hsvDtu28Io7hR8GyEvIlNo4P5cajzAcTeFG8WxJ1oHZ9OglU9BKr
5WqocC3k1a3ttTgfeE9JPivYgIT2pbjfxzwxJKKZjsX5i0Zjvc+pSD+vTxqL
F18lYEeS66p2F0lYuNBfpjTARv3foC7h6dRgMuzzO2GduIMBLn2NSZeniWg/
I+HJoETyTiqah14rsFOLdJFB/LW2WgHJfgOcb/XNHa6uGyHDhoZ4lZUHyTAz
VJ4sMCuN8i3LNnGfsBjeL0++tC2GVxG7fwRZxa92RCgXPm1ll0RG9cHFeYvr
l1+z0T7BrS+kqXKsHuO+j0Hrn0nPsfqWOx9XGT+nk2aO+4ulbIa1ZVo01L80
YJ/NnJfG9R5dLEvb1v4hoflPVU/65rkcfH59pZDj2Yc9H3boyR+mBVToKL8d
egfDoVGLLITz3xCh78VK8ZutVAiIZr4OZFLh5+S+Is39AqDkuFtznm8xwHU5
o9K9FLSPocug1PvokOHHmiwrvVxJiHJ4Yrn6Ll6fH8vv4pAs6RByWNb7lg8b
pB1NK8+a4fOet+yULOdWMuoHxDSViD5cR4bdyetupOYwgOykl5H/XArNi2yC
ZceeJpFg7bnWi9lWRNTf4fqfh7+a2/g9HueL/rY49G5sTBKdt9gu/7zxU1i8
efGE95EpFcxtyR3H1Vmon2ZRYc2iYvjBqXPryotYvHt3R2bNtlk2hH8dvHK8
nwkdk8F5PBhu4z7fy7t6BsPPyiB84vVof5l1Nw20Poy8LB0kwNbxj+3ifbi/
GnHi4b95S7zeeJu//+ifMSrS4+2OuBvN+4QAcq3uU3c8CfCqaJvUwDE67HII
/ekuzoTXhc5DznoycDS2nGnix4GtvB+K+hvY6PvbOffrCE6x4UzatIcOSQYq
+DaeeeBARv2R3I6DW3+/wvX6Yg6bh537RQdyvYasUh6Wt2j9TavNmZDruoq0
R5cNCZF5W68skUf17sQIbc0nJxZ4Lcv4tW8JA7IDZ1vHKSRo6Ws7nh0mCaOV
RetWlLERvhQaWuK6FGgwZWLtDSupEFcaXaHmi+8b93e4KFe14OfTICU/1JnD
Rn6Rs4vZ5Qew/LfTrNLs3BiWXz9vaT65VgThvZabOb9Kj+B6nm8/1//QT2PD
+jct220fMEFLxLqj8hoJ9TNu2a3he/pf3zDS/0IPUODrb8ljQzIUhL/2V6me
+LWEg/zQhx/yKDzTogA82hdwZRsR0l9rzavH4PHfiXX+0a1OKcTHnd0aGM5/
Hsdz0vScjM4EIhz2ynm3z58In5ZYRgqelEZ8ItGkpH2Z2djvi9r+Jxy7l+Wa
CnezXrCgb8fSXnsM360n5j4jY9+bq89Z9k98uOYFzp+/tznK6l09zqf97f7B
LGoJDTqjDzU66LPh04S/w9dHkui8nfpiK6x1gw6tbx47XqWR4bTxWk37u0xU
77E0WUW61XTkn8L1H9T9t+pJdLUEWNzsfi7Pwes12b3bKqh6uD/uH5J23jVe
vJ50+vRik30YHTh/v+w0d2eD7bM88rFReeTfrKZZ9LaYQ0N8xO7a5rMLxXSE
/1r6d6y9okaC1wcpzXxYXlbcNKa06g8bve+xeyOPlR7TEB/AbanHU7tLJJgT
zlVzOUIEL7eF+VZFGXhfELqX4SoFUYeXURWuseFVcMX8/hMceJrWU57xHPcr
c1rOo6R+H8cva1KMWx5huMB3r2IU0VoKroiKjm/H6qVsbYunExhuvOjC33F/
Uhidx99WPdXnXShAXF9g8XiKBN+NSxTCMHzcWH3q9XlxMnQ+E+znS8D9tS3X
qh8N+R9/ARdbnbQ3rP/xS6hYFWBYwkTzsJsGEsOZQQwo2Z1Mv7QUyxNl24xn
DdjIz0n6qJp8/hoJ+BDusFtFgwT+Bi25Yao0FK/sdWiB8z/JiN+bsEcysPEH
CcQHV4wsLqBAlFr3bEoYXr8u1b1lc/g6GemBtq/s9VTG6lEuv4Na5928+iEV
rDvmQxNiaLB3xQfRGVEazr+St/5ExJ5vf2+JqPl3MsTp3Lj2TJCE8JHm4KU1
Pi9wvaGQhGdPHZeSEB+u0+DCK+1/ZHBbkTDlspoK5Edv33W/lEV8MI2w+mOT
EUT0eRWT0m6BRji/I3RbZrDTIRL8uO8jPLiHDB0jiaVDJ6QQXtQLCn3Kc4OM
9G7SXFN9QJ4ByZ5a0c8wHLRlx8/txrW43/rpWoWoR+py6PPjtke7X14hi/S1
8pyz4u49YyN87Hqr6JvgYyrEd6moH0imQ8sv3rWv1+J61qeP9eZ2HcP5ayUz
UZr6o0y037XvOSizeqioX3RxI+fnfAgZ0qt3m60epoLwI1Wn35Y4HpkmLBaT
GcL363izohJvfyfB10ORJaxgIvSPSb7Wwr4X19+A8qzm0A85/DxyDud9lcTi
DmU47uiUNQlqN8Q2/7f/yo13a3K7s3STWeh++BItnwmtkgL7PMkrdYVKMBN4
oOyyEo5XqhYdTtyuhuvFHNml5ElYi59vHj/NidXfpJHfmz11z3LhPg6at9dZ
+KqXNjEh5eTy8t2THOzcPz19lQePv3GpZrDtBQP1hxqL+95rlNKQHqFi6Rqe
7124vtvlGcuqa/r/c9+8botmKON8ypsZlBVbtPD5+mfD1rnyGRKaT6x3TLnb
tZIETQ+X6il9oIBF3J41AyTcT1LQv6PcrwrvV3D6Zt83GRLhWHJdWj2RDNL2
sg3Jp0iQYipbwm7F8srTABfzaBnE5z7lGXQxQo8EtPv8lZnmdNDl9LgsLCLD
mYcWK/mPkGDN5KnbG6dJ4P12NOaHOx2SNVQ4n50k0TyJz92l4WY1DWS7H74K
20gHJRF/acdzUggfp52a2egyREP4eKhKxqyijI7wa5H+r/LMRhJ6/yO8sk5D
i3D/1bCkjm/t2J/j4mO5LUYiG1zYaH8+sb92n/NvOuJ/H97raJT/hY7O76Jl
71JfuFNg7E72RZVZCvinldfMYfmby091WG4Vcm8THn+4+1RqKyhpjlgd8d55
W8XNjXi/6FBQmrAiVjf+1B9R/DrHhPJQ/THWC0n0PLn1BLe+9SopFFuRhdcf
DQPvsscl8P6QicqqLHVPXK8W8cn+j0/0dr1w7+dhMvKnXr80patpExOdxxMX
bqwadJNAfCHx9ifrVziwoGw6jD5xBMNl64zNkv9QwSKyo/n1VQb0ld+8mpVM
Q/NwwXFbcqUrvt/zXf7duvRAMiwth5K47RT0fdhJipd/GZOg87b9EP9SJsTz
decNnGSBjqGabOEQrlc220k0LXxBQ/3JlSnV9FYjNppniRqK6f81k4FqzoiI
ugULZtr7ox6sxu8n7XooVd+cg/pZq+6vW0LD7t+LiduPnCapsNp+2G6migwX
yMSqW9i5nQ7trzO+jL2fs8K3NZzJQJ3SWLO1Wwp05uofL5grw+GLL25pj+L1
+aXmbnNZLWE0z10ZODormYX7zzH/VpZEYfUGZ1vF1m0iNLD0/LWXeQW7r7fv
qtwfI8HA9wfkQ+1SaD9qNu+44PpBGuQGFXbsPUaBOz8SvvOV0ZD/2JMy6y42
ds/13y9hOojR4MaReQ/hWHw/2OjZL/WejXi9aFoQd2JrCgfNh8scRs6rCrHR
PuP4Sd418RUUyJzatka0jQzvTv/d6XqSCDmNZx6JYc+h55NB0P5f0tBCET0l
j/2OXczRw5/EWOD7Vd2KfhzLexTr0FM9NNTvKHWzpzSEEeE9b2RigCaGm9ac
mJm+QoSA79cZMXGScHz+w3f+XTTou226f9qeBi+jLbULqf+zv7CJwwjH8gO3
H/SwaGAT33u8/7XkCTurAqvfufu0EVeibArtWKjfrsews1t2lQQa6W6+W4/+
d/9NiZftcLyXcLyZxSiWBWEF7aA6gjLcf5tW6m+N3Y/iLuG+LXQ44jwbKLaD
jOvVv1Y82zyM44WTrM9zaeU0xFf9++fL1y4DBuxMXEt5rESH7zJWHUKuFKg+
TQoz+06FF4J9PQ/+UkBnIJLmX0YC5rWz1LeDuN+o/fdD2zUX/4ezo0+1UijA
s63Y5L4XBdTWyotKXSfClZCZUxF7WSjfCZrrGrxfzEZ+YsqN/EH+fQSIFm97
GnGQBG5rxt6KrKaAyg8N/v2K0qi/zNWPT3g8knOijgobbU40Z2Pne+LZqfDo
/3DlqdMysm4cMCxgPFSup6B9QieNqaGtAjJo/5AvzKxkiykZzfNJub1zBp+Z
qP8xmJAtPz2CxUertJzTNLwfwsXHJq9rnqjYsuEGcVbDg8wBVx+Xnm/idMR/
SBqXvxkbRAesvD960IgOhUMpxRwMt9zP6x2txOKsz/Tvu+4aBFSv3Zq5/dhl
Gnsup4svHhfAnisz/9uPMAZQv7CT8n04MBL9L9NElor8nARJMknXruP53XaS
6Dg1h+t9k/i31GWvxfNra+mp8q/ZdNiS2rrFSooOV3/SqaoGJMhIL7GZfU4B
/tEOmbdb8H5vpMBM/D0aG+G5jhXVGjfqlZCe2Vyhato9GgnxEbl+w1y+aWKv
53xcMwPtdwRc+Nsp7SoJkvC1/1SkJHg9179g+QHXs2h0INffmWCi3//VkCVU
VovnH51lfI5mWH1oXRscO7ybDI9WnJDQa5VF8y6/uey/KpnY/9fzos/f4wRY
ZVx1csSQgvOd2pc+H35LBGrHXvlH9mSQqt7p/C+Mhvo7FKVjF+ywOLH1MHVf
dw4R1AeCrp24Q0Tz3dDX++hGWPzm9scz21c7rMbwKbe+3Pyh+rZSJ65XMOJL
u+y+FveT3f9Qxf68MBv9/YajIz/JETT0+wwtfk5lfZDE4htlJCaACPaM1+0e
ZFkwjCtN8pKQBkqi0wrNRDriJ+wa/PSwuoYOQZ4rr3ZgOGSdy+ChOxpseBTP
EEjD7nn89aRx9UUY3jfgY3RvIcDzPZlLTt6kIzx8sJG9+zANw/nytz400Ciw
Ruphfi4vGUJVt06H1BHAjKjj5Gcli95f1ervK94K4n5dlqyrm4qw31fgEb+r
M5oENXKZ78pes3G9r9P1qf/pF3P5DtZ7hs6qTZHRvO3l7is7E8xlYMUu1ezJ
IAVYazgl35PHRPoN/9r2hsgtpaL+68P5fycZN4igyTQ1i9xHAeNe950QSoOT
uYvvh2vQYau+eVu88f/o/1X9atzVR0b7kqFPqo731uB61pMiEheHH8hB1uyH
T5QDHDhrxvbrl6EjfyGnipfeqp0shIePrakrIuSSUX7jxgOdm317xLG6atM7
6bpNd2koXxGdGu2GpNio/7U72vFC9DwNllJUx1acZsFPJ2bZew8Kwm9JoXKi
7/bRQCEms+sfVmfMcyoS7mD3i+unt/W1xzfF7TSkt7Ty8VKh9I8USPKY+dtz
kgSWd5+/kVShgZZ4uDr7CxUYK96nvhUion7TsZ0985vf4Hj98kxH8IZ4Jvxs
dvkyKcKGLULXdXduZ4Phk+FMd10mELV+uyy5SET8164UeaWtBBY8q02fmu9g
QFzPXoGOUgrqN3uoCNXXYvWNfN2S2UEM1wfviWFEVougz9t8uJfV5yWL9lF5
V5nrH/1vX/D8zJFd38jQwHfEzaEMOye7/rKvY7/rT3FzW/BbEiQ1SPSq1GJ4
U5pXZ40Ljn+6AvK+izuQUP+4u6w9ydaOjvQ7m4/vmfTuosDVA6mqmpa8MP21
xHcGwylc/mF4V/oyrTJ8P+xG88lJ3mVY/WOv3b9iDxsyDeWun+aVhxVn3gpH
zuL6oUGG/UE5ZSyA6dQ6+T8U5K+1f9L/V/D/nA/ziqgWfks60icPDv+YVNuF
n0+1eB/boosUOMnW+7s2jwyvJQtmPUWpCH/x1zc+ZmH1AEveQPOrDwN8UvI6
KE2SMJxhfSdjgggpm65rTGjSEL9Q9s+xZjdvFnQY2tQEVXFAUfDdW15vKjQ/
/ZzVcI4Ci1Zbz7T9YKF+w5WgwIFzu/B+jVq+fiZPGAX5UxlKP9JokKMi/gmN
J1fi/llZSLesbVuSy4Ft715uly1hovfx8kpS8PVyfF+nYlxww9k/DOycb/z+
bpwORDLTjYjl6WXUqqVFGO4ujw95apNKgWeHn76aWEmHW23TtU1Y/Kxc9oA+
zaRDPyuuY4zGQv1JPbNeowArBuq/JJjr/kjYSAKLW+tkx7C81uE7aTyoj98/
n5qPg1tkSHBc7tLaaXVJyBKumfewY6B6ZKJWzKwgn4rm8emHq8etfQhI32+7
/T4hi+UsxKfSPO8Su3qfEHp/hBdJ82uuMWHj86XrPx4gwaWYH/MeDTQ0D5I5
BA8sJHA+QDj7aLTpKfz9E7O8JwVvsRC/2D7938ZJYSKsf5y/veeLJIiYt7md
+UeGQQ0V39PeNGh3qw/ekiIPLuStVgdG5SBuueLcw014vex8+l6g3zC+H7lR
12hXcLUY2t/6RvDuDu8hgfHCH0tXMSqkrXGUk6tiIv5A1jilNMWXDOs3e8x8
88LqKVnbeL39Mkgf9lO9/4Wt2L3k9ou0n9ed67aWQvtbwfOv0u9tpiI+Zl7u
iscpL3D+tnri7uBVWiykH/LKbzJ29hAd6fEa5m8feCKM8/MH7KTe79zNhh89
2a3+NkRY1aqsJ7xLEtVfn2Tl767uwufXMzIJTWbHpFE+T6qUnFipidX3fklC
PK8ZUHJgRZy/nizCM5GNGfOm0mLIL1IwaZn6s+8ykKbv6/ThpSykZIwnLI3B
8XqDOkfk5CsqvN3/89mdzSRQ96GXfImnQJDPaov4cDJcqgmt/lYpBumMsgWT
flEYqLTKCZ+gwOd1ogd97mN1QJ3IZuM1JFhy6i7zJ5aPQztyrX8fZwDZMzFM
6SUdXhLJY1LHCGh/buCLY/KHJNz/5rnbmcyHIlJIX4a3zrDQXB2PX7kPqXtF
9DlIL0vHt6HH/hAVnY+qNQVhPEFUOGp1pyJvqzgcfL5uaWQ+DeQ583VCJAZs
2FqwBbD712TX+q3tExueVlrXrCyTgvmyPeInE6nA5+nvFdeM1x93Y04uGLFJ
YBarKjO7kQA2SUb8yUdI8AYOqD1XxOIIVH5ff14ePhOb27ecUYBnmul1oxgu
ZSt5OqmcIoO5u5kfZZAKGlYuh631yJBtI/c9SxDfvzU/v33NhCQTxUOP54+j
krF4x53PSWva+EyU4PqCj/OF7is8WgIDnUYvGrOWwF1lQxmFRwRIvzU2JhlA
hn0vzrqdqyOBeCexfnUrhvM+s3O/YvXBTIPLyoxSEsyPshS8TKTQ8wzWml8X
9pKG/MpLy2bW+6aQYGVx/MdWLXG4vMBpWCa6BJ1X4wyTU7FYnWVkom+uGUmD
5LlovQtYXmSd282j/IoICzrTgwvYP3P1aWqML0sMxZGhbvbbJtkmMeisbJKX
x+4VN55bONx3bdknA6sOlPEqxkjDm4QX+8Y18HiS5140wOjC9bz+SOrNGXsQ
wFOSbnvoO1bX2MR4mLfQUTwy5ATfZJzC+fxnvQ5yfHOkIFGhiy7qLgU3lK7L
wiPs/5PZOnWkgQIeXnKthZF4vNKOYCs3Yfd1rG732SQPCaBc+rVYcoYDPN05
/gKrOWA3ebytcBUH918yXOb9OVYU9eOl7zxlPD5Ah22vtzhsEmCCw93pf9HY
/eby2X0OaEYmdWHnwdPVy9yAAFr+z0UtNPH9Q+vjm+4+jsPnObzlZ9gfejFc
YnHz3vp1VHgWseCZbUlF/S+eJe9YQxwKyvd31eYi0ooo0MVQbuPzJEPuxw+v
dv2PX9S1m1MDa61IaD78RXemLU6QgvY1zusq31TEcBd3nvjqD7tWTZsBniKO
DrexOD1n0HTL4QwBJJRU1FSUJeHB+dWKqSPS6PxU31+pmt1PQfyLvyeWMf+6
0dA8Vdupb+PDWjaa36xm8FOaMVzD5T+kyK29ZXEcn1dy8Yjb9/d9rt+oIHiT
N/6HDw3FY/Oxqq0LsyToE3k52XObAuu0eYM9LrOR/ypr7cmCdbm4v4+o4u6Z
SxQq3Hq3f0PvbhpE3JELpF2QQvVYg0SHjW0Vvo+ssWD19swWDuLjjn+McT7q
iM8PNeUKE4Wtaej3fJzrbgi5wUTz6Fs/CGcd5vH4qrxYQLxCHtdH2FOVGNv5
m4zq2dlVz3Xt1PDvKzgotI2wQgrNmzVDbVMisvB6Spn8WvXyOyn0/PWGL7wq
Y5IQXyWIHBB32R/fv5Bj2NkkKlHg8egfB9ZDSZgO3+P1no+C+osastbdf7H3
t+D3534wBTu/uSPPnK7g+MNM9grtuxPOx6l+lWtnT8b11G1LStttsHuc2bT2
LP2gAriZHlx0KIwEmpEbWtRUyMBzSOF3PlavcOclBa4WZ7YWc+DXiU8h4jUy
cH/L26L3fXS0P9ug7Wud+T/60dnKFkGnwgloPtK+9kfR4AFp5P9XRdsY+zaU
CYWaBjwfJuUg9q3aA6XtUmhfIFTpz4KCPAmOLXYW9nCiAP9phdHCGLy/mza+
uFTbigoXy7oP/sqhg16Ag3SpP64nlneD4nKRyQSn4rb0+zvooGHIvp3ijtVP
vgeK2j7wgHndOHHNYSbsjxqSmv6G90+5fKwnnYZmJSO4Hp/kurjMl0IM2H5Z
Wa8Sy4PF5HmL6hicv2T6uN9C9IQMXCninVXU5kAZRaI6ZDPud4j2pzI+R/z2
xPk13HrlWEjavgYjGshWax/MHKCAklG+uFkovr9XGKLzr9qdjeYVXWauSovM
mJBjxyvN7qcBX/7NNWl2uP6r7lBjmtoAFdW/O/lCG41DGNBnaRzGwnBdreSh
zP6b0si/Y47eS/92ggwTzi+s9FaIwHHlvNSEddJIj7Xj680MXjP8fhwxDrwT
FkVA55lwvfnk0AAB2udDTYcUKHDjyaOQ5j0spN/zvt4jY1UZAa5uCu8VNqHB
18DJfMoFKsIHe2mvxt1OUmDJ8Nvjt59TQVrgTVH0PQV4vEzpx14rBTjqPa4f
k0eD5dNqZmFkGbDlGzEbJlARf6BjOaHr3lMibJo9SL56XRIOu0XM39uK94OO
/2G7aW+XRP33H0uSk25KY3h86uKfqNUU4D2wL1+viApHLipuFPyJPe/5UDv9
S1LQT9xmXVTPAKNd50Qqh8jQccBD78oWKvzpUfTepIbvq5hse3Xs9Sr8+UQ8
WhnXsgiL+wsWrnYLVMj/XBNUboP/d5MfQY4uGM7nzsP9sqYSFNbJwdkVB8/v
rpaHwuzzkZnOkqg/EC766oXXiBzqN0+f2QP0RRwQVulf6FDkYDh2uDznNc43
Cnj3PGGXLQX2+12eKEmRhGtrXAOv38PidX1tEF8fhgtKFZ+FpNMRH2zdpriy
TBkGuu+6AZ8Ij+1xf+sO40W64n/x/YbnZ27U3vhJQvlGfdGxDbl9BChYWMRf
byoM3bcmc34Y4PkhxkpHr0qMDlQ5Rf/ENRT4sGa8IlhZGs1P9NOyni1bTkJ6
mHVnYfMDPpw/+EJim5fpLAPhzcePSpxn3uF+PIrl+tIhRDLST1SR2rE/tI6B
9Iqf73x94qqENHQsFil/yo/vU3H12CQZ5w5bYbjxZv/uO03lZLhaP6U330dF
/mEHe4MkrLZRgD5Z3eaXQYVfZ4Q1VXfi8fTeurFM614KlJncmQhdToFk3qyn
T9pISL80sj157L86YxJM9u+7wQE4U5Jc2UuDu+06W02eMWBEk5Em+gvXEzy+
4apXkxcNOM6uL6Pm8PjE9e/Sc3Oaq8DilPS1a9KrHpPh7h6tiJFTOL7m/nku
Ppm9uU40/R8FqxMk5s54UeCnp/1WK0069ntTRVo2KsH7znOG8wF0OFTg2krL
Z8DRhEiS6TcGbEsJdPTXY0FUnpD0nwhp+HJQQ/fSATlIH7r3yKOYCjWeF0lC
FjRITP/If/U1Pm8QTjny5t9mDvKH2nFyh8xzD5z/k3nhaOYPJt5vOuF0NV0A
w6lcfnV0HL0hKZyF/CgDRjBg+omB/nz1hV/8ixSosNFLuCBIiwT6Fzo8900Q
4cQmjZjadgo4qJxJo9yjAy/fam+lAjLobLINcduD7xu1OB8IS0/D+Z1f7rPP
Tx0nIv2h+ZGK6j6gofnxrdS4oz5v2CAjbdostpQD7Y5zghmrcH9tZwcpObFJ
GuKvvz+vs3WbhAyYs0T5T7bIgcPFE9vGsHi9bnbay/ovDauP9/HdG2VC2D6J
Afp2NlRtGne0k5VF/nvSdTKrpB3IsGrw6KKP4TTYRu3XfbOBheYHSu0f/l4L
xOf5D+7rbh7mwfV8jrhnPvuygO9fldh4NWXtJCN+28Xux4lGrTS0XzKu6J32
qIUDWco3roWGcmAhNVRXE8vvffq7PRJUGaAhH/mFRxzXw4ys8yh++IsG8Xw6
+sEmdBiVU9nDJ4T72X15/GRHVIIk6hca9KZ1R9fg+39ua2oqzwlQgf/l4ct9
iiz4olO6xkOKieZDpo6ckCAZKppHLilzIp1l4Ptn8W1xWuI5DNTfDrSzVm9y
kEH5pLc/zm05CY8XVBOvAGWSFIwUGvGvLZSC0Lhrr51yGXChSk34pjYZioLf
5Ne+kkP8o1gztWf3V3JQf7tc0M+yNEEK7XtYaR7688QF5+cSr356EeZDAdrl
xXsrsPhwmq2b1ozd+/PpG9QffSGAc+nTjJAxCdA9tP4gD8+Egf8DZpqNHQdO
X3mwp6yNAyYRbItyNRLUUixr1MaJEEY7kSSSTgHGmcacaU+sbv8ecY3RRYIX
MSMKwktooH5i4PPD/9HXKWqR2XpnnA5NH64o6F1lwkVijm34FBGKn78euusp
Bi92hIFaHh3NO30CibdN+kRQfqnJ4Ftcd1US9VfN1qVt82Xg/g4Wn+OXXy9k
IHy5IBB9Yf2b//ETK5/8xSgjweGho66/88nw67TG+g3GTNRfbVK9dfdlFhXx
jSaZ4wkNL6TBqTHxcIEkri/D1RNaEzwmHdRPQvxR2ZGQF79VSSB3l7hTcDEe
33L+loXXh1OhRaW8rotNhzUXeiJTU5mQ7d2UeRqr4yKVN0a4HiPD2NSeLUeS
sPpmfep4+2YyLFpK/n5NQgReWxzK/uZLgFbbuIMFgzg/4P0S5fPbbuL6kqcp
XimqSzjIz+TYoQet8sfZaF7kt1ncK9aADtZ7K01PXaOB0M+anEU+OF79VNoh
/F1VBvmrcb9/xyuJXDEKDWZSu5sqvuF6SnyP894tzqag+sCDtbuix4KF5hE/
XoRmVr1lw9xA5cFefRY8PjzTkOJJRXrCtcWmoWvYTFSPS32q1GleYKH7YtAX
8cW7jYb4lMqRtq3NiVKQsY235JC9FPDOGVRGqRMQXvJokI0aq8P9WGr5W7d4
aOP4cZlCwvCsvgyad9JennjQlUxD/T8TIevk5T/YyD9bbGNNUbIavp9gvaCc
FWnIQvkwzjP3TpYXXk/UF/gZPBEjo32s0G3dntc/k2Hj9OJrBUZYHtGOv5Uk
SIYV/FPCRFkM19j6NuR/IoDfpoopg3ckCDqoJLLLRhL8sncEJ6lh9Y2R7YmA
KxSkj67Nyp+NH6ZC5aK9WX1YPPhsa7JLLZYCP+YXli9MUyDv7ccG4W4CbBCm
+60apMHfrHuzQe74+XuQmJIRaY/dh/vLvuz8QoJlV+Jz6El0xLfsm/Im3GjD
5x3rnxJCK4TpSA/G/uUNlokrGcQva9W6P6NCvUuKOZGHiOZbkZ/XVbzHzu85
Y2+ZhAckuOrr5bD0Jt5vWr/3+Zj7Shba33C7J+7hOI7740z+A4UMJRrSo4m+
O7LBDcMby58JTL0co8Kiq9PH7m8Uho4QzgptPz7YI/It1q+EBv17toueMyJD
YZLqhFbhf3sxUVl9FUQIYi4pGw7jRXrMtWvXbN+hykJ6FrLa7hmR55mwwvDp
+WdbGRgO4D1tmiGD+GR651bSGypoqJ+Wuva5RQCGJ7h43S23MXgWizefKo+F
0LqwetDNcYH5B9fvCqyk29XfwvX/Nv08XG/UJgTaXQMGj24KAufWJVbNUSw/
aFNiHVfRsO850yQowEH8vu+NjMXLOzgwGjFwegtDFrR2KvMmSuPxvFwkQinB
hI3wi7vr6jBaBwnxccjZxaa123F+bUixv4V7HB3tt7aI0DxuxEqh/V2bHMdQ
4wlZpM9866R2QywfHa4tOvv2IJMMsf7LePKqcb0FsWfnHsSr4fPyWnF1myVy
Uuj7cOMHd//huOCGZZEPaAjPyH1xjDHKxuLka6PIU5up2H1VnvbUwPEj9+9z
+ec5RW6JqyXp6O83+9f7T1zF54/sPXcu15myEV/p+L2zn6otSIi/0sbrfqLH
mILmy+YZF4v4V+PxJ2C29fCUIgl4zKf2T66gQHDQ9vAXm3E/9HVNXQmqv3E9
oDgjzXwtByaUGaQJhf4lQ5BtsEOkDwndt86mpNO1hyhw24PP0R3IQPm3aW13
DwneHgzSr5WkgfxqnZ/vDOTQvOzZkuPiA2uZkFC9o6F5Mx0qo6QneI7j+e2+
6dOADzZ4fOldyZdreZIDPO58fdp68nDUVYN8fTMRGpSMBHbwSUDpHbHPVAV8
X1yVL+4sK4wMb6k/pYuDySCnZEs2wZ7v4Opmep4tVs/+Ij4h3qFAgcFDM5F+
MtQTs/eXM6ioH2bxM0bxphYB6S+/4dEND5wmg+ene1duWlDh2IfAjTu30JDe
ke8/4YhLYri/mHrVpsnPWD2fo9nFUfoqB2Jmmu4pdCbO5/m/9y3f2aszdlMK
1loeKywuxfux3VGzj76PMZAezlx1wDndfTied796onFmGQ10Yo7K5SZj93T0
QV0pFj/kTss6fQygQKrtlmGRcCz+7ms2HssmgYWI6i5XDKdz53NrP735JyAp
h/LbgWWr7kiN/s8+9+DDrDt2svDbacpuEKszC8xkXy/Pwv1Xm7xtvMryZZA+
llyYh/tIGAvxAe41pN0K1xZAekHN98PiJr6RUX9wf21mZxVDEvGJk30+Xk/8
SALRkfk7txYkQU//eHTFIirqF34zjXbedIiD7u90xRmVq2oM5F/nrOhxI4aK
7+/ujr1+mOcyHeHVmhWmmh8WsdHvNeny39mE4bUyRZ3rixt5YWsBPWxjEhFy
+lzdvx0mQ3bqY+UBRZwf+p2yz3vUD8d317Z/iIuqkYKoTe4L12+yIY1lXumF
5YNNtgLG41gesfch054LiKN5YfTln4RqARJU3bD5MO5Bgc0BN781CHLARWj5
mg0mHBh5OtSXXIPPTy0u5kR8U8H9oywUuptbWqio3j85sauiazG+L2MVrWJ2
4SgR6Q94u5QsKm6igG/HW9Ly91T4OT+xaPgODc37BC8R3j1RIKP7wjo4yHM0
Eu+vyo/tSvgrie/P8N7oe2jXSwI/rfxlUxheY/cvkWqRlgZ+u7joVVc4UG5S
sYh3FQsGxZoM3v6ShriYHpntv6Tw/UXZsxEy07hfT5rSWqU4TxbMjE2QonxY
UK01u3cUyzcGW/OfzIkz4ANfSVsf9v1MHF5FbLOngKLmB49LxbjewTVfDYvY
Nuw+jFwTfveQBD7fPxsO98sC3cnWas4Tq0eTenQjL+L8ysspH240VrCRn/Dq
+fWL775n4fPawAebTW9Iw2yaX+XnC3Iw2XRRnF8bxyN6q8bUlgdSUb97HWH3
VDGHjvSUnsRH5fQ+l0B615sdJE5/6sD1FLj3nTuvG31/tvVtBn7fctq06va2
YPVgm8OnkUdUoPtdPnmyngSpzekfrkvzQvpOaw5ISqH71uZi+8ZHDKuTNf6+
cVlJhzP3gj/KyWH1neDBrLIcSVh2dTJquzsD5af1GvUUCScS8kcK1OkUnCmk
oP5UiHvcdD8Wv7n94e3F7m5G8kxUn3O/P1fvhfvPXP3SNPbr9IwdNKi87NSm
YUmAX0GflDP4qWA88cRz9z4SMGX17hbM4X6KPJP2mh8jaWi/OiU90PiMHQ3p
/YxyJIrtsTzJna/k/1716beVEIi/6B3LrSJDs6leoO2gNJr3p9JqWcI9+H4X
78HNa98GU1G/qn0Hb85IlRhkpooFCQEBvGtXxpZiuDaSOPTXeCl2DllvVFqx
+8bVt4oa/QuyMaKwukhcu8FUFIhvNsRETOP8rmtJk3sa3srBHsO8L25B8qAx
cNWxXwivFy5arXt6/B8Vza8X0nf776jC/dGMjxY52hVRQc5TQ+I/nMnWGP5o
hOVR7j5dk/RVx+ZtFCjUuv8reacUzCVusV++Swr1M6LXv/68JZaM+oGb9dm8
oi6SqD/G99JqSQqWn+vfBievv0uBYQOG+JHPVLQ/6c9vcrHIh436A7ELnst+
d1Ghl3TELjKZAcd3huR5PcD7V3aREzy/gQPXdPsMv0tJQRKN8TCPgfN3uq9U
yMg3Y3lDeX+6zkcydB07sSHUkYb8asJuEmmkc2RIyEivmlpKgk7r2GPyMvKQ
oOsRuYUmB0ee6RzjzSYivg73fOXWeAump8tAkG7FXMwVMfR5P6pDvv/9xoKH
nuvc1hQwIGZ359wuAxyfqytqu3d+l0Tzcs8u+bVzO/H5o5oNy9w9B8vnI8+2
Za/+/+9nfj3j/NtsfN+dtT57eaO3BOofOppkN6jFSsKX2hzPtScokPxLItHU
DaunBVMDdO5g9ZrZVvekEAZ89j5g9OAAA1LVe4Rzk0lgXz+88+Y6Gry8976k
Qk4IOI6Xdk+d4IGVlaVz7+uI4GY8e9sqXhRidiaVVjYpAaOBuamyUwkuCW9e
92s5hr+sz686hoWCXm3R8/pabAgY0lq2Qp4FanpbyksvM1E/wSvulES3rBTy
eyu88PX7+B8iXFGIW62lJAF/6ls01ciK8Kyg2OjcZQWQGNsf93AA9/e2qaGp
qprTEL5Lumiep3MG93sqoZ963bmNAevc/phI8FJBLLJxQ68fjo/FtmZZSq2T
Rp9vfUOVsXWECOGjkqGkDURQYecraLTieCb/t2NrnBPuV7U3rkgiwAPX19WY
PnDq7z8KPByovvZcjAg69NMPIhoYcCrr8vJJXQosFQpN0LGkwpDCkfndohSY
zemvydlPhWSL1rux8WT4euCM7jVN/PPKZEmjpYkMdB5qO0+z/32lI77P18G+
GUlZ3L/LWfZaJ18DHq8VXJLWezcwEZ7J3NtZ8WOGgfRgrU949sjSBEEqYmHE
/aw4HJIfXb7tDN5/aN632GnHARK8sBERyTlDAPHfQHCOoEDVwQVVy0MEMA0x
4DF4yEDznD3XlfuD0nD8sc7M/7V0FhX5QcDmKCcbEu53tHSgc2TdHnF0/svS
ew0crKVRPshMN5kseI7l1dH1002aFCjvyV4ZjJ2v5tjxSzNY3RO3a8638hHu
x3PgpCCvPYWG9AYPrNk0sloQ54fvn0619LUigfdmv4/SyyRA7JRtcJQFfh/5
ZlW1PX3w/D3DSls44U9G+mSnL2mHTpezUfxuraJ7JGDvV7g+qkI9EPv3WmY2
xyxwfXoBwZqMl4l0xPdp2WWtzbYjwZ+dO7KGPQmwOKvLs3CUivLbJgl943kD
ApRcmr7xKZoE1hVWSoZAhFM85m8/sWmw7MumJ9f72Che2ROZh5KkKJC2S+y4
5ysSuDdV+cYricI0z+yLsDExkA3dYWnsjp8HKZbl7gJtOvSWitgYnWDB0j2k
ms0XOYifRlbWFK44QEF6ZXOcnFXnh+hwzu520+lbFDiUZBRHSSRA+hdw+axA
BeuMQ5sHX1JAQD34895UDMeNaTX6X2Eg/seLLm3Gy1wm8A1KtF+SoAD/6u6F
gQdsaFihbrXpJgd6Cl8tXo/lDy6eEyaKuBUnkiDmdraPxxsKrDcPCZk8LAGu
/byup3goYLBn6/PUQ0RId3AqA6zurnMR7Jv4RYaFh/fYbkAHbY+Is8vm8fPn
ZW359VgYCX7KnTwZlEKGR05/micCcP+J9w8fJn+JwP0bNCdParj74s/rRplV
kasCHdjHpIc3/aRAfqO24AMMn5W18u9ZKSsHkjWpXbAIwxHR4uO+YpKgfc+m
XSOGBtmrpwoMW2hQunfVIsOtBHS+Lhs/bxfGcDX3vO6l3No4noz7AQ35K3wm
8uB+vBKOQYZiLni8Cpq5k37XEMcbNTNnbRtlGDDh+y36C1bnsfaqHKnegeuX
xH/91zijS0P7Sre7LZX7ppmofrP7XRF3vRnLfyZLmryxOuWiE8nhozQFOu8f
SLa5QYPvp9hL4kroSF+U+E/8fPwAPr+euXZJ66oTFYgPN9P0GQR4GFhEGEuV
hxcf9bOe3ZSDdeHO57ubxeDqiG/02SeLYLCiN/JYBRkifOuvLDtFAuHs6zxb
7uDPG+YnpE7YUNF8G/QsvjMFqKBym+fu+RtksMrIG/WLwvVM+fUOMcaCaCjf
rZutaNYSJkONh/K29HIK7HjKb18VwYaORREON/hpcKoxuSmTjwNWqR30alUp
WHf92zJjFTze7fLZMtKlR4Vp3TdiJY0U8GlJE9V5KoP2M7n5lzuP2umm3li+
RR7pd735Jkxa/Y8IB6SGmJlOkvBd4Fzx8xYsjp4+8XpRkyi0yF5p6Qihon7x
nqajL/ZP0NH5K60yXH5JjIz229y1M0R6dhGB+JLq23yWAB17V1G7JmSQ/pdA
laVq3kkG2keZuOuQW0klg6RLseugLIbTzv0riXagwe3W2UNxXWQYvJOpNqdN
Q/wi+eRPuTFnsc8bLXKlT5FgJDn453Ps/HH7CUydk1scK+WhK7jDnqdIHj7K
upoPPZNCv3cCalyfNuH77f1dR7r2/mCh8ye1+a5VgAcd7c/fvBUwfegtEfWH
zfdOxnUokuHUbzlNMQx/f92lc8D6riQImjIdXvSQYPFpl9LSfA7qD4tUB3Uc
3oj74Yz3HV5sFoj3Az9vrX15H4uv798s/92AxZHnNn0laTQS7DfzEjbD8lXp
qWOrnm4jweG2jxsOWZNBul3ytiv2numjT9L/84GXtG2QacHqZ+5++vYXxwgC
n4UQP67jitqbIOx8h1GNolb8kQe/xMt9U/101F9sytbZmPSUDH4Dzl/X3aLD
yoZux21tdEgR2DzwfCcd3qlefbMLy89x+4QsxBfIcMSO/6PzXyKEtaY+LvUh
wO9v6tUVGP7j6tkUbTq7ztmODefUVzg8qKLDkSWKOrE1WDwI/PzyljMNnMkR
4rYUKvLbpM4Gy4E8DdQcAuvc5LG67mb2lqIAJqyz2CTctRe7B6EpQqpiDDQ/
Gni8K8mzCNfrZGdXXZHQZUCH9vtoAWsWPKui3BErlkHn/ezXX1fv2jNQv9Xz
zjBF4CYdguuTLD12Y3XR70Rnnq9MVP9BwFW3Jo4k8mMIHH4s5vSXjOYNDsu3
xf07QIBeUXLJPnkBGGzb+1hLEH/fYXeCnjwJpYFOlQOtMIcGW4Xk78oK4/zG
hK7iyLkoPH4EWiabGmVJgJNfhWqyOAFa8jeHq1TKIX8k9YwjElYq+P75wd9e
ExZ1ZPAuSnDJtKKAVYDwiptvGMiPUAxD60vsKFCv+FB70p8K3y5Jjw3fxflW
fhOFVfPd+OdfNY4evXwR9yvTKvDji+vBzyfPgy93z2P3mMuPXkxcNGc2R0V6
mDMbY3c7RxDRfE06XbI9Wo0MBZJnSb4P6DDptv1p42Yymmdt1J5rVdlDBP32
52/CdSgwongmcncIBcJYd3fHJ9Chi+8z+7wbA/VHN0qVrWIp4XzbtiGYWPhJ
RXw7mRMeJ0xfkiCoxSm+cDcB2o/arzouIQnf/kw2yJZKwoqIYzTOJiaavxC6
zdnvGsXQftE+hxzpCQcizLz3cyHK4P6k3H6uccLBOoID/ryKCv8uf6XPhj07
0/tH9zHgyHX/TSmtJPis/4xa7Yrdq7drfhsRyHBjxuqVtD4RdBszbLblMNF8
n0/msl5VKs7HazS63hOA4SBeZ28XcxcqUE8bxnfEsEDo13F+Aoa/N92NT6Ec
wudDuUcYnnJSwlApGnJ6Y5Q4lJIaK2KrpUF9tU1DR6U0hL76/rLEFq/PH/Qf
cf8+gd+XP2UZc45CBBh7snZ+yUu8PuM+n2/fzF6Z+tKB+iyvWvkVE3S38yac
ncF//80stUPTh0moXq7ReGAyRcX19N55NZ5MPsUBTlv/g6XvZEHpnMRoAIEG
NcaLByGLAT0V0teiN0ih/cPWDpfY3/JkNK87drj97Rp5Oix2db6kqUOF8dLi
5Pe2Mv9ff0Q94LUwuZoOeayHaj+HWbC51vO2tz0buqMuavzKJaH62+Xo+wAZ
I9yfd1zGP8EGpOHgMLXYHqtHVJcUOI1eo8Nju428uuNUKC5gqM/6iUL3S6Ef
2+dFoPPTIro9hhO5eH9r72G13hIyGFDDf07zkiFYXCfevAvLh4H8i8r46LBi
/VgJ5y0HjJ9/nzZrl4LR36ksvQ4CPHu83LfYVBwMFMINrvxjoH2QSt/qH+8s
8HlZirmCYVktFfERwqv6NapaaahfUfhruVcPnQZP/87ZZq1gQs1BgbaWZApU
nN91q0mDAqOUS6Xh3bgepWaMTqI2QQHtq/JPj0yr3maD0sYfN1WxumDafufv
xA4mxGv6/SzH8OLwnuFRzmMK6Ayf2LHgQoAu60hqznkGVF5p0acGYfhurmn7
cgEpcDpxIuihtBScHJ69X9WD803W/HQz8/goDrGR8W6GLpKw8sOJzUFP8f4n
uWxGWNBfCtTpHQ9/XMCe9wdXjlwlzr+MSH+1PyADz7dTJ81SjLC/dz4xX8Ho
Bxnq/uWwd2PnBpKiae0YbhGLqrnwvgr3Y6x4Y+FIw+IYNx4RBXL5TWMJoG+a
pUI+JAnvCiTDfI2ZwFM0YuvOoYKd4FL9bAd8v3+72Kdv3X9oKF4GnrwuIYTV
SWA3Or0gIwnehbJiGg9pyH+zgijx6cQ+Ctr3+ryTw5bag/tLfR4K+pLzWBrx
p0S0jGaVh8iQIFL6zDKTCg7feEJWOeJ4TiOh8/sKATIcb/xqZ8eUhLz4mxdN
iigwLqQ4aS3Nhn1Bwy2XT9GhJVvdxdmYBqnzDNk67PsyKaedJKhUSNqwdJoZ
KIfmb2bJKfmk6f/H1ZWG1fR+7QbS3JnHzjnNlERFSGqVCkmRSmlEkRLRPJor
lZQGSRGNUigNGiURCY1kaEAToqQSKu/+f+jZv+v92IWcs/fzrHWvte77Xvh5
jHKPTJLLoCB+9so3ryobsHM8739p7zxtqRxEBoOo+zP+t0lQmcm9dkCeivjZ
rscUjIddcf5M6NMMjhmFivgPQhcoFzpXMsDoS+5okx4ZVkudsly1B+dTBzTl
NP4RpyF+0PFkQRdFaQrouya9NhYlwJ5vpQszD+P1xceFAut0sHx6Y8Xc4s8H
mfBu6Iuc9hQL8bWi/QYG2Kuw+DGqHWHcRAIXnfvxmY5kYH70m+DjZ8H3defs
X9yRRvP5yR2dy98n4v6zziK/qVwVaVR/zz3Oo+SMYPXP+u/fzG6Q4e3bJY2l
Vtj7Ovk15NR+Glww7etbWUOHqM0PTwxIkuFjFJu/W5WM/BN6dvz7UreVi/Cm
Ul/jFaUOfN9wX/bqn7vmmDDzecnVayQm9D1yyAgoo8KYbWeo9VoKjKRp5wV7
/4dfzM2oXXMWrw/T+g6O2B6mofnsfDyc128ZKpdBbAYN0uJNeK/WksF0svjH
xToZ9HmC2DMaK16z4VsT97sOUwYsrQosfDM4aN7W49xWdr4b78e7LprIevUH
91cJ3XRHvRKkIdv5FO1bGQ1M6Z96xzB8NK/Xj0pbeH8Dlqef7H1JfTzOQ/rd
+frwiouEkNorMsys5Ynzr6bCHV9N02/38fj+RdvojHuzNAg5ybbVYt/rvvft
nrmzdDTPTuqUFNzXQAe7F/tjy3RIUGKa+IS6lIf4ZMrHwoOeY/dAvOJ2xvLz
RJDJ+iK8gCYHfqYVfT2ViuAxcHdn5BgDMu0y1WPKmTBSvieoRJ6H+GSSqafG
W5vIYEh6p6n0Px5p0CYhvXVy4O9wI/PsqCzkK0T89nPnwSH52R2540wwnY15
oQt0hB9ooSck/sng853Qb+kfNqlhOF20obBdiwKOgnXdW8l0lE92LdB7WHWB
DAl3qq4zfmD4aI5+14eF8x3m3+88Xh7e+cb6EwfPx1OXeoXSBniIX5r494+a
QDReb7w0S6zKx+rLukyduP0LyeCyw+3dwW901N+TvrRX36IG5wOEqSmpOD4i
oviwWsR7S1E8zg/QS/pLO1HMRvzE9Yk1HxNSyFCgkvTY/S4Wr364kom3RVH9
EcMJ3f68ANc/Ctz25xt5TkX+tV/TcgSrVfHPW/d3eM7en47i6cf1rZ+uWeH6
+mXS+pfvuNPBxOh75qt9ZODZvgj+PUUArRKxHVE1VHBV6NfMnWXA2IKkpmE6
HdQNCy6LvMJwPiG33fAFll9aBKQIC/D5VcWk99kaFzrSj9b/fbLo+lEKWBFr
Spj9TFhV17b/fDoNvS9G4+WnhpH4vuqZnLR1cU9wP6ajwRNvdjpT4Jam8b31
2OeL8RCWdMnD583WuvaTMXUY3vTLeC2FfY/rZ82G+IfISD/pwCSekOvC7/tx
tekPJRjeH39Vwfe3BsPT717xW8dKg8q2yN/dJ+RAy/fo8A9+AroPlJx8A/cu
vF9zvOOHMPkdFfHT3WSfbroUyUH7dmJ7jvR6tMrALitniYtFcjDT25Gy0g/P
v41drBjaDhpIPzh9dskvOkh2dV67LcNG+fJ90+gG3UacT3F7aLCIsoUK190k
ri6aEIDmUZNb185S0fczMdlcQ0ulwJbV19XD2pmQaX3MVoSfgc6vSz7lnLUV
HfkB6m4VPBuzg4PmWf4nnNg2x1hI7zo6163HH09GemxLi4ix09Mk1K85Y1Fv
/zIA70dZzrK0Kil09P6+X56r50zLIj3N2Ki6dX4OCYqXym70qaPByWLrygBx
HvLz1ot/QCqxwd7DbZUb1yOokJczKyHzv/r5z71tdzWJ8PZUwQGiKlZvKpis
lG0jQGwudUzMkgzW1TyrpQ1U6Cnmdxc7IIvuk2TWbf5JLF+dXPayMxDLoy65
ER1mlyiov3n78e9sLRUMx50+pqXyggcfzZcfPPiLBEGCJTMhbiR4GNOstnQ5
BYbzXRLyt1BAU4G478VRnF9SvXH0iq44CfEB/r4If7VxjzjyM/b+E5/05ge+
v+Nw1MjbwiAO4rvKUSo0uBtx/qyHmLE+kBmQwlatscbed7nyEt5DUxraT9IS
ZHAJljJhz7KGTvcVMhAST66qrpdB+ooaxpGKIUHcj96swWpNoQAd+S+KRXT1
dHvh+mxi8kn7ZW+pqD/pEcI417oe97uk3Hj2POkjEfHvNzeldGUOy6F+U/VS
ZgyTy0T1D1u28OZSaTLaJzWVW55l8A67r/ah/Z/FKdBcoAzud3E/sseC3O1f
+fB9ES8vbHLrj+ShfB4UbMA5m09G/ID6v5emXPdQUf/+5N79C+5h5/nRkkN/
RQUY4Hjj4qQ+4H5G0gr5Dl2fpND8OFSBn2hfxUD4ZzbrbYQrhhvn8Xzsagmz
JZV4/O3bmS0ZsZIJu76ca6nBzuOrRu/oVVgcpFpSEk+nscD0qwa96DwT+b1z
3HWunR6SBbajiRLXWR4uTq8LCKPh+p8G6lxVExBh8cqCyDIsfsVFS6xI9KSh
+Guzr1DL5hcT6cEOjy03jt+A6/nq6B8ccodxvXJa8pYtrEAu7OwR9Y35LAv1
3EWk1PdUNA+L8nQy+y5EBtbWJ2OPPmD4te735r0kOXD1n5oWHZOHFT8el9bI
yELqr52P5C3lgDhS+3pSA6sX8jyC1/thuPW1gKWXFe6XtOEl9WC3Mu6n0nxK
8464ARv5ycmoXFZPSqWBzIJbPxY4seH9expNKgPfNx8ePil6WIqE+CWUb1Ee
33N5CL+YLehravCVgYIrpKUjK+Rg4mamdZozDQSaP43rZ1BBS/vRH5ODZIin
bPV1P0WFxnaXC07TbMSv0f5nPpWxUAYIC5jK7AcKkFaW1qZmQ4DlrNYS/z8s
2Jlu4HY1EPejdFb7lKQdxQXexv43z5JkwP7lwI/nTmQwithlvdOeCr+DFds6
Y9nofATq072EbzGR3nC6WC/efIssENdVn2ZgOHDzMel1mhienO/nrHk44/Iw
G8cTC/wb7QQW4/WIx7FWnZb7ZDicKRCgFEKEo77mWRNSHNTPn8cn8z/HXfii
dHgU1+u3+N5PKemkI/1QZ9uosk8pPj8ZFBvtPIXhu5YdPV6pBCZsZA1m/3hI
Q/ue/o2WiLxuJCF+veltoceeDB5638lyowrut8mQ83eJ66ofJLBsaf1X9J4M
wWMHP/WbkYFDXHHauo2E/HqFLiQcv0XH84Fu7QnnKqyundeDXp/Kv6a/hwyd
v8LTjtwnwaP3juODuTgeD2h2MBrbyoB32pwVYREEKHjm2OBwnozwytRgB2Nu
DP/7tQclAteXMVH+ansXVFFxWhbpn/o9D+aVL6Cj/tgFP68oQVUG+n1ed94z
/vDTUf2n6iuxiP4VjxfOrYvqzIxksbwiIvvSTRY6XnfwVpXKIrxqF51HE7Gm
wxEPqTV5s3QQWvSZtVUIf7/36deazkTQ0fNUeD2gbxxCQ3wTleg4cv8vfD/q
ON9KpmMmG559+ZCfpyELHi+4C6fuiMOM/amNCQcIMHqwJNxiNwlUni9t1rlF
gCeLS3rDP+L88UszSw9lZRDBW61l1dMgKrwc0uHZPMLx63at0zcrY+mIP73n
schEAYbb5vn3/Uq9TnvNSPCFE9im/okGyrfiPEXacP+i/O+eRUIrcb3UvQnF
f/oKNOT3N+WTPvn8kDSKn5pnY4/1REvB1QUW8r5qQhDR5Z+WyiaAgbgX6+l+
AjAbTN0dR3E/L2lDzrfyJDLqjzZsqEjzOInPY9OaNJoSffF6xHu88XFZrCzc
Lh0PN2bIw/MS+ns+LE7P+//UVGlETi8jAXy/d3y7PnbuT+yqiExVhPWMHE/h
UiWIlLJY17Yb9/cd36C0bN1/+kU2e9x7VpThfATGnTjTxjB8P9iePy8qD21k
o/pNUCo6rhOLr0fv3Ors1JcD1T3cEQcMx+1JJ3HNA2XgX8VXm8BxfD9N9W2V
mJwCLC96SFXGJDEhKUt8E7uOg/D7xdKXn2N/8dDzzHeQsHRgMBF/fMJJhE5a
TIKVx26NKXGosIn594Zt8n/2lze4vqiOpqL+wGj8wFzkKTrQy3zXjbhRYWe4
0sMPUXLI7/tRih0zdJKG7ou/ZYJT0XI6yufXn3S8L+9ggWH1rV1XJmiQum98
QYsPDeXT7F6TMZMJGTS/thH4VGWfQoKPA1+7orZT4FD0PV0Hfwo4s28m9Gsy
wF7eRz4ohIn6vT2r75yycaVCPnFaIAP7fo8LD4t/SCdAadBaT7l2ErzW/iC3
1Bnfn51oHaXnhOG1+f6AV7rrj9MnKLA522//8+MUuLLS9qzpBBVUy9tK/56k
geG6Pavqx5ioHrctWck7tJQMIy+P73UsJv2vzyhAxOrj+XnowqrbzVatTHjz
4lTW5VssyBNfRlpLocC56U79ERkqHMpUcS+dwPe3PpDoyviF1dnbXjZU3Rvi
wDDDUCCZSUJ+d8+txI0b9f5z3vTY8Xae+Lzo4tee4gcnGQift0pv3bP3M4ZH
uhPskgJYMF5+VmM2SxK69XSGjxyTApKz70zbHwqkWVkb+SXRoSf5ulL0MTnU
L6oe9SDNnpFG57NPPImefYiN8OHGEzO/VPhxv0RaVyNPTZ8FwVO5TtuvSkOU
1uy7Xc/JoPPxyBytigVFZ18tVErkgpHYA1G3WAUwylZIGSniofjQp9OWsPYQ
HY66Gng+LcXwzV/a7K5nuD9d08Rbm7fY887erv2SmEyF+53ePQUfeEgP4hyw
OuFALhke1mvY80lSwP3QsooXCWyoXL7H9qqJNIRQQ+SHybJoHlYcM5e8noXj
JaXpxhDNhfJIvy3wqOGx1wjO31T/dadlUT0B5UO6YYj1ex4FouTDr69Up8KI
lNKTYBIR6d2yfpoPWv+mI7wqtWOHua8JAV4cNfB4GYidL3GZ4CPn6LBy7dfC
tFwZkEldfLctFNen9X8QKGDMkJE+/Jz91YEP2P2c77dM/rsc0MeioH6r9YIs
tbkkfN7nrL+koKNYBvp61mbZn5CBrC2V3mHpcohv9LHoZqS0Bu43OvikR7o0
jg+OC7wRXtNGhsnaocspvVzEz7Vc2LShoh/Lf7eyjjthn+9ifEbEumAJ5D/4
ZGW8Vk4bE/HHxKeEBp9K4P3nOL8TbkXRZHjHU/1bswaLf+NFQT+vkUFa5/hq
10MUUNJqCvcoIEGa3tmjFzcSYL1F9sMdu3D8WxD9wOo8do8vOp3uEsNw9rV9
3z5sfEYG/ilh/RQ1KsSOpRzQyKAjPt2pxF++92V58HvGPTNzigtzZnS35RwC
wjslPNHYMHsWZEhIkN/zywK39dZVXeweL9V5UZVznwg+EcsCxQSp4B6saG5O
xfLLszCLQBtp9Pc/cFPMP9rg+mCzbZKLF57C8cUXyR1rXosykT78qvpH89os
MuQ/CXl96wVWH3bV/tt3jAmzq08oKHfieojjvr2r/dWlQVgr/uzNcA58mDwt
nlrPAxWvyRLHD3S0f7H+hHDr/QU4npj/9/N6QUnj2aLJ03g8Vxy73zwgxkbx
evtozUX+P9IwpyCgHZHOBfZ15eys6zSI6b5huTERw/uHBnVHN4iA7cHwgKAV
kqD7/s0e/QoCROoPiMZaYs8n0Ov+Vls6Ou/m3cm0XR+YKP85tvadnNZgIPxL
Cz90K5eB+7V8fPZ4iCUmjurD2sJ/3lU/2CieuaVvae/ch+Ohphu9lqn2uD75
su8C4uMP+L4vuctfxZd1cMB8yWz+VyUuvKXxVLg5HNA/s+PM1C02GB/86pJM
oaH5QNa9sL87d9DR/c3/qsjq5rARvzbC7vHXHizuji1YcmD/ABM8XXuSdZxZ
oCYie/bYC3HYHnDNppxIhdOrVd1yXLD8seu9vpsAFYYcdoUtwHAtV6vPIBqr
P9doTySbNZNh14oNGd33qCj/dG3SXlWTSIJ7GXFSR6JIsOO7dfvwMBs698vZ
uR7kQRvxjvq6rxS0/6fylfKLE3VskLsfJeRiyAZvq67syEAa8pNSeJzCb/YF
u0eGtH5XERpkxQq9uo7l13n80wb3m2ytCGAd6DPm+F0CTllMbh56QoGEzPvl
9rNUSBEtuftwNRHCLuSSxLH83bmr4KVXJRXt5yax9P1uH5ZDenXr6D0v53Qk
kN+gbkmTdr4ejn+CN/mvF57F6/sbCvd977ti9zIX7u/dSoFUJcWjebM4XraO
/NvvNIXzFf3V+wx2CVIQ/iD4131/aIb7eynfWyt4Dfvzvsdxo3bjBGju49Pw
e0VA/le0hltuxea4/6aQst4R60Qq6M0weQcjaTAuK3JNbiX+eWv39q2zzGUD
n5ysc+5tGmx9fOv5tV4SCAZndqaPEOHYmoq3Mk5KoBohFB7soQiE2P5xl0Lc
b464LWDLVDPeHxQUeHq0xYCK+kkd1m6P3LD3Me+PUZE0Vb97Lb5vIm+n8ag4
bU7PR2+7DN/wQhhRnZ5O1yTDgsIVsnZ7CVBOm7kxHkzC8JuvcFMOBTyS+gW/
n5FBflnRivsvJGXQIGhT1APfRCZoz2mZ5t7Gnt/PtE+SdWSYch1cz8Ge77we
Yntpj2KFKd4fjHwhy4gWkUH1v6ygqQG/JT7f77Ua1gkPYSO8Px9v5utZJc7I
HYYQVlecJu5cm0eGjpPpizy/ysL5xbvcHATkQdz1QnFYqgzonCsusvqL5a80
qX8/dsigfFucanH4eAYerz7oGmu5zNBQ/UeMilep8GCieHLF2WLH3HEi+AkM
hXUlYHh18smjhj9ksFA9Z3TmHQWqKxTaxYXJ4Fzudr4mngIOpOlfZgcw/Kyp
NXQoDdcjpf5Jed1VQYUog7kai2x8n/L2cJ+1Ty0pYKIntvgk0KBSdEb6qiYb
/fnac921cf/Zd6g+lKIQZ8hEeqjAysC+8HJ8n2Xd/rv2TqN4vTvvVz5fHwg8
PGS0tpACQX8fJsMbAiy0CHEtukoF6tqlHYw8LO9vPHZ8JpSJ+Aos945FQR4M
CHMMY/X74PX+/H1rzM+J6X7JQPttd0weMcnH8LOiTODoZQESlJoXFb0vws9/
wPDUAoMSNjqvfY2X0iX6iVD95s5B9Ug6LL9d7umZjft1KZmvnNFLoqF8JPNw
WqvKRQb5Vf9N8bzyhYjzC8ulvb87qNNhsEhlTn0FEfrKYk8MO3ARP6Fqz8W4
Wg8K4i9LMjjDWUdIYBqtmr71LAmWFD4p2rwb5+fWTr3UephBgciQnvtjUwR4
7l+qaB6E4Rb9wK+DWJ3f6JivmTSJ8xcFJr5kXL1HBuul/C9dsLi5orXDKOUN
G/WjvviPR83sw/0Q7YXyHa7s5CF/aLdvbnN5Bvj9brvI8Fynhf/+hEBl+W35
FNDQ4Jz/44fdT/vX34awfJMBtw8uJFOgSp9fa6sVjqe2Ln46Mp2J6yWFRfJu
swtx/wJjkYcVGee5CL+9NHaIXa9MhayU36t0eVj+Pz5ievw5C+mVtz6h8Hrc
GZCyNVu+DTvn0yTznZerKZA7emBrcDoNfM34Q7zXMhBfenyz14aKOuy5ClyJ
1r9BgjzNE4mzWgrQ0VXIHV29BFqedOu1mUojPiBnYljIUYMOpp4/K6rLKVD7
r3lgtATXn4oHhYo1riXD4CW7b9cXkeCstn/U32g8f4vMzS4eq5SDKd2siDtc
ObCJOdcmqE1F+bR9UzZd5iod8cHsBr7PGNzH+fjrtJa0v0glwxWDd0YGd4iw
7OC9ZwU7KYhfxyeqG1e8WAL1w+uOeRn9dcf1HDu2uV3nx+rv+Xrj0rEfOae6
sd//j7M6toMC1AG1OV4kvn9iAff+J9VEMuI/xKY9OKl0jAat3q8il8vRwfqc
UXn9Fibi23CO3okbmaMjv1WxrxeUCHuk0XxnWOX5mNsBDB8Gbks2kSfC+r2C
N6YmSRArFRf1MYoIObxRZvkWvB6UtKXU/JDioPzg3Rlz58AYrj9xPqujsK2F
A4XXrtqTV8iCqoDC7PpqAtK/vu6WjfKnSqH9s/PxwagubG6ggQpt5TEvmnNk
kf5bfN12u7WPqej+mVrtPkwm4e83Zqd1wJsHFBgR0lFo30EGPacnhF+FZNR/
eZI3JJIfJY38Xy8clb5kmMyBGqdf52MW0yGmqyknmg/3A6vvU28VraSAWuPo
zgQM583rTceVKvW2bKfB3bXXdhbGUlC/xCzXPSZIH+8PFhwJcQ37IIvHT/E+
t03bSdByvy7V+BQFfuhqUN5G4vvU4q1GjslieG2eTyAPK5/5GeL5V+9+3SOa
gzTCfwFG9QcGKvH4NGarpmRuy4T78WsYplpUSCdnJY9j9crxI9t/5NVQoXzQ
0ysknQ6ckyk5OiuxuiZR6cnRCSLMqIdMz3DI4Os/sq8Bu8fb+y4/pbcoAEFl
BXOlBN5fsdt549JcJhmCQsTGzj+hQnTRtjoaVufMv1/ilfWjob1U5B8gVhZb
F2zMQfu2YonymnrNVOB2PMtgfKWBabVfk5UeHYZWcCSaFtJh21NRr+f78f7B
vR1ZJtTVDDRvc7FSWqT8Gve3yf6zy2/3GtzvzTZCpG03VwYSe89bbTHBcMe4
se0KNQyvPrQQYWDnffUWzTd6WB4dpw4NvTtOhpsSa6NCsHj4Mt7VGrD/l3ri
fbfqehri9z0Jt/I32k8BHU7nn04FEgjQaCMiBnSEL1Q1csW4F4nwQ+/A6UEP
KkjmLMrUEmBC2Ycu78QZ7N/1bLh6Rwr3x35TdEx4QyURNAtakrOxurlUaoXj
t0ocPy6VNN7UtpIKDx9Z6T6p+p8uiR4m95sGbwN01SevEeD6A/6AZuw+zT+P
PNHs2Oe9RNSfIlRbhylh8X7ev1SGz7Pv/i8F6CUbBV7cJQfddwu1Wk6RQder
sbGOSoAyXYNbMVuxOqCXZDMdSwQ7PkfK/ToxUOyLOfcHhOAePW7vpC8FLByW
27DvUMEmQ7bLW14OUjSSDl13kYMjGcHpqjn4/OBNaNjw8FX8PPo+eP3jqjLO
D/h8O/ZlZb4E3Bo2eJESIAFjKkf9lg+RYKtetISqIxXM1xh8c9HF+wMui+tl
Hg6R0fyRPqd5PIMui+bHkwn9hHXf8fgtGaZy8elOaaT/VeqV3rpHjAjOv0QM
PXIIkBd544yiJF7//jgxUi+zBp8nPMjx2t79jYz44mPMQwvPaVJBvu/Gh4MX
sfhxwtFzpI6L/M1fX+NYiWHxdt5vrK8kKoi0XRqWTnluJNDYEOJG2LvgO4a/
G+nLX9Cw76U1JuywBJ8vZUiqCB+2IkK4uhtD5yOWTyj2rWKDskhPZqM8uO/S
Gy56v422e5rfVnFhTcXouvBAafDTIO1qvYk/X12Da1lOVBm070dUIETdyRaP
z4w/x2YJI2Kgm7C/y+iXFJwdmQjw6mfCgw6aaK48C+yOXXm6IIEKew4m/9Yo
pYLbmQ8f2MJ4PDNyzrQrEMfxwDYqSX1/FwnxuxbGD33YitX78/NhccUjJncu
0EC6enDLEk8GZC0KcFKTx/d/LPggyV4kzUb1AZ/BoiuHBOgoXrf/GfvsvoQN
OyqNPr9Zx4DfAYfuTIjgfBqxFder20vxfQr7qfWBpdcXQIfcevUPmSKQnj3g
rS2L4yW1xS/cb/7kwauTjhVMDP9GrZ7UOatDB42jhwv5POgwR7AfqHiC+xPP
PS2pCo/G9y/11yYNJX3nIL8wQpjfBlsaPo9XXNykuV0E7xfP57P5fvjfM5Fr
BoXw+e2xCJ3Ci59ZyN+G0JH86HKvFOzc+Vmf3i8Mhz73a0dLUGDbm6OMjIM0
kCm3fPbRUhFCFvXfCeZXhO9hTbT1Frg/yuUkscxSFybie1YoDbZvXoW/P4VT
QfXnnv7HD+kweddzNQrqD1ldaDD75o3//WaRwtwDqVTY5eK0tvYJ9n0OF7Rc
3EWHorqLKo66FAjhFbed8/4Pv7e1m3c9nwczVgNa/fqyIMPUeFWzgYT0Fbrc
tH4jDD/O8xmjhqJ9llmTofFi0jLPVApUJoyN7XlEAd0zJVEDb0ig/3p23wUV
MhTy87acd1kEZ9l8UlpMLurHlBtfbi9i4/1yg6w80R4f3H8ncZmo/u5nHODV
/IkoFeCCWmWxw+brdNCWulS905wBXZoHbtepkZCerzFzVKBtMf58ZvY105Zh
eL027ZSmQDnuLzePz/oNTD7m/+Ug/N2xOL61150LiUy/WY/FLFBfJOBVI02D
jQ0J/8ywONWzTpX+5Jwcmh88TSncoPwC3xd720lqy0Qxln9Oi2ps0SCj/4+c
KDZKfMCEkFq1ijePxRE/6njpVMu912QIVs86N2lBgtMfNDKmPpJgcchbcvhh
CqzvuMBeLySH9kmF2NA11v1gIfxWO6MWrf5dFiSdHEcLFsvCFp3ZncsScf3H
qj+TE/ut8H0fqoG2W0oPysCvwqtxlsqyIGdp2zOF5e35fmFP+UjqJEsa9aOv
bzWTS75MQvynjmWaMQ+acD8td9V8bkIeB+mz842+Ri/dRAFh7E6oDFDAqSqB
t0YLj+/hkMOwfYTX120WeiGnH+D80msMewhdzkB8Qjhm6rDxJAs4vFU66cd4
cGBg70x1FRPtexnVr/O4e4KF9CYxnXHqAcekET+y+MnwviMEKvRJWjamP8Xq
df/b6qmmeP/m7ekX7ZswvGf0xvJ9zTES7Nl4yXhjPR3tSxaYCveRx/A90WS9
K+0ZBfaRrLtlphlIX/5XxT1iJkYK7bORbDwuHSRLgQ3rhzVd/GnwJkhpVR5P
Gu1H1/nyeumyTTg/y23ymfXvdNxfz5KzrLBUmY30YSdjnAveBhCB9eGN7idt
CVgV6WdWyY/z0ZXsha7r5Uqj+2iSGzk8FobzPfcHWH6UIuDxs6q1qUSqh4z0
DV2xrYF5bUSoolpub3pKhdTAqxff0ulIj/LB9ddRizrcv0Blz7V6xRNU1J9Q
i1lp91RdAeUDw8SdgyQsT8+fvzd2VHIplYX0cRRf4RPtBDZwM/1WmSrT4JPh
sbybL8mgZqemuqKMBIy6ZPv0jxS0D8gnskx/FMsPXk8TTI0rKHBb0mJbVhjO
3z09bnFK+QkH1QO9gtOnf5gT0bybd0bvl8sC3E+56NP7nkY/DuJzgeLmjWtD
6Si+LS1OqkjyoSP/bMtTNQ26/iR4G+8TtBrD+z9HX8dPuFAQfjj3T5v3JZmL
8Nr0RrdvMbtxvluDO822/+x//Cp/L9ngNSYK5GsXxL6bSEDSWr3UgN9EhOdP
cv+aheewEJ9GknUmOecnFfIsl28RMmTCvj0L92cspgDhrGBkRAQVXm6eedW+
mQYrvatj3kZgdWusTJXCaiJ81LAcHvckwJWPyUtnVtAgVdY6viSLAm0yOfZP
zXH8dOGwoyvsY6J+veB+hbGt3tKw8aHRwvw7LKj7fGtq+Rcq3JFOTzOaw+rd
3tiHUtNcSLv6SH1FAwPUdb6reY/i87vhuxGRu4bw36+oUyWsthHXhwa05ErK
Z5OgaoXUjPUDKRi4rKtz2oqFns/1q9HhLaZ4/vLIkeE7flEaPW/TNbQmVQoV
zR8NNGXVx+Pwfu6XKXMzRjcJvb+eYOvEhdg5m/ev99vZPPVPB6vnFF0lt2M4
4NRwgviTQ3g+T+Guu/HiLh39vKrgm7k4PwmWXLK4evcaBVZlUa+2HaFCs+/D
f4HYOUisfGx+p4AIYXySFgYcBjw00dt8xZSD/Ch65TgXQ6KZkKH9s3yzEIYz
74r3f79BQflwZ1uIfawXASpjUuX2bpaCiV8jFlV9XMRfM58+KlcjS0PxVU1+
4FOdFAG8hJ90YckZas7vzK7H8K3BoKbAq/1UeKB+S98gFNfz7n5u0zI6SUP9
Y1WfmhUOfHg/bhe7cSURy/fz/fZiU+fhG0IcpLe/0u1/4mgcD/ExRH3KAr2x
/DzPZwrqjptRU2WjfYFbNpE2XN1DA4kEDavH2PN44PB4YuFfGtJDWaV+pM/c
I8OzMzwXlyoqvFh08WOGLB2WlzxaJ7eECoYqaxbp/m9+4mpfuNGdBQza5Rhf
Y5yPN+93cWT3V++OPVi92159ifQd9/fdJ5sbZWNDABV5dajCcEnIkk8i/G/o
0PNOqtTvFj98vCNlt8AB5x8Ks9+erWlhQMli1eiJAxzYGOSXnIydi/l8yz18
P+TZVwZYzrUIUWWwuvNY+QzPBdcXft9rM8JSIIDPzNShb/xEuPfzioLpf/Zv
c45mf+3tZKH+zQlysrAohQLOyxjjtgeowHdlJ0HjuTSoqnIrdwaz4cu6hIft
2PeZ9+vypCip3PCShmcxu/oL4+lQnlz9ubwen4fLOBrA3e84//HYecXErJtE
aHmjKJzNpcDsx2d2TTeoyL+i+Kp492p/OrSY+O71mxUH0YY012OvcD3y1Cfx
ZcuINEivMbv6FqvbeiTfl7Qtk4BQRfXNwk1S0LLP4PWWfxTQG+B+C19Dg0nY
1eHKT0F40ipX5ur//LDn+9XV7dtMzo3j93nJyqjFRzB8uymGa38njAknT6sl
3MXi/vx+qsXv9S1PvmdCcIiC0j+OLBxptn9d9I0DNu/WHbzJ5EGWboI16b4s
0nN4sPTqosJwfmsI2zqwuZyJ5gn/3x/4ZZnlJZFFOP9j8oz35318WH1XQ7am
b6DBgt+toeXp+D7xbZLqXt9P0sCFZPPwvBAReDZdN0M0OKAkceVuzyQd1iz+
680Qo8Mnx5UXe/PoMPjxTL6GORb3VfZqudWTwPm8R6ZklCik7pRYtJlNAMt7
D8bsXjHRfFH12j5nJlafD0rOpoV4kzEcKVi2VYeD9DoNi8UIJ0qw+nf7Bcco
IxxPzj/fcjHe3r0MFsJDf/pFunxlMPxd3+945jQdFuY3jspsoyN8cfJqR7LR
FAXNq5Qb6VcE5OnI3yB1c2XBLzXcz8smwpWVL4/7ieYmd7fYPPzP/O0tJ7H7
OY63hcqkqe3bMez39cif02fosHZRkuvkKibk31wqkqTCAeXp6cwrbkSEt/rl
fZNFz+P4sLjS8bzqf/wwZ2UWOwkMYfeEvPrmaBIRRkfeZH2ulUV+8379a37Z
Ys9lfp+MY3XKyTWPSHC18VrSj6MkUIXhv4NTHOj5tKWaIU2HEsWmoae7KQgP
/0s1yuGKyCD/yvu07NvNKgzw3ZNZqY7hvE9quwu7zJkg4EZQj9amQYSU5zku
F4sX9v3vRxSk4cgx5srtYnh/I1yBr/WmCxcs4qLMWXIc8Nlg++S8CwPNlwit
Yw12cmQoeLBnqZkhVnd70+wDM0iwM23iuFwTEbblnzqhx8Xqd95v6cNtFFjL
ZFZOR7PReXnrv+WH8loKnJth94ZPUyBq+lqXHIYztqVUxj/7SYa2GrP17Sm4
nqJHL3LlhQn8eQavW/7DD/se8/23c+vSOn2SyEDx3tXUYUqGUXepgdnrZLh8
u+o0KYEMHQavh1rk8Hn1rxd5PhZY/pjv/9oFqpTFLaXBgcfKhoEadLA9IrQg
WUQa+Tc83aHKvaxKAgU9uW+f86lgPGp/O02Bgfp98+cZ+Vc8Y6X6YXioeCKn
/Lk79v0Xqx3rOcJBn9e28WwY3QD3u5INJI0RnaRRf+a34Lm6fY5UuLUjs3R6
vTA4eJ8vaX7BQHyquNktGpp+ZOQ/VljQZNA5Q4YfbG/F97dp0BHFdHq9hAZz
6Y9WZ3XRICug90JkvTQIrnjomnNCGsIvhBYzGynwqrC/4Y+nABjd6zU+s54C
2hvbB5qq6aBSvTp8phrXUzs/reCsUmSh+r77k+Nzm5fSqP9SwGdNPBTBQP3n
gdi29IozHNR/KZhOtbN5ykPxzjzr3abNETSEL+ViTtZe06SAWb5crb8aBSTJ
wRo/e7ioHvT/u81DVAav7+uOzo06C7AgRv/X7FyoHEjfUxhcAiTUL88dpPRG
1eL7rM7/3hTQ3M9C+pX59zWPv2Iq5o55SpDh1e/hX4GWZPiY0tyxgCEDhKTK
l5SlssA6M/xSgYD7hY8Zao6omFDh06HLzUVLyfAnpgVssXg0459v//o6BRY8
N17DkyCB31cu4YELCRw7Vz8rz2YhftadaoPm1UQWOLsNrktayAD6AbVQ3/X4
fOyGpe0SnwY835z9VrRK7TMB4ftiZuKhQ7VYXiOyKg5IUGHiYezUvUoKHAjN
fPc5Dcsf+wQql4aS0L6Z0bsqwhLveEjPvHvC8d3fcRbSiz1MTMq84EyAGM6t
Ro8aArjIGbfqE6WRX6n8GY2v+2ew31t9cWPaSQLcGI/R1j5Igr/vfM0LJCnQ
mtQgoBfCRvNOM77r1Jh+CpRpym16+JYAjFiX0+9FqaD1sU7uF5kMraVrvX7v
J8H54pJ7EZ5EkGb0tFRg9Yf4K/vsIRMZYF9we+44TEd+CD4yvf18EXh8bVY+
7HIuiQK7Qw6l7dagQfVX2yWvt3CALEL69F2WCZvH3/dVm9JRvyJ/quvsMR4d
8a8XuZM/xz0iQrb77YbnDhQoCTiw3qSDjuJpq+G0UYIUB+1bvvJHoFsPy4um
Nw8m+2Df18jssd261yzUH77P9Ge9K+UC3/4fFq+sZeB4yadVXfvxePDjcZn/
QnP89786LSqzq5EE2j8tks1EKODKL7yLt+Y/fsNP/An26XQUL8xDZ1fyfnCg
/RbxvrG3AnaOH2lIv6Mh/L2w/2J9G4aXX2mWnylvoYNWTpbrQAkdlp1L47s2
yYK8/VcXFE6RoWJvkkOtARkWjdxc9SOEDj4GJldb7EggLrN/Wd0YEfHj0oQb
zkZjz3dpmZPrwikSvHC3esnaivd37V5nXtj2hwdLMytuPDHG+Q3jGwveTPmw
YLBD5HDQbhbaN1s74a5nsBHfL+F2kdOlVUoDk2ahPiVDGrRNZaUq+tJgtzcx
9rYGBeQCFQ9On/7f+Zf5x3EWhUH/h3+el8lAh+yoZOF7eTh3zXGyAsMF8/VC
e2nw2WWKbDT/fLnExWAP9r0b7CKP2ohjOEaDzRReTYVti4byAmuYEDQubqR1
kgHlwULHdhmyQP2GL5+rAgUeL6OuTEkmwsTfJr7CIdx/xkibG1v9iQ26LgZf
12pyYFfnZTVVXzweHV2Su3tWXxpa+a+4PaiShq27a8u+jeH5PfKchvL9JgYo
u/sGP+umgFYfa8juLgXSjpe9/bOMArVDstQRggyqtxp3Vfhue0oC+kqVXhlt
DI+lpH8VWUdA+HapqZbJmS8U+GiY1yXfjtWbp6qb6lKJaB9Pr+WNP6NmFKTH
NT7X1ah4nYZ+3sbX5qjRQQalrG1Oolh98XbbgeaHm3C9y96FUS6399Ohqnb/
hkgMly0/zm0cF+GieH6O7LD1zBJ8PqZw0W57T5gMBLgnXHWWxL73qNRsIhaf
x2+od3/8QwLXYf0BmQM01N8s6JSXM89lIj5x3Nd3tORL+PN83DAupOqD7yd7
nKwNLSEcxNczVxpfvWu9DHilVtcKKioBDHv8nfghCw//8Xs9OioHlXzUH299
5CG8iq74gqEEkpn1eRe18f2Mnvcuur9eTUd+n363JmPVXBlo/068yY2b7XE0
oLoPBUXPMmFqIGg8zJ8MBxU62LdlxMCM+Uk2vYmK+KkBj8fPvHqO798TOrZc
tRWr16cbvT0qiFLQTlTp+R/f9lv5yIrPX0jA6glY9uM/eoTsyvjFZpUsWBO9
a3FOMxP22DV6598iQlSVhdy5xUQYEB8L+62CPc/LIhIettjnXDTYvF+JAQrT
ivzZDAa0hE9Lch/h/TQdO/WMVT4kEFRzW/aNRYI1Dpb77HPw/SUqbY3WClg8
F3ck1QuQCKBh16dyyRfH84dOe8hlueF4uJa+wnzkNwP1d47+mXkUXovn+9dL
khbfNCUhvbDb5K39wydIqD/U8aCboHGBDNeTZIbuEMggOKWYf6IA599Ud2T+
47OmgeNg1t09HmzochvW+LGODOPC6RfkQ6lwWLv5Wp4ICTateT3Ya0UF/fHQ
qNBIGrrvVSm+ZiVELI7uptrsxs5T4tIrJFMGDfWX94gf33w0no34wNdzBk9n
RJDA9nrEn8BLVAh+VMfRcmWjfVG1fPuW3f7JRnh3cH++yHMMhws+NpZydqeD
pV0jn1AqBUxfp8kpY59v7kjhiFIqvt842HbXK621PISXit5knmu3paN+oML3
Vs/Ad1IgR1PWlAwkwhobp8Cn5/B94hM7DHu7LBmg8z116uL/+noTI4T18WLo
/czH2+YKX5MzZ6jQa3qYJoDVD91yI6PFNiRYm7fwXPopEppfTNMnv9/B6oLW
lIvPKgnyEGB3+fxIsTTSM4tuMuzfcoWJ5v8fgoo27cfq1fn95Fu7H7cFfSIj
v1356LlB3SE2qKku2pV7E4ujDg/FLM/R4WZpok7sWwZM3Vu69M4qMuIvdZy4
57RCHOeHm30xch/swP00rmUcM1RqY6N+zwufLfcrsfp5Xi+UVm7X/jJWGPVj
fZzYS6Wj8P0UsV7vODcoOF8leJN0sFMKGe3H6C5eutVuJxs2e7aVpX1hwLBh
4NYKYyJs+Ltm0kiPhOGUcpcsrN78EbNLbwLDcXBapkHQhID4Ul4/M3O2Yvds
nh8/GT6a8vg8vo/72cyXWzfYOF7uOV8zMDctCy72P4WY4TIwaEypOkSkAVtg
5uzZLia8DMp8nCPKQvHaTeGGrkQ7FeELqd+evMNHsPtq26KnRyND9ckC0a2N
uH6vweyS9t963O8nm9mnMrqBhPwiRV+FN4Vvxfk4bec//dvpyUb977KUqxbx
FBzPF/nEG3gpM5C/3GNnXvO4lQyabxpe+phtEctC+FqNT05gwSAV9ePD2uW3
lp4lgf/C9NkRIhn4LlQPZ9RKgCYleLl4iRQ0XzjIVAnG/bJPeATzik4wYNqa
YGi2AOfjzT/PkeBVF/4McZH+Vs+226/gLBXx0UdeGOYkJjLQvPIAW1LjIAGr
JzJOBkYL0kDaLHK0DDufT2OXBQWwWdDSoUIcs6JBY/yDsiDsz8PO3U4sUaIg
PRVn34Hfny4QwGat4N8tnEXw8YPGx9vyROi9F8G47EUFQ4uuj2mj2Ptp0Sc2
yuH9i/n5/6henkxXARFSz3RZhm7H6tmR7IZBLJ9837g7dvoxFfrOTVw+NYf7
UYWEq16J5eL+LG9/5Ehf+MREelvr5dPE3zfJIOxgmLLtF1bniozzsvM4aL6Y
fyp2wZw6BfmXn5LV8gtSpaN4V6OxbvauNw2CxpRP7tDG8o2om7MeVufMf18v
f6GwYic2DI+0BT2isEF4jG/HIqz+2DySek24E/v53sks3VdUcDR73DrKpsHy
VJuaR3MMdL+i7MVr1Dp4yG98Ta3+BL8oBen98j7fXE01pqL83f3h5vi6AOz7
u/b80sDy7ubLKdakaA7q5xZOrWnIwerv+fx09dFF8ZG1bNjkWLdE1ZgLGb9i
RI7rkWHJ+FAW/RD+/Of9DrYM6+cptRMRX8bQrPBmkzQVVua6SnsnUOFp0pfY
vY8ZyN/sSauqnZsnFRxojX0PZalQuz3B+XwEzr+8a7Bf5TVW383fT671k99b
MDy7ysehrCSDCjNOj0+VWdPRfC6cwHLyTMb5GzXrPu1c60MDs4P5gbI6NIjz
etR73Z8Cgouct6edpEG7qY9SMHb+5v2vwzTdyk8VYjhsmi/G7Asbtu6HyeRM
3O90cI2gSpQuGRI1nzg8HiVByqWztOPY+5Pc63DjtzXuJ7Uh8/RPCTVpuLz2
9RLxHA7a97BBoaJ3oICN5lvhjvXndhUTUD+w/lQ1q2ka92cq1w1frriNC8V3
UyueLpaGE6Er45bRcb/jmxfndm/spSJ94evbz29oDOH+bAGGW5fG69Ph90sb
pZZnJND4dtKFtxrHEzoaUzMx+TTU73bQaCwzxPD+D6GV/q/USWBsSlSwPUuH
t3v3RR7oxvPdPD9AdP/PpJep2HsYOLKEOUCG8M0SFyjDBDgspjgh2y4M198T
Nnyyxfs9Hya3FR5ZyYCFK2SK1JyYGP7qFNRfKYfwR+Cx8vJPmyno8/x/v5Ld
slXFy6/LwtA242jdAFm4/m7niEEB7p+S0caX8QQ7L/N8EYEptzcVk9Jwm7v8
Jh2rR/tufYd+Cg/x2fccWbPmLxav55/XSMJc/GkMT8/jh99n6XKn0tmo/g1K
/6ZFlKdCfo7C70E2FezsznxRKaGh/Lhv+pWvg+QClB+Nk7TWCWN47FP3al62
Oh2sO9nkSH428qfxi43Z99iIgvoTXobLNxjukISXiqEHiiii0PZzIOR/9YLd
wZnJkzQShH/2EU1SZsLBQkeP6sUM+LJAw2MmlAS9EotNjpfT4eRI73onMRLk
nVkneeTvAqD0jTO8C4mQFj65yWCTCIgRB5dusKBB3skTYsk6ROjk5c/8HsL9
mz5mNHe7XMTi9LlYCb3jTFhFyda2+h+/9bvysoZ4GmxSLXCxuMhA+6zKSgVu
FQ7S0L5s5YODq3KLqKAkbFdoMUIAA6dHJb1qLISPU16yzohjdez8/rk/Qb+I
isVkcArdkPAyiwK/r52veu/BQ/O/gFwR/ZfbSKCc9/Ny6jsqCPHnTrxdIgPj
/F/lytdg+XdJV4KPEhWKGNnaW2rI4KHqMZjRS0fvd/lYg5BJFRfVj3Kvwjba
fmHBcc2RVdmxsjBivujexxYO8pP4/3yOiFcm9t9iRUB+0VW29lJhCNUvffpG
Bp8/p1qVh94twP1IGw3f6At0sxCf99DnrtK1XXj/qIq4/At1C17ffRUMXWMy
KwzhmQJ1ifQF4GZy87OcEBUKGzUvkndQ4IhairKJGRmsVxvmvc0hg4rgHpXl
D/F5eMdr/0GZnbhfmUCU3aCfDr5vgnQ3o/p//dh5fdz7emG65hFcj/wjrvnJ
28s4X2kRN9ghdPQ/fFXDU7sNt2G4bp9dgPpqrM4xnxlqc8D/vF9jxVKxW2So
OeiVVPpLChx59UfLCbJovmdYkveBdJ2H+jdjndbDnAq8/9BVUbV5qpKA9FqP
lySIVlXjfPL7tbFcIj8H/ipoS6z9wAHtdOk4igQWvz1MJJsTsTy0XCVvxWUy
dPidtnF5iNWFuZNPFbpx/MJqc3Bc1M9G79Omyu31k3QyqD36tmvDAwq845lV
LHOgoPch8ncs+EwtHeEpVXODYeN2GcRn5eccL+8QpCP+RcqkX4qUPQVW9fwc
8XhKhXtTC1OHN9PAmr1ts3MxFcIe3k2ittDQvhW1FzvM3uTKoHlQXMfztZs7
8Hnzu0uvuMl/8Xp+k/jzaenP+L7MQD/7QV0qvp9lBU/9/qvjXPgRFa311lcG
LiVaEsuO4PxPxfGHCdW3iRB545BhkQYNuppdEz5heXTeT9M5ml2Rt4uF9pGy
LfqEXd6x0b5cjl1AffUsEe33oRG1qxQuU9G+E7f2X9mbMVw3r1fc0bU50ukB
zve84qoRdvH4/3goYbe8BhjwiZvoLcSkQlBltVf6ZxIQgztqQ1YwUXw263ff
pwwcODm3MrcMe+9PZ/cc5mbSQFfu81UlZSUIslCcu7idhOZNOV9LZ6kueL8i
umjo3v90HfP4YffcqTNKSjT42JQ2Qqgiw6Pa15OvbPDfX77t+VqFWRby79Be
VrB32U0SrAjKDEvcSAUXTVmdgU8sxO89/3PTTu8m3O/JMfd3w/RFMoo3Sjn5
TzilFNCReBnx5QgVXo7mR24yYSG9rhP9tblKABnk9kdnv1YkQiXt46nZz3TU
z5qPP9PKlzd/PsaCWJ/SLRFf/uPXWVtWo1uJ87ccPtX+fJVOR/1WNP+g7R9I
Xc6EBrfwC1XHcb+XX+MXe/R2Y/dyESeuZ4s8PPkdl75clwsR4S1xeiJy8O1U
SczizdKIn/x3o9K17j/4/GWTOnl30VJ8HuQcrlxafIsKZ/59bF0nJQ1Lmtz9
fYCI+MtH+zfnLF8tDROST++mXeNBdC9FvGGQAoPy7fyXzpEhePhX/apDeP2x
yFh5T3yoFFT/9Z1OOMUAJbvE9epS+H6Iky01hp+aGKDvqrthtx+WhwXDRzk/
ycBemHG6uAP7/yI+UMLNcHwjMKDVdwir0+fxactttpGTABFUA9h6p28R4d+y
QSkmhQI+C+O8Q2eIwBh2CDuC1W2m4cdsvx7G6k+HapLfF5yfV1IpKNDPwf3M
N+5+vV9imAvP/fcYtSkyYK/dFb2NjyloniJevLS+vo4ChD4mTegHDeLPLzfo
f0yAlsYzDum5GP7ybB2xeMVF+8X8Ly0QcjFio/vdcsl7BScN97Po+fh2QuIZ
E+knxUp0yI9eMODpuk8pKzKw58hNju4VwvVxiS6X9ntwuag+qF4j0fBEgQab
E0JOPmIwgZr+OWj/GVmENwPkWzseutMRfyfwvs3q79i9mN+H58sa2DUlx0b6
ucyP46ErN7FhTKrmlkc5A4702kS9kcLxhGZiotdIKQ/FO82zQcOLI4lIXzR/
Xuf1uJ03z0uojuN63HHSBS2RmxQI4hRdbaHT4LH0P0n6K3x/888ns6utqunA
C907aHMBi1sLx4OTXzFhLq92f+BVKpg/vR1mmsRF+6ILa4aPxIfRUH0U/iR+
szAf7ke3U94JYv2w+tNLRHVXPBGszpx/2hfLRu/HcO9S7QFXPF7vSPXZ2HKF
g56vqv+mSsHnFPR+jC6t3du2FZ+XbPvabbolgYTm9700R9k9T2XAUzVpy9QI
zi+Y3x+n/a7KVVIC3+/72a/m6FGCAlTX2DZ2PVeC7qFl/wKkcD28HXWtaauX
NJqPdyVdWuaD1RMKK8mta4JpcLSi/oIyVrfO57NlaS/DTAMJiN/U+2Zmhflj
FtJbVd3widzyjYH0J3BAPmOZMgEke5z1N7ylgHdi5pfjFA689WP9EDbiQKvR
m+EpGSaq/wZ5WdkdaURUL4/GqJ+x7yKDvzuRZ6vNgAL/5rnlFPz5SI9axv0D
AnwhKaoIfsDq3p2eW79hn8PGLnTMVZIFlAbzr6IXpSH0EjEqcb8MyP3eFpLq
SwGvovIltaNkiL2u0cusxe+/qE/8WpIWFcYvdx/nvKDC982Fe2fScb2Th0zd
eeNENmTU57nZv6CA26OfgX/P0pD//0NX695gDgfFf8I0w9XuCx31G6NKs45V
iOF8HKZL7FXvZTj/bPDpiX+vqXQ4eudncqsZA3b8tVFxv0VD/Z+aZZ/q72Dn
ep7/z1F23LJtloGe74xl8PPRKDpwRVx/24bT4O3u4pi8GyS0T+LIrTSTJZ94
0DltdyExWAY26li9XPGIhvafFix+QUmcoaP+vso9q35hcR7QhqQTsw/JwFm+
f/9Usc97ZFjVjBFMhU2ZAeJRXApML+u3fihKhZuNGRo+DyTRvLNucWl2HXZv
JcO6RkQuM8E41+ok0RjHsye+v/4UtwP34x+uv6NKksf9ksMPiT+hF+D5bEKC
/+zjDRzkvzZtXf/PKIuL5sMWFR5pFuZ01A/b90LDgmTKgDbVusCRdCyuHtcS
ST4rh/T0qxvunLYJxvHpwapQnTvY799q0LKRmyoDM79P+G6mMOHz5W1ll3+S
QO70iaysa7h+00tSoPGDNr5PUPNtekuZAhmifqhNUb+QYGZDpW55riT6/c7p
OfozmkxQ+2cza9XJhCUxKy6aabBQPGk8IfHlxBU66l/slDGvdlDH95fINm0A
fQE6qO+I3KArLwN9dvkVvGo2ro83WWMckkBDfmNLnI9vt2zG9UIjDvEOVQ6y
iI9Ad/jZv1L1P/Mb/x099FYG4uuInd8gKfyUhe7nyHBrwuYcOupvLLkl11yq
SEd6zYKB0Lsnj3FRvD9E2U7+JUcDV+Pvljm/qVAbudD3IXbO5/eBSTwairv6
gIrw590v7Iz9qWQ45mGj+HkFGb6UHb098oEOO85npMqHMuBSvHZkbQ4V9nnc
n5XIo0LHcsVzF8J4yK/CdIQQKnoFi9ffKbvk7enAFxX2fWenIohe04pzeKYI
e3YdnLr7hoH826WqVkd79ZFQ/jVfV7958hAWPyNXbO1fi+Uv0eKKQ45kgF9h
NToSJPjBChlYKcVE+U3CVt7k2zIK/HJOXr22kA4tvxfd6EuRQ/XhwAepPzNr
Kaj/KdMremC7FI63r+lcPhPRhPuhTN+J17L/SkbnyfSCC+NAJhm8+qR0BJ3/
6fWXt2tMGHCh6sedrnhlHlSe/57WxGJB1a+JiSunWLDjcLCjL5GO5gNTyRpn
1qsygPo5LvDXNjJYaD1a1f6PiuIBw1HRejvIgWuD777gMjmo5rjuPfKdivQ/
0X//3ioykUb5fezPPkl3XQ7if632kMgQ4hHhTZHFujoaEdYd2dLpvp0O0rIn
29KL6NDnmbJ87zkO4hN23jsrV4LF+/nzfPNfsPWmdzh/Sfqgfp5XJT5vv97Z
HnLvCBnx8yUUTbxJ1+gI71A6myvuy7PA01r2yoFHbHi3UFhXRBPXQ/AxUg90
uTNA7Z5FxD/sfd5o7v8+Xor749TzphNsH2H5OdE7ZLEwEVhGGmLRC2VRfBD8
vXNiayoN9fdbz2xxTlyIx6MZSlPkMX8mbGeEr7knQAPC0HILRh4FzXsUrZY5
Bwdz0HzKYGTVk2wLGYTP7kzcKOyJxX/fK84Ut/0ZFfk5/TAZT43H6s35/vAO
BXrCnWkO4mcf61uv/RVYaL4AKldfGknKIvw+qpen/SKchX7WcPuwIHUb9n4i
jSsa4rF6ujxbZEMZC+GpyVcnv4KTJEznxep8O0oFjtj19GR1WVSf/dwZkb1X
iAvsd1uhlikHD8ta+cVccL/PsP6CvsoS3F/e0vbW0zZB7LyL6xvfESLB8Zrh
W5/EcD5CcLSS+yIdCqrv1/g/uHawloDmva9UG8v3POOA5lZmirsIC8ZK78b7
tcuifoxRBX1dpwQNzUsk1w4tHM6XgmTtyW55BSLsFTrIb+aEP6/ne/nqdudI
ofv7O2bo4OpvsqjfcN+G6u91CudzbAx1mKWa4/owiz6xTM8+NtIDHQwffx+S
SEZ6lMv+9WkCdBbA9dhg1+1MGPP5zqTfxPUR/9+/YIc9cceTKAY8smopePGG
CePprnrZwQSkL3jcPiCwQV4W6VHrHVJPpUjh+8l1LiZ+nD0jBXOWOleKL2L5
aNbo2RtNMtjVRZjWXyWD0G4+7u19ZFi53YR2QpkKQ01TGueAifRyOxwSAqc3
4/q7ZIkMT0olF/FX3D9ORUxFkmEdN56s7iQFVxa2nD6azgb3ztV+60JYoOD5
dMeBl7ieupmUd+5bryxkRAsNhXbJQuCShV2/fuP9FAjvjz2whwvav7ZcKFuD
P495/dOiT5XxVwMI8KOsdfPLRxSop3ro7CPi89rU2on7n40pCL8WFHd+VC9i
oPlZ6a80QS9bEsQ9KLz0Cou77eS9Uqb6MvCL9L0ocYU8OG5IvJXHT4O2qD8/
W85ieKK7qYD6hAi6KScPFfjxgeKGWwan/rcPa8UpVcoeNvy7GxncVUND+na7
0ZFZTWH8fHzmE3WV/Y3rK1JnrwckDVGQvoZLatxb9IwCDi/D+fbK0qHM+/PK
Yj+cH1EoIiEWtQjX434s4lq58VPhj/1uqZD1RPAMmpt61o7z8WUv+Ja8e0JD
z+/WKZHbPCIb/rRcOX9kAwMCb15fkduO5WGdm7uvvCPC0XuSYZofWchfx8VD
m770JhUu/D28QGAfHfbnlCuOnOHBHTlZ5p5EDtxzmOyVD8a/3zOjnVQFCTbS
sy5KqDTRdcf18pnOtJo9NlIguE3s7qsIKXg7dcXhgwAb+auUyInfuzaM8+f1
U3MlfgtIIf533AfdDWIrmFD8/bb/B286mO2wWJB1k4b8KsOk3HSEPbDPq676
5a4mC1YHBBWf/MNCfvwF2zOvPQAZpBeUfh9l9gmrI/lOi16S6RSBuPWHJqpv
y6L65ZeH6QtdOSHUD70wdCa1cKE04i8YpDX8oh+QRn6oNzUOGTQm4n7UF47Z
s6SIPNRvaV3iaZQgzUH8QLYLJ5K0hIL6SZ7pipmBS8mwsf4Le60BlsdyAx57
mzDRvpGt+0bqr1vh/m7rv9WtX2Atg+qDGOnn3s2r5dH8fW/2dnvPOjYc/cK/
Edo5wMwquUZcjvvPKOUYvusxpaD87Eo9eyIPi0fz+h3G7yUbfSi436x8QflG
4hwV+V3VBn27LHOSB24qi9Lk02TBZM7nTrw8hoPo58lrAqigX1kytbpdCpon
TS2PXieByUDFLlomE973O+cJbqBC2ZccVixWT8z7KX3LPf/0wQDut4f48PK8
q0YHeHBA83djazu+z3YrjxWyqpgIIXviHNsm8H0483ihY2TXyVUYjr0eavLo
FVbHqXE8afWVWN1zNz1KmZ8BApdfr77Zg9W1PrGLkuxoQCkdW9xijc9rx0ue
hT37zEPPN6JrYkg+mYP2I/4cDKkzX4HH++Ij9vtVr+P+ld2GG7RCKkiIz5T1
f2S9eTSV7/c+LkNmzjzjmEmjKCrZESFDSppEiQgpGUqFDEkqGRokhDSSDJnK
kDGiEooGicpQGqiESr/ntdbn3Pd7/b5/tVqpznme+957X9e+9rUPbNU3rOEj
/KEQKe6kP6qA/A0birzUkgaVUL58+1TSRTlcGZ3XQ5doRUribMSPSvI/mH+n
U9H7ET6+p14+gcALMyX//o7VBFP98vJaHQbKr14/rn/UmYX3oycb+EnzrbAf
rqLNzFmHXpJQfWMrEhiZrUdHPz+2Jzd8bQAdpB45ZM+pkAedG05+T9crIj9y
4edGiYd9+Gh+4Z7Sz08cTQp8PrEu+coYBbKnGrw7pHigu6L1xKO1bAiVIb+L
4DFRvyo24HCx+gIZxBeo3FykcCJQEQ7dXSy1booLO211mszM+FAm43rinLgm
TC6KiMlJ4KPzTBual8DT5CF++cbedNKlGTQwyPz1PdmXDtJ5jwwz6Dxo3pr0
ebWTIlCuDVDODTHRvIp4vefXoFFpVE+vmEg5fr8O8zEO7+Q31trIovMR1OMQ
tu0B5hdaJm/2m9vQUH3TMrI70Z+P56Xf67Hm3pkkI31fSWtoyH4WBZgrXJcH
GlDh8sq1y/6cpkD1ZObWB4k0gEgR13/pHFQPL/XhLk3+iv1gRlPNcm9E0OHq
0iWzDYg8sW3xM2/fGjIYgc3tA6kU2JZfMfuOJRPdt9LAdxeOKhF1doy7+LA6
B8bjl9p9fcyDWLePWvRqBbBu8xeZa8WEiWUurA0NIvAwiex0Q0gV1b+m/zRz
St6yINuI6ncqhQNeI0Eb4kywP4ba9b8R5cJ8CN68s/r0JewnJZjP6CzqebN7
AxPCrOeerHhMh69+GWveJfMRPjS+m7Fqi7si2kejPhiQ8Hgnnl9aJDZscpD4
+YHaqvvWT5VApZj7ZNszRaTfckj5mR4+hzhvw+WPFr6jQq6242zeJhXkX9xt
NTydlkDgApKTyOtsChi73lsXnI/x7JdDdl3kXzT0fC+W+M/7kUxH+19/l8uE
Z9UxED56d9Q9e3s+DXz8Ulr6Q1lwq6EkpSqSBf4LS+2fiLNgWXpPHcNNCb4s
m37u3sWB3Fc6UqaH8PzkGUOn48eJ8yjQN1kqsvjeV/D7nX/kR58KUV/Om3Hu
2pFrWA8h6F/HSaWEfClUQP3vsafSq8ulMD48v8/L7tsYE+3fidtbFHKAg89r
mMPVUtVtfJRP0s+ZiK66RQXbA/Ybd2kwIHNtT3P9Aew39jL0eWVxFwvN31h1
72fXyjNQfP92w5A+w4PA/x7z711dz4FFrtkh/oMMpK9yc1FckhxJ1JWZDAXz
tUyYG2xmNi+Qip7vIoMzYseOsxCfIvi+AvymO3g+fqujAoj+ytvySoYHmS09
/KN9LHhYy0qoTSPif1TogxnjeP/GdHSQwdE+KhyacB0ylqdAieaGrbN24Pcd
63Mt4LEpfh4mssFfmuOxf2j6A+2xzbvoUPumKCpQgQrpl4bPGl4hw8em/OAz
QIY+I4kCGxUWmj84NDbiUj6M5+U32a246jXEggyxzS4S3gwIy86o/WrAQPXc
3UaN5FEjJmiSTi99s5sBLNWnH4oilBH/GPthVe7TtzSovHEm4o0+C+7yWIPp
NRgP3bnnefOmOA0OPjt0cJQ4V/wtraMSU3SgL7hXuFybCv6D3jNn/MP7iSa6
dyZMaDJR/+SM6YrcK6n4efSUlPfkq+D+6YW3PupbG9hoPmPgIP3scgJvr/S6
NiLfTIf82Ptr7FVpIFPcc9u+igElgRYXfRqJ87zibVBGIReMapUpTU9oYBqm
cXb9Bg6cvCTcdT0a7wOvyP/0lpyO6/k5V4azqFF4Hs7xmvrRa0EKKJ770KKE
5P3p4HzgpKgzEfeMFy70fnVXBfJsgu847SLwZkSd6fy3fJi5KT52USYfcpfQ
RlvnMmCnouuJzQtJwLySkhjxnQVxd/9dWhnHhKxgmcF+Al/ujG/unKtGAos7
j3+dEmUj/N5yc7LNzI+B9i0K/GOW0dT05DNIoGOfv7zGFfe/Pl4l4Mg6rC9a
7Xv4tNd2RQLeLY4+RNyjMLvwOw9fUNB+6pvfnvxlc4h6Vam1X2shA/KoTLjc
gPNp2zwxW08Cpwn4jnPSTxwe7iDB3IHR8tfE+bIyrCucE0+Gd09N2uvSxCC/
2+eIR5EEJJkqv1ffJAXaOqN/Ff1poPdrk/BvNToIWTiKfZnFRvwV2k8nfC5l
3XciH99etij5HQ3tQyuTKrinupKIo8cWx6/QoIO8ztkBYwsVFC8ehfioKPfz
0T6OjWbHKhs6KGj+zigt2md5CAPlu68mxunXjpLAed3V3pOPJED12iet6Cwd
oLUctm8Snwtf1v8evTBF4F3uijcRJ1lw3CP09TxlOgj3XR23zqZCssi05R9R
Fsz+EDAnlE2Dtj0bWOqjmJ+59IO3w3YjFY5olduv/0yDFSpVi//bp1PQ9EM5
+iYHPM/tvftMkYb6e3PpPt6p/3B/Y/axEKvPTDJ0kInq34MG9B5u6cYiBXS/
TY1S7SRssD9e6FNWlfIOKmyM3mnPJfL17tFnpqQoJpqXqEluDRe/R0X+Cx/9
KDwL8//2LCwSfljMg+yDodbuUjj+DKUKKam+UgTegd06bVVKME0KtGS5Y75j
7nSjrjyBD/Vz3zjLPaFCo9KiwJPLJZD/PyPLo/eyBQ3F/9emzvHVRF1VplRz
uliCwN9VR+9G0zG+Pnl9bZ58lTLyIzCnH8ydprJQPO7cc/abwR0awrMiPVaf
5h2kwrJOCaNbN2ggskDIyKIN+zO0DhRtOXGHDFFamRsuJpFgJOzvtiwXzAf9
rCwUZ/33+YOLN6bQGOAs37v5tgsHChZ3NsZIMWCZbbZGkSOOP63CzfP2EvWh
b8MBiSc6XFhUG0Ned4wMrq7DvnEXaHAoZEnMFiLvCvDRzIJdOwL9sJ9Tf+/r
nUIJXFQ/WYSpp8yuJqN5voz3o/Psd2I81na4JqToPtb3399cHpW4jg4qS2/s
8f/AhByphStig2SQ3jXjpt/9hg/Y7/T1XWHFNS+J+K6VFnx/NQkiFmSWnTbi
Iz5nm8fvgoRbeH9Q63W72AgvOvKD3zGV+XtjLw2oi5e98fOjgLoOyy/qNQf5
CRT+nLdh53o20EVWqzexCTyn8UNYLF0ZFip7fXCxVoeO1FWTblEshM8rci8I
u/7DfMNHyeVBL43xfpymB9IfltuwEd5vnNDIreVgfv159J4fdE8u4gunL125
I74D97t3uS5wTxKiI32MkLX9auM+XJ8wP/St/bKLCpzDQlFvYxkgSZmcEbmI
CqU+ZidViXvTe/u1yrNuJpqnFi+M+b7zijLaB3hk+7Unl6Xx/OV41KTX0IQK
mm+L0GteL7WGhfTsZU1pNu4iBD7Js16z4RsNYnmW1+d/ZyL+fre125d0SQaa
B3zYN0qPPshD/aNwr4oz0cZY3/S4TKg4JoGE8LzjruTv2pVUxNesYauJvpKj
wodfto3jX2kwWmxXPraBh/TTB35dsfXcTAPVcpYOh0mHexU22v824f20bTkf
7B8L00DN02zqcxEV+KZgcY6pAO9l641fjirCFK0hTbtJHunpFv94QFv4noX8
1tMu7hzMOctC8yI9boeCfHIZwKyaWZxqyQLuwqszD4UpoPkXA6MY8UWr6Gjf
k5/C32+RRFyLDplVG/eGiOMn1TLG19Bh0aWxxavHqACOLq0UIm8Inq+UvOTR
7kE8T+n049QLraVE/TO60PrcMTYsmv1bU/ISFwyF6kl6xLnqGxV9JLKRDLtn
rK/0tCDDrfVfYsoI/CjQ1wyc1xL1mEsFk3cGCsFLyLD9ty8p8CAHrIw0eoNJ
POBdHVD1a6Ahvi5xpXDQYBXGY775HaeNhVjwyoI5vuELCw7zlHXP19LRPCNF
pWtKisCZAn+QFwbHg+NW0mG29XSVXTkZTH+xfx+cR4Hunx/Ht/VTwaBF6NRY
qyKK95stQs3fWymieDJr4XrblyspML63oHvXChqcc9x7MzGOA7J3E4r/myNN
TqHzfOkcuCaSLXtWgg1tdp3DyZN00DZ4K32xjQ7hTXxFtVYluG7wZsWIggL8
Oyn7pH43H4AZLLTKkA/WJruUGvaSQfnBIs/LljR4P3tOzZlXJJQfbs9NcnYP
pUO/YtPpmWVUYJz66vHiHRnV1xSppqzcMdwP6pFVUzeSxf1qt5Nyr9/34vnk
jC1+k0E2fLBNeJp5O5jAbXJui3cS50bw/Ppq30uq76XDAdpax+d1PPhsPd17
vR7Xn4L6QeBPY3Zk/3VnH5zPFG/KOmVdwnz2FClr04ZTZPT+J0NnGpbKYf+1
gK/+Q3epPKRn23DpyGnlf3Lo/7tiIfLn333cf+gcfSS201kZ6S8iPh+prvD8
b//mm96F11kQXTq6yD8L5wOVvDnd2rl0hPdZcUUXZ+VwkH7EpXqVveVpabRf
pSvSzGMOgSsKaQEJtFoiT1w5cXHeVfzzJivqLgs/IvL7Z/HvRkvJsO1yWMNc
Ng/p29PEetSF9NQg5YuUYk6kKrTrWh1UvcxC8dc57nX6qSq8P67/0PAHMXs6
qJU1Lfe25sGEuJOQVx0b6sLWDBw8wgPub57/1WgKVEY7nFOMpsHtaallxlE0
pH9oKv3hfM4G81GPa1atkVbF/lPh8+OnM48oI39G3zInvhNJCek5KLOTr7xf
RkPxdg3Zu3bZaibim+LPjt3Yvh378c368ri0WY6F8t/eEuuRTZkK6Hnf/7PB
5xNR/10Mtk6boUyDpxM89mxTBvJfcfsuT/bfKQnngjoLX2rIwveMFtqfeA7Y
bk2vkezkgJLFv+NnsrGepjk4/+njkzRYNmtSaYM/BXb7sewM3PF8QoWXj6Et
hQWXrSu6PfYQv+75GuT4i4nqXYlJ+wtbyDSY45nw6sh1ClSMfX+0V0MR8c3e
6qoi/iuU0b+3pr3D/4ufAuLPooOcNr3TJsPVkengjM90cNJ6/rjLmaiLN926
PBDKALOiR2obztPRPhjB/Zjnp/SGoiQJ3umKFPs8Ir+uzZNTl6GBqNKXSJUQ
HrxNls+NVuPDDOsF10f3MVF/eHZIafkCOg3WDu/Ts3YggdDD1gChRUw4bHLJ
zCWTDqs32Sfs7peD43dr6esPMsFB2pZ05Az2J1tfvbRk5DYD+R8cTnzf8bMN
53c/hTunyMR5KdH1zM8exZ9XwPdFvOub+idBQ/XQVV1eYkIf1vee+lIqNumH
9w+oxzoLkU5w0N+n+V5Yn09mID2oSf/QTyjE+vlWtujvm6U4vl3wSjzsTsb7
Uy8GzGrYL8NE5/neVdkLBvK4nhnkXtx5t4QOt6O2zn0QQ4f5t8y37SPqfkE9
5WS+bkrmNRUeKmxcMfWdBkpsvfqcHbhf0X5aVS3rF96v0Jb0sKv/NA3VvzmR
5tNLnCiID6g4Lh+i20NDfmPHnC+HRxLPRyN3vdeDKyTwCO6qPWSN83uJ1x8u
dYxDnIf2p2E6FNhiWfBk2Wk6pPxcsdheSR6sZ88U+W//pOD5HT2zt0ypEfOf
NS+UXotzcPweomiKrHvDQHh5XcCtsqcnWEg/VtT74yBdnI/weoGpxjv3M1yU
/3/e+/JyxlU5VF+fH68Ipl9jQpNy0XZvSzo0RnT82TXFQ/5H/JqJ5ZlsKvKX
EhY2nk/7RYYQbfa5eG8qFPCdDEcGWSjfJJp6t4z0EvhGNErM6jkNeoLoxRKS
bHCuG0kU36YEY5sCxpvn0MDv8GW+PxFnGhxllVcS9YWAjzztaRvR7Yj9favm
vE4rVcLzhMnOGtnHhChQX7w5tV6PqIdcF/D/fSGDk7TMD1dHMuj7PB2wv8VB
/Yx3HudeiVkwkD7AKahWPvqqIlSsal3HJHCcznnOdhWibhD8+eVSlr/1Viow
VeV0Rgkc4qZVVxh9FO93jTwYMW94Iwvh3w23dZdeX4H9FdbM192SPslA/VmN
J+2bTJNlQVh2KG34khy8YmSs2niAg/Yzaacu+CRi9T/88FJW+oNIDqqfBPdR
0C+QSw+TWd+N9/fcS3RQke+Thh38F9e1T0mArYJbPj+IguqDp9pMnwBlCqp/
Q5x8dooUc9D+eY3IzgtrO6jQrpZ5WP83FbSlXv1y0GAjPdrBB4Y+vpvk4WRw
bkeQLwWGtu73sAnC9/WgjMv8g0Eq6PPwzlpPMXlsqPEwcjO8yoY7A/ufSuti
/PA4wSDAbJqF9vusDU7S052N8U99S/eTroXY3/cGT+G9xCsK4qt8Pm+zjyez
EF5Nc18i6eJChbiUrrjjRBz4m82efv5YCcWP0Kqze3IWy6P9JuOkeTUph/G+
36Mt/DWhmrif5BiyZXdKtyra39hWkfvDtYUPabNXi+g9VYPl4ktKtlzA+Ppe
zJ6zpznY7yR/OlT6LIuM9HUZjzRLXb/T0fvdPr31gs9pXH81Ofw4ZRFGB0lt
u8yHa5gwIPZp6lI41ne8VPWIe9ZOQ/y51zO+2LU2Fvr7hrIjX1KXqiG+SORl
/cyJn0R8S2UKb3Slg15iz+AGDbx/VPTUE5kKBxooxBkfjVKkwt11tr62HzHe
1mrxmjmXzUX91I3605kPQnD+bTyYoeeoi/GZbuTD1pXGCrDj6mfyylV8+Jgt
KvHgHxV+7PfOWc2jga6z6V+nlVgPlPpU9eEwkTcf+pyJaCXwYA93WNVAjQHX
Z5l6prtTITko9qHIBR7qB81MKJrpvBnvE2pLLmq4ZcMAElOtWfcIFabOuq1u
DKbBvh/+Fot12SBDjr49SdTRC8MX6oY/UYSr/s0OYUSdIOCfbh57dGIonA5l
X/vNzN8SOH3A79T+61TEl57sj3n5ToeD5v0mv1152XWZh/RYqoyvNnU3leD2
TteiM0rK0KT9KrcqGu9/E4/arKxvSoWmsolCqTYaOF+MX7vvK563L/SqeiDh
R4X76jULf/gz4JBcYFhnjxLSo5sVLT/TQ9SBAn7gW+W2vKQoBQjy/Dw86skG
n1mrbxlK0aC+4KJDVy8FJmaIR6SUYL/lX7ohaTsOMJAfU8X11D/R82lIj+dH
X5+WV8aF/W/rq/06WLBbmZul8IQGr5UW1oYrMaFDxpZb5cuG9hJ2h1oN8dzj
j1ie98T88OEKg/ez9ZWANsA4qx+tBJfKQ96euMRG9TEnTuPqFX+MD/jtkqfX
6FHh/Vwtv6O7mWCZQD8XMaIABxcecRgJV4bEe3Y3KmLwz8+deFxeaozxA3ki
JfhkK/a3cPUO57y/p/D/7FtZEDfIzgyjwefn9zdkG2H/zJGi+SvyyIogEasz
M2YHEz6fqrmqvlgR/f3lK/fpZ0zg+jFnoY3Whx0MUKysuhI5TIfn5GtKTYYk
pMcvoNZR1+XIo/hxdbfI77OnsL+wVtL7mfR4NqonawNKmv7bu4L2BWgMbzSj
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
it6cBBcW0nMF/Bi+GviWgfySotU0Kt1/M2BIPT1tx3zi3/0xpdyjhuPJ+ciC
qJz1bBj0SCj+vJwEfvKnZsfa4PnZ1JIq5eQCJfBvzvv/yHrzaCr7730ckcxn
no9zzE0yRiJ2mlChlDImSUilWZkqQzInmVKGMpZIKqmkQkSGCiVlakREiEy/
+1nr43W/1/f317OelXTOfb9ee1/X3vu69vzvGC6to9Vbv1PB/RyEfqyv6cE+
19x8Ulrc4MHfhSSYDMljGTqQYdJJpjLcAc8Hp7pva7eqs1A+mMoI3GRsyYGb
LBPp2Rq8/1abKPhi1IcOjuHhepeusJAfgfIFnYTbk3SQS6TXXbxIBD+fL4yn
aRykvx3225yc7U8Gux6uc+kb7H2/7j0++FgWjjwccf0dxYLVmxXusz/g/e8o
m1Fdw/s8xOf+VGXFmM/i/f/EGUkB4xYi8pP7+PQfKfIjxiOrfryexJ6n+W+5
zKRu3M/6diZr1/JgElxYdfzY+AMarH1Wv5nUTQQngch9i0zpMCUsdDgkn4/0
t2j+6fDQklIs7hNKV6/2w3ju1pRcv/xZHpgN3cwNK2TA1bu32hI9GSCm//nX
xEcGin/qoSOakZIE5I+2WcwoYPgqng/pUwvLi3u56P1wq41k8hZR4MuIy3p2
HBnMWDucZ/i4v4Drn9iPQf4clC/nPl/W/hgdaSwuLCwp+eqqQYdvWoGL2/vE
4IiQ7VEWds7m9qHO/bz3WvKqLR/ng9tJ1ifJfbKovrT69xoXxZNs9LyPPX3r
AsZ4fS8k+2rBFwb+ecIjWqINnuB+CBETh+vP8PD9x3P/nvtM2dd12HOptXWz
z/pIh/vbXu54jz23cfKNVt3zHEjUvHwww0UeYg+uv89slUX9rRFxeGCB8Ynj
P1/SI46QYOcVjaFL7WQ0T5OS47RiCVMOPCu6Nmi/kIewNoJD82UKCA3tO5Q1
SYFDm9+pv32N89+p6rrBw+sw/ML24FwfYELNxj+X3LZRkX5sINRj+b0eHtx5
dknaQpcPZqmHkyTn4/r+5e7356UWspB+m9Q68tdlmo7mX8sSmIwxJSKqj31f
8bBK8AgZbj1bWWtVRYR00Zaqx+Z0pPesJaw8OCZFQX4ENhbmEoKLGSif7gnY
0/tkviyql3xTWXLl1lc+3CubTd+xQx6+LewuWF2M5cfoYCtnBz7UDa3KcOfQ
UP/s1VLXwL5WMricol0NXEqGFe5loFHPh5aKkKfPevlQrUdKPlCNvz/1lPmz
Ic+pkEFf4R0jQYXeH0+VJOO4KN54ffArv6RLgo+HJ6nT20mQt9fv0w5BAiwJ
MOEmN5PA2yN+KHiQCDVDNGFbLJ7EHtT2pGK8KMH5nE4ehrO+8ZITDFfg/ODR
aWmzt6p0hLf5h0QrBC+ygDd+cekjJ4xH3Yl4U3yCivQrPuuYAWGb6ag+0Lbv
3N6Glfh9sr2/KiTlOAs4p2V/bvpNBa3Z2oPZe7lIn3rHWjzZL4kPSwt7/ro4
KkKfTMetlAQqBFU8GzGoYkDTQr8rcmto6H0PL3O3ZQfi/SjWcq/asVoSVLl+
9b6O4RYNdtu6Q+oUpPcjJ7/NmZ/LRnqZ8cPqHtsxXDUXf85s2etZLk2GT06l
S8/zsHgUV/GqW4KB6guEoF/yZ4gEkOybvn97hgB3Om1viP7D59G/7gsLp6jK
QtP3s5xgVRYQDxx6fGopD82/61Xsn7xGlEXxMZ/kNvtnhIrqCYEWlv7cfjm0
LyamKm7/+EIS8svJ3P3nwMgZDA9f7ju9djmWT8++JWSkM9B+krIs98AVB3A/
iUUnnV5oNnGQvifHY+tVuzgq4icHqkwqQqf5eD/9x6buxv1YvJzs6Kbu50Oe
9tuYCVtZVA8Neaf6eT4Zj++M4rE8i3I83px9rnO+x5ON/GqHUraE3lKURfMo
ej99joY+IUHcA6FHok1kkKiq3X79Mu5HRylYu9ziDQftY7vh9CbzXDa+D1tN
J4Y5/zHOfyys9+QwXHF/3TPkXQ4FSSx0XsKiy+1SeTy0L0Z7e7NOw2IKBPV+
oonQqeB8cWGQ62sJhFdfjry8ckaHBce+vgw3wXjw11N5Mqk5JNQvj93zZyTC
Fp9Py7Q/6jWJfc+msEMv7PQ5kLvs/A7VPDq6nznbclKNC6mo3rqsfGmo1ADO
dx4cGPt4F8OJc/q4T//Yv17cw/2+//wRWrPKgYH2m64InhlsTKagfJqWLdX3
dwsbbKtujiSKs6ChctQwcQvu93RvlOJg5EmH1TwTyfR2KvCgavuSs0xITbEf
OteN82X162NaJbYsyHb/cfhkMQUaJfyKX+ylgdmK+VpLZDnovHwrD1C6+5mK
6g+nr06OOsczkN+4fH1WfpMjF07PX+ynW4fzX5LOiwnXCjoYmK8X1tf5Hz53
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
fzaKivat6dtYcOu+4v3KrLC/x5Ls2JB4+MAjOXMmJNaTK9djPMW+6mGL/0Y6
5B85djqDKgOXXZZ5T15hw3677WFTz1lwYf/aK/FB2D255RbXPUSGPdG7xlWX
UiAy6uPXZfn48y8NUK0McmIjPvr2+gedqRVs5Mfy+HuzSKI6HfkLnV4X3p9l
JY38393ffh8XC6WhfvaaJjHtVjIP1WsPXCgnh2Hnfy6+2MempJ4exM//9sRF
aSLXcb2GntZFiQMGcshvyH7c41XyAAEcJFWHG+lSEDfhr/4jHPeXCbpx+wFV
lYLm/w7+MFd8geGcOX88gT+9+fk78Pk4268NjyQmKYjPmg9cb+umctC867cR
9RT7Ng7CkwvmN7ZINOHzcaFa+wK/SeD1YhO+oZTjKiLwOtM6zK+Lw+StnDzb
vSSwDJMqpJ4mQsi560ELyviIn5XuDN99A4vP64V5WSd2YHnxosXFyKVkEOep
qU6VsECOWdEDrbjf8q4BS4d0Pt7/ubH15Jkngix0n6JS4pR2v+Eh/t7yu9kN
kv/D4QctzzcTIXooPPT+Dw6KJx/lU348ThYGjUx9T1WYD/GuYbQ4RQpslfLO
MML47Ffzkw+S3KTQfsCBM+XHjw5S0by2yQ6hu5lDOD7TkXX5rhokguqztfvL
F0/E0lH9My4056XoVhJU2Umf/epDhnaWzb0fQIIokxtx+bNEaH4PC/7TJ91o
Oh1N6ObA95ZHz04GcNH3cfBbUBhnyUH6C5+na3bdz2VA99qc9wpvKUDIfnjG
Sw7XSwtnWh77pkZB51k41LFSooaL8o2TmNG6zB4O8sv84mH0aNaPCk7au1xt
aHTY2eqU1KpOg/yXWglkKwp8aJe4zziH1wMsafqbcj0ZKH8Xqjp+l2XJwqXh
gjvbdmHv5Wisi883Cpq/m6/cc4EiSIFK5WMeUja4X+WcH9hnL+uyDRQ83l0/
tkv2WQcDzV9u4Rzx/rQJv19g/HeWIYTjexG6hf6FPNzv18zOsp1Vzsfrx888
a8QzKQhfT5Rsc5XRYKB9IxHyhveZx9jIT7efv0mjpYgM2pkvTHOwz+uhF2R3
wByvJ3ONk/a0PGAgv2pncXVeWCod9aeKTqUYZbZyIXDq9kNzMTZkHF3BKm3k
gb+7TA9jOwdUL5/Q/pPORvUN8b/zDa9rkcGZN8E59AaLk6dd2NkqJDi3crak
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
JXrHP+4xKjzYzRotPkcGo4/F/gLYnw3bFX60HqJBz/T0IbiO4XSvINWRYCrC
+z7jO07vm8LzucWQoPTGd3Skr6vusaefTWEjPPuMaJbg3ymH9L/G+4VO51Xj
+Mh5YqNnZQQV9ev91oTsXkvH95N1frjHFPnPz2tXKltK63/iyf/5f7pY/bvL
08T7cSG/W8u151jIT8zW3/xEuC8ZaorSZSOSSNAnWaHWj+Wd5oDB5N/RTJi8
UZa3kcMGMcnm25S3THCQO8A+06qA6scnvU5PHEplgNvdEZcrKzE+J7Qy0ryW
i+K9dFTg7tIfishvNOA4Y/xyLv6+BlcGeL30lUf+gKMBTZ5lPC6K3ybmy79F
bOJAe77+3xZ/OUh//1DDQkoezTc6xb/+o93HQnoB/91SLNN2JvID27RBYHjR
JjLyg/Omnh+Z8aLi8fbM4lJVFu43m+dXKP3VhQSXgoQUD9aQ4d2jHeaXoxUR
ntn23WVmRJsGqzNs9U8GUeD5TGgmfw8R6QP+bhQyitXhIn4n3aenKNBLgeDM
9WH+92nw/cc97TBnKTT/cLmlfqWlMA9sjz89c22XPNxmkn6bzRBBMFOb5oR9
TomY1ENfLBWQ3tJWXNHKhUCHh8vU8gLSqZDyRZ/F2iELRqwNLQ7DVNB5Va6e
t5sGu/dKThxroQLlc0ta9DUiqr8KqJInHUSYyO9hSCro0qWn+HwHw+R6tnwc
vm+h4U8o4S4/FQTjzrl1l5Jh29uwWQkbMpjVjyrIR1PAdtRSOeIePu+Vfn7o
mu4KPP66qqy6JaDBA+VW6YGsbBrMyjTdvLiTCE/b9ql76FGgN/d6gtQzXN/m
Ob6pWr+IhvTMo1tNLOJrCWB25jvvkBcBHmzds2jLTgrc4tuwy7lXBvrf7enT
FsP94tKfKzj0VbGQXnCtvluhKxH7Pc2r6hXXU2HbqaLq4LN0GPZ5LnT2Cwky
BwvTPFbi+OT1j8o5RSDB92ha4SuM9xjplBIkB/+ZVEYElT5+JwDhiq5b868z
kX/hIPfuPtHjeD7Y/u9HkbM/E9XrJFQ2Sl6VpiA+PpppHpL8P/vDZda4P1QY
pwJILqPmMaWgn0/54AUiFfl1myeoSA/nkYGUyvewFuOlYl7p3ebV+O+bv+/z
9en5P8/7UwkJa4dHhyrB6fDXB/S5qrD28EzdnzNUuK8W+ltCgAGXt+o7nLlG
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
O99Eb0sC5HwlLrwTKYf7Mxg2hLy/w0H10+vSG0QbX5Dg8ecp9QvSdMjwfmD6
7xsF3uZcEQEsXiq5vHx+b0oONOOz+C78ZMGWFzONkMdBz19J7Eed5WsS9BgL
MV9vJoLCh0SpDZIsKM0ySkz4ToXX27Y7PN5HA9ILPXmPhVi88k6Kjv9HhhrR
omzxYDJEKQWt7Byn4/uJe452nMLuadjGt2f6xSjQcoYxx8V4yXx8NtL4Pdj+
iAxHnuUNTmK88Y2zf92DaAbCw41mMjtYx8hoP0VO1b5ak9VU1I9RsiyUZWL3
d91tgea8b2QwjdyRM92Iz4suutXPG+lSgPLr41FrGYrwstrVJFwS92NTUfHZ
8y2bA8ccj7H6/Nlw9cGNb+MYTpqfB9W6TN42J8tE+5kOJcyOZJXRkZ/ymaDI
BbsFsbw1lRLUco0GfkINsUUTTGjlM/xJEReAqq98Wv8CyMAJlh22GMPi0VTh
8Ig1Xs/Ildr7wTmBgfjH5oUnrTpm8fnamRM/xDuzybCGzb0Zwk+EGYOWDm8q
Bd6wMxTLI7G8H+pfbPSBhPwLdT5luyS44nik27TRKJKngPrxfo0Hqgc1KBD+
tVM3SgHjbXZRQZddaWietTM7a2xpDv789v38HBMXKIP2Dbr8YtPld+L1nfcV
/e9U25hIT+Py49ca6SEa2k+me+etxxpbJuLj9Jxx0/UluF/7Yq0PW0L+URB/
CPdfs3+rPg0K/N5H0p6QwP7RjuEUNgXlh6r1fTrZ3dKgL18l52IjCel9An9G
/+L6le+7GcpDCpJIP/qofrduq7800h8Qrn0NuplMR3x/Sf69DkoZCW6SEz70
BlKA7jDRt0wDr49xUyTdySfoqF/OKfASTSmkI71c5JcDp76aUeD84BbOdBIT
zoete7Zfio3w0utD5esdVFlgYEJSrdCngD6NfL5ltRy6r0QGV2q8CJ8vimlU
c3OqwOv3tkfqz9V+IcE24b8qKfewvJiyje95FxPumwVVpGO4WeCxfFZQIglM
nrUIPjLD8mWz8iDpCRX8jmV9qRKlwV35MV8dMy7KDztj/Y3FUvF8Thi2U/ic
REPz8eMHMkQeTdPQfpWFfUb1onp01G+T7e7+pCGB7wvtdTjyZpsCHQ6fqHeZ
tKb/H3/cfOIV1xARDvww3fuI/BjjV5acVxu7idDhsX/lhc3/xX9P+fxDeD3w
+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
EB4Zb+/rMTuF59dNv2frV4dQYVizxm95BBX4R6pKc5+SEL4pD/tzLLIRr+e2
mgue23mTCpvPN2225DJgqHxtYWkeCfGbNbEcjbUfSPDh1eKf95PJ0O7W32a3
g4Hqh40X/ctzW8nwutSdEWlAho9/Zs3b+slovu3NFteqogW4nlHUuT75NxaX
ThcWeWouZMDi30GL0n3w/n7tm7L9ic6KMOssZiE2ogh9rzdGnv9vz/L/1N8e
5n4s2h4pj/5eOEM6Z91Mg8rlzx+dkqDBcsEPywa+k+AOt0hcrkEK2lJLl9AG
KCDUIlvfakqD/t6vwi9UuWh/xvz9mudHX1ffG9SLpMLOrx3k4x/JsPZ8mSat
ThzN7+49oPVR/jPOL+u6RRUT5elAfmapo3KPCUnls6Mq4iTkF5vQuSlxahcT
uoyE301tpUF7qRrrZYY8qt9ohApdfIndz3k8kHfeWV/aiQFxLmW/ynbwwDn+
m61JMP5+RtVDuXeKcX98nV5CWOpFKsT33Mxb9JAO1Rmfltn3kqFfKfCvwwIq
+E/VWf3F3tO4dW+G5UIynE3VO6X3hgxg9/33PzkCZN21bzOjUWDIUcvjiiQN
Pn6TbN2ihe9HNlUuTgvRIqD+2pp27l1NCxqaJ02lx8v0u5PgrckGTflWCuiF
b4jr/V/7c4/vfrDPC4uTHw+5uZCzsPzLHWjwS6GB9diN5metGA8J74mV4KOh
/SsLH5wxvbmYgerbAeGhqR6nycCn/97q6RuM9yo3W6wi8qCnczhg9K8cdHte
3c6p4iI9r4ZTJaXLmgJ77IpSjPdRwVCmVW5IiIvmRTSv2kJevzwYW4zfWy2s
BLNmC130X9FhBV8jYdkmJngQSsRzsM83z79qJTZX3sGex7w+ylG/+qp1LhH5
8af1/kqxMJeG4D8P0rCHBl+/xf/hx97zPH5pKfNdpL4Q1x++jJTg2T8mAS38
92k/JRrsunj9fdhtKiSpfX4wnc0E48Cx1D4j3E9h754PtudtqOBZYdy69DTG
z4Y3vXqrhN8XvYamR6plFFSv9rt0J+7WVi7qJ+nyJDYIPJaD7dT99JnrPHg3
lGhB2I3Xf/TLXkyNGOL1uTPHs0IqS4kwe3Oy/LUCAaT/JRe7nqeCT4FAoEoI
EWZM1c7yu1PgG9n9wT3s8z9lbM/RWY377c7fJ8eBtKj7h2mgHF+6pRHDefP+
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
IjPf/8z8Tl2j/JaQdDLyJ/vD3CI1/hXr/wcWD9TbSuD+jv9J6h4jZVzvedbb
qzy0mgIJIjsPCXSR4LBpwd+IizQYX+h3cEUFHcaZjrtOplLA/6VzieQIFdoM
XthMCuB8vfHn8nWtXwg8oFbOsVhMA/Xz+maFxHkKLGal3pCkw5eywLenzOlg
UpbvlD5Ch9C6d9tcbtKA/enykdtbaGD97tR1/2IWio8zzzczf7WXVjfK9+OC
UWqWn4QuB5ofKCz2XIb9Nng6kkUJYiToELSpXO1GhkVTSl23qDQIGo54V+9B
hUNJLYbGjVg/NPP6M3yu5UrK/oLXskgPVnXaYdyklg7dA2OFgysJHLzyq/QB
QzzfMBTW2lBux0PniVSX/rDDCeMtnZWxp6qMcH33xSnrvOjvDLCYa8+JT6SA
82KKnVAr5i+V3DN7/9v3NjOPHsntad62Cp8/kq5+IW8bD74syLTIuS4L3hk5
P1avpKHv///Vz9yzNQvp1aSC270PmzIcqaD/ALiDLjh/vzN92d5gzYUzFsPe
mzdxQSaWprLVHOuN4158DjmYykL9wkjOO4vSSSpsSGs3HuBSICNPpuFJLwkc
kuSK1+6hwv7NpFm8NTi/xE4c+n31rSyq3/j1jGzTInjGjJ50zPpvmkAqxkOy
uem0aj2MP6InQUL/IhvlY2GjDSk2xmzET05r3YjONZ4D7jHT3MUPyCBEmhCm
hmG/lIHbPZztiXje8Nn8ymcrNJlwdvZ74TdEXtwQ5Hk8ZhbWdxw8vNt9uzAV
/iwcWim6nASqZHHFuGoGmpfqKSvXfh/LQf2rB8f190j2ySH+bKz70HC9Es5n
r6rXkx4a8ZBfkKwt1GrWYDyidu2jd3k/Fe3/9BBWrVdPo6L5sRfxOxti5+D4
mPc2xeKElAxwWx1PXZHHfkwzekC/uOT8+p2yKP5NDhy5/LoRx2f+v8f98Wvx
PkcVa7+uW9/xvqSjtBfPesLx+408eTR5bSBxf9oqH/k3MGG6srtgUQrWy56f
ZKnXnqehfmx7gUf2dYJ3RVY+HjF4xoRZd5XED92lAJ/k3DoqQ8TrAze0peZx
0fms8zv+6T8d2Ex/a+Z5ZuZxXt2sutxxmQ8OjyJrs7/zwevY4R3hD3H9/UTq
3ViBGCbaJxjX+JVfRcb+s+uuivX1NVPhcMTg4vVHaJAlvfDiPLosiod7tPpl
XmTTYeU80bAUXy6U3VI9deUGFeH7K2E7F4gqKCB+HNixzGtiC/bP8Um6tzDO
QRGuLjES/DKiAOrJRmOXCTw3M7/31bL/zfI9FMSn1jznSnnaMSAt/XWRTioN
9K8NzJXbif1EbS1VSqzHKFDT/Nz5MoMKKyYeBP/nDzSDB9e+/S3YScJ6qTGX
+VOxJTJIr2v9vlD1qTsT5afRpIqxsvnyyF97/rjiR00lGkjyD+xzLKNBuaDu
Af+PHNDUINfpHiHuRbteq5sRGXbuS58j+psO/yh2DyJ85RF+YK5PcGv8Q4W7
YpsnlvMJnLJKYn/NSRLkyhUkvcqQAV7zwo+Gjji+FFV8qqL5yKHvu7DzVlBz
Ow35UUxcYPl5Ukng5O6cLfGI4NPSAtVMQzxPlzXvBOWfpTQsSdp7ymk3GU7Z
SP+2EqPBA6WxmOsVNMgNDbLY3SEDTJ292+/ay0CDlepGzlGsT7zg3He2aREX
+QsNV+3fUbWfCxf9fR/I27CA75m419SDDaZvZs86m8+EiCvWkqU/yJB2rd2z
hTj3B8Y+rdzlIY/qr8D6K20dK4f8OTPPqQgGatAhpXFzVE0EFdLz2flziM9V
8/S5j/zLFFj/7Uhwy23MP++l+/eGhivCO/lBqZufFGF465pzh/xo6Pvy2qoS
vsxKFumVDp/PLj1+gwHXpD0fZ4UzYcXPvg3hFXwo5feJL7TggPr0e70cYezn
J7HpQYjLCBPiE/QV3l2iATNzu+G8bFmg9A9XedyWhdMK3XbzvFlAcYshMToJ
/KrL3KazAOt7ul9o3NkZwUDP+9XkwsMUATYcWBq+8ccReei97rNXKQTX845q
KLtMjlHh8mf7le4UKuR2W0i7x9LBYXXR6hODZNjx49itO88ZKP9tdlrWs6iQ
ByUytIZn8Wzie9rrc0QPn5dMVcrQbuJ5Z+JZnvC5rqC3dPD3ll6e+48B68y3
Ve2RYqN6/qkH69ya5rOAvpfk1dPFBDXx3E2/TXG//5vGkqWCeVj/U1i67lsY
B+e3k0lj+mlRVNge6XE75AoZkmlHdHNaZNB93Rcyt9LzMwMoIi22gnlMMPzR
ft7TgY7ij32i0LKeh7hfVFFeYtcmT0X8Ycktjd9Nudjvzf7IN623xD3vPx8y
+YfIM/0qvBPrsvHzbz9+vHD2JSbys1r6I/Wp9y0JhPcqFEvNyzfheZmR27H6
W9WZ6PWfHzd8d+0rHZZEmlWrLqACc4+7iE8u9quLM2Adb+3B+wYuSUZ+V3XG
8/dyrev5TvuoYGGiwhj3IIHyP23jD+YktO9p15pfy8zP8WHtsjOJRs9xvN6/
sm1/5h0ObAhtbA88SEd4pFzZNE1IggR/Rx4bvTwhCacbb16N/sSAsUxq2D/i
fb9w/WP4vYeK/DqUjL31bBfhfldHX7iV7X/+T/+z7yPSpWrWeCkb7UPNPqv7
9M9HMspHxo1/1G3WseCiikn/sWgWbM96HUd7IY389+sCn+wdJfiL+DX/xdFe
VFh8oXVe8yoGRAufh+5hKjhFcWWyj7GBP/7dYY0nF/6MSu/Mf4P16PFnRVzt
N8+DAB9tmziyEpziHWWnKjBRvrC64hw68ZuH8N9H/cM22o7YH1tSOOmA8W0O
qrcoyiq3eUyx0TxDfln3vV/afPhCMQ1JdFKA4MdpR3d9xvujuuOCZPz1ZYl7
lS10LoHAbZHJhg21HNTvCdC9sU9lN8YD0ZpXBdZtwPWbaq+BnyLX5OE3eaDg
3BJFCGu4z36ixUZ+SHOeTR53jpRC9zVlLHyRsDwb4c2MgMB1x7PoEC4cQT56
iQox8/90vmmngt17F4GdK/F8oCsnL+HrUiboZglYHDIh+OZA8lhiKAMGnf4F
cjbzQc7s64fa83x4mHRYOiiMDIZPypdu8aWAtE5Gnh7BN2b2/003vfS8SyXy
zQrecekJ7N9w9KV5YrMLA1LDfy9/fV4BzbvvSTiskZ2M/Wqe9d1nlZ3GeDR3
cHqf3F+CT21qDLXXpcL6JlNeVTzeT23lbelX8FwWnd+Y8xo9vdv4YB1/7mLn
PnmQGDDgP3Olwin9PB8jdRr8GTL1svtfevv/19+44a96z+/52G9h+8eXwlsE
ebAyakPUWD4H0jRnDfebYH8H5+LrrmJH/vf+vhWCVednQ3bjvPOsJdNG8dpT
5/MsKWCQq66q+uGf0YNXbwv/LJBD9bPh6myP5CASwgtBpgWR+uYc5N/Yu16S
QvGXRfthlkZ1WZ2PxXqs9Q51Ri8cuKj+Jua3ZFzLDdcHK7kLrJICSWh+3KbM
+/dXKS6U9oa5JyZxoPas7+ALBR7qN5jVvBlfFkVD9Ygne2MWlSQykX44TfRq
S0gHjsfwniuoeJOFzovJnuvuIeF0SBUxFQki8ir30WIvPsGH7SYXbh2sJMPy
kB0SG6Pw59XkZay7wYYM5C8R0UlBZKhcXNNQLcLA/phSZvlF9vj7nCXeXPeW
IQlyJtNn2AoiIPba8hK/igraW0dozh5ksDVXzxO+QQa9m+s1YpfKgOjpnMXy
Hfj37fE8kVwqh1//YXae9vcYMsj8FFVZ+U4GXALUjxx4ToV5qQmkRZEUaEx/
8P3SEtn/4wf/Kygg8P4CFpxxHF6jcpyM+glrcytMjvRxwXbBv+t9//mwrVdR
EI7C+zk3Bnl7blPBfmZbnRae0TTG897w9ZjlN3+sJ4zqjbf0OoDrG0qfO93p
NAqsXlBqYh7AADcvfwGDy1RoYj07uuQIBSQ6xb5Ja1HR/FCNbbKngxD2Y7+1
YU3JNIGbdovZPMtlcqC/IvORxFYW6v+azed2h05iPfrcVc5HzjH5SI/O33kg
+fZfBnANwnU8/ajw8p232zIa8T00yuzoTiBBmV9hzoMAKtI/6UVGejwypaG/
X/kxaKOmRuRBek/EhZsMYDwp+LvsIQdGfqXPgl1MsLA44n5jggGcrRbKPFdF
6Mj6wqTPxt/fl7Cz9QbuLFjCUr4vbM0Aw4QLZfo6WO92t+L+2o0UGeSnU3Bv
6y3xYgrq1wUPNy5tkCah+uLJ5qylN9l4Pn/jz0nX8ztpcEhqY0KRAA2G7lf5
1D+kgjk3O/ANwXut/Y6pvNeng+UxvsvyGLyfYiafP9tyu61ChYH2T7Q5nnyl
a0eDjAy7e2mNDBBKVZP0uC+L8MDbi7dDhSdJIElvGYnqo0AY/aee22cmmi85
Pe/QicEGKnzupNfP8SDud5bK5wgJgu/mxhn0B9DAPkcx2vMU3hftc/Dz2vcc
7Fdyobfj8tVAHvJviWaEJn4kcJ5H5WbBq/5S4Hr/bsvcQ3ifzFtNYcvUHgbi
37Ocj//VPENG8+jXW/p8QotIcOZZQnUPce8u5si23VfF8/AvVjFpkxdxPWzW
0madiJ84Xuh923IyeQF+f2/7QwcE99CQfjyr6HLH0lsUMK5Oyl6xkAKrToy8
PJqK54sz2wc3WSYRn5OV+qmyVzi/lC3927prLx3sJ49UXHiF4/sBw4qzvn1k
GA6O/cfcTAWDXdEnPL/+r/kR7V3hG1+SQaLkVubi0yQ4ZUbEjpV8eGbJ1tMN
5gJdZcq11YKL6gPKR/uEbiezkV5KXFCpdIOpPOLvQrlD172I59H+4lj+vocC
vkVFafPfyKJ8XKJ8yttZkAIhj/ONjjoIQ5fm9yInfRzf2FdtbBzLcb1q+PC+
7S8XE/m8wv3IhLw83Csf4c4ywX7cel1xkl+IeDyDHxq90k+rE3l+Ro/nu7xq
4KcCngeMfvy02OMOBT4pmO7LymFA1oeFGue2M2ClBWtV0S82bHq+e4zVg+d9
G5qyp1904HywrGTqUbI3FfxpjwIc1Rmwomf0AF+RDZ4aB/MFRihwT4/0VL2Y
g+r9ZdSlZOMKvC/C6lDt3f/8ZGfqfz2H7/48QjyfRtx31qUwKqjkzM9K8ZVD
8xSvTGaNFc3G+8tXe/29oHwE1y8EPBJffF6C500W8XNdRBJoSF+3bHD4wYV8
KoQdq7b08aESeF5Zz22aBissrMQaXLhgEd+hkVpNBXGb16VFhnxw2ft6icFC
JqQ/XrPdy5EGDjkfkhusiPNjqbV36pAURF/K/vRmM+7nphzYk9JeykP+5uLU
Ix5pTBKaf67IhqnW1bj/lxmcExC2kYr8uW1T5nqbPGDDDYk6VpktB7aNbuhp
f0xF/a4EmYVV2zRoMCFU4jp/lOCHC1/6nA3H+3zuiXcHzdXC8wGHE8nhLWQa
8muLLB7QO0O83oyf/8NNlRGPdPHnN5Z3xTg0iwf9L3gDBiw+rHl6auEWAn/M
4N8m80XBs8KpqF4T0OZc5v2WDZZXNrfr6CrA9Wj+G0tJPB9q/UtKXXQ/Cf48
3+tdQpIGTcm1WScv02G9+EHDvSp0uH+o/fVFbzby7xiKdN5i5MVBz4v9r/7/
eteojobC4gA8z6FVNGWzLp6KzlOaNjfL1A/HB4EnZm+dCDw4o3+wt3PYEh8q
gfStsgsWGUfsZMKgYuDwSm0OGOxu3pH5WRa9vg1HP62xFfsLD57zeTqbykL1
lXXkkAV+s5ion6diJ7g0RonIo1Ji7OQvRF4tOxAsT8TTqr5ZVitGeCAc4Mje
Pg/78WSdUBMbsOTCZtVFLyrIXEhbt5W+1YAGxpWMvtPaNCCdC3qZdJeO7kea
6nLt7lNksEyly8UT92NBYqnifXF8/tzfLq7dsYiO8HPbPo9ZZ4qwHxQ18cdY
9xkqVOvUCjW9ZALv3aJz4R5iCL+q2dYZPlbEeoVX4smdObqS6P5IV5D7zoqy
4ETpE5rdASKefxJ6Z9SN9V71qUNHZ5+ngelr86QKXTrEkdzCrYn3MTNfIr95
nOrQSwW3JwoLU7eSwNlfmJVK/PuZ/aPF1Y+/pIXg/ZRRr69sNG+SR/UW7w1/
7rmU4X7rgcfPLZ2vMdA+GhvrHyp/PskCiXvxc9ZaNnjUfFrqxsD9N/6rNPul
l9ioPqn7U7pP7jYb6sVDC5960kHArrKntp/AWwX3FzwcpEB39NFY5cVYz7LP
95Dovjk0iA7v3FeTwIPIctebiiRZlJ/7/lqeGCLuycy8ZvvdazW1bBJEqSZU
zrtChY8bp4U5WXgfQ+vJNgeQoyL9RmdE4MPsbAp8lc6rXVdHBud/MWFWLmzk
x7ZZ/f6CPS1y8DzX/rlLkjyMU18MtzTwER7UaCuZ2HCZDGarF7RKbyDe/1ZP
9vY6Oor/pONnhYIIXlCxOdR3hTMNPkl8M+sjXmdmX5Dy+fL3J+tw/73leMbl
Re24vp+9UjP3+Xk66heHC71lTl/F/lUbffpWkwVI6H5Nca2e242LIL+w+J+J
a3tX4NdbfeFYwr1iKrh65+cIBdPAooxaMkxngJnJCvHzDUQ82shdY/WICVKt
ritXtVDBhTYeKOlNg6tPqJu9DpHhtm7YVzE6E+lNzTy13dKq2RCkwNF7co/I
i327DAS0sZ8gHLp0R+kbruc+lP4hd/MPD6560Iyz33Dh+n7xkDMXMN9TvSKZ
Remiw5DZI4OYYhqwM9W7aNUUGBvS+JZnSIXvtbqdKSsYyP9zY8CkYvV8MtLL
GOqrRVydx0d+lY4mflNJZDaUTV9sKr2D9WMzfrMxJ7+uND7ARvUHJcETQS8W
SuP9GWmP50lHkEH70G/h8p0UeCscKXCin4L8LY7bPw10EsWf7+Nb59KW6GD9
+cAdt7kmBmQoynB9oW5JgvmLz81/nIn9d0ca4r6obZSE1gcldWdVZOCnUgXt
JokKZqIt6zb+ZEBblm91Uwkdmj9oFHgWicLUp+0WBZ08hD/Sgz9tkv+L63tt
PN1tzYtpoGd7a15bKBWWZ9bqvr9MQfnntuaF0TkOOF4v67+j9TqJj87jy0s/
Kvq+05Bf6Pi+Ou7jixjf76y/dCVsSg75A2z6mXhidyzeH+7nfz/WMxr3N12+
OeycHqcjP4uKcSnHlaFMNL8z8rwlyVuYjeoHyYmLnK8SuM0xO9iHYkGBka/N
X48WycJOVZFUxVR58Ev+cel5qwJsu1i+66mdItDPWO12+SEHZdK/wsc3sGEX
I97S8gYRF2N0fkp0KMBelXdlG9LZEHfWfLF2MxUuGexPbf5DAb1rKxdx0klw
cNuXS2KLJaAyY8wt8ybuD8/sH0iybNNWzsH972TVJ9WbNJl4/4RjwHjwFBP5
59G+z14XdpCJ8p+m8rnt3AIW8v/+rJ43ZEjE2Zl6jdTGDSf+2cjDpTyhv/OW
8qHpz7xdnQMkKHEecFfZQoKgDlHTjDOysOHn+IaVqgw4q+pT6pZJhyOJJRN8
HyZcDyzavkQdf96xLC4l3YiG6lelrJ2z/a2oqL77dd680ivleB95Mi1TfHY1
Dcz2bFCnytBAcN/zPSJPcb8+YJbMxZPnSCA8109cS33EqOZaM3tyBd7vPuWy
jzdhwQDznWJX9mtQoNahqEeAyHMzfhrTqpsZKXswH9A1uDX1M4OC/Gd4GUNm
IMlD/ZY+HZ0X8YfZqH6oUyYueF2cifwwz147N7xQgAInH6xXiJ1PglLaqyPb
P1LRfNONJ9n3Iv256D4vv3AmTLyFhvyFo4aHbigdVoQP2hk5C5YpQTtva9nW
9yRQnhbLcVKUhOic3gLBudjvquLOXEVzRQJny7tmxyQR9+bfqre8/+bK/6f+
o7F36LpzAR0uc12rtn0l8uH1yVGhvxRw082Ue5EkA+WtH3KOTePn39tR+c2h
jQaVtzad/P6KDAtLv8n0aslBzvrkTXOJPDN6QWWo8yP++esDC2UMHvHA2+vL
PGVNNmSlXDL4KMGAhXvDXLO202FE7cFVm3902HzR7NimSQYkrHbLXyFC8F69
ebF/b9DBOspHQreRhPzqfn/qSju2Thq2RUupBEcRzzuhn3dtExX5GZ9Y5VNF
rsL7F2WhWUXBgo32geUOp2ztcpEDjQ3HVxkq8mFyb6XCFnMa2tdVf3nJ6P7/
fK7+xw+lQ8D4w/gBEvIPCXR7LbrqCg1KbX6FzHlDhbkrJt7vqiTOJfuVQ4Ed
CbzuR259+lYO9QO+Lx2aMujgo/NRPakfUZNI4IKHSd+cXsjDP9fcO0Of8eel
XCj9jZ7AQPX/H4Z2sUUpNNQPEvbRW1y7gAOL26apcVUMqBttEi+u5CJ/hzeD
h1+HhzLAv3uhDfMgDXquarh0VIkj/cFMfJiZf8pUtI5YReEiPfzVr6f6xYeY
CB+TxEK9DhN4d2afYt/HApr1NzLUq95ny/zHG0TcfWUu81A9+lnpaE44wZ9n
9AzhvltqxcJJoKFgE+i7hwzCR022ZhaxgHKmgvGIwoDbZSktu8gEnr7e19l5
jw1DMuZRjx3ZsFH2cP6eb0yIHZ0sueXERP2Mrc+Lzi2JEoJsDfq2rNe/jF4d
e5loq08BSs0ZgdJnNJh3hxJtTMN6jJfb3WonDXG/jCY/mv7lf+1/HC1Wzo03
wv7Fgp1r2jS88LyxdIzi6XXfcbzkVplJJwTKgadJtkYVQx4MDLXr3hN8UXDW
7KE7ZbKg0370/KNcJsKvfhtMl3+TZiE/tpVjlBWWohykb1kW+Su1m0MGrcAt
9wozaWCwxz/AK5gE2vNi719fIwPrb6vbesaQUPyb2Tc4GdC6p3IeFWy2uKYo
RNIg9HyERLcgwfNe3594riaH8BglPJG2eyMDDoXpznmdQeCP+dWWZXNxvHWT
UD09eYED77duWnfkFQsWXSkPdxXlonmDGX2NbJxRVCSPAu2PpzUrLNmwtyZ/
zncFNlQZcx7y+Wy4cze5pGY+F1SoB++KXuCi55VdzVj8LIoF1sb1ZrxkvJ/K
vmC0Y50bDZQKn5xIfoX1Mvn7n2yK2spA3wdnLEJD7DUdLNdKd2YM0oBT/fUN
XZf+f/RwM/pko8Mmv+/eoCK+n7z3DKO3iwK8F60Tjwn+1arbK+DRyUb6n/Iv
svtb/HlA71z//f0Pgg8+X+PYb4L5U5n82bN6BC47qRh9eRnBoyM8d1teViXD
483G0ZME7i5j/+lInIP7zz1PPdyepmG+cLu2c6lZDB3eZKyVkDzNgjOpHoZb
JKjIz6RvbhNV6TOu/63ub9H2k6NDnoBWjnAjA+aUOdhOF+F6rufB7Rl1C/H8
yszzz9RbfhzqC10YI4vqwzmOKaxNxXi+9eKigQDRGFzv8Bm9tJAigfUN5xJ2
UG6O0pHfwEXX8Sff2vB9aV18P2t8iAYmhbVKuxoo8DHN0NVXisCVBd+2dZVT
gH2zKU6uh43q+RPkq6XdtQzgJPpdqDrHABdqu918azIcWujQfJXg9T8umYsI
7OdD0FFng08l8sDl7NCbswDzw5nnm8mnDIv5inHKXKjxVM7z/s4GBa0Icl0P
HfmhD+qyrOAOBbQnjObPnyDDli2l5msr6dB2YmyjPIMECxY+klCW5cOflHoL
3iAdpMQ/dtmasZF/aEr9R0bDCmlUv5zclquof58CV0p57QcFmSB0+LwyT4OI
99N2SxqO4Pl2pZ7id37b5hD8bfbpwyYkiPY2eWa3TRzUbzDvTd9kgOMZv9qN
BA9gG8zKepSE53UPWfZPnCD+u6ptkunIGBXKu1TFo96x0b65iKWm5zeJ4P0F
l1XeF+4/SYKcVyuVnaYo8Klf/16TDgWebf8WnEWnQEt/yDnJ11Q0z1LOf35w
3IiN6u/2wyPNB4YoIBPrFfjGiw6ejZULv7XSYdeRmj1LCNwuIPLn3fIqKuSm
CyYmr6FBep2iWFc23s/9YvTLRZogC+obpbMkaQxoag1Je6CH9UxzKh89z/3G
QH6hPVeTy4TqZVD9dJXwJ9+CBgbqR41Fnqt5E8hB8xHrGWqFN05xUH3HOyG2
Y0+WPGQ/y3dn3lGC5Cs7jE0lcf31t6/NcXce1lumbxV4Vb9EHvHp9C1rSm2D
eNCqlOw+ra8IhWGxTz6+ZwDzqvvVtlYmyCfRa8NLaBB3dZ7M+ec0EI9IVTj8
lwPmvuyAcT1ZqK/53WrMpqP+WPQcuteQPBvNl/se+xMRvY4BXcppPzd7UqG/
IFEp77gs0ocN1PKttbdy0HmyF0mom0/HeJx79ErSQB4XAr9pLNJU5IDg63Zj
mXu4vqmgxX1S7YL9UmpGVws1bqSDkt8cI7V8EuTFv3swncuAm6cOCHcQfNNY
ufKs4SkKqOlHLtcn+O77636VN4oJfKr7Qs8xhg/Znb9uzX/KR3oO+9WOu65m
cdD+SWPtghX3NpCRPjoC3Jce16Oh+S5Sd8SGdBU24sdX81RDDgbzEb+5X3WL
p8KnIz0qcyzqrupnMqgui+3ZMYDvy4xfg73mbmHaWxZ0efh5abexoKV4c2+j
GBUcTTn5iRQyLM08IJoVwEf5+0+2RnoJEYccQ24tCvWRArtMt5v3zxA4qH6d
/jtbLrzqkFopspMPhc29nudjlSA4aG/CqkQ59LzC5P6KhhysJ6dccl8sq8WF
n1Xu30fEudAaHBa8LxPHu9lWiR33XPD3FUo+dbgwDdfXz9f3vVTJxvtRj53K
+zMdgfvBTnmz/SQVmFB+0eHs8eMcWFj1Wy7KGM9DK5rMu2awgQLD5FPvx7+T
ILyG+SnuNgVkhXwWJY9TIPXwrVp2Og3tl4w88/L2q14awu/+yxb5dBK4niOU
11VFJ/LJt12VQw/w/h9vwy8Pqq9R4bBFZK90CgV2BCVHyT9nwbByqZHlOjq8
PXCQx7koi/yqLEyf+DcvosEjf5tMu35pCP/9kOy8CtcLVdP86C7DWL+ydJ3V
50gdfD6WiJm1xy3F+2Ekqqv7fE8xgDKX3DkgzwKZ/J4L22VwPeXmz8Hf9QKS
SD/VveGxgIEa9uvyq53sFV/LBXOf7Yd1bWdhf8Tf+idVChkQbhfRVTFHAflv
zT6Z1FxGPOfM+4m4Rm14YIP51J6LrJd/j+L4Mac2oHSAwJsz9Zhfj2MLxwhe
MLNf/mbcZ8doU6ynrNpcuLLfGOP1i+rywQ6xuJ5mIu7H5rswsZ9L8hHDI/tZ
MD7plZU1xoOnn7XiNxD3bUZPsz8t/nDCFVyfdtoRG5SzleBjbg9yUtlU+K3V
+DdAiY/qnXWma4z4F5gQer2rY44iF3j2Vrn/6uiww/vY9YdJVJgoT5213Qz/
vCB7bI+OJwvGDIt/qF2kA29AWNvkNw3h6bN3dHR92slQ5dW1sr2IDn5LVNL+
0+vN+JPHTb9dVS7Fg5MpTt9WW7Hgo0oxzcWFgvYhCTdB8TtvvE9H6pNA6jNX
NnhH8pjqkWw4OhQvcbUS65EgbKLjmy3+/N4p6jkGE885M+8l+sh4/9nbbFRf
Lw2Nc6lq5iP9XYRhdNESJRocOZhN5z6hwU8RNebn83jfptfnLcoZnzHfNji5
JCaT4LVC01HN+s40+LF/c6O7LhPtg3ifYHqjSo+L+o2akl/NLHrwfb/25E/8
EwPsT1FiemdixwImJDxKWFZM8OZQg3d3ul0wnrqS0iS3boyM4r2mjtGdFhfM
P+8GXS9/2IbP34muDYEv6nG+XHlIQ0KDRoLh56IwFkiCAk7kktpUNtJPq6g9
F1CJoKF6nND3Wxe+HCbu8fnBcMY2go+vUqu+qMVG/lKtXS+6m7UpELU/WYBJ
/Gmvr3fp1U0q2iebah2cltNPgifD6ZE/7whB15PP8zLMuLD48uH1op5ssC06
kriXjffrfjUU7i08z4MS4dolYuvkoLjBv/HANyp8uS/42YLA5x1O/auzPXH/
fj3rp/WSeyQgi6y4tv0cExLldaMsVIn7ZlhnZdekAI7HKKFHlzNQ/6Fxz9Ti
qrdsKHz8WXkqTx4k4ivuidcT/EaFdeGMN4G392x9yA5gIPz7rXJflXyXHNic
fXPpVggf1OVs82/GMGEgTMXr1W7ifVB1f+2So4B8YFBdsiAJ2uafDv5eIAfq
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
cougcMDGSX8LA93PQzs3vtM2xPUodW2qGTEqWBy+SIxOdOODsmJleIIQD+Uv
22XbHw/zeECZ4Q+IY/4ahqL6z2B872ZR5/cPwxTQkC6ZDUgmov5HxY2tLnvI
PAjY82SBaDkN5MI8x986MaCx1uB6ZTsTem9dTfwRTET4aMfkVIf4CT7C+8cb
tx6Vf8hE/ddcqfqWDsy+7TaWFwo54/NRc+dVvy25T68N95/hIjlrRiPw/rqx
Ec2X5E4Wmt8a8lV5uX1SCvXjVjs5u68KYKJ48/KmzGx7L+7PJMhRb2YXctD3
lTQ1Z9ZnEUBMdK98/z4CnNW9EOt3gQKWa5RArJYKeSKPrxfkUGB999Mf8Rj/
OpDmnP9yPr4v4eSIb7dvGAfND78q+fmNWUyGWyf9by/fht3fLzP3bUIosKbQ
3EJAkAaq0wmy7kS8XlW0qP47rY6N9skE3WIBpYcCzOlO2p6rVPA52pX04zUN
Mr6TDBmBdOhctJA0LkVC8yKRAg56xY1iqF4ybBVjbd9MR3q4mvoH79olsMFx
/uWonRv5QOQ7TbAxnDXX3xvAcjJ7O4Hba4rtUJCSJR3175xb1yZk9YeB9oOv
2p7q51rHQvWJ9pxLDZsaCMhf/FumfCLgOg3VT3+uM/SNiabA+J5X4RbrMPua
2bPK6iLOR48zPjv/GycjfT+xqEM2PlEkuLLk3JqV8pKwMKXs25CPONjHh/+t
jpWAXa2OLlPP8fl1x6t3L7heYKH6c3VoXYpqGA39PdmDybXPrhGR3n+QeV8h
9z/1lXnbXP/lS9Hh7V+9k78x3j2+v3okkk6Gd/sSPoZsooBk9omM839oaB67
cl3u9w3z6XD9WkuT2FcCRCqllYxifnyun8dX4Cyj7gq+/2nnrMwvliQV8a+I
c1Xb3vfi+f0N02LZE1i8nfMP2xZAaYETGYoFH0pHeJDgSJfNiLsSGcwMMt/G
Y/eMZDkZQajgI3v+GG4ktzgV18O96TTvT7c5E/EFZbE3JV+9mJB/57no4xwm
3PnzJa0ZwzsjN6b0vDyp/8tjPggzokLF5kSLlg4SHBJS051dSgMj2uCTxCqM
17V0iIs/4yG9jrQCalHdWim03ztHyHZHJYYz5+o709tLUitL8PM9cP104JkM
fJ7q+OnT91N2sdH8ULR+99lYDxlo69ZKby7A9XrmPl/cJleX/VQW8i8PQX5/
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
uG4ig/sHrRYG9vmX8pntKU9ds8FlEFWfqrH4QRm09/i/fGyN+3MlT/TbX9eR
Av9H014T55hw/NKctooHztdevzIt7P2PX7is3Z3aKgU6fGn2jd3xmYDy79L+
8bjZCSvvX/h89MRJZS4FGQrud1MTLNDmJQNXswtV5gpkYN3cVqmVvBKoHxWY
YLSv9V/dqB2iZrs3yMIvJxetTiDD2bp7ohU9FBi2+MMkF+F+XJm5mbrN3WSk
J8i1uqZ01W38vPUVTXOcMaGj+pfw6wXnI91SKL7c+T7t4J5HRnwz17f7qd4F
HJ9O3J8TZPymoXiaHhtdcfEuE+kpUftY2qGAzz9+WDcucOMp7kd/PugZpeQZ
Dab6YiubjRhQtM+C4/NXXN/rGJ+z2rAdATRXbr9h0kcGkz7vQ7yh2N9V+Lb3
UedNXaoNV3uTmYj/Ptv8zMyxCO+P10fOKi+M4vm9LCvJ34FKQ/2ik+cJpkfj
ZdC8Ts0fkeY/X4hwvSo98KcwFXLD1nO96MTz+fZ1cX63OsVx/5EwanqyhgRo
5zdfyl4gwQOKPslCUxQum7wsz/TigObgjGMFUkRUn5NP8JA+fRn3NzrfQY9V
I+PPpynumy9lORv09MQ3b1GSg2F2qYyNP76PcYyp+PrFSgradzTKnviZdpoI
8NDmS0E7Fr+Onvku3kMCbg1LsrsIFWK/KNJpNNyfgabF+Mf1uxBM+H97lN7J
CY7tD6a2ueL17/U1067S00SUXwUX6E2rrDF+dlIvnKNHEgpph8+wrBmIP1+Z
FlYUzsf1WXUSXWoINlKgQhJf9f42GUKuH2BQ9lHAgpfQsFeaAr7vyj3GvmHP
kf40YUURATw+FKxuqME/n+2Z5z91GvF+mfW+bz9MnaWRXvemgob68SkiKJz6
Rf9Dp8LNAwZtSen4+wjwz2jq2ESDAen683xlJFgxRy8TSaPBg576z+lTdJDJ
DvrlcA7n13/tfwc+cKOh+FqxZ4IjNIECLmeOCt6ypoMFqZrq+AXLF/J71BQ3
UkEprT5rq4sc2q85SNzTmj0lheJB7ItNc13VdKSXaj21d7xokgJ9TnMzmhU0
uL2PpR6Vh9e/l+LVUr+V/UbWTesl7gfjVPw26wqGA5b0nq79ftM61yEH19Q2
cK96qwACE+eOJNXJInz3SVa0eeCGFKr3VB5aty2jBNeXqw0+uW3OgYrw/ZNe
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
xyIklG95vRI+e6vjfu7jlW8S+2XkIas8x1ApXRHe3bF2NSThfg0nrKu9bGPI
sMXDu8NYkA1NnS0q7f/kUX9u7pCB0uMkGfQ8q6gbeX4+w/X+7Xh+9bwWw8/z
af6R+tBjHCiRk2U6J0rBv1efY6x9ucg/MoPdwmNdzET9g2Dx5TM8+ng/aNOj
zv5OHiaaZ7vbM99zdxPun/tiIulLI5b3Q3nfCGl0kqFvv/+d13tlEN+6ZX9A
wm4ZFm/+8Y2c95WFZgUVPY3XGO5Q01XdL0GB3FG7Ao8+GtwW6Y7gRDPAoUtm
uruDDKUaD8sqzhNA9vHrV/zHGPDbyF3J2o4JVRKzBrpVNBA+f39Q+g4DePpP
KJdaEiC5IeXjDWk+yHtesKgtGD8fEjUiW/Ux/rvgV7jna5DuwVuSqB9O0Q5O
0jBmgMBL78wPWJ6M0I1u8EmkIzyuedMn6EQIHXZPFcbR+VgwkdKkU1FEBtMb
81tDNChwI6visX2nJPJjLCmd9C0wJUJx1kmqjAkVlvmfLuVgPNRf4PDeg+8I
oN2lnCvnJA7h9cvPLgkggv/hxqZ+fi48Ku3jbiQqwgfGxOeYPIyXFiw7IfuO
H2ZWDKjmWRFheKKuPBW7//tnuvztJfghed/6fP2DwqCt7J1Sk4Tr0U1slZLx
isDff+Om3O+DlizkX9nz+bR9QSsbusONq0wzsDzN25NXJoDjm2fP/0zsMuEi
vED5KdES/RXXq9z19M2WAme83n1OWiaM77cs+vt3vad+1FlHhQzDVY7TGjTo
858hsaYZoHwxS7IziAEmd2ZUbI7i+G3L2NZosOcg/9LpiidzE1w28q9/bbnu
pFUdrndeyqjQfU7H9Vaz88PFUtPwfb2p1aTRi9vx+Ne0L9FGYKccyteEmB2S
rs+oKN8/nT5StL2IiPCgYlT6z91X2CBmYy2+ZTEJHgptuPldnQzqlyqLGo9I
gIqGbX+OqgyaJ03LqU4MksbjS0TET5HDkvj9fxLesN1FmwK6Lz+sctGgQpCW
i75RiAyqD+fG527a+5iAzuOJuG2ivp8ZsGhV/z3fRxxYf8fi05MN+DzvCc32
4+TX+O//6TBJ9w5ho+8XvpIVM2GBf/+FeHr70WUVBx0KdASn3717h474huXU
Nccu7PsszOsfdMqp6VLEz8Pv6SuUuDYG8mdzEDVtrjSWhXqFP373vsiCy1CV
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
lYzxRcHtxGByKg/N19fX6jV/J/Dtq+JyMXhKgv5rw49mHqbBltVpl3dspsOX
w22jTg8F4C8+875clhJM7fpspEjcw7CCS8cjytgwc/n5pQ9Ysgi/b+89V5W7
EuN5Ew9to1VibITvNq6btf0SXxL2B1nedfSVAgsDN8euNVSIK9usXXOCApfU
jeZpj9OQfuguk/38E5eE9ANB7ZZCDfPIYOwyst7IXA7WRGfvHSLyB7vgkkI2
Efc17xievm9MhqTVr8OuLKCD7Da65tFSzOeXfVNK9YmlgkoA3JzyocKbPaFG
9f/5YMwvzg5iUOCiiZf7nELcDz0mWleq+wvnW8/DjVSdKdyP0jnZ6Fh2koz9
/Q2XzV03QoVNn5fZrl5BBgMw56Yvx/lMilnxWXEeHb2fkouyQUeDcX+3oW3d
2zIprD+a7JUSzCpXAW/7VwESZSrQnq+l4W1DA9mc5uMjs6jQz5SNX/UN+0Ge
zf5NUe2mQJkxZXtqIRtS9uvGFqtSUH64lp72JrWQDLTySw/zN8tDp600h79G
HO0X7Xfu23f2Oxkcym+GlMuSIVE0q/j4QQ7SD4g5/uMYlLPRfOrCE0nr2f5U
dN9tm3Q5C5MpkHV19eYrhXQQEdpjXkHFePr8NqWkzC905J8WtD+8M/E9HX3+
5o0sLXkGHdacrrkbZUmHZ8eT09R2yIK7c3qq2hwyBK+3z9o3jvVCX1+XU+lp
VPT9juU3e9mK8lE86bwfQtqnp4Dw8BFJ+ZSE2ZhPF8yNLon6QUf6uxJf3oDZ
IAlsHoi9UyP+fsKikl0fwrGfi93SD0ofqhhwoW9cQ82bBQXquRtu9zKRnnCj
3azy3RJk8IsmH8jtIwHrqlfLnzQW6rd/O3C/ssYG68kbU/5ITFjR0PmuW37b
qV2UDqGvEgq4nnRQXfl0+IQw/nmx2xWDU2wB2v+6/0/gLN0kFtoPLz2zvoZj
ToI0c+8I7koS3Bb3MDWuYINf3RKJTQSv1r4clyD3jormo2L3Vqv/bKWhfnOe
37fZc1Oo8LncaJHVIgIvnROq0dLB+H3zDHPBw0900I+65FxIpcPCeeSbD/dy
Ub1jpuq8H9ktCqieU1YpLR0QRkP9qBBF5ZGWS7ievPH3V0HTLLxf8IhG9G0P
N3y+7Txs94b2UcHLqWVBDBGP/x28pGUlQQEV3Wt5F0Ro4L3v0K2ivdg/+Kv9
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
/fxokcsBsSwmaJjTHnubMmFZNsPd/TQZzSts/zv3n7E3F7qqOjZckxXAyGCs
zfsgJvLzNGEOqx25zUH133wX91/fxChI7y03sUfG04wGK9eKW4xJMuHBPN3E
5hk0CNxx9FtlrjyIKhHoah4N6Y8N5l837SP4fLlxeGohkXdXmKVft9PF+8kk
9gfya75jvTpdTjNMfiUV1XvzltAXDRJ/h332JL+GOMfeNz892yXHQP2g9yGF
28IXCEDQ5nMl8pMC8hua/nmGn8c7g80UGHOtJZndIoFeqVJPca8C4rf0f4I1
35vxfnoHu5GFXSMcmLnNVvftCRJMlPSG+7pQkP5UqdLiye10vJ+y62N9p/Md
OtLTxdlJCAZyMJ4rntIpnO0og97P7Ln86pwUvL/F3GFtje0jBXQ+e6pq3o7H
yaH9t3PzniaSM8gI73oObGvQsaEiP60r6aO7K23YwK3rW6GxhYnndf/ffKl1
8AXKTQKvTudX07ZAvburcHzxunCu55kvnq/asX4rW+sKngfRUH2wPuoXFRrd
Enc4SxO4l6nEZlQoID78OL2GGT9fHNTcPXSmZgpByESuIr0Y873q4sGcJiK+
5Dfd8c8uJoGBuozcMiIeTOtvxVenXPYMocJKQdF7JoF7YKfxnJJtPMT/31vw
jpqWYb9Yz4T3s9f3s9G8lq/QB6H8dBrSt9eu+/HIu5wFFzMDq9LL2aCgurM+
cpSH8l+3af++X0UcmGuz87asNhsGIqnSfQSf2K8pUrMhiXgeBSfK3HTw84lQ
1ojm3eIhP3lK897JlU188LlgNvJ1Lw1MkoVOtY3ifvGkUAtt6XUK3Ohd1XnS
iQFvukLK1j4m/u6q9fUeshw4d+RPruIcJqonBXpnPt+3Hu+LbekzHv7jwkD+
Fh94+ovM4vG8Bcs28VR2tQA9j7FssY3XB2jQO8I+PEHwCJ2NmR0yEyR0Pra+
NT2X8QnX3yUz+HnPFSio/m3ptenUY2UKqh9sijXs93HCfm1VmctOPo6novpw
9tW6DxK2TNSfv9bsTftznQtPliuaeyXyYYbT0z7vjUyY3WVHWynBgO3Cd3Yd
bcTzBXkLTI0XPWag+USLfaeZj8Pw8xYT1WO0D1JhVfOaZ7lEXl1sYG+i8Qf7
4Xw0i6/fv5SM9rssrNn5mNeN549yfyZIhd9UgKZkwZKX7lygmr6wjllIhaYH
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
nEcG89X0qmYG7l/YFN6MvraShvT4FyLsPWddU4DQmJvs1f482Hg3oNXBQ5a4
rxEhBxbKQuil7ZeOnFCCUmrAOepDBRA4QVa8YsxG8WTpSnmf9Vq4H1t/dc4X
biwTzdtFenY3iv0hweFsvwVlORTYrf0szbyDAlsiAiVyLZhgKW4/uXkBnk/S
OSeb5NvAggDVKvLrUBbyUw5LXmeZkkWF5C1H9NtPU8Hqml9SAIFjVTv22aYc
YcE6d8Uvb+fTgHNTI2cZ0GFvlHhe5lUW2JyeqUzchfWPKsYPL19lkVG9LLor
sih4Mx31Syqfm3nqt4uh66H99apoayfi5q6VI97idChUkfx+05ELqzx3D7JD
ONAX83HkhjUJ0ifdbPWJ6+RoHVj0Io8G5n84KRmJTOhTW76MOUnkv+Ew2RPu
HFCfGyn9xpXgod3zd1+4zAAJA8U4vRsKKP/PG7Kt6NmK/Z0mbMUf/+hXQvpZ
z/yP/5rIFNDYFfC64AkNZLUf2Fn0KiH+8sDJ5vPFQQbCH4vWenxstWFAMkv+
64UiJuzMHM10qMf7ePnzy0n764KU3djwiM1x+tzNhJy0DSmtrYpwZLP75lQp
HJ8PfrW2GyrFz1trqaK+kwwbaioPhP0NVIR3iy0sbYJ46Hk+zTT+c2QTGdXr
pIXsI2LlGVBEOsJr/G8etnmHuW4i9lcznaPtu7STifRE/HjK1498KdYRfX2T
AqKvNuxXLpIHrbYbfwT+yKN6T+o2KXUbBxLSIwftnHMrKZKE9ndnHZ6ZNBTH
+OXCuQU/1j/DfnF3fWcNfJ4k8sKqycNfl9LAaqmozvP7DFS/23n8S1npCjqs
Jw0+/XSIBuUGtVf/puPz2cAaY1zIwvPE/O/Pn8+5TF/p7PYP91PL/HlzOlRI
qN/z6umLhRIXKCjef6xytJ5ey0H3E/nf7Nx9PcmUBG7NkfW220mgdmKcOUXE
zbX6P0JC/PF+ksG7isK1SxRRffHtNlePU8T7yMefK3+Vdd7KVIbUOqNTTD81
yExY1ha4nQq3vIbPv5ymwJfNIYe+R3CQXiMsa/X0kr8syE0b+XXoLBkuXrUg
nW4lQxfT59K2LhL8PRP+47MywStr174zUqLA993SMnPq2JB0bMFN1zEerDx5
hMdeTEF+a5EOz04kPyd4kbjdliAS8XN/aNZcFfx8Dqccv73iizx8c3ReLfBK
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
lqwZ4aLvH3AxvescUa91LRzyu9ZDB13pBXavluJ9eKcfMlWlxnw0TxFj7kmz
rcL5ysjP5PDKF2R45jz5MraWBlt8HbYXh1HReckWj8i9SeChDYw15+YT+OLO
TpmISF+cH+5eSMu+Wof9lm80rgyOPsFE+3I5r3W1BFcp8OnQho0zNanQEL2L
H/2KqC+PPAh2OMkGp3PU0r4mjHde5G0j5UXiP9ddVfkl/5eN8PhGw8qA+zb4
83dsDIksjleDlad9goqjNOBUxMGEi4aK8Ib/vS7+MhUM0yzvS9HwflHF7keU
qk+4vjTLcFM/+puE/FcSVdWF9gJFxN8efqai8OGLMupXtQ/q8c6KCuG+Dl15
BvG/ihsohSWtLJj7qXqxfTYXniicOm/chuPnQ//Y9pQ7FMSHcDQ6xRz0VAU9
VsXyOTLqUJyobVE0l6g/dM6cX/aUB8oz1QZOSfNQvmEf0clrb8T9gNJD6yWU
ZfG87IbRtdfeF4lzJnLSaxZRV69v/V7LXqGM9pkqSobKQg9jfsH9E73v20TZ
iM9zdV6blQkRf18H3vJt0+eCj9nTy7HXSKg+2ddc7xNN3CODd2lLVmnQYOGt
ndcGDzCR3vY+2sBwrhsP0qzLmr38WBDvIe/16wAZSla1T/L1Cbxs1fZmtjsf
6WnOmiat6CzA/M/rZnOCd26lww/+JSPVIRrYz1cJtFTE9Uz1oVvcmWNM2B57
/PqoKQ1e2Nd9fPMb+5vRV5ftPNKL/Z51UqoDNj9QhrX/ouYW81TB7k2xt1s6
EzZ+j/fs7ibq6P6vjL1+XPTzX0uaywU+w/dviHLa5XE1G+QTnqUMStGgcUd6
hqkQ19O2Y2OdW5YS93hdz6Y6cTqMDS+P6fxDA752bXvxZjq8tZnhFXNdiJ5f
M6m7Ow+oYD2xg5Z6nQSfvYpuBlCo8MlRaNV3lwLfOgZ+L2qio30Ln6B5xjOO
M1G/fxF73gaDaozP2xr2dGcSdfJN80XHZ3LowJgVwn/4iQqUbdRucGBCuHmW
3obpTKDfqyqKXEKFIZlpS/erMlE/eYRX1Bw1woDTHqyz2itpsORdU3swEZd/
Dw5Rj/tyYfG0Y41fnBRg0XbOSpavFIDXrddP9QWwe5kKzVFEGcwj3816w8d6
hJWGDJGqA8pI71/UpzZotjiB02VcNhT8o8HZ762iP2SxXhOl777vQaIemJp/
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
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJxF1OlPEnAcgHEkNc95RUGekGEyOYSl82hpxnAr0TCo5TJDac4oTJ3pUMuJ
mtaWFzpRXnhEOla2ttRcTQvTTYtcTdTosEy8WqXIJKdRbfH9vXj2+Q8eolDC
E2ExGEzC3/5ZvJCwZrGwhqwapLtN+i0k1/3TRt8vZEBE9rbEiHxeXecwa0A6
0Kb8hl4hG/LSjl1vQaptcjsx4Ug7EYdJOMsEvaZfiNtrQ0GeRpEePMYApT8O
iWvm6GD/VUVWTyIN5NbxA343h4Ac5VNu/DcKqBot1OWmBIOpsgbc664gsCRt
x31nLzKIofoPxpUHgu9uNleqJ0mgj1Nm9/oRInjxIMVO7+MPpod/7NJovEFK
QaTlcicebPuQPFwYiwMXSnHRHLwnOCA/wF4UuIKMpZl1utIePDqgd9wWYMDs
7h6zh5dx0Krgwr62N0Uz4OjLmWpW8vRhq5HUZw+TmowgNh/3PoOAibG60yWp
VPjdHiyb1cXldLiCD1oqkkrWPEBJe4b7VwEOTM1S+FaW4sGqE/kRrFZv0HaX
3HBt0w+cGi//KXMjgnypMEyhIYFi5xWS9kwg6K8eabRf3g9K++OS3VqCwGyV
uDeMHgy6YMOFtHkKyL50Uk6pDwHxj30l7EAaWJdzo5YxRQd5FYlUZS8DpKTI
+J3FoaDO4Nhez2eCWuF8rKc/C/xse9csJyHXVZk9BDKSsLLiQ6QiM3LXNuhR
yM0yy72EU0jyHcLeqtvICI5+wqUeeXyptbKmEXmFGmBqUiKfPCJPqNRI3gir
YngUKco0RcePIwuc+ozjWqSSG3n+7SRyURcT/WUOuVmANYoWkK7ew91Ly0jm
Oc6e1VUk28ZRm2dCnu4Yk5nNyCz2raiiLeT/b4F/ANl2M2k=
           "]]}, Annotation[#, "Charting`Private`Tag$1068704#1"]& ]}}, {}}}, {
    AspectRatio -> {1}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> {1}, Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-8.244697825246178, 13.818085746414587`}, {
       0, 15.015200182422213`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"y=x\"", "\"Best Fit Line\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9106522307122755`*^9, 3.910652657740568*^9, 
  3.9106530197258406`*^9, 3.9106536915148134`*^9, 3.911672901746476*^9, 
  3.911673096019631*^9, 3.911673357441736*^9, 3.911673451915062*^9, 
  3.9116734852966747`*^9, 3.9116735176430793`*^9, 3.9116735713444605`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"df849e3b-0e35-452a-accd-92989ccd19e7"],

Cell[BoxData["0.799263069810062`"], "Output",
 CellChangeTimes->{3.9106522307122755`*^9, 3.910652657740568*^9, 
  3.9106530197258406`*^9, 3.9106536915148134`*^9, 3.911672901746476*^9, 
  3.911673096019631*^9, 3.911673357441736*^9, 3.911673451915062*^9, 
  3.9116734852966747`*^9, 3.9116735176430793`*^9, 3.911673571633769*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"1d1891d2-3a59-4a25-9488-5539d1365b02"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{732., 641.25},
WindowMargins->{{Automatic, 69.75}, {36.75, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 31, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6e184f9e-002c-4584-8ba7-f184546546c5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 159, 3, 67, "Section",ExpressionUUID->"68e25561-a5a2-4659-8136-511b3a748ce9"],
Cell[CellGroupData[{
Cell[767, 29, 164, 3, 54, "Subsection",ExpressionUUID->"d43907a6-0dc0-464f-b314-6200663cd25d"],
Cell[934, 34, 2235, 40, 209, "Code",ExpressionUUID->"9be8d075-5385-4a1e-9348-3607e9d0db4d"],
Cell[CellGroupData[{
Cell[3194, 78, 304, 6, 28, "Input",ExpressionUUID->"24112fc7-0864-46b1-a454-d8678a42708d"],
Cell[3501, 86, 356, 6, 32, "Output",ExpressionUUID->"56c3c205-ab01-48f0-93f5-490247ef9f14"]
}, Open  ]],
Cell[3872, 95, 797, 16, 50, "Code",ExpressionUUID->"f4a59c8c-afcb-46d1-8ab8-69ee03d9e8f4"],
Cell[4672, 113, 2992, 68, 209, "Code",ExpressionUUID->"88534ecd-7d85-46bb-b240-95ffbc4542d1"],
Cell[CellGroupData[{
Cell[7689, 185, 469, 9, 39, "Input",ExpressionUUID->"01df53a0-b6b0-4be7-bd09-cc8d5fbe5761"],
Cell[8161, 196, 458, 9, 43, "Output",ExpressionUUID->"581b3dfd-9538-4479-91b2-d3cb67e52ed3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8656, 210, 263, 4, 28, "Input",ExpressionUUID->"43301975-5cb0-4fe5-8b3a-fdac8f30d7ca"],
Cell[8922, 216, 688668, 11540, 290, "Output",ExpressionUUID->"62b9c704-eb47-42c0-bfdd-e91446617db4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[697627, 11761, 807, 12, 28, "Input",ExpressionUUID->"ae175ed5-6535-4e36-be0d-8fc75f3ff8f8"],
Cell[698437, 11775, 416, 7, 32, "Output",ExpressionUUID->"4b5d073a-d867-4de7-aeda-331d2a080b16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698890, 11787, 234, 3, 28, "Input",ExpressionUUID->"a73f5f90-0f88-4c9a-a4f7-73fa4d467434"],
Cell[699127, 11792, 1116, 17, 71, "Output",ExpressionUUID->"091bf7be-3974-44dd-8fbf-3b8eff575fd6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[700292, 11815, 216, 4, 38, "Subsection",ExpressionUUID->"456ccf88-3d03-4468-9c3e-da77d3789a5c"],
Cell[700511, 11821, 864, 17, 50, "Code",ExpressionUUID->"00b8eae2-9bd3-40a3-bfd9-d997fc20a2d0"],
Cell[701378, 11840, 1688, 41, 191, "Code",ExpressionUUID->"16d7395b-5636-4e2d-88de-7c1b4a089139"],
Cell[703069, 11883, 630, 13, 50, "Code",ExpressionUUID->"94872ed4-c556-416a-9338-19e5df5ef69f"],
Cell[703702, 11898, 4847, 98, 437, "Code",ExpressionUUID->"4a96be2d-4de1-43bd-82a2-ee5484069e70"],
Cell[CellGroupData[{
Cell[708574, 12000, 290, 5, 28, "Input",ExpressionUUID->"38b7515b-97ce-421b-a97d-d84bf8b5426e"],
Cell[708867, 12007, 449, 8, 32, "Output",ExpressionUUID->"9a74ba76-2945-4a54-9225-ff7ce3cd8c78"]
}, Open  ]],
Cell[709331, 12018, 960, 23, 138, "Code",ExpressionUUID->"0ae2148f-7e52-4688-a16e-c68534d55fdf"],
Cell[710294, 12043, 2205, 53, 173, "Code",ExpressionUUID->"643a3c40-d81a-4d1c-825e-c34330ad6233"],
Cell[712502, 12098, 841, 15, 39, "Input",ExpressionUUID->"7d99647c-69e1-4395-8cfd-1b59841dc8bc"],
Cell[CellGroupData[{
Cell[713368, 12117, 574, 8, 28, "Input",ExpressionUUID->"ca6af99f-5c79-431c-856c-8a59ccdbb8b3"],
Cell[713945, 12127, 11127, 182, 171, "Output",ExpressionUUID->"d8a79d3c-6f0e-4c94-9e6f-2816c7367d4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[725109, 12314, 615, 9, 28, "Input",ExpressionUUID->"2bb78d6a-cd1a-4d0c-9c85-df87113cf295"],
Cell[725727, 12325, 274, 3, 32, "Output",ExpressionUUID->"8d07783f-8217-403c-8956-35791e58cd15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726038, 12333, 236, 3, 28, "Input",ExpressionUUID->"8b696a90-bbe5-445a-89dc-7aef5d4a3c82"],
Cell[726277, 12338, 377, 7, 32, "Output",ExpressionUUID->"3e1f8564-8a10-4375-832e-a991570bfad7"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[726715, 12352, 157, 3, 53, "Section",ExpressionUUID->"00b55cc4-dba9-4e7e-ad19-2589963f6500"],
Cell[CellGroupData[{
Cell[726897, 12359, 163, 3, 54, "Subsection",ExpressionUUID->"da43b552-a489-4289-9cc0-a4d65a015ed5"],
Cell[CellGroupData[{
Cell[727085, 12366, 891, 17, 50, "Code",ExpressionUUID->"35a1e5f0-687a-43b6-aa0f-c8a5d560dc2d"],
Cell[727979, 12385, 107959, 1932, 143, "Output",ExpressionUUID->"d3cb31a3-6042-40f3-ac1b-964e93fe57f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[835975, 14322, 577, 12, 50, "Code",ExpressionUUID->"27bfc65c-1fbd-428a-a121-8c0a8747c6f1"],
Cell[836555, 14336, 93961, 1682, 128, "Output",ExpressionUUID->"5b707260-62ae-4975-a1d0-1553130dd102"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[930565, 16024, 160, 3, 54, "Subsection",ExpressionUUID->"c8423a7d-459a-443c-a1b6-b5f5c6d9bb0a"],
Cell[930728, 16029, 413, 8, 81, "Text",ExpressionUUID->"9f46e916-5444-4b8d-9d6d-7e866c4b84ab"],
Cell[CellGroupData[{
Cell[931166, 16041, 169, 3, 45, "Subsubsection",ExpressionUUID->"f68b4d15-cace-4580-b4c7-b2958fe0611b"],
Cell[CellGroupData[{
Cell[931360, 16048, 537, 10, 28, "Input",ExpressionUUID->"aec8ff51-b5ec-4254-b8b5-abdf51337f1b"],
Cell[931900, 16060, 6785, 96, 413, "Output",ExpressionUUID->"be378c1f-cc47-4e89-802f-b47e25bc4292"]
}, Open  ]],
Cell[CellGroupData[{
Cell[938722, 16161, 558, 8, 28, "Input",ExpressionUUID->"583cf84e-8305-431c-91a7-37083580073d"],
Cell[939283, 16171, 3608, 62, 171, "Output",ExpressionUUID->"0f0916d1-8889-4751-99c6-a9f782023d7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[942928, 16238, 415, 8, 28, "Input",ExpressionUUID->"12033fe8-495e-4853-8226-e8a705212512"],
Cell[943346, 16248, 30621, 527, 2050, "Output",ExpressionUUID->"b040d5f8-3796-4291-a575-5a0c4bfa3699"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[974016, 16781, 168, 3, 37, "Subsubsection",ExpressionUUID->"056c8b1e-7d1d-43b2-b1c5-d8a162e5c725"],
Cell[974187, 16786, 915, 16, 143, "Input",ExpressionUUID->"b2f5d596-1292-4342-a6fc-f1adf7bf7582"],
Cell[CellGroupData[{
Cell[975127, 16806, 312, 5, 28, "Input",ExpressionUUID->"044635c6-2d6b-439d-bb58-5456f4c09afe"],
Cell[975442, 16813, 3977, 67, 154, "Output",ExpressionUUID->"720e3d1f-7d23-4cca-9093-33978329a067"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979456, 16885, 309, 6, 28, "Input",ExpressionUUID->"aa30a657-019b-4eb0-a620-94cb6bbf98e0"],
Cell[979768, 16893, 40614, 688, 2716, "Output",ExpressionUUID->"70cf972d-0df9-4651-a1a3-e7f9cab78715"]
}, Open  ]],
Cell[1020397, 17584, 71, 0, 35, "Text",ExpressionUUID->"d528a066-10b2-4c43-bf59-3f88f1b2e399"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1020529, 17591, 163, 3, 53, "Section",ExpressionUUID->"8783985f-79fa-4c99-ae9f-9e7626cbe43f"],
Cell[CellGroupData[{
Cell[1020717, 17598, 220, 4, 54, "Subsection",ExpressionUUID->"48c49601-bd82-4cf9-8f90-7f4b41547da0"],
Cell[1020940, 17604, 1567, 29, 86, "Input",ExpressionUUID->"d682961e-7b69-4213-8047-acafaa242b2e"],
Cell[1022510, 17635, 671, 11, 28, "Input",ExpressionUUID->"df6bbc7f-b880-4fcf-9f5d-ba066589197c"],
Cell[CellGroupData[{
Cell[1023206, 17650, 383, 6, 28, "Input",ExpressionUUID->"f43a9ae4-2839-470f-8636-ba0c29f8c5e7"],
Cell[1023592, 17658, 527, 8, 32, "Output",ExpressionUUID->"bace7bdd-85a7-474c-8f35-9f1f941424ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024156, 17671, 227, 4, 28, "Input",ExpressionUUID->"947e7a9f-b927-445e-b6fb-a462e6a12049"],
Cell[1024386, 17677, 47353, 817, 117, "Output",ExpressionUUID->"9ed081c6-f36b-4a66-bebe-6cb90e082eae"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1071788, 18500, 223, 4, 38, "Subsection",ExpressionUUID->"55acf473-f533-4f65-877a-71eb5532ae45"],
Cell[1072014, 18506, 1101, 21, 67, "Input",ExpressionUUID->"54091813-4dee-4c2a-b6a9-246cccfc8fca"],
Cell[CellGroupData[{
Cell[1073140, 18531, 375, 6, 28, "Input",ExpressionUUID->"f92213d9-cec2-4e78-a9a2-d6bf70a025dc"],
Cell[1073518, 18539, 69072, 1184, 144, "Output",ExpressionUUID->"3dd896de-0bd0-4ca7-96fc-6b3c12a3f3a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1142627, 19728, 794, 15, 48, "Input",ExpressionUUID->"38352e7e-e9f5-499c-b816-fb664cde0c19"],
Cell[1143424, 19745, 425, 6, 32, "Output",ExpressionUUID->"af37c5b5-ef8d-4f60-a6e3-97e55ef161b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143886, 19756, 516, 10, 48, "Input",ExpressionUUID->"62c09de5-d472-4ace-9fb6-daed1421d645"],
Cell[1144405, 19768, 414, 6, 32, "Output",ExpressionUUID->"0f55b974-a88e-496a-a8f9-49febea5f493"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144856, 19779, 775, 17, 48, "Input",ExpressionUUID->"bcedf6a0-8858-43cf-a7a9-924ceb53f143",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1145634, 19798, 745, 17, 48, "Input",ExpressionUUID->"5d0479af-a56e-442e-bd42-02a9bb9db39a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1146440, 19822, 262, 4, 53, "Section",ExpressionUUID->"af59b1f2-a106-40b7-850c-b406fc2eaf60"],
Cell[CellGroupData[{
Cell[1146727, 19830, 186, 3, 54, "Subsection",ExpressionUUID->"34031fc7-9615-4ddc-b23b-f0808f7c2f68"],
Cell[1146916, 19835, 1416, 33, 226, "Code",ExpressionUUID->"cde82127-c427-4370-8e61-a1213cd58549"],
Cell[CellGroupData[{
Cell[1148357, 19872, 273, 4, 45, "Subsubsection",ExpressionUUID->"ce564bb7-56e6-473a-b9f9-b5e411b5ba47",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1148633, 19878, 2731, 46, 143, "Input",ExpressionUUID->"4cbd71ae-4dd6-48b7-976c-5be0c24e8b55",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1151367, 19926, 24353, 488, 67, "Output",ExpressionUUID->"cc1efc29-774e-456d-87f5-129842cc7910",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1175723, 20416, 235, 3, 32, "Output",ExpressionUUID->"f7fd5d89-5a77-4243-a4c9-bbde488e7dd3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1175961, 20421, 1341, 27, 143, "Input",ExpressionUUID->"e1a1f1dd-3255-4172-9dd1-927fa21757d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1177305, 20450, 28344, 566, 67, "Output",ExpressionUUID->"75476cab-a86e-4ccf-ab64-30e5248b0337",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1205652, 21018, 234, 3, 32, "Output",ExpressionUUID->"35cedddc-9feb-45d5-a81d-fa043b0f96fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1205889, 21023, 1574, 32, 162, "Input",ExpressionUUID->"7d3888dd-bb07-4a5b-8360-5c8d46a57468",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1207466, 21057, 35970, 714, 67, "Output",ExpressionUUID->"68d3b371-2b50-45ef-9fcd-ee2692db043a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1243439, 21773, 405, 6, 32, "Output",ExpressionUUID->"5bc64f00-b9cc-4302-8d51-ed8516858ae8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[1243881, 21784, 256, 4, 37, "Subsubsection",ExpressionUUID->"0bce2f9b-8ada-437f-934c-8e141f1be25e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1244140, 21790, 4930, 90, 352, "Input",ExpressionUUID->"ca1be931-aa70-4101-9bc7-f70b10378299",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1249073, 21882, 283577, 5920, 70, "Output",ExpressionUUID->"cc35530e-d375-4f9e-be5f-45c969629f7f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1532699, 27808, 196, 3, 38, "Subsection",ExpressionUUID->"df39cdf3-8b9a-4f38-b201-e0b57a1122a6"],
Cell[1532898, 27813, 1352, 31, 226, "Code",ExpressionUUID->"a8d04031-08c3-4bf7-b9b8-658ed6405cba"],
Cell[CellGroupData[{
Cell[1534275, 27848, 238, 4, 45, "Subsubsection",ExpressionUUID->"04a60efb-f01b-4097-b02d-8cb76112ee29",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1534516, 27854, 1805, 32, 67, "Input",ExpressionUUID->"73b89ea1-b5ef-4332-8d7e-97c03e1fdfb3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1536358, 27891, 184, 3, 45, "Subsubsection",ExpressionUUID->"591572ec-2d72-4cc3-a17a-c8ee786cf5fa"],
Cell[CellGroupData[{
Cell[1536567, 27898, 472, 9, 48, "Input",ExpressionUUID->"25cb9f7b-0906-4b20-afb6-11f6d0eada71"],
Cell[1537042, 27909, 283012, 5911, 70, "Output",ExpressionUUID->"43e2b5bb-f628-4cea-b0a0-dbdfdaf3b5f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1820091, 33825, 668, 13, 28, "Input",ExpressionUUID->"29f4aee7-4d1f-416a-a6a6-55a4e349071b"],
Cell[1820762, 33840, 263, 3, 32, "Output",ExpressionUUID->"e3bb7000-1241-4df8-abe5-a3149da53106"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1821074, 33849, 170, 3, 45, "Subsubsection",ExpressionUUID->"996b7a70-19fd-4e18-b6a7-7e0f7098f310"],
Cell[CellGroupData[{
Cell[1821269, 33856, 611, 12, 48, "Input",ExpressionUUID->"bbd73fe4-2b93-47a5-bce7-c2cdc1880bb6"],
Cell[1821883, 33870, 315, 4, 32, "Output",ExpressionUUID->"312a10b6-5983-4a91-82d7-1a7a00ef5e43"]
}, Open  ]],
Cell[1822213, 33877, 196, 4, 28, "Input",ExpressionUUID->"aba1a167-e942-4ee0-ba6c-f362f9d43e2d"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1822470, 33888, 297, 4, 53, "Section",ExpressionUUID->"cb686650-5218-4fdf-b3d5-320ceeee9c8a"],
Cell[CellGroupData[{
Cell[1822792, 33896, 676, 13, 67, "Input",ExpressionUUID->"6ba63208-8952-467a-b7ba-3d8dcad97a83"],
Cell[1823471, 33911, 285985, 5972, 70, "Output",ExpressionUUID->"3884b820-1cfd-4274-b21f-ada8be77a841"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2109505, 39889, 211, 4, 53, "Section",ExpressionUUID->"35b8a063-177f-4809-8629-50fd7c151dd9"],
Cell[CellGroupData[{
Cell[2109741, 39897, 173, 3, 54, "Subsection",ExpressionUUID->"949dd6b0-e9e6-42fe-89e9-f10ca7ffd4b7"],
Cell[2109917, 39902, 588, 13, 103, "Code",ExpressionUUID->"7de967bc-dd1a-4702-9263-e34c9d75bb05"],
Cell[2110508, 39917, 581, 13, 50, "Code",ExpressionUUID->"29337755-288d-4a0b-9732-fc3184fe9d93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2111126, 39935, 159, 3, 54, "Subsection",ExpressionUUID->"6308a1cd-b67d-426f-8cd6-45ce2941b736"],
Cell[2111288, 39940, 2017, 43, 156, "Code",ExpressionUUID->"e4111f5b-94df-45a9-9d72-458e38eabcc9"],
Cell[2113308, 39985, 2435, 56, 191, "Code",ExpressionUUID->"d1ae32e1-bdee-4a32-9596-d451f02cac8a"],
Cell[2115746, 40043, 795, 13, 50, "Code",ExpressionUUID->"d78e9f44-f3ed-45b0-95d1-8062243abdd0"],
Cell[CellGroupData[{
Cell[2116566, 40060, 376, 6, 28, "Input",ExpressionUUID->"1f8e5e78-f0d2-481e-859d-696ebe4eb23f"],
Cell[2116945, 40068, 497, 10, 32, "Output",ExpressionUUID->"2e1b7c91-25cc-4405-8ba0-00606f57293d"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2117503, 40085, 155, 3, 67, "Section",ExpressionUUID->"c6155c94-022a-44e5-bf4d-2cb44d077569"],
Cell[2117661, 40090, 758, 20, 48, "Input",ExpressionUUID->"a1fa4b68-14c3-4676-8c5e-11b867d838c9"],
Cell[CellGroupData[{
Cell[2118444, 40114, 2375, 47, 143, "Input",ExpressionUUID->"f0a59985-7b47-4c28-9f7c-3e15f5d587ac"],
Cell[2120822, 40163, 162676, 2704, 433, "Output",ExpressionUUID->"9c0834d6-916b-41ae-a710-4bf2f90e9df3"],
Cell[2283501, 42869, 988, 14, 32, "Output",ExpressionUUID->"8d58ffe4-788f-4178-aa26-7d000cae4b08"]
}, Open  ]],
Cell[2284504, 42886, 710, 19, 48, "Input",ExpressionUUID->"e96acd2d-0da4-429b-bbdf-3e386113cf1e"],
Cell[CellGroupData[{
Cell[2285239, 42909, 1811, 41, 162, "Input",ExpressionUUID->"4924282e-8b1a-461e-a6d5-71e7eceb3945"],
Cell[2287053, 42952, 1419416, 23328, 277, "Output",ExpressionUUID->"df849e3b-0e35-452a-accd-92989ccd19e7"],
Cell[3706472, 66282, 409, 6, 32, "Output",ExpressionUUID->"1d1891d2-3a59-4a25-9488-5539d1365b02"]
}, Open  ]]
}, Open  ]]
}
]
*)

